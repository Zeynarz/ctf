Ep 3 (The butterfly)
=====================
http://www.phrack.org/papers/attacking_javascript_engines.html

This is the butterfly of [1,2,3,4]
-----------------------------------------------------------------------------------
(lldb) x/8gx 0x00000008000e4008
0x8000e4008: 0xffff000000000001 0xffff000000000002
0x8000e4018: 0xffff000000000003 0xffff000000000004
0x8000e4028: 0x00000000badbeef0 0x00000000badbeef0
0x8000e4038: 0x00000000badbeef0 0x00000000badbeef0
-----------------------------------------------------------------------------------

So what are the 0xffff bytes doing there?

There is a class called JSValue that is used to handle a lot of values
It can check if smthg is a int,double,boolean,object etc

In the JSValue source code,it is specified that values follow a NaN-encoded form 

What is NaN-Encoding?
-----------------------
Pointer {  0000:PPPP:PPPP:PPPP
         / 0001:****:****:****                  
Double  {         ...               <-  (means everything in between)
         \ FFFE:****:****:****
Integer {  FFFF:0000:IIII:IIII

values of these type follow these forms in memory, thats why there are 0xffff bytes in the butterfly of our [1,2,3,4] list

Other values such as booleans and nulls are stored like this in memory
False:     0x06
True:      0x07
Undefined: 0x0a
Null:      0x02

Type Conversion
-------------------
[0x1337]             <- array of integers
In the butterfly 0x1337 is stored as 
0xffff000000001337

[0x1337,13.37]       <- array of doubles
Now with a double in the array, 0x1337 is stored as
0x40b4370000000000 a double?

[0x1337,13.37,false] <- array with contiguous
Now with a boolean in the array,0x1337 is stored as
0xffff000000001337

Javascript is very weird and will automatically convert types depending on the array

Why is it called a butterfly?
-------------------------------
Well the butterfly is pointing to the elements of the list,but properties are also stored BEFORE the butterfly ptr

(from the phrack paper)
--------------------------------------------------------
.. | propY | propX | length | elem0 | elem1 | elem2 | ..
--------------------------------------------------------
                            ^
                            |
            +---------------+
            |
  +-------------+
  | Some Object |
  +-------------+

//length = amount of elements I think

so lets say
a = [1,2]
a.b = 3 
a.c = 4   

you can predict that the butterfly will look something like this

|0xffff000000000004|0xffff000000000003|0x0000000500000002|0xffff000000000001|0xffff000000000002|
         
     (property)         (property)         (length)           (element)          (element)


lets say 
a = {} //empty object
a.b = 3
a.c = 4

when you describe(a) there will be no butterfly, well if there's no butterfly, where are the properties stored?
--------------------------------------------------------------------
Object = 0x1077b0100 Butterfly = 0x0 StructureId = 297
0x1077b0100: 0x0100160000000129 0x0000000000000000
0x1077b0110: 0xffff000000000003 0xffff000000000004  <- property a.b and a.c
0x1077b0120: 0x0000000000000000 0x0000000000000000 
0x1077b0130: 0x0000000000000000 0x0000000000000000
--------------------------------------------------------------------
Well the properties are stored directly in the object !

FYI the bytes at the beginning of the object (0x0100160000000129) are actually used to store the structure id and flags
0x0100160000000129
  |_________|  |_|
       |        |
     Flags    Structure Id

0x129 = 297

If there are too many properties in an object that doesnt have the butterfly
The first 6 properties will be stored directly in the object,
If there are more than 6 properties, a butterfly will be created and all properties after the 6th property
will be stored in the butterfly

amount of properties = 6 Butterfly = 0x0
amount of properties = 7 Butterfly = 0x8000fe6c8

Structure id
----------------
In js you can access properties with for a["b"]  
The property value is stored in the object but what about the property 'name'

a.b = 2
The object only stores the value 2,but how does the object know that a["b"] = 2
Well this is where the structure id comes in

lets say 
a = [1,2]
a.b = 2
Structure id = 123

If you add another property
a.c = 3
structure id = 124

(Still not sure how structure id works in depth)

JSCell
------------
A Js array is a kind of Js object, and a js object is a kind of JSCell
(according to the phrack paper)

a JScell also points to a structure which describes the property

From the phrack paper:

            +------------------------------------------+
            |                Butterfly                 |
            | baz | bar | foo | length: 2 | 42 | 13.37 |
            +------------------------------------------+
                                          ^
                                +---------+
               +----------+     |
               |          |     |
            +--+  JSCell  |     |      +-----------------+
            |  |          |     |      |                 |
            |  +----------+     |      |  MethodTable    |
            |       /\          |      |                 |
 References |       || inherits |      |  Put            |
   by ID in |  +----++----+     |      |  Get            |
  structure |  |          +-----+      |  Delete         |
      table |  | JSObject |            |  VisitChildren  |
            |  |          |<-----      |  ...            |
            |  +----------+     |      |                 |
            |       /\          |      +-----------------+
            |       || inherits |                  ^
            |  +----++----+     |                  |
            |  |          |     | associated       |
            |  | JSArray  |     | prototype        |
            |  |          |     | object           |
            |  +----------+     |                  |
            |                   |                  |
            v                   |          +-------+--------+
        +-------------------+   |          |   ClassInfo    |
        |    Structure      +---+      +-->|                |
        |                   |          |   |  Name: "Array" |
        | property: slot    |          |   |                |
        |     foo : 0       +----------+   +----------------+
        |     bar : 1       |
        |     baz : 2       |
        |                   |
        +-------------------+

