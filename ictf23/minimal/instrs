   0x7ffff7eb0000 <pwritev64v2+144>:	mov    eax,0xffffffff
   0x7ffff7eb0006 <pwritev64v2+150>:	add    rsp,0x18
   0x7ffff7eb000a <pwritev64v2+154>:	pop    rbx
   0x7ffff7eb000b <pwritev64v2+155>:	pop    rbp
   0x7ffff7eb000c <pwritev64v2+156>:	pop    r12
   0x7ffff7eb000e <pwritev64v2+158>:	pop    r13
   0x7ffff7eb0010 <pwritev64v2+160>:	pop    r14
   0x7ffff7eb0012 <pwritev64v2+162>:	pop    r15
   0x7ffff7eb0014 <pwritev64v2+164>:	ret
   0x7ffff7eb0015 <pwritev64v2+165>:	nop    DWORD PTR [rax]
   0x7ffff7eb0018 <pwritev64v2+168>:	call   0x7ffff7e25a70
   0x7ffff7eb001d <pwritev64v2+173>:	mov    r9d,ebx
   0x7ffff7eb0020 <pwritev64v2+176>:	xor    r8d,r8d
   0x7ffff7eb0023 <pwritev64v2+179>:	mov    r10,r12
   0x7ffff7eb0026 <pwritev64v2+182>:	mov    r14d,eax
   0x7ffff7eb0029 <pwritev64v2+185>:	mov    edx,r15d
   0x7ffff7eb002c <pwritev64v2+188>:	mov    rsi,r13
   0x7ffff7eb002f <pwritev64v2+191>:	mov    edi,ebp
   0x7ffff7eb0031 <pwritev64v2+193>:	mov    eax,0x148
   0x7ffff7eb0036 <pwritev64v2+198>:	syscall
   0x7ffff7eb0038 <pwritev64v2+200>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb003e <pwritev64v2+206>:	ja     0x7ffff7eb00a0 <pwritev64v2+304>
   0x7ffff7eb0040 <pwritev64v2+208>:	mov    edi,r14d
   0x7ffff7eb0043 <pwritev64v2+211>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7eb0048 <pwritev64v2+216>:	call   0x7ffff7e25ae0
   0x7ffff7eb004d <pwritev64v2+221>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7eb0052 <pwritev64v2+226>:	jmp    0x7ffff7eaffb8 <pwritev64v2+72>
   0x7ffff7eb0057 <pwritev64v2+231>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0060 <pwritev64v2+240>:	add    rsp,0x18
   0x7ffff7eb0064 <pwritev64v2+244>:	mov    edx,r15d
   0x7ffff7eb0067 <pwritev64v2+247>:	mov    rsi,r13
   0x7ffff7eb006a <pwritev64v2+250>:	mov    edi,ebp
   0x7ffff7eb006c <pwritev64v2+252>:	pop    rbx
   0x7ffff7eb006d <pwritev64v2+253>:	pop    rbp
   0x7ffff7eb006e <pwritev64v2+254>:	pop    r12
   0x7ffff7eb0070 <pwritev64v2+256>:	pop    r13
   0x7ffff7eb0072 <pwritev64v2+258>:	pop    r14
   0x7ffff7eb0074 <pwritev64v2+260>:	pop    r15
   0x7ffff7eb0076 <pwritev64v2+262>:	jmp    0x7ffff7eafbf0 <writev>
   0x7ffff7eb007b <pwritev64v2+267>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0080 <pwritev64v2+272>:	mov    edx,eax
   0x7ffff7eb0082 <pwritev64v2+274>:	mov    rcx,QWORD PTR [rip+0xfdd87]        # 0x7ffff7fade10
   0x7ffff7eb0089 <pwritev64v2+281>:	mov    rax,0xffffffffffffffff
   0x7ffff7eb0090 <pwritev64v2+288>:	neg    edx
   0x7ffff7eb0092 <pwritev64v2+290>:	mov    DWORD PTR fs:[rcx],edx
   0x7ffff7eb0095 <pwritev64v2+293>:	jmp    0x7ffff7eaffc7 <pwritev64v2+87>
   0x7ffff7eb009a <pwritev64v2+298>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb00a0 <pwritev64v2+304>:	mov    rcx,QWORD PTR [rip+0xfdd69]        # 0x7ffff7fade10
   0x7ffff7eb00a7 <pwritev64v2+311>:	neg    eax
   0x7ffff7eb00a9 <pwritev64v2+313>:	mov    edi,r14d
   0x7ffff7eb00ac <pwritev64v2+316>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb00af <pwritev64v2+319>:	mov    QWORD PTR [rsp+0x8],rcx
   0x7ffff7eb00b4 <pwritev64v2+324>:	call   0x7ffff7e25ae0
   0x7ffff7eb00b9 <pwritev64v2+329>:	mov    rcx,QWORD PTR [rsp+0x8]
   0x7ffff7eb00be <pwritev64v2+334>:	mov    rax,0xffffffffffffffff
   0x7ffff7eb00c5 <pwritev64v2+341>:	mov    edx,DWORD PTR fs:[rcx]
   0x7ffff7eb00c8 <pwritev64v2+344>:	jmp    0x7ffff7eaffc7 <pwritev64v2+87>
   0x7ffff7eb00cd:	nop    DWORD PTR [rax]
   0x7ffff7eb00d0 <setreuid>:	endbr64
   0x7ffff7eb00d4 <setreuid+4>:	sub    rsp,0x38
   0x7ffff7eb00d8 <setreuid+8>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb00e1 <setreuid+17>:	mov    QWORD PTR [rsp+0x28],rax
   0x7ffff7eb00e6 <setreuid+22>:	mov    rax,QWORD PTR [rip+0xfdd2b]        # 0x7ffff7fade18
   0x7ffff7eb00ed <setreuid+29>:	cmp    BYTE PTR [rax],0x0
   0x7ffff7eb00f0 <setreuid+32>:	je     0x7ffff7eb0120 <setreuid+80>
   0x7ffff7eb00f2 <setreuid+34>:	mov    eax,0x71
   0x7ffff7eb00f7 <setreuid+39>:	syscall
   0x7ffff7eb00f9 <setreuid+41>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb00ff <setreuid+47>:	ja     0x7ffff7eb0148 <setreuid+120>
   0x7ffff7eb0101 <setreuid+49>:	mov    rdx,QWORD PTR [rsp+0x28]
   0x7ffff7eb0106 <setreuid+54>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb010f <setreuid+63>:	jne    0x7ffff7eb015b <setreuid+139>
   0x7ffff7eb0111 <setreuid+65>:	add    rsp,0x38
   0x7ffff7eb0115 <setreuid+69>:	ret
   0x7ffff7eb0116 <setreuid+70>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0120 <setreuid+80>:	movd   xmm0,edi
   0x7ffff7eb0124 <setreuid+84>:	movd   xmm1,esi
   0x7ffff7eb0128 <setreuid+88>:	mov    rdi,rsp
   0x7ffff7eb012b <setreuid+91>:	mov    DWORD PTR [rsp],0x71
   0x7ffff7eb0132 <setreuid+98>:	punpcklqdq xmm0,xmm1
   0x7ffff7eb0136 <setreuid+102>:	movups XMMWORD PTR [rsp+0x8],xmm0
   0x7ffff7eb013b <setreuid+107>:	call   0x7ffff7e26a30
   0x7ffff7eb0140 <setreuid+112>:	jmp    0x7ffff7eb0101 <setreuid+49>
   0x7ffff7eb0142 <setreuid+114>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0148 <setreuid+120>:	mov    rdx,QWORD PTR [rip+0xfdcc1]        # 0x7ffff7fade10
   0x7ffff7eb014f <setreuid+127>:	neg    eax
   0x7ffff7eb0151 <setreuid+129>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb0154 <setreuid+132>:	mov    eax,0xffffffff
   0x7ffff7eb0159 <setreuid+137>:	jmp    0x7ffff7eb0101 <setreuid+49>
   0x7ffff7eb015b <setreuid+139>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb0160 <setregid>:	endbr64
   0x7ffff7eb0164 <setregid+4>:	sub    rsp,0x38
   0x7ffff7eb0168 <setregid+8>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb0171 <setregid+17>:	mov    QWORD PTR [rsp+0x28],rax
   0x7ffff7eb0176 <setregid+22>:	mov    rax,QWORD PTR [rip+0xfdc9b]        # 0x7ffff7fade18
   0x7ffff7eb017d <setregid+29>:	cmp    BYTE PTR [rax],0x0
   0x7ffff7eb0180 <setregid+32>:	je     0x7ffff7eb01b0 <setregid+80>
   0x7ffff7eb0182 <setregid+34>:	mov    eax,0x72
   0x7ffff7eb0187 <setregid+39>:	syscall
   0x7ffff7eb0189 <setregid+41>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb018f <setregid+47>:	ja     0x7ffff7eb01d8 <setregid+120>
   0x7ffff7eb0191 <setregid+49>:	mov    rdx,QWORD PTR [rsp+0x28]
   0x7ffff7eb0196 <setregid+54>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb019f <setregid+63>:	jne    0x7ffff7eb01eb <setregid+139>
   0x7ffff7eb01a1 <setregid+65>:	add    rsp,0x38
   0x7ffff7eb01a5 <setregid+69>:	ret
   0x7ffff7eb01a6 <setregid+70>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb01b0 <setregid+80>:	movd   xmm0,edi
   0x7ffff7eb01b4 <setregid+84>:	movd   xmm1,esi
   0x7ffff7eb01b8 <setregid+88>:	mov    rdi,rsp
   0x7ffff7eb01bb <setregid+91>:	mov    DWORD PTR [rsp],0x72
   0x7ffff7eb01c2 <setregid+98>:	punpcklqdq xmm0,xmm1
   0x7ffff7eb01c6 <setregid+102>:	movups XMMWORD PTR [rsp+0x8],xmm0
   0x7ffff7eb01cb <setregid+107>:	call   0x7ffff7e26a30
   0x7ffff7eb01d0 <setregid+112>:	jmp    0x7ffff7eb0191 <setregid+49>
   0x7ffff7eb01d2 <setregid+114>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb01d8 <setregid+120>:	mov    rdx,QWORD PTR [rip+0xfdc31]        # 0x7ffff7fade10
   0x7ffff7eb01df <setregid+127>:	neg    eax
   0x7ffff7eb01e1 <setregid+129>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb01e4 <setregid+132>:	mov    eax,0xffffffff
   0x7ffff7eb01e9 <setregid+137>:	jmp    0x7ffff7eb0191 <setregid+49>
   0x7ffff7eb01eb <setregid+139>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb01f0 <seteuid>:	endbr64
   0x7ffff7eb01f4 <seteuid+4>:	sub    rsp,0x38
   0x7ffff7eb01f8 <seteuid+8>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb0201 <seteuid+17>:	mov    QWORD PTR [rsp+0x28],rax
   0x7ffff7eb0206 <seteuid+22>:	xor    eax,eax
   0x7ffff7eb0208 <seteuid+24>:	cmp    edi,0xffffffff
   0x7ffff7eb020b <seteuid+27>:	je     0x7ffff7eb0293 <seteuid+163>
   0x7ffff7eb0211 <seteuid+33>:	mov    rax,QWORD PTR [rip+0xfdc00]        # 0x7ffff7fade18
   0x7ffff7eb0218 <seteuid+40>:	mov    esi,edi
   0x7ffff7eb021a <seteuid+42>:	cmp    BYTE PTR [rax],0x0
   0x7ffff7eb021d <seteuid+45>:	je     0x7ffff7eb0250 <seteuid+96>
   0x7ffff7eb021f <seteuid+47>:	mov    edx,0xffffffff
   0x7ffff7eb0224 <seteuid+52>:	mov    edi,0xffffffff
   0x7ffff7eb0229 <seteuid+57>:	mov    eax,0x75
   0x7ffff7eb022e <seteuid+62>:	syscall
   0x7ffff7eb0230 <seteuid+64>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb0236 <seteuid+70>:	ja     0x7ffff7eb0280 <seteuid+144>
   0x7ffff7eb0238 <seteuid+72>:	mov    rdx,QWORD PTR [rsp+0x28]
   0x7ffff7eb023d <seteuid+77>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb0246 <seteuid+86>:	jne    0x7ffff7eb02a8 <seteuid+184>
   0x7ffff7eb0248 <seteuid+88>:	add    rsp,0x38
   0x7ffff7eb024c <seteuid+92>:	ret
   0x7ffff7eb024d <seteuid+93>:	nop    DWORD PTR [rax]
   0x7ffff7eb0250 <seteuid+96>:	mov    eax,edi
   0x7ffff7eb0252 <seteuid+98>:	mov    rdi,rsp
   0x7ffff7eb0255 <seteuid+101>:	mov    DWORD PTR [rsp],0x75
   0x7ffff7eb025c <seteuid+108>:	mov    QWORD PTR [rsp+0x8],0xffffffffffffffff
   0x7ffff7eb0265 <seteuid+117>:	mov    QWORD PTR [rsp+0x10],rax
   0x7ffff7eb026a <seteuid+122>:	mov    QWORD PTR [rsp+0x18],0xffffffffffffffff
   0x7ffff7eb0273 <seteuid+131>:	call   0x7ffff7e26a30
   0x7ffff7eb0278 <seteuid+136>:	jmp    0x7ffff7eb0238 <seteuid+72>
   0x7ffff7eb027a <seteuid+138>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0280 <seteuid+144>:	mov    rdx,QWORD PTR [rip+0xfdb89]        # 0x7ffff7fade10
   0x7ffff7eb0287 <seteuid+151>:	neg    eax
   0x7ffff7eb0289 <seteuid+153>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb028c <seteuid+156>:	mov    eax,0xffffffff
   0x7ffff7eb0291 <seteuid+161>:	jmp    0x7ffff7eb0238 <seteuid+72>
   0x7ffff7eb0293 <seteuid+163>:	mov    rax,QWORD PTR [rip+0xfdb76]        # 0x7ffff7fade10
   0x7ffff7eb029a <seteuid+170>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7eb02a1 <seteuid+177>:	mov    eax,0xffffffff
   0x7ffff7eb02a6 <seteuid+182>:	jmp    0x7ffff7eb0238 <seteuid+72>
   0x7ffff7eb02a8 <seteuid+184>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb02ad:	nop    DWORD PTR [rax]
   0x7ffff7eb02b0 <setegid>:	endbr64
   0x7ffff7eb02b4 <setegid+4>:	sub    rsp,0x38
   0x7ffff7eb02b8 <setegid+8>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb02c1 <setegid+17>:	mov    QWORD PTR [rsp+0x28],rax
   0x7ffff7eb02c6 <setegid+22>:	xor    eax,eax
   0x7ffff7eb02c8 <setegid+24>:	cmp    edi,0xffffffff
   0x7ffff7eb02cb <setegid+27>:	je     0x7ffff7eb0353 <setegid+163>
   0x7ffff7eb02d1 <setegid+33>:	mov    rax,QWORD PTR [rip+0xfdb40]        # 0x7ffff7fade18
   0x7ffff7eb02d8 <setegid+40>:	mov    esi,edi
   0x7ffff7eb02da <setegid+42>:	cmp    BYTE PTR [rax],0x0
   0x7ffff7eb02dd <setegid+45>:	je     0x7ffff7eb0310 <setegid+96>
   0x7ffff7eb02df <setegid+47>:	mov    edx,0xffffffff
   0x7ffff7eb02e4 <setegid+52>:	mov    edi,0xffffffff
   0x7ffff7eb02e9 <setegid+57>:	mov    eax,0x77
   0x7ffff7eb02ee <setegid+62>:	syscall
   0x7ffff7eb02f0 <setegid+64>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb02f6 <setegid+70>:	ja     0x7ffff7eb0340 <setegid+144>
   0x7ffff7eb02f8 <setegid+72>:	mov    rdx,QWORD PTR [rsp+0x28]
   0x7ffff7eb02fd <setegid+77>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb0306 <setegid+86>:	jne    0x7ffff7eb0368 <setegid+184>
   0x7ffff7eb0308 <setegid+88>:	add    rsp,0x38
   0x7ffff7eb030c <setegid+92>:	ret
   0x7ffff7eb030d <setegid+93>:	nop    DWORD PTR [rax]
   0x7ffff7eb0310 <setegid+96>:	mov    eax,edi
   0x7ffff7eb0312 <setegid+98>:	mov    rdi,rsp
   0x7ffff7eb0315 <setegid+101>:	mov    DWORD PTR [rsp],0x77
   0x7ffff7eb031c <setegid+108>:	mov    QWORD PTR [rsp+0x8],0xffffffffffffffff
   0x7ffff7eb0325 <setegid+117>:	mov    QWORD PTR [rsp+0x10],rax
   0x7ffff7eb032a <setegid+122>:	mov    QWORD PTR [rsp+0x18],0xffffffffffffffff
   0x7ffff7eb0333 <setegid+131>:	call   0x7ffff7e26a30
   0x7ffff7eb0338 <setegid+136>:	jmp    0x7ffff7eb02f8 <setegid+72>
   0x7ffff7eb033a <setegid+138>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0340 <setegid+144>:	mov    rdx,QWORD PTR [rip+0xfdac9]        # 0x7ffff7fade10
   0x7ffff7eb0347 <setegid+151>:	neg    eax
   0x7ffff7eb0349 <setegid+153>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb034c <setegid+156>:	mov    eax,0xffffffff
   0x7ffff7eb0351 <setegid+161>:	jmp    0x7ffff7eb02f8 <setegid+72>
   0x7ffff7eb0353 <setegid+163>:	mov    rax,QWORD PTR [rip+0xfdab6]        # 0x7ffff7fade10
   0x7ffff7eb035a <setegid+170>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7eb0361 <setegid+177>:	mov    eax,0xffffffff
   0x7ffff7eb0366 <setegid+182>:	jmp    0x7ffff7eb02f8 <setegid+72>
   0x7ffff7eb0368 <setegid+184>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb036d:	nop    DWORD PTR [rax]
   0x7ffff7eb0370 <getpagesize>:	endbr64
   0x7ffff7eb0374 <getpagesize+4>:	mov    rax,QWORD PTR [rip+0xfdb4d]        # 0x7ffff7fadec8
   0x7ffff7eb037b <getpagesize+11>:	mov    rax,QWORD PTR [rax+0x18]
   0x7ffff7eb037f <getpagesize+15>:	test   rax,rax
   0x7ffff7eb0382 <getpagesize+18>:	je     0x7ffff7eb0385 <getpagesize+21>
   0x7ffff7eb0384 <getpagesize+20>:	ret
   0x7ffff7eb0385 <getpagesize+21>:	push   rax
   0x7ffff7eb0386 <getpagesize+22>:	lea    rcx,[rip+0xc4a1b]        # 0x7ffff7f74da8
   0x7ffff7eb038d <getpagesize+29>:	mov    edx,0x1c
   0x7ffff7eb0392 <getpagesize+34>:	lea    rsi,[rip+0xc49df]        # 0x7ffff7f74d78
   0x7ffff7eb0399 <getpagesize+41>:	lea    rdi,[rip+0xbed25]        # 0x7ffff7f6f0c5
   0x7ffff7eb03a0 <getpagesize+48>:	call   0x7ffff7dcee50 <__assert_fail>
   0x7ffff7eb03a5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb03af:	nop
   0x7ffff7eb03b0 <getdtablesize>:	endbr64
   0x7ffff7eb03b4 <getdtablesize+4>:	sub    rsp,0x28
   0x7ffff7eb03b8 <getdtablesize+8>:	mov    edi,0x7
   0x7ffff7eb03bd <getdtablesize+13>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb03c6 <getdtablesize+22>:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7eb03cb <getdtablesize+27>:	xor    eax,eax
   0x7ffff7eb03cd <getdtablesize+29>:	mov    rsi,rsp
   0x7ffff7eb03d0 <getdtablesize+32>:	call   0x7ffff7eaf480 <getrlimit64>
   0x7ffff7eb03d5 <getdtablesize+37>:	test   eax,eax
   0x7ffff7eb03d7 <getdtablesize+39>:	mov    eax,0x100
   0x7ffff7eb03dc <getdtablesize+44>:	cmovns eax,DWORD PTR [rsp]
   0x7ffff7eb03e0 <getdtablesize+48>:	mov    rdx,QWORD PTR [rsp+0x18]
   0x7ffff7eb03e5 <getdtablesize+53>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb03ee <getdtablesize+62>:	jne    0x7ffff7eb03f5 <getdtablesize+69>
   0x7ffff7eb03f0 <getdtablesize+64>:	add    rsp,0x28
   0x7ffff7eb03f4 <getdtablesize+68>:	ret
   0x7ffff7eb03f5 <getdtablesize+69>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb03fa:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0400 <gethostname>:	endbr64
   0x7ffff7eb0404 <gethostname+4>:	push   r13
   0x7ffff7eb0406 <gethostname+6>:	push   r12
   0x7ffff7eb0408 <gethostname+8>:	push   rbp
   0x7ffff7eb0409 <gethostname+9>:	mov    rbp,rdi
   0x7ffff7eb040c <gethostname+12>:	push   rbx
   0x7ffff7eb040d <gethostname+13>:	mov    rbx,rsi
   0x7ffff7eb0410 <gethostname+16>:	sub    rsp,0x198
   0x7ffff7eb0417 <gethostname+23>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb0420 <gethostname+32>:	mov    QWORD PTR [rsp+0x188],rax
   0x7ffff7eb0428 <gethostname+40>:	xor    eax,eax
   0x7ffff7eb042a <gethostname+42>:	mov    rdi,rsp
   0x7ffff7eb042d <gethostname+45>:	call   0x7ffff7e7f370 <uname>
   0x7ffff7eb0432 <gethostname+50>:	test   eax,eax
   0x7ffff7eb0434 <gethostname+52>:	jne    0x7ffff7eb04f8 <gethostname+248>
   0x7ffff7eb043a <gethostname+58>:	lea    r13,[rsp+0x41]
   0x7ffff7eb043f <gethostname+63>:	mov    r12d,eax
   0x7ffff7eb0442 <gethostname+66>:	mov    rdi,r13
   0x7ffff7eb0445 <gethostname+69>:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7eb044a <gethostname+74>:	mov    rcx,rbx
   0x7ffff7eb044d <gethostname+77>:	add    rax,0x1
   0x7ffff7eb0451 <gethostname+81>:	cmp    rax,rbx
   0x7ffff7eb0454 <gethostname+84>:	cmovbe rcx,rax
   0x7ffff7eb0458 <gethostname+88>:	cmp    ecx,0x8
   0x7ffff7eb045b <gethostname+91>:	jb     0x7ffff7eb04b8 <gethostname+184>
   0x7ffff7eb045d <gethostname+93>:	mov    rdx,QWORD PTR [rsp+0x41]
   0x7ffff7eb0462 <gethostname+98>:	lea    rdi,[rbp+0x8]
   0x7ffff7eb0466 <gethostname+102>:	and    rdi,0xfffffffffffffff8
   0x7ffff7eb046a <gethostname+106>:	mov    QWORD PTR [rbp+0x0],rdx
   0x7ffff7eb046e <gethostname+110>:	mov    edx,ecx
   0x7ffff7eb0470 <gethostname+112>:	mov    rsi,QWORD PTR [r13+rdx*1-0x8]
   0x7ffff7eb0475 <gethostname+117>:	mov    QWORD PTR [rbp+rdx*1-0x8],rsi
   0x7ffff7eb047a <gethostname+122>:	sub    rbp,rdi
   0x7ffff7eb047d <gethostname+125>:	mov    rsi,r13
   0x7ffff7eb0480 <gethostname+128>:	add    ecx,ebp
   0x7ffff7eb0482 <gethostname+130>:	sub    rsi,rbp
   0x7ffff7eb0485 <gethostname+133>:	shr    ecx,0x3
   0x7ffff7eb0488 <gethostname+136>:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   0x7ffff7eb048b <gethostname+139>:	cmp    rax,rbx
   0x7ffff7eb048e <gethostname+142>:	ja     0x7ffff7eb0500 <gethostname+256>
   0x7ffff7eb0490 <gethostname+144>:	mov    rax,QWORD PTR [rsp+0x188]
   0x7ffff7eb0498 <gethostname+152>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb04a1 <gethostname+161>:	jne    0x7ffff7eb0519 <gethostname+281>
   0x7ffff7eb04a3 <gethostname+163>:	add    rsp,0x198
   0x7ffff7eb04aa <gethostname+170>:	mov    eax,r12d
   0x7ffff7eb04ad <gethostname+173>:	pop    rbx
   0x7ffff7eb04ae <gethostname+174>:	pop    rbp
   0x7ffff7eb04af <gethostname+175>:	pop    r12
   0x7ffff7eb04b1 <gethostname+177>:	pop    r13
   0x7ffff7eb04b3 <gethostname+179>:	ret
   0x7ffff7eb04b4 <gethostname+180>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb04b8 <gethostname+184>:	test   cl,0x4
   0x7ffff7eb04bb <gethostname+187>:	jne    0x7ffff7eb04e0 <gethostname+224>
   0x7ffff7eb04bd <gethostname+189>:	test   ecx,ecx
   0x7ffff7eb04bf <gethostname+191>:	je     0x7ffff7eb048b <gethostname+139>
   0x7ffff7eb04c1 <gethostname+193>:	movzx  edx,BYTE PTR [rsp+0x41]
   0x7ffff7eb04c6 <gethostname+198>:	mov    BYTE PTR [rbp+0x0],dl
   0x7ffff7eb04c9 <gethostname+201>:	test   cl,0x2
   0x7ffff7eb04cc <gethostname+204>:	je     0x7ffff7eb048b <gethostname+139>
   0x7ffff7eb04ce <gethostname+206>:	mov    ecx,ecx
   0x7ffff7eb04d0 <gethostname+208>:	movzx  edx,WORD PTR [r13+rcx*1-0x2]
   0x7ffff7eb04d6 <gethostname+214>:	mov    WORD PTR [rbp+rcx*1-0x2],dx
   0x7ffff7eb04db <gethostname+219>:	jmp    0x7ffff7eb048b <gethostname+139>
   0x7ffff7eb04dd <gethostname+221>:	nop    DWORD PTR [rax]
   0x7ffff7eb04e0 <gethostname+224>:	mov    edx,DWORD PTR [rsp+0x41]
   0x7ffff7eb04e4 <gethostname+228>:	mov    ecx,ecx
   0x7ffff7eb04e6 <gethostname+230>:	mov    DWORD PTR [rbp+0x0],edx
   0x7ffff7eb04e9 <gethostname+233>:	mov    edx,DWORD PTR [r13+rcx*1-0x4]
   0x7ffff7eb04ee <gethostname+238>:	mov    DWORD PTR [rbp+rcx*1-0x4],edx
   0x7ffff7eb04f2 <gethostname+242>:	jmp    0x7ffff7eb048b <gethostname+139>
   0x7ffff7eb04f4 <gethostname+244>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb04f8 <gethostname+248>:	mov    r12d,0xffffffff
   0x7ffff7eb04fe <gethostname+254>:	jmp    0x7ffff7eb0490 <gethostname+144>
   0x7ffff7eb0500 <gethostname+256>:	mov    rax,QWORD PTR [rip+0xfd909]        # 0x7ffff7fade10
   0x7ffff7eb0507 <gethostname+263>:	mov    r12d,0xffffffff
   0x7ffff7eb050d <gethostname+269>:	mov    DWORD PTR fs:[rax],0x24
   0x7ffff7eb0514 <gethostname+276>:	jmp    0x7ffff7eb0490 <gethostname+144>
   0x7ffff7eb0519 <gethostname+281>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb051e:	xchg   ax,ax
   0x7ffff7eb0520 <sethostname>:	endbr64
   0x7ffff7eb0524 <sethostname+4>:	mov    eax,0xaa
   0x7ffff7eb0529 <sethostname+9>:	syscall
   0x7ffff7eb052b <sethostname+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb0531 <sethostname+17>:	jae    0x7ffff7eb0534 <sethostname+20>
   0x7ffff7eb0533 <sethostname+19>:	ret
   0x7ffff7eb0534 <sethostname+20>:	mov    rcx,QWORD PTR [rip+0xfd8d5]        # 0x7ffff7fade10
   0x7ffff7eb053b <sethostname+27>:	neg    eax
   0x7ffff7eb053d <sethostname+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb0540 <sethostname+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb0544 <sethostname+36>:	ret
   0x7ffff7eb0545:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb054f:	nop
   0x7ffff7eb0550 <getdomainname>:	endbr64
   0x7ffff7eb0554 <getdomainname+4>:	push   r12
   0x7ffff7eb0556 <getdomainname+6>:	push   rbp
   0x7ffff7eb0557 <getdomainname+7>:	mov    rbp,rsi
   0x7ffff7eb055a <getdomainname+10>:	push   rbx
   0x7ffff7eb055b <getdomainname+11>:	mov    rbx,rdi
   0x7ffff7eb055e <getdomainname+14>:	sub    rsp,0x190
   0x7ffff7eb0565 <getdomainname+21>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb056e <getdomainname+30>:	mov    QWORD PTR [rsp+0x188],rax
   0x7ffff7eb0576 <getdomainname+38>:	xor    eax,eax
   0x7ffff7eb0578 <getdomainname+40>:	mov    rdi,rsp
   0x7ffff7eb057b <getdomainname+43>:	call   0x7ffff7e7f370 <uname>
   0x7ffff7eb0580 <getdomainname+48>:	test   eax,eax
   0x7ffff7eb0582 <getdomainname+50>:	js     0x7ffff7eb0650 <getdomainname+256>
   0x7ffff7eb0588 <getdomainname+56>:	lea    r12,[rsp+0x145]
   0x7ffff7eb0590 <getdomainname+64>:	mov    rdi,r12
   0x7ffff7eb0593 <getdomainname+67>:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7eb0598 <getdomainname+72>:	add    rax,0x1
   0x7ffff7eb059c <getdomainname+76>:	cmp    rax,rbp
   0x7ffff7eb059f <getdomainname+79>:	cmova  rax,rbp
   0x7ffff7eb05a3 <getdomainname+83>:	cmp    eax,0x8
   0x7ffff7eb05a6 <getdomainname+86>:	jb     0x7ffff7eb0610 <getdomainname+192>
   0x7ffff7eb05a8 <getdomainname+88>:	mov    rdx,QWORD PTR [rsp+0x145]
   0x7ffff7eb05b0 <getdomainname+96>:	lea    rsi,[rbx+0x8]
   0x7ffff7eb05b4 <getdomainname+100>:	and    rsi,0xfffffffffffffff8
   0x7ffff7eb05b8 <getdomainname+104>:	mov    QWORD PTR [rbx],rdx
   0x7ffff7eb05bb <getdomainname+107>:	mov    edx,eax
   0x7ffff7eb05bd <getdomainname+109>:	mov    rcx,QWORD PTR [r12+rdx*1-0x8]
   0x7ffff7eb05c2 <getdomainname+114>:	mov    QWORD PTR [rbx+rdx*1-0x8],rcx
   0x7ffff7eb05c7 <getdomainname+119>:	sub    rbx,rsi
   0x7ffff7eb05ca <getdomainname+122>:	add    eax,ebx
   0x7ffff7eb05cc <getdomainname+124>:	sub    r12,rbx
   0x7ffff7eb05cf <getdomainname+127>:	and    eax,0xfffffff8
   0x7ffff7eb05d2 <getdomainname+130>:	cmp    eax,0x8
   0x7ffff7eb05d5 <getdomainname+133>:	jb     0x7ffff7eb05ed <getdomainname+157>
   0x7ffff7eb05d7 <getdomainname+135>:	and    eax,0xfffffff8
   0x7ffff7eb05da <getdomainname+138>:	xor    edx,edx
   0x7ffff7eb05dc <getdomainname+140>:	mov    ecx,edx
   0x7ffff7eb05de <getdomainname+142>:	add    edx,0x8
   0x7ffff7eb05e1 <getdomainname+145>:	mov    rdi,QWORD PTR [r12+rcx*1]
   0x7ffff7eb05e5 <getdomainname+149>:	mov    QWORD PTR [rsi+rcx*1],rdi
   0x7ffff7eb05e9 <getdomainname+153>:	cmp    edx,eax
   0x7ffff7eb05eb <getdomainname+155>:	jb     0x7ffff7eb05dc <getdomainname+140>
   0x7ffff7eb05ed <getdomainname+157>:	xor    eax,eax
   0x7ffff7eb05ef <getdomainname+159>:	mov    rdx,QWORD PTR [rsp+0x188]
   0x7ffff7eb05f7 <getdomainname+167>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb0600 <getdomainname+176>:	jne    0x7ffff7eb0657 <getdomainname+263>
   0x7ffff7eb0602 <getdomainname+178>:	add    rsp,0x190
   0x7ffff7eb0609 <getdomainname+185>:	pop    rbx
   0x7ffff7eb060a <getdomainname+186>:	pop    rbp
   0x7ffff7eb060b <getdomainname+187>:	pop    r12
   0x7ffff7eb060d <getdomainname+189>:	ret
   0x7ffff7eb060e <getdomainname+190>:	xchg   ax,ax
   0x7ffff7eb0610 <getdomainname+192>:	test   al,0x4
   0x7ffff7eb0612 <getdomainname+194>:	jne    0x7ffff7eb0638 <getdomainname+232>
   0x7ffff7eb0614 <getdomainname+196>:	test   eax,eax
   0x7ffff7eb0616 <getdomainname+198>:	je     0x7ffff7eb05ed <getdomainname+157>
   0x7ffff7eb0618 <getdomainname+200>:	movzx  edx,BYTE PTR [rsp+0x145]
   0x7ffff7eb0620 <getdomainname+208>:	mov    BYTE PTR [rbx],dl
   0x7ffff7eb0622 <getdomainname+210>:	test   al,0x2
   0x7ffff7eb0624 <getdomainname+212>:	je     0x7ffff7eb05ed <getdomainname+157>
   0x7ffff7eb0626 <getdomainname+214>:	mov    eax,eax
   0x7ffff7eb0628 <getdomainname+216>:	movzx  edx,WORD PTR [r12+rax*1-0x2]
   0x7ffff7eb062e <getdomainname+222>:	mov    WORD PTR [rbx+rax*1-0x2],dx
   0x7ffff7eb0633 <getdomainname+227>:	jmp    0x7ffff7eb05ed <getdomainname+157>
   0x7ffff7eb0635 <getdomainname+229>:	nop    DWORD PTR [rax]
   0x7ffff7eb0638 <getdomainname+232>:	mov    edx,DWORD PTR [rsp+0x145]
   0x7ffff7eb063f <getdomainname+239>:	mov    eax,eax
   0x7ffff7eb0641 <getdomainname+241>:	mov    DWORD PTR [rbx],edx
   0x7ffff7eb0643 <getdomainname+243>:	mov    edx,DWORD PTR [r12+rax*1-0x4]
   0x7ffff7eb0648 <getdomainname+248>:	mov    DWORD PTR [rbx+rax*1-0x4],edx
   0x7ffff7eb064c <getdomainname+252>:	jmp    0x7ffff7eb05ed <getdomainname+157>
   0x7ffff7eb064e <getdomainname+254>:	xchg   ax,ax
   0x7ffff7eb0650 <getdomainname+256>:	mov    eax,0xffffffff
   0x7ffff7eb0655 <getdomainname+261>:	jmp    0x7ffff7eb05ef <getdomainname+159>
   0x7ffff7eb0657 <getdomainname+263>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb065c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb0660 <setdomainname>:	endbr64
   0x7ffff7eb0664 <setdomainname+4>:	mov    eax,0xab
   0x7ffff7eb0669 <setdomainname+9>:	syscall
   0x7ffff7eb066b <setdomainname+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb0671 <setdomainname+17>:	jae    0x7ffff7eb0674 <setdomainname+20>
   0x7ffff7eb0673 <setdomainname+19>:	ret
   0x7ffff7eb0674 <setdomainname+20>:	mov    rcx,QWORD PTR [rip+0xfd795]        # 0x7ffff7fade10
   0x7ffff7eb067b <setdomainname+27>:	neg    eax
   0x7ffff7eb067d <setdomainname+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb0680 <setdomainname+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb0684 <setdomainname+36>:	ret
   0x7ffff7eb0685:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb068f:	nop
   0x7ffff7eb0690 <select>:	endbr64
   0x7ffff7eb0694 <select+4>:	push   r15
   0x7ffff7eb0696 <select+6>:	mov    r10,rcx
   0x7ffff7eb0699 <select+9>:	mov    r15,rdx
   0x7ffff7eb069c <select+12>:	push   r14
   0x7ffff7eb069e <select+14>:	push   r13
   0x7ffff7eb06a0 <select+16>:	push   r12
   0x7ffff7eb06a2 <select+18>:	mov    r12d,edi
   0x7ffff7eb06a5 <select+21>:	push   rbp
   0x7ffff7eb06a6 <select+22>:	mov    rbp,rsi
   0x7ffff7eb06a9 <select+25>:	push   rbx
   0x7ffff7eb06aa <select+26>:	mov    rbx,r8
   0x7ffff7eb06ad <select+29>:	sub    rsp,0x38
   0x7ffff7eb06b1 <select+33>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb06ba <select+42>:	mov    QWORD PTR [rsp+0x28],rax
   0x7ffff7eb06bf <select+47>:	xor    eax,eax
   0x7ffff7eb06c1 <select+49>:	test   r8,r8
   0x7ffff7eb06c4 <select+52>:	je     0x7ffff7eb0808 <select+376>
   0x7ffff7eb06ca <select+58>:	mov    rsi,QWORD PTR [r8]
   0x7ffff7eb06cd <select+61>:	mov    rdx,QWORD PTR [r8+0x8]
   0x7ffff7eb06d1 <select+65>:	test   rsi,rsi
   0x7ffff7eb06d4 <select+68>:	js     0x7ffff7eb0864 <select+468>
   0x7ffff7eb06da <select+74>:	test   edx,edx
   0x7ffff7eb06dc <select+76>:	js     0x7ffff7eb0864 <select+468>
   0x7ffff7eb06e2 <select+82>:	movsxd rax,edx
   0x7ffff7eb06e5 <select+85>:	mov    ecx,edx
   0x7ffff7eb06e7 <select+87>:	mov    edi,0x3b9ac9ff
   0x7ffff7eb06ec <select+92>:	imul   rax,rax,0x431bde83
   0x7ffff7eb06f3 <select+99>:	sar    ecx,0x1f
   0x7ffff7eb06f6 <select+102>:	sar    rax,0x32
   0x7ffff7eb06fa <select+106>:	sub    eax,ecx
   0x7ffff7eb06fc <select+108>:	movabs rcx,0x7fffffffffffffff
   0x7ffff7eb0706 <select+118>:	mov    r9,rcx
   0x7ffff7eb0709 <select+121>:	movsxd r8,eax
   0x7ffff7eb070c <select+124>:	sub    r9,rsi
   0x7ffff7eb070f <select+127>:	cmp    r8,r9
   0x7ffff7eb0712 <select+130>:	jle    0x7ffff7eb0818 <select+392>
   0x7ffff7eb0718 <select+136>:	mov    QWORD PTR [rsp+0x10],rcx
   0x7ffff7eb071d <select+141>:	lea    r8,[rsp+0x10]
   0x7ffff7eb0722 <select+146>:	mov    QWORD PTR [rsp+0x18],rdi
   0x7ffff7eb0727 <select+151>:	mov    r13,r8
   0x7ffff7eb072a <select+154>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7eb0732 <select+162>:	test   eax,eax
   0x7ffff7eb0734 <select+164>:	jne    0x7ffff7eb07c0 <select+304>
   0x7ffff7eb073a <select+170>:	xor    r9d,r9d
   0x7ffff7eb073d <select+173>:	mov    rdx,r15
   0x7ffff7eb0740 <select+176>:	mov    rsi,rbp
   0x7ffff7eb0743 <select+179>:	mov    edi,r12d
   0x7ffff7eb0746 <select+182>:	mov    eax,0x10e
   0x7ffff7eb074b <select+187>:	syscall
   0x7ffff7eb074d <select+189>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb0753 <select+195>:	ja     0x7ffff7eb0830 <select+416>
   0x7ffff7eb0759 <select+201>:	mov    r12d,eax
   0x7ffff7eb075c <select+204>:	test   rbx,rbx
   0x7ffff7eb075f <select+207>:	je     0x7ffff7eb0792 <select+258>
   0x7ffff7eb0761 <select+209>:	mov    rcx,QWORD PTR [r13+0x8]
   0x7ffff7eb0765 <select+213>:	movq   xmm0,QWORD PTR [r13+0x0]
   0x7ffff7eb076b <select+219>:	movabs rdx,0x20c49ba5e353f7cf
   0x7ffff7eb0775 <select+229>:	mov    rax,rcx
   0x7ffff7eb0778 <select+232>:	sar    rcx,0x3f
   0x7ffff7eb077c <select+236>:	imul   rdx
   0x7ffff7eb077f <select+239>:	sar    rdx,0x7
   0x7ffff7eb0783 <select+243>:	sub    rdx,rcx
   0x7ffff7eb0786 <select+246>:	movq   xmm1,rdx
   0x7ffff7eb078b <select+251>:	punpcklqdq xmm0,xmm1
   0x7ffff7eb078f <select+255>:	movups XMMWORD PTR [rbx],xmm0
   0x7ffff7eb0792 <select+258>:	mov    rax,QWORD PTR [rsp+0x28]
   0x7ffff7eb0797 <select+263>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb07a0 <select+272>:	jne    0x7ffff7eb087d <select+493>
   0x7ffff7eb07a6 <select+278>:	add    rsp,0x38
   0x7ffff7eb07aa <select+282>:	mov    eax,r12d
   0x7ffff7eb07ad <select+285>:	pop    rbx
   0x7ffff7eb07ae <select+286>:	pop    rbp
   0x7ffff7eb07af <select+287>:	pop    r12
   0x7ffff7eb07b1 <select+289>:	pop    r13
   0x7ffff7eb07b3 <select+291>:	pop    r14
   0x7ffff7eb07b5 <select+293>:	pop    r15
   0x7ffff7eb07b7 <select+295>:	ret
   0x7ffff7eb07b8 <select+296>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb07c0 <select+304>:	mov    QWORD PTR [rsp+0x8],r10
   0x7ffff7eb07c5 <select+309>:	mov    QWORD PTR [rsp],r8
   0x7ffff7eb07c9 <select+313>:	call   0x7ffff7e25a70
   0x7ffff7eb07ce <select+318>:	mov    r8,QWORD PTR [rsp]
   0x7ffff7eb07d2 <select+322>:	xor    r9d,r9d
   0x7ffff7eb07d5 <select+325>:	mov    rdx,r15
   0x7ffff7eb07d8 <select+328>:	mov    r14d,eax
   0x7ffff7eb07db <select+331>:	mov    r10,QWORD PTR [rsp+0x8]
   0x7ffff7eb07e0 <select+336>:	mov    rsi,rbp
   0x7ffff7eb07e3 <select+339>:	mov    edi,r12d
   0x7ffff7eb07e6 <select+342>:	mov    eax,0x10e
   0x7ffff7eb07eb <select+347>:	syscall
   0x7ffff7eb07ed <select+349>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb07f3 <select+355>:	ja     0x7ffff7eb0850 <select+448>
   0x7ffff7eb07f5 <select+357>:	mov    r12d,eax
   0x7ffff7eb07f8 <select+360>:	mov    edi,r14d
   0x7ffff7eb07fb <select+363>:	call   0x7ffff7e25ae0
   0x7ffff7eb0800 <select+368>:	jmp    0x7ffff7eb075c <select+204>
   0x7ffff7eb0805 <select+373>:	nop    DWORD PTR [rax]
   0x7ffff7eb0808 <select+376>:	xor    r13d,r13d
   0x7ffff7eb080b <select+379>:	xor    r8d,r8d
   0x7ffff7eb080e <select+382>:	jmp    0x7ffff7eb072a <select+154>
   0x7ffff7eb0813 <select+387>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0818 <select+392>:	imul   eax,eax,0xf4240
   0x7ffff7eb081e <select+398>:	lea    rcx,[r8+rsi*1]
   0x7ffff7eb0822 <select+402>:	sub    edx,eax
   0x7ffff7eb0824 <select+404>:	imul   edi,edx,0x3e8
   0x7ffff7eb082a <select+410>:	jmp    0x7ffff7eb0718 <select+136>
   0x7ffff7eb082f <select+415>:	nop
   0x7ffff7eb0830 <select+416>:	mov    rdx,QWORD PTR [rip+0xfd5d9]        # 0x7ffff7fade10
   0x7ffff7eb0837 <select+423>:	neg    eax
   0x7ffff7eb0839 <select+425>:	mov    r12d,0xffffffff
   0x7ffff7eb083f <select+431>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb0842 <select+434>:	jmp    0x7ffff7eb075c <select+204>
   0x7ffff7eb0847 <select+439>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0850 <select+448>:	mov    rdx,QWORD PTR [rip+0xfd5b9]        # 0x7ffff7fade10
   0x7ffff7eb0857 <select+455>:	neg    eax
   0x7ffff7eb0859 <select+457>:	mov    r12d,0xffffffff
   0x7ffff7eb085f <select+463>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb0862 <select+466>:	jmp    0x7ffff7eb07f8 <select+360>
   0x7ffff7eb0864 <select+468>:	mov    rax,QWORD PTR [rip+0xfd5a5]        # 0x7ffff7fade10
   0x7ffff7eb086b <select+475>:	mov    r12d,0xffffffff
   0x7ffff7eb0871 <select+481>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7eb0878 <select+488>:	jmp    0x7ffff7eb0792 <select+258>
   0x7ffff7eb087d <select+493>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb0882:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb088c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb0890 <pselect>:	endbr64
   0x7ffff7eb0894 <pselect+4>:	push   r14
   0x7ffff7eb0896 <pselect+6>:	mov    rax,r8
   0x7ffff7eb0899 <pselect+9>:	mov    r14,rdx
   0x7ffff7eb089c <pselect+12>:	mov    r10,rcx
   0x7ffff7eb089f <pselect+15>:	push   r12
   0x7ffff7eb08a1 <pselect+17>:	xor    r8d,r8d
   0x7ffff7eb08a4 <pselect+20>:	sub    rsp,0x68
   0x7ffff7eb08a8 <pselect+24>:	mov    rdx,QWORD PTR fs:0x28
   0x7ffff7eb08b1 <pselect+33>:	mov    QWORD PTR [rsp+0x58],rdx
   0x7ffff7eb08b6 <pselect+38>:	xor    edx,edx
   0x7ffff7eb08b8 <pselect+40>:	test   rax,rax
   0x7ffff7eb08bb <pselect+43>:	je     0x7ffff7eb08cb <pselect+59>
   0x7ffff7eb08bd <pselect+45>:	movdqu xmm0,XMMWORD PTR [rax]
   0x7ffff7eb08c1 <pselect+49>:	lea    r8,[rsp+0x30]
   0x7ffff7eb08c6 <pselect+54>:	movaps XMMWORD PTR [rsp+0x30],xmm0
   0x7ffff7eb08cb <pselect+59>:	mov    QWORD PTR [rsp+0x40],r9
   0x7ffff7eb08d0 <pselect+64>:	mov    QWORD PTR [rsp+0x48],0x8
   0x7ffff7eb08d9 <pselect+73>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7eb08e1 <pselect+81>:	lea    r9,[rsp+0x40]
   0x7ffff7eb08e6 <pselect+86>:	test   eax,eax
   0x7ffff7eb08e8 <pselect+88>:	jne    0x7ffff7eb0920 <pselect+144>
   0x7ffff7eb08ea <pselect+90>:	mov    rdx,r14
   0x7ffff7eb08ed <pselect+93>:	mov    eax,0x10e
   0x7ffff7eb08f2 <pselect+98>:	syscall
   0x7ffff7eb08f4 <pselect+100>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb08fa <pselect+106>:	ja     0x7ffff7eb0980 <pselect+240>
   0x7ffff7eb0900 <pselect+112>:	mov    rdx,QWORD PTR [rsp+0x58]
   0x7ffff7eb0905 <pselect+117>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb090e <pselect+126>:	jne    0x7ffff7eb09b3 <pselect+291>
   0x7ffff7eb0914 <pselect+132>:	add    rsp,0x68
   0x7ffff7eb0918 <pselect+136>:	pop    r12
   0x7ffff7eb091a <pselect+138>:	pop    r14
   0x7ffff7eb091c <pselect+140>:	ret
   0x7ffff7eb091d <pselect+141>:	nop    DWORD PTR [rax]
   0x7ffff7eb0920 <pselect+144>:	mov    QWORD PTR [rsp+0x28],r10
   0x7ffff7eb0925 <pselect+149>:	mov    QWORD PTR [rsp+0x20],rsi
   0x7ffff7eb092a <pselect+154>:	mov    DWORD PTR [rsp+0x1c],edi
   0x7ffff7eb092e <pselect+158>:	mov    QWORD PTR [rsp+0x10],r9
   0x7ffff7eb0933 <pselect+163>:	mov    QWORD PTR [rsp+0x8],r8
   0x7ffff7eb0938 <pselect+168>:	call   0x7ffff7e25a70
   0x7ffff7eb093d <pselect+173>:	mov    r9,QWORD PTR [rsp+0x10]
   0x7ffff7eb0942 <pselect+178>:	mov    r8,QWORD PTR [rsp+0x8]
   0x7ffff7eb0947 <pselect+183>:	mov    rdx,r14
   0x7ffff7eb094a <pselect+186>:	mov    r12d,eax
   0x7ffff7eb094d <pselect+189>:	mov    r10,QWORD PTR [rsp+0x28]
   0x7ffff7eb0952 <pselect+194>:	mov    rsi,QWORD PTR [rsp+0x20]
   0x7ffff7eb0957 <pselect+199>:	mov    eax,0x10e
   0x7ffff7eb095c <pselect+204>:	mov    edi,DWORD PTR [rsp+0x1c]
   0x7ffff7eb0960 <pselect+208>:	syscall
   0x7ffff7eb0962 <pselect+210>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb0968 <pselect+216>:	ja     0x7ffff7eb09a0 <pselect+272>
   0x7ffff7eb096a <pselect+218>:	mov    edi,r12d
   0x7ffff7eb096d <pselect+221>:	mov    DWORD PTR [rsp+0x8],eax
   0x7ffff7eb0971 <pselect+225>:	call   0x7ffff7e25ae0
   0x7ffff7eb0976 <pselect+230>:	mov    eax,DWORD PTR [rsp+0x8]
   0x7ffff7eb097a <pselect+234>:	jmp    0x7ffff7eb0900 <pselect+112>
   0x7ffff7eb097c <pselect+236>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb0980 <pselect+240>:	mov    rdx,QWORD PTR [rip+0xfd489]        # 0x7ffff7fade10
   0x7ffff7eb0987 <pselect+247>:	neg    eax
   0x7ffff7eb0989 <pselect+249>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb098c <pselect+252>:	mov    eax,0xffffffff
   0x7ffff7eb0991 <pselect+257>:	jmp    0x7ffff7eb0900 <pselect+112>
   0x7ffff7eb0996 <pselect+262>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb09a0 <pselect+272>:	mov    rdx,QWORD PTR [rip+0xfd469]        # 0x7ffff7fade10
   0x7ffff7eb09a7 <pselect+279>:	neg    eax
   0x7ffff7eb09a9 <pselect+281>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb09ac <pselect+284>:	mov    eax,0xffffffff
   0x7ffff7eb09b1 <pselect+289>:	jmp    0x7ffff7eb096a <pselect+218>
   0x7ffff7eb09b3 <pselect+291>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb09b8:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb09c0 <acct>:	endbr64
   0x7ffff7eb09c4 <acct+4>:	mov    eax,0xa3
   0x7ffff7eb09c9 <acct+9>:	syscall
   0x7ffff7eb09cb <acct+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb09d1 <acct+17>:	jae    0x7ffff7eb09d4 <acct+20>
   0x7ffff7eb09d3 <acct+19>:	ret
   0x7ffff7eb09d4 <acct+20>:	mov    rcx,QWORD PTR [rip+0xfd435]        # 0x7ffff7fade10
   0x7ffff7eb09db <acct+27>:	neg    eax
   0x7ffff7eb09dd <acct+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb09e0 <acct+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb09e4 <acct+36>:	ret
   0x7ffff7eb09e5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb09ef:	nop
   0x7ffff7eb09f0 <chroot>:	endbr64
   0x7ffff7eb09f4 <chroot+4>:	mov    eax,0xa1
   0x7ffff7eb09f9 <chroot+9>:	syscall
   0x7ffff7eb09fb <chroot+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb0a01 <chroot+17>:	jae    0x7ffff7eb0a04 <chroot+20>
   0x7ffff7eb0a03 <chroot+19>:	ret
   0x7ffff7eb0a04 <chroot+20>:	mov    rcx,QWORD PTR [rip+0xfd405]        # 0x7ffff7fade10
   0x7ffff7eb0a0b <chroot+27>:	neg    eax
   0x7ffff7eb0a0d <chroot+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb0a10 <chroot+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb0a14 <chroot+36>:	ret
   0x7ffff7eb0a15:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0a1f:	nop
   0x7ffff7eb0a20 <fsync>:	endbr64
   0x7ffff7eb0a24 <fsync+4>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7eb0a2c <fsync+12>:	test   eax,eax
   0x7ffff7eb0a2e <fsync+14>:	jne    0x7ffff7eb0a40 <fsync+32>
   0x7ffff7eb0a30 <fsync+16>:	mov    eax,0x4a
   0x7ffff7eb0a35 <fsync+21>:	syscall
   0x7ffff7eb0a37 <fsync+23>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb0a3d <fsync+29>:	ja     0x7ffff7eb0a80 <fsync+96>
   0x7ffff7eb0a3f <fsync+31>:	ret
   0x7ffff7eb0a40 <fsync+32>:	sub    rsp,0x18
   0x7ffff7eb0a44 <fsync+36>:	mov    DWORD PTR [rsp+0xc],edi
   0x7ffff7eb0a48 <fsync+40>:	call   0x7ffff7e25a70
   0x7ffff7eb0a4d <fsync+45>:	mov    edi,DWORD PTR [rsp+0xc]
   0x7ffff7eb0a51 <fsync+49>:	mov    r8d,eax
   0x7ffff7eb0a54 <fsync+52>:	mov    eax,0x4a
   0x7ffff7eb0a59 <fsync+57>:	syscall
   0x7ffff7eb0a5b <fsync+59>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb0a61 <fsync+65>:	ja     0x7ffff7eb0a98 <fsync+120>
   0x7ffff7eb0a63 <fsync+67>:	mov    edi,r8d
   0x7ffff7eb0a66 <fsync+70>:	mov    DWORD PTR [rsp+0xc],eax
   0x7ffff7eb0a6a <fsync+74>:	call   0x7ffff7e25ae0
   0x7ffff7eb0a6f <fsync+79>:	mov    eax,DWORD PTR [rsp+0xc]
   0x7ffff7eb0a73 <fsync+83>:	add    rsp,0x18
   0x7ffff7eb0a77 <fsync+87>:	ret
   0x7ffff7eb0a78 <fsync+88>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0a80 <fsync+96>:	mov    rdx,QWORD PTR [rip+0xfd389]        # 0x7ffff7fade10
   0x7ffff7eb0a87 <fsync+103>:	neg    eax
   0x7ffff7eb0a89 <fsync+105>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb0a8c <fsync+108>:	mov    eax,0xffffffff
   0x7ffff7eb0a91 <fsync+113>:	ret
   0x7ffff7eb0a92 <fsync+114>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0a98 <fsync+120>:	mov    rdx,QWORD PTR [rip+0xfd371]        # 0x7ffff7fade10
   0x7ffff7eb0a9f <fsync+127>:	neg    eax
   0x7ffff7eb0aa1 <fsync+129>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb0aa4 <fsync+132>:	mov    eax,0xffffffff
   0x7ffff7eb0aa9 <fsync+137>:	jmp    0x7ffff7eb0a63 <fsync+67>
   0x7ffff7eb0aab:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0ab0 <sync>:	endbr64
   0x7ffff7eb0ab4 <sync+4>:	mov    eax,0xa2
   0x7ffff7eb0ab9 <sync+9>:	syscall
   0x7ffff7eb0abb <sync+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb0ac1 <sync+17>:	jae    0x7ffff7eb0ac4 <sync+20>
   0x7ffff7eb0ac3 <sync+19>:	ret
   0x7ffff7eb0ac4 <sync+20>:	mov    rcx,QWORD PTR [rip+0xfd345]        # 0x7ffff7fade10
   0x7ffff7eb0acb <sync+27>:	neg    eax
   0x7ffff7eb0acd <sync+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb0ad0 <sync+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb0ad4 <sync+36>:	ret
   0x7ffff7eb0ad5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0adf:	nop
   0x7ffff7eb0ae0 <fdatasync>:	endbr64
   0x7ffff7eb0ae4 <fdatasync+4>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7eb0aec <fdatasync+12>:	test   eax,eax
   0x7ffff7eb0aee <fdatasync+14>:	jne    0x7ffff7eb0b00 <fdatasync+32>
   0x7ffff7eb0af0 <fdatasync+16>:	mov    eax,0x4b
   0x7ffff7eb0af5 <fdatasync+21>:	syscall
   0x7ffff7eb0af7 <fdatasync+23>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb0afd <fdatasync+29>:	ja     0x7ffff7eb0b40 <fdatasync+96>
   0x7ffff7eb0aff <fdatasync+31>:	ret
   0x7ffff7eb0b00 <fdatasync+32>:	sub    rsp,0x18
   0x7ffff7eb0b04 <fdatasync+36>:	mov    DWORD PTR [rsp+0xc],edi
   0x7ffff7eb0b08 <fdatasync+40>:	call   0x7ffff7e25a70
   0x7ffff7eb0b0d <fdatasync+45>:	mov    edi,DWORD PTR [rsp+0xc]
   0x7ffff7eb0b11 <fdatasync+49>:	mov    r8d,eax
   0x7ffff7eb0b14 <fdatasync+52>:	mov    eax,0x4b
   0x7ffff7eb0b19 <fdatasync+57>:	syscall
   0x7ffff7eb0b1b <fdatasync+59>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb0b21 <fdatasync+65>:	ja     0x7ffff7eb0b58 <fdatasync+120>
   0x7ffff7eb0b23 <fdatasync+67>:	mov    edi,r8d
   0x7ffff7eb0b26 <fdatasync+70>:	mov    DWORD PTR [rsp+0xc],eax
   0x7ffff7eb0b2a <fdatasync+74>:	call   0x7ffff7e25ae0
   0x7ffff7eb0b2f <fdatasync+79>:	mov    eax,DWORD PTR [rsp+0xc]
   0x7ffff7eb0b33 <fdatasync+83>:	add    rsp,0x18
   0x7ffff7eb0b37 <fdatasync+87>:	ret
   0x7ffff7eb0b38 <fdatasync+88>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0b40 <fdatasync+96>:	mov    rdx,QWORD PTR [rip+0xfd2c9]        # 0x7ffff7fade10
   0x7ffff7eb0b47 <fdatasync+103>:	neg    eax
   0x7ffff7eb0b49 <fdatasync+105>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb0b4c <fdatasync+108>:	mov    eax,0xffffffff
   0x7ffff7eb0b51 <fdatasync+113>:	ret
   0x7ffff7eb0b52 <fdatasync+114>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0b58 <fdatasync+120>:	mov    rdx,QWORD PTR [rip+0xfd2b1]        # 0x7ffff7fade10
   0x7ffff7eb0b5f <fdatasync+127>:	neg    eax
   0x7ffff7eb0b61 <fdatasync+129>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb0b64 <fdatasync+132>:	mov    eax,0xffffffff
   0x7ffff7eb0b69 <fdatasync+137>:	jmp    0x7ffff7eb0b23 <fdatasync+67>
   0x7ffff7eb0b6b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0b70 <syncfs>:	endbr64
   0x7ffff7eb0b74 <syncfs+4>:	mov    eax,0x132
   0x7ffff7eb0b79 <syncfs+9>:	syscall
   0x7ffff7eb0b7b <syncfs+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb0b81 <syncfs+17>:	jae    0x7ffff7eb0b84 <syncfs+20>
   0x7ffff7eb0b83 <syncfs+19>:	ret
   0x7ffff7eb0b84 <syncfs+20>:	mov    rcx,QWORD PTR [rip+0xfd285]        # 0x7ffff7fade10
   0x7ffff7eb0b8b <syncfs+27>:	neg    eax
   0x7ffff7eb0b8d <syncfs+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb0b90 <syncfs+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb0b94 <syncfs+36>:	ret
   0x7ffff7eb0b95:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0b9f:	nop
   0x7ffff7eb0ba0 <reboot>:	endbr64
   0x7ffff7eb0ba4 <reboot+4>:	mov    edx,edi
   0x7ffff7eb0ba6 <reboot+6>:	mov    esi,0x28121969
   0x7ffff7eb0bab <reboot+11>:	mov    edi,0xfee1dead
   0x7ffff7eb0bb0 <reboot+16>:	mov    eax,0xa9
   0x7ffff7eb0bb5 <reboot+21>:	syscall
   0x7ffff7eb0bb7 <reboot+23>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb0bbd <reboot+29>:	ja     0x7ffff7eb0bc0 <reboot+32>
   0x7ffff7eb0bbf <reboot+31>:	ret
   0x7ffff7eb0bc0 <reboot+32>:	mov    rdx,QWORD PTR [rip+0xfd249]        # 0x7ffff7fade10
   0x7ffff7eb0bc7 <reboot+39>:	neg    eax
   0x7ffff7eb0bc9 <reboot+41>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb0bcc <reboot+44>:	mov    eax,0xffffffff
   0x7ffff7eb0bd1 <reboot+49>:	ret
   0x7ffff7eb0bd2:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0bdc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb0be0 <gethostid>:	endbr64
   0x7ffff7eb0be4 <gethostid+4>:	push   r15
   0x7ffff7eb0be6 <gethostid+6>:	xor    edx,edx
   0x7ffff7eb0be8 <gethostid+8>:	xor    esi,esi
   0x7ffff7eb0bea <gethostid+10>:	lea    rdi,[rip+0xbe4eb]        # 0x7ffff7f6f0dc
   0x7ffff7eb0bf1 <gethostid+17>:	push   r14
   0x7ffff7eb0bf3 <gethostid+19>:	push   r13
   0x7ffff7eb0bf5 <gethostid+21>:	push   r12
   0x7ffff7eb0bf7 <gethostid+23>:	push   rbp
   0x7ffff7eb0bf8 <gethostid+24>:	push   rbx
   0x7ffff7eb0bf9 <gethostid+25>:	sub    rsp,0x4a8
   0x7ffff7eb0c00 <gethostid+32>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb0c09 <gethostid+41>:	mov    QWORD PTR [rsp+0x498],rax
   0x7ffff7eb0c11 <gethostid+49>:	xor    eax,eax
   0x7ffff7eb0c13 <gethostid+51>:	call   0x7ffff7eaeb80 <__open_nocancel>
   0x7ffff7eb0c18 <gethostid+56>:	test   eax,eax
   0x7ffff7eb0c1a <gethostid+58>:	js     0x7ffff7eb0c43 <gethostid+99>
   0x7ffff7eb0c1c <gethostid+60>:	mov    edi,eax
   0x7ffff7eb0c1e <gethostid+62>:	lea    rsi,[rsp+0xc]
   0x7ffff7eb0c23 <gethostid+67>:	mov    edx,0x4
   0x7ffff7eb0c28 <gethostid+72>:	mov    ebp,eax
   0x7ffff7eb0c2a <gethostid+74>:	call   0x7ffff7eaecd0 <__read_nocancel>
   0x7ffff7eb0c2f <gethostid+79>:	mov    edi,ebp
   0x7ffff7eb0c31 <gethostid+81>:	mov    rbx,rax
   0x7ffff7eb0c34 <gethostid+84>:	call   0x7ffff7eaea10 <__close_nocancel>
   0x7ffff7eb0c39 <gethostid+89>:	cmp    rbx,0x4
   0x7ffff7eb0c3d <gethostid+93>:	je     0x7ffff7eb0d30 <gethostid+336>
   0x7ffff7eb0c43 <gethostid+99>:	lea    rbp,[rsp+0x450]
   0x7ffff7eb0c4b <gethostid+107>:	mov    esi,0x40
   0x7ffff7eb0c50 <gethostid+112>:	mov    rdi,rbp
   0x7ffff7eb0c53 <gethostid+115>:	call   0x7ffff7eb0400 <gethostname>
   0x7ffff7eb0c58 <gethostid+120>:	test   eax,eax
   0x7ffff7eb0c5a <gethostid+122>:	js     0x7ffff7eb0cd0 <gethostid+240>
   0x7ffff7eb0c5c <gethostid+124>:	cmp    BYTE PTR [rsp+0x450],0x0
   0x7ffff7eb0c64 <gethostid+132>:	je     0x7ffff7eb0cd0 <gethostid+240>
   0x7ffff7eb0c66 <gethostid+134>:	lea    r15,[rsp+0x50]
   0x7ffff7eb0c6b <gethostid+139>:	mov    ecx,0x400
   0x7ffff7eb0c70 <gethostid+144>:	lea    r13,[rsp+0x14]
   0x7ffff7eb0c75 <gethostid+149>:	mov    QWORD PTR [rsp+0x48],0x400
   0x7ffff7eb0c7e <gethostid+158>:	mov    QWORD PTR [rsp+0x40],r15
   0x7ffff7eb0c83 <gethostid+163>:	mov    rdx,r15
   0x7ffff7eb0c86 <gethostid+166>:	lea    r12,[rsp+0x18]
   0x7ffff7eb0c8b <gethostid+171>:	lea    rbx,[rsp+0x20]
   0x7ffff7eb0c90 <gethostid+176>:	lea    r14,[rsp+0x40]
   0x7ffff7eb0c95 <gethostid+181>:	nop    DWORD PTR [rax]
   0x7ffff7eb0c98 <gethostid+184>:	mov    r9,r13
   0x7ffff7eb0c9b <gethostid+187>:	mov    r8,r12
   0x7ffff7eb0c9e <gethostid+190>:	mov    rsi,rbx
   0x7ffff7eb0ca1 <gethostid+193>:	mov    rdi,rbp
   0x7ffff7eb0ca4 <gethostid+196>:	call   0x7ffff7eccb20 <gethostbyname_r>
   0x7ffff7eb0ca9 <gethostid+201>:	test   eax,eax
   0x7ffff7eb0cab <gethostid+203>:	jne    0x7ffff7eb0d00 <gethostid+288>
   0x7ffff7eb0cad <gethostid+205>:	mov    rax,QWORD PTR [rsp+0x18]
   0x7ffff7eb0cb2 <gethostid+210>:	test   rax,rax
   0x7ffff7eb0cb5 <gethostid+213>:	jne    0x7ffff7eb0d40 <gethostid+352>
   0x7ffff7eb0cbb <gethostid+219>:	mov    rdi,QWORD PTR [rsp+0x40]
   0x7ffff7eb0cc0 <gethostid+224>:	cmp    rdi,r15
   0x7ffff7eb0cc3 <gethostid+227>:	je     0x7ffff7eb0cd0 <gethostid+240>
   0x7ffff7eb0cc5 <gethostid+229>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb0cca <gethostid+234>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0cd0 <gethostid+240>:	xor    eax,eax
   0x7ffff7eb0cd2 <gethostid+242>:	mov    rdx,QWORD PTR [rsp+0x498]
   0x7ffff7eb0cda <gethostid+250>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb0ce3 <gethostid+259>:	jne    0x7ffff7eb0d9a <gethostid+442>
   0x7ffff7eb0ce9 <gethostid+265>:	add    rsp,0x4a8
   0x7ffff7eb0cf0 <gethostid+272>:	pop    rbx
   0x7ffff7eb0cf1 <gethostid+273>:	pop    rbp
   0x7ffff7eb0cf2 <gethostid+274>:	pop    r12
   0x7ffff7eb0cf4 <gethostid+276>:	pop    r13
   0x7ffff7eb0cf6 <gethostid+278>:	pop    r14
   0x7ffff7eb0cf8 <gethostid+280>:	pop    r15
   0x7ffff7eb0cfa <gethostid+282>:	ret
   0x7ffff7eb0cfb <gethostid+283>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0d00 <gethostid+288>:	cmp    DWORD PTR [rsp+0x14],0xffffffff
   0x7ffff7eb0d05 <gethostid+293>:	jne    0x7ffff7eb0cbb <gethostid+219>
   0x7ffff7eb0d07 <gethostid+295>:	mov    rax,QWORD PTR [rip+0xfd102]        # 0x7ffff7fade10
   0x7ffff7eb0d0e <gethostid+302>:	cmp    DWORD PTR fs:[rax],0x22
   0x7ffff7eb0d12 <gethostid+306>:	jne    0x7ffff7eb0cbb <gethostid+219>
   0x7ffff7eb0d14 <gethostid+308>:	mov    rdi,r14
   0x7ffff7eb0d17 <gethostid+311>:	call   0x7ffff7e3cad0 <__libc_scratch_buffer_grow>
   0x7ffff7eb0d1c <gethostid+316>:	test   al,al
   0x7ffff7eb0d1e <gethostid+318>:	je     0x7ffff7eb0cd0 <gethostid+240>
   0x7ffff7eb0d20 <gethostid+320>:	mov    rcx,QWORD PTR [rsp+0x48]
   0x7ffff7eb0d25 <gethostid+325>:	mov    rdx,QWORD PTR [rsp+0x40]
   0x7ffff7eb0d2a <gethostid+330>:	jmp    0x7ffff7eb0c98 <gethostid+184>
   0x7ffff7eb0d2f <gethostid+335>:	nop
   0x7ffff7eb0d30 <gethostid+336>:	movsxd rax,DWORD PTR [rsp+0xc]
   0x7ffff7eb0d35 <gethostid+341>:	jmp    0x7ffff7eb0cd2 <gethostid+242>
   0x7ffff7eb0d37 <gethostid+343>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0d40 <gethostid+352>:	movsxd rdx,DWORD PTR [rax+0x14]
   0x7ffff7eb0d44 <gethostid+356>:	mov    ecx,0x4
   0x7ffff7eb0d49 <gethostid+361>:	mov    rax,QWORD PTR [rax+0x18]
   0x7ffff7eb0d4d <gethostid+365>:	mov    DWORD PTR [rsp+0x10],0x0
   0x7ffff7eb0d55 <gethostid+373>:	mov    r8,QWORD PTR [rsp+0x40]
   0x7ffff7eb0d5a <gethostid+378>:	lea    rsi,[rsp+0x10]
   0x7ffff7eb0d5f <gethostid+383>:	cmp    edx,ecx
   0x7ffff7eb0d61 <gethostid+385>:	mov    rdi,QWORD PTR [rax]
   0x7ffff7eb0d64 <gethostid+388>:	cmovg  rdx,rcx
   0x7ffff7eb0d68 <gethostid+392>:	test   rdx,rdx
   0x7ffff7eb0d6b <gethostid+395>:	je     0x7ffff7eb0d7f <gethostid+415>
   0x7ffff7eb0d6d <gethostid+397>:	xor    eax,eax
   0x7ffff7eb0d6f <gethostid+399>:	movzx  ecx,BYTE PTR [rdi+rax*1]
   0x7ffff7eb0d73 <gethostid+403>:	mov    BYTE PTR [rsi+rax*1],cl
   0x7ffff7eb0d76 <gethostid+406>:	add    rax,0x1
   0x7ffff7eb0d7a <gethostid+410>:	cmp    rax,rdx
   0x7ffff7eb0d7d <gethostid+413>:	jb     0x7ffff7eb0d6f <gethostid+399>
   0x7ffff7eb0d7f <gethostid+415>:	cmp    r8,r15
   0x7ffff7eb0d82 <gethostid+418>:	je     0x7ffff7eb0d8c <gethostid+428>
   0x7ffff7eb0d84 <gethostid+420>:	mov    rdi,r8
   0x7ffff7eb0d87 <gethostid+423>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb0d8c <gethostid+428>:	mov    eax,DWORD PTR [rsp+0x10]
   0x7ffff7eb0d90 <gethostid+432>:	rol    eax,0x10
   0x7ffff7eb0d93 <gethostid+435>:	cdqe
   0x7ffff7eb0d95 <gethostid+437>:	jmp    0x7ffff7eb0cd2 <gethostid+242>
   0x7ffff7eb0d9a <gethostid+442>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb0d9f:	nop
   0x7ffff7eb0da0 <sethostid>:	endbr64
   0x7ffff7eb0da4 <sethostid+4>:	push   rbp
   0x7ffff7eb0da5 <sethostid+5>:	push   rbx
   0x7ffff7eb0da6 <sethostid+6>:	sub    rsp,0x18
   0x7ffff7eb0daa <sethostid+10>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb0db3 <sethostid+19>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7eb0db8 <sethostid+24>:	xor    eax,eax
   0x7ffff7eb0dba <sethostid+26>:	mov    rax,QWORD PTR [rip+0xfd0bf]        # 0x7ffff7fade80
   0x7ffff7eb0dc1 <sethostid+33>:	mov    DWORD PTR [rsp+0x4],edi
   0x7ffff7eb0dc5 <sethostid+37>:	mov    eax,DWORD PTR [rax]
   0x7ffff7eb0dc7 <sethostid+39>:	test   eax,eax
   0x7ffff7eb0dc9 <sethostid+41>:	jne    0x7ffff7eb0e60 <sethostid+192>
   0x7ffff7eb0dcf <sethostid+47>:	movsxd rax,edi
   0x7ffff7eb0dd2 <sethostid+50>:	cmp    rax,rdi
   0x7ffff7eb0dd5 <sethostid+53>:	jne    0x7ffff7eb0e38 <sethostid+152>
   0x7ffff7eb0dd7 <sethostid+55>:	mov    edx,0x1a4
   0x7ffff7eb0ddc <sethostid+60>:	mov    esi,0x241
   0x7ffff7eb0de1 <sethostid+65>:	lea    rdi,[rip+0xbe2f4]        # 0x7ffff7f6f0dc
   0x7ffff7eb0de8 <sethostid+72>:	xor    eax,eax
   0x7ffff7eb0dea <sethostid+74>:	call   0x7ffff7eaeb80 <__open_nocancel>
   0x7ffff7eb0def <sethostid+79>:	mov    ebp,eax
   0x7ffff7eb0df1 <sethostid+81>:	test   eax,eax
   0x7ffff7eb0df3 <sethostid+83>:	js     0x7ffff7eb0e50 <sethostid+176>
   0x7ffff7eb0df5 <sethostid+85>:	lea    rsi,[rsp+0x4]
   0x7ffff7eb0dfa <sethostid+90>:	mov    edx,0x4
   0x7ffff7eb0dff <sethostid+95>:	mov    edi,eax
   0x7ffff7eb0e01 <sethostid+97>:	call   0x7ffff7eaed40 <__write_nocancel>
   0x7ffff7eb0e06 <sethostid+102>:	mov    edi,ebp
   0x7ffff7eb0e08 <sethostid+104>:	mov    rbx,rax
   0x7ffff7eb0e0b <sethostid+107>:	call   0x7ffff7eaea10 <__close_nocancel>
   0x7ffff7eb0e10 <sethostid+112>:	xor    eax,eax
   0x7ffff7eb0e12 <sethostid+114>:	cmp    rbx,0x4
   0x7ffff7eb0e16 <sethostid+118>:	setne  al
   0x7ffff7eb0e19 <sethostid+121>:	neg    eax
   0x7ffff7eb0e1b <sethostid+123>:	mov    rdx,QWORD PTR [rsp+0x8]
   0x7ffff7eb0e20 <sethostid+128>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb0e29 <sethostid+137>:	jne    0x7ffff7eb0e75 <sethostid+213>
   0x7ffff7eb0e2b <sethostid+139>:	add    rsp,0x18
   0x7ffff7eb0e2f <sethostid+143>:	pop    rbx
   0x7ffff7eb0e30 <sethostid+144>:	pop    rbp
   0x7ffff7eb0e31 <sethostid+145>:	ret
   0x7ffff7eb0e32 <sethostid+146>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0e38 <sethostid+152>:	mov    rax,QWORD PTR [rip+0xfcfd1]        # 0x7ffff7fade10
   0x7ffff7eb0e3f <sethostid+159>:	mov    DWORD PTR fs:[rax],0x4b
   0x7ffff7eb0e46 <sethostid+166>:	mov    eax,0xffffffff
   0x7ffff7eb0e4b <sethostid+171>:	jmp    0x7ffff7eb0e1b <sethostid+123>
   0x7ffff7eb0e4d <sethostid+173>:	nop    DWORD PTR [rax]
   0x7ffff7eb0e50 <sethostid+176>:	mov    eax,0xffffffff
   0x7ffff7eb0e55 <sethostid+181>:	jmp    0x7ffff7eb0e1b <sethostid+123>
   0x7ffff7eb0e57 <sethostid+183>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0e60 <sethostid+192>:	mov    rax,QWORD PTR [rip+0xfcfa9]        # 0x7ffff7fade10
   0x7ffff7eb0e67 <sethostid+199>:	mov    DWORD PTR fs:[rax],0x1
   0x7ffff7eb0e6e <sethostid+206>:	mov    eax,0xffffffff
   0x7ffff7eb0e73 <sethostid+211>:	jmp    0x7ffff7eb0e1b <sethostid+123>
   0x7ffff7eb0e75 <sethostid+213>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb0e7a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0e80 <revoke>:	endbr64
   0x7ffff7eb0e84 <revoke+4>:	mov    rax,QWORD PTR [rip+0xfcf85]        # 0x7ffff7fade10
   0x7ffff7eb0e8b <revoke+11>:	mov    DWORD PTR fs:[rax],0x26
   0x7ffff7eb0e92 <revoke+18>:	mov    eax,0xffffffff
   0x7ffff7eb0e97 <revoke+23>:	ret
   0x7ffff7eb0e98:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0ea0 <vhangup>:	endbr64
   0x7ffff7eb0ea4 <vhangup+4>:	mov    eax,0x99
   0x7ffff7eb0ea9 <vhangup+9>:	syscall
   0x7ffff7eb0eab <vhangup+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb0eb1 <vhangup+17>:	jae    0x7ffff7eb0eb4 <vhangup+20>
   0x7ffff7eb0eb3 <vhangup+19>:	ret
   0x7ffff7eb0eb4 <vhangup+20>:	mov    rcx,QWORD PTR [rip+0xfcf55]        # 0x7ffff7fade10
   0x7ffff7eb0ebb <vhangup+27>:	neg    eax
   0x7ffff7eb0ebd <vhangup+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb0ec0 <vhangup+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb0ec4 <vhangup+36>:	ret
   0x7ffff7eb0ec5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0ecf:	nop
   0x7ffff7eb0ed0 <swapon>:	endbr64
   0x7ffff7eb0ed4 <swapon+4>:	mov    eax,0xa7
   0x7ffff7eb0ed9 <swapon+9>:	syscall
   0x7ffff7eb0edb <swapon+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb0ee1 <swapon+17>:	jae    0x7ffff7eb0ee4 <swapon+20>
   0x7ffff7eb0ee3 <swapon+19>:	ret
   0x7ffff7eb0ee4 <swapon+20>:	mov    rcx,QWORD PTR [rip+0xfcf25]        # 0x7ffff7fade10
   0x7ffff7eb0eeb <swapon+27>:	neg    eax
   0x7ffff7eb0eed <swapon+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb0ef0 <swapon+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb0ef4 <swapon+36>:	ret
   0x7ffff7eb0ef5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0eff:	nop
   0x7ffff7eb0f00 <swapoff>:	endbr64
   0x7ffff7eb0f04 <swapoff+4>:	mov    eax,0xa8
   0x7ffff7eb0f09 <swapoff+9>:	syscall
   0x7ffff7eb0f0b <swapoff+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb0f11 <swapoff+17>:	jae    0x7ffff7eb0f14 <swapoff+20>
   0x7ffff7eb0f13 <swapoff+19>:	ret
   0x7ffff7eb0f14 <swapoff+20>:	mov    rcx,QWORD PTR [rip+0xfcef5]        # 0x7ffff7fade10
   0x7ffff7eb0f1b <swapoff+27>:	neg    eax
   0x7ffff7eb0f1d <swapoff+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb0f20 <swapoff+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb0f24 <swapoff+36>:	ret
   0x7ffff7eb0f25:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0f2f:	nop
   0x7ffff7eb0f30 <mktemp>:	endbr64
   0x7ffff7eb0f34 <mktemp+4>:	push   r12
   0x7ffff7eb0f36 <mktemp+6>:	xor    edx,edx
   0x7ffff7eb0f38 <mktemp+8>:	xor    esi,esi
   0x7ffff7eb0f3a <mktemp+10>:	mov    ecx,0x2
   0x7ffff7eb0f3f <mktemp+15>:	mov    r12,rdi
   0x7ffff7eb0f42 <mktemp+18>:	call   0x7ffff7df6630
   0x7ffff7eb0f47 <mktemp+23>:	test   eax,eax
   0x7ffff7eb0f49 <mktemp+25>:	jns    0x7ffff7eb0f50 <mktemp+32>
   0x7ffff7eb0f4b <mktemp+27>:	mov    BYTE PTR [r12],0x0
   0x7ffff7eb0f50 <mktemp+32>:	mov    rax,r12
   0x7ffff7eb0f53 <mktemp+35>:	pop    r12
   0x7ffff7eb0f55 <mktemp+37>:	ret
   0x7ffff7eb0f56:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0f60 <mkstemp64>:	endbr64
   0x7ffff7eb0f64 <mkstemp64+4>:	xor    ecx,ecx
   0x7ffff7eb0f66 <mkstemp64+6>:	xor    edx,edx
   0x7ffff7eb0f68 <mkstemp64+8>:	xor    esi,esi
   0x7ffff7eb0f6a <mkstemp64+10>:	jmp    0x7ffff7df6630
   0x7ffff7eb0f6f:	nop
   0x7ffff7eb0f70 <mkdtemp>:	endbr64
   0x7ffff7eb0f74 <mkdtemp+4>:	push   rbx
   0x7ffff7eb0f75 <mkdtemp+5>:	xor    edx,edx
   0x7ffff7eb0f77 <mkdtemp+7>:	xor    esi,esi
   0x7ffff7eb0f79 <mkdtemp+9>:	mov    ecx,0x1
   0x7ffff7eb0f7e <mkdtemp+14>:	mov    rbx,rdi
   0x7ffff7eb0f81 <mkdtemp+17>:	call   0x7ffff7df6630
   0x7ffff7eb0f86 <mkdtemp+22>:	test   eax,eax
   0x7ffff7eb0f88 <mkdtemp+24>:	mov    eax,0x0
   0x7ffff7eb0f8d <mkdtemp+29>:	cmove  rax,rbx
   0x7ffff7eb0f91 <mkdtemp+33>:	pop    rbx
   0x7ffff7eb0f92 <mkdtemp+34>:	ret
   0x7ffff7eb0f93:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb0f9d:	nop    DWORD PTR [rax]
   0x7ffff7eb0fa0 <mkostemp64>:	endbr64
   0x7ffff7eb0fa4 <mkostemp64+4>:	mov    edx,esi
   0x7ffff7eb0fa6 <mkostemp64+6>:	xor    ecx,ecx
   0x7ffff7eb0fa8 <mkostemp64+8>:	xor    esi,esi
   0x7ffff7eb0faa <mkostemp64+10>:	jmp    0x7ffff7df6630
   0x7ffff7eb0faf:	nop
   0x7ffff7eb0fb0 <mkstemps64>:	endbr64
   0x7ffff7eb0fb4 <mkstemps64+4>:	test   esi,esi
   0x7ffff7eb0fb6 <mkstemps64+6>:	js     0x7ffff7eb0fc8 <mkstemps64+24>
   0x7ffff7eb0fb8 <mkstemps64+8>:	xor    ecx,ecx
   0x7ffff7eb0fba <mkstemps64+10>:	xor    edx,edx
   0x7ffff7eb0fbc <mkstemps64+12>:	jmp    0x7ffff7df6630
   0x7ffff7eb0fc1 <mkstemps64+17>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb0fc8 <mkstemps64+24>:	mov    rax,QWORD PTR [rip+0xfce41]        # 0x7ffff7fade10
   0x7ffff7eb0fcf <mkstemps64+31>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7eb0fd6 <mkstemps64+38>:	mov    eax,0xffffffff
   0x7ffff7eb0fdb <mkstemps64+43>:	ret
   0x7ffff7eb0fdc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb0fe0 <mkostemps64>:	endbr64
   0x7ffff7eb0fe4 <mkostemps64+4>:	test   esi,esi
   0x7ffff7eb0fe6 <mkostemps64+6>:	js     0x7ffff7eb0ff0 <mkostemps64+16>
   0x7ffff7eb0fe8 <mkostemps64+8>:	xor    ecx,ecx
   0x7ffff7eb0fea <mkostemps64+10>:	jmp    0x7ffff7df6630
   0x7ffff7eb0fef <mkostemps64+15>:	nop
   0x7ffff7eb0ff0 <mkostemps64+16>:	mov    rax,QWORD PTR [rip+0xfce19]        # 0x7ffff7fade10
   0x7ffff7eb0ff7 <mkostemps64+23>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7eb0ffe <mkostemps64+30>:	mov    eax,0xffffffff
   0x7ffff7eb1003 <mkostemps64+35>:	ret
   0x7ffff7eb1004:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb100e:	xchg   ax,ax
   0x7ffff7eb1010 <ualarm>:	endbr64
   0x7ffff7eb1014 <ualarm+4>:	sub    rsp,0x58
   0x7ffff7eb1018 <ualarm+8>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb1021 <ualarm+17>:	mov    QWORD PTR [rsp+0x48],rax
   0x7ffff7eb1026 <ualarm+22>:	xor    eax,eax
   0x7ffff7eb1028 <ualarm+24>:	mov    eax,edi
   0x7ffff7eb102a <ualarm+26>:	lea    rdx,[rsp+0x20]
   0x7ffff7eb102f <ualarm+31>:	xor    edi,edi
   0x7ffff7eb1031 <ualarm+33>:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7eb1036 <ualarm+38>:	mov    eax,esi
   0x7ffff7eb1038 <ualarm+40>:	mov    rsi,rsp
   0x7ffff7eb103b <ualarm+43>:	mov    QWORD PTR [rsp+0x10],0x0
   0x7ffff7eb1044 <ualarm+52>:	mov    QWORD PTR [rsp],0x0
   0x7ffff7eb104c <ualarm+60>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7eb1051 <ualarm+65>:	call   0x7ffff7e71de0 <setitimer>
   0x7ffff7eb1056 <ualarm+70>:	test   eax,eax
   0x7ffff7eb1058 <ualarm+72>:	js     0x7ffff7eb1080 <ualarm+112>
   0x7ffff7eb105a <ualarm+74>:	imul   eax,DWORD PTR [rsp+0x30],0xf4240
   0x7ffff7eb1062 <ualarm+82>:	add    eax,DWORD PTR [rsp+0x38]
   0x7ffff7eb1066 <ualarm+86>:	mov    rdx,QWORD PTR [rsp+0x48]
   0x7ffff7eb106b <ualarm+91>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb1074 <ualarm+100>:	jne    0x7ffff7eb1087 <ualarm+119>
   0x7ffff7eb1076 <ualarm+102>:	add    rsp,0x58
   0x7ffff7eb107a <ualarm+106>:	ret
   0x7ffff7eb107b <ualarm+107>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1080 <ualarm+112>:	mov    eax,0xffffffff
   0x7ffff7eb1085 <ualarm+117>:	jmp    0x7ffff7eb1066 <ualarm+86>
   0x7ffff7eb1087 <ualarm+119>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb108c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb1090 <usleep>:	endbr64
   0x7ffff7eb1094 <usleep+4>:	sub    rsp,0x28
   0x7ffff7eb1098 <usleep+8>:	xor    esi,esi
   0x7ffff7eb109a <usleep+10>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb10a3 <usleep+19>:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7eb10a8 <usleep+24>:	xor    eax,eax
   0x7ffff7eb10aa <usleep+26>:	mov    eax,edi
   0x7ffff7eb10ac <usleep+28>:	imul   rax,rax,0x431bde83
   0x7ffff7eb10b3 <usleep+35>:	shr    rax,0x32
   0x7ffff7eb10b7 <usleep+39>:	movd   xmm0,eax
   0x7ffff7eb10bb <usleep+43>:	imul   eax,eax,0xf4240
   0x7ffff7eb10c1 <usleep+49>:	sub    edi,eax
   0x7ffff7eb10c3 <usleep+51>:	imul   rdi,rdi,0x3e8
   0x7ffff7eb10ca <usleep+58>:	movq   xmm1,rdi
   0x7ffff7eb10cf <usleep+63>:	mov    rdi,rsp
   0x7ffff7eb10d2 <usleep+66>:	punpcklqdq xmm0,xmm1
   0x7ffff7eb10d6 <usleep+70>:	movaps XMMWORD PTR [rsp],xmm0
   0x7ffff7eb10da <usleep+74>:	call   0x7ffff7e7f6d0 <nanosleep>
   0x7ffff7eb10df <usleep+79>:	mov    rdx,QWORD PTR [rsp+0x18]
   0x7ffff7eb10e4 <usleep+84>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb10ed <usleep+93>:	jne    0x7ffff7eb10f4 <usleep+100>
   0x7ffff7eb10ef <usleep+95>:	add    rsp,0x28
   0x7ffff7eb10f3 <usleep+99>:	ret
   0x7ffff7eb10f4 <usleep+100>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb10f9:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb1100 <gtty>:	endbr64
   0x7ffff7eb1104 <gtty+4>:	cmp    rsi,0x1
   0x7ffff7eb1108 <gtty+8>:	mov    rdx,QWORD PTR [rip+0xfcd01]        # 0x7ffff7fade10
   0x7ffff7eb110f <gtty+15>:	sbb    eax,eax
   0x7ffff7eb1111 <gtty+17>:	and    eax,0xfffffff0
   0x7ffff7eb1114 <gtty+20>:	add    eax,0x26
   0x7ffff7eb1117 <gtty+23>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb111a <gtty+26>:	mov    eax,0xffffffff
   0x7ffff7eb111f <gtty+31>:	ret
   0x7ffff7eb1120 <stty>:	endbr64
   0x7ffff7eb1124 <stty+4>:	cmp    rsi,0x1
   0x7ffff7eb1128 <stty+8>:	mov    rdx,QWORD PTR [rip+0xfcce1]        # 0x7ffff7fade10
   0x7ffff7eb112f <stty+15>:	sbb    eax,eax
   0x7ffff7eb1131 <stty+17>:	and    eax,0xfffffff0
   0x7ffff7eb1134 <stty+20>:	add    eax,0x26
   0x7ffff7eb1137 <stty+23>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb113a <stty+26>:	mov    eax,0xffffffff
   0x7ffff7eb113f <stty+31>:	ret
   0x7ffff7eb1140 <ptrace>:	endbr64
   0x7ffff7eb1144 <ptrace+4>:	sub    rsp,0x68
   0x7ffff7eb1148 <ptrace+8>:	lea    r8d,[rdi-0x1]
   0x7ffff7eb114c <ptrace+12>:	mov    QWORD PTR [rsp+0x38],rsi
   0x7ffff7eb1151 <ptrace+17>:	lea    r10,[rsp+0x8]
   0x7ffff7eb1156 <ptrace+22>:	mov    QWORD PTR [rsp+0x40],rdx
   0x7ffff7eb115b <ptrace+27>:	mov    QWORD PTR [rsp+0x48],rcx
   0x7ffff7eb1160 <ptrace+32>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb1169 <ptrace+41>:	mov    QWORD PTR [rsp+0x28],rax
   0x7ffff7eb116e <ptrace+46>:	xor    eax,eax
   0x7ffff7eb1170 <ptrace+48>:	lea    rax,[rsp+0x70]
   0x7ffff7eb1175 <ptrace+53>:	cmp    r8d,0x3
   0x7ffff7eb1179 <ptrace+57>:	mov    DWORD PTR [rsp+0x10],0x8
   0x7ffff7eb1181 <ptrace+65>:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7eb1186 <ptrace+70>:	lea    rax,[rsp+0x30]
   0x7ffff7eb118b <ptrace+75>:	mov    esi,DWORD PTR [rax+0x8]
   0x7ffff7eb118e <ptrace+78>:	cmovae r10,rcx
   0x7ffff7eb1192 <ptrace+82>:	mov    QWORD PTR [rsp+0x20],rax
   0x7ffff7eb1197 <ptrace+87>:	mov    eax,0x65
   0x7ffff7eb119c <ptrace+92>:	syscall
   0x7ffff7eb119e <ptrace+94>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb11a4 <ptrace+100>:	ja     0x7ffff7eb11e8 <ptrace+168>
   0x7ffff7eb11a6 <ptrace+102>:	test   rax,rax
   0x7ffff7eb11a9 <ptrace+105>:	js     0x7ffff7eb11b1 <ptrace+113>
   0x7ffff7eb11ab <ptrace+107>:	cmp    r8d,0x2
   0x7ffff7eb11af <ptrace+111>:	jbe    0x7ffff7eb11d0 <ptrace+144>
   0x7ffff7eb11b1 <ptrace+113>:	mov    rdx,QWORD PTR [rsp+0x28]
   0x7ffff7eb11b6 <ptrace+118>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb11bf <ptrace+127>:	jne    0x7ffff7eb11fd <ptrace+189>
   0x7ffff7eb11c1 <ptrace+129>:	add    rsp,0x68
   0x7ffff7eb11c5 <ptrace+133>:	ret
   0x7ffff7eb11c6 <ptrace+134>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb11d0 <ptrace+144>:	mov    rax,QWORD PTR [rip+0xfcc39]        # 0x7ffff7fade10
   0x7ffff7eb11d7 <ptrace+151>:	mov    DWORD PTR fs:[rax],0x0
   0x7ffff7eb11de <ptrace+158>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7eb11e3 <ptrace+163>:	jmp    0x7ffff7eb11b1 <ptrace+113>
   0x7ffff7eb11e5 <ptrace+165>:	nop    DWORD PTR [rax]
   0x7ffff7eb11e8 <ptrace+168>:	mov    rdx,QWORD PTR [rip+0xfcc21]        # 0x7ffff7fade10
   0x7ffff7eb11ef <ptrace+175>:	neg    eax
   0x7ffff7eb11f1 <ptrace+177>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb11f4 <ptrace+180>:	mov    rax,0xffffffffffffffff
   0x7ffff7eb11fb <ptrace+187>:	jmp    0x7ffff7eb11b1 <ptrace+113>
   0x7ffff7eb11fd <ptrace+189>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb1202:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb120c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb1210:	push   r13
   0x7ffff7eb1212:	lea    r13,[rdi+0x38]
   0x7ffff7eb1216:	push   r12
   0x7ffff7eb1218:	lea    r12,[rdi+0x10]
   0x7ffff7eb121c:	push   rbp
   0x7ffff7eb121d:	lea    rbp,[rip+0xbdec7]        # 0x7ffff7f6f0eb
   0x7ffff7eb1224:	push   rbx
   0x7ffff7eb1225:	mov    rsi,rbp
   0x7ffff7eb1228:	mov    rbx,rdi
   0x7ffff7eb122b:	sub    rsp,0x8
   0x7ffff7eb122f:	movdqu xmm0,XMMWORD PTR [rdi+0x10]
   0x7ffff7eb1234:	movdqu xmm1,XMMWORD PTR [rdi+0x20]
   0x7ffff7eb1239:	movups XMMWORD PTR [rdi+0x38],xmm0
   0x7ffff7eb123d:	movups XMMWORD PTR [rdi+0x48],xmm1
   0x7ffff7eb1241:	mov    rdi,r12
   0x7ffff7eb1244:	call   0x7ffff7eb1e90 <hasmntopt>
   0x7ffff7eb1249:	test   rax,rax
   0x7ffff7eb124c:	je     0x7ffff7eb1270
   0x7ffff7eb124e:	mov    rax,QWORD PTR [rbx+0x30]
   0x7ffff7eb1252:	mov    QWORD PTR [rbx+0x58],rbp
   0x7ffff7eb1256:	mov    QWORD PTR [rbx+0x60],rax
   0x7ffff7eb125a:	add    rsp,0x8
   0x7ffff7eb125e:	mov    rax,r13
   0x7ffff7eb1261:	pop    rbx
   0x7ffff7eb1262:	pop    rbp
   0x7ffff7eb1263:	pop    r12
   0x7ffff7eb1265:	pop    r13
   0x7ffff7eb1267:	ret
   0x7ffff7eb1268:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1270:	lea    rbp,[rip+0xbde71]        # 0x7ffff7f6f0e8
   0x7ffff7eb1277:	mov    rdi,r12
   0x7ffff7eb127a:	mov    rsi,rbp
   0x7ffff7eb127d:	call   0x7ffff7eb1e90 <hasmntopt>
   0x7ffff7eb1282:	test   rax,rax
   0x7ffff7eb1285:	jne    0x7ffff7eb124e
   0x7ffff7eb1287:	lea    rbp,[rip+0xbde60]        # 0x7ffff7f6f0ee
   0x7ffff7eb128e:	mov    rdi,r12
   0x7ffff7eb1291:	mov    rsi,rbp
   0x7ffff7eb1294:	call   0x7ffff7eb1e90 <hasmntopt>
   0x7ffff7eb1299:	test   rax,rax
   0x7ffff7eb129c:	jne    0x7ffff7eb124e
   0x7ffff7eb129e:	lea    rbp,[rip+0xbde4c]        # 0x7ffff7f6f0f1
   0x7ffff7eb12a5:	mov    rdi,r12
   0x7ffff7eb12a8:	mov    rsi,rbp
   0x7ffff7eb12ab:	call   0x7ffff7eb1e90 <hasmntopt>
   0x7ffff7eb12b0:	test   rax,rax
   0x7ffff7eb12b3:	jne    0x7ffff7eb124e
   0x7ffff7eb12b5:	lea    rbp,[rip+0xbde38]        # 0x7ffff7f6f0f4
   0x7ffff7eb12bc:	mov    rdi,r12
   0x7ffff7eb12bf:	mov    rsi,rbp
   0x7ffff7eb12c2:	call   0x7ffff7eb1e90 <hasmntopt>
   0x7ffff7eb12c7:	test   rax,rax
   0x7ffff7eb12ca:	lea    rax,[rip+0xbd7f2]        # 0x7ffff7f6eac3
   0x7ffff7eb12d1:	cmove  rbp,rax
   0x7ffff7eb12d5:	jmp    0x7ffff7eb124e
   0x7ffff7eb12da:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb12e0 <setfsent>:	endbr64
   0x7ffff7eb12e4 <setfsent+4>:	sub    rsp,0x8
   0x7ffff7eb12e8 <setfsent+8>:	cmp    QWORD PTR [rip+0x104f38],0x0        # 0x7ffff7fb6228
   0x7ffff7eb12f0 <setfsent+16>:	je     0x7ffff7eb1310 <setfsent+48>
   0x7ffff7eb12f2 <setfsent+18>:	mov    rdi,QWORD PTR [rip+0x104f27]        # 0x7ffff7fb6220
   0x7ffff7eb12f9 <setfsent+25>:	test   rdi,rdi
   0x7ffff7eb12fc <setfsent+28>:	je     0x7ffff7eb1338 <setfsent+88>
   0x7ffff7eb12fe <setfsent+30>:	call   0x7ffff7e1cfa0 <rewind>
   0x7ffff7eb1303 <setfsent+35>:	mov    eax,0x1
   0x7ffff7eb1308 <setfsent+40>:	add    rsp,0x8
   0x7ffff7eb130c <setfsent+44>:	ret
   0x7ffff7eb130d <setfsent+45>:	nop    DWORD PTR [rax]
   0x7ffff7eb1310 <setfsent+48>:	mov    edi,0x1fc0
   0x7ffff7eb1315 <setfsent+53>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7eb131a <setfsent+58>:	test   rax,rax
   0x7ffff7eb131d <setfsent+61>:	je     0x7ffff7eb1368 <setfsent+136>
   0x7ffff7eb131f <setfsent+63>:	mov    rdi,QWORD PTR [rip+0x104efa]        # 0x7ffff7fb6220
   0x7ffff7eb1326 <setfsent+70>:	mov    QWORD PTR [rip+0x104efb],rax        # 0x7ffff7fb6228
   0x7ffff7eb132d <setfsent+77>:	test   rdi,rdi
   0x7ffff7eb1330 <setfsent+80>:	jne    0x7ffff7eb12fe <setfsent+30>
   0x7ffff7eb1332 <setfsent+82>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1338 <setfsent+88>:	lea    rsi,[rip+0xbdbf6]        # 0x7ffff7f6ef35
   0x7ffff7eb133f <setfsent+95>:	lea    rdi,[rip+0xbddb1]        # 0x7ffff7f6f0f7
   0x7ffff7eb1346 <setfsent+102>:	call   0x7ffff7eb1c10 <setmntent>
   0x7ffff7eb134b <setfsent+107>:	test   rax,rax
   0x7ffff7eb134e <setfsent+110>:	je     0x7ffff7eb1368 <setfsent+136>
   0x7ffff7eb1350 <setfsent+112>:	mov    QWORD PTR [rip+0x104ec9],rax        # 0x7ffff7fb6220
   0x7ffff7eb1357 <setfsent+119>:	mov    eax,0x1
   0x7ffff7eb135c <setfsent+124>:	add    rsp,0x8
   0x7ffff7eb1360 <setfsent+128>:	ret
   0x7ffff7eb1361 <setfsent+129>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb1368 <setfsent+136>:	xor    eax,eax
   0x7ffff7eb136a <setfsent+138>:	jmp    0x7ffff7eb1308 <setfsent+40>
   0x7ffff7eb136c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb1370 <getfsent>:	endbr64
   0x7ffff7eb1374 <getfsent+4>:	push   rbp
   0x7ffff7eb1375 <getfsent+5>:	push   rbx
   0x7ffff7eb1376 <getfsent+6>:	sub    rsp,0x8
   0x7ffff7eb137a <getfsent+10>:	mov    rdx,QWORD PTR [rip+0x104ea7]        # 0x7ffff7fb6228
   0x7ffff7eb1381 <getfsent+17>:	test   rdx,rdx
   0x7ffff7eb1384 <getfsent+20>:	je     0x7ffff7eb1418 <getfsent+168>
   0x7ffff7eb138a <getfsent+26>:	mov    rdi,QWORD PTR [rip+0x104e8f]        # 0x7ffff7fb6220
   0x7ffff7eb1391 <getfsent+33>:	test   rdi,rdi
   0x7ffff7eb1394 <getfsent+36>:	je     0x7ffff7eb1448 <getfsent+216>
   0x7ffff7eb139a <getfsent+42>:	lea    rbp,[rip+0x104e8f]        # 0x7ffff7fb6230
   0x7ffff7eb13a1 <getfsent+49>:	mov    ecx,0x1fc0
   0x7ffff7eb13a6 <getfsent+54>:	mov    rsi,rbp
   0x7ffff7eb13a9 <getfsent+57>:	call   0x7ffff7eb1d10 <getmntent_r>
   0x7ffff7eb13ae <getfsent+62>:	test   rax,rax
   0x7ffff7eb13b1 <getfsent+65>:	je     0x7ffff7eb1480 <getfsent+272>
   0x7ffff7eb13b7 <getfsent+71>:	movdqa xmm0,XMMWORD PTR [rip+0x104e71]        # 0x7ffff7fb6230
   0x7ffff7eb13bf <getfsent+79>:	movdqa xmm1,XMMWORD PTR [rip+0x104e79]        # 0x7ffff7fb6240
   0x7ffff7eb13c7 <getfsent+87>:	lea    rbx,[rip+0xbdd1d]        # 0x7ffff7f6f0eb
   0x7ffff7eb13ce <getfsent+94>:	mov    rdi,rbp
   0x7ffff7eb13d1 <getfsent+97>:	mov    rsi,rbx
   0x7ffff7eb13d4 <getfsent+100>:	movups XMMWORD PTR [rip+0x104e7d],xmm0        # 0x7ffff7fb6258
   0x7ffff7eb13db <getfsent+107>:	movups XMMWORD PTR [rip+0x104e86],xmm1        # 0x7ffff7fb6268
   0x7ffff7eb13e2 <getfsent+114>:	call   0x7ffff7eb1e90 <hasmntopt>
   0x7ffff7eb13e7 <getfsent+119>:	test   rax,rax
   0x7ffff7eb13ea <getfsent+122>:	je     0x7ffff7eb1490 <getfsent+288>
   0x7ffff7eb13f0 <getfsent+128>:	mov    rax,QWORD PTR [rip+0x104e59]        # 0x7ffff7fb6250
   0x7ffff7eb13f7 <getfsent+135>:	mov    QWORD PTR [rip+0x104e7a],rbx        # 0x7ffff7fb6278
   0x7ffff7eb13fe <getfsent+142>:	mov    QWORD PTR [rip+0x104e7b],rax        # 0x7ffff7fb6280
   0x7ffff7eb1405 <getfsent+149>:	add    rsp,0x8
   0x7ffff7eb1409 <getfsent+153>:	lea    rax,[rip+0x104e48]        # 0x7ffff7fb6258
   0x7ffff7eb1410 <getfsent+160>:	pop    rbx
   0x7ffff7eb1411 <getfsent+161>:	pop    rbp
   0x7ffff7eb1412 <getfsent+162>:	ret
   0x7ffff7eb1413 <getfsent+163>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1418 <getfsent+168>:	mov    edi,0x1fc0
   0x7ffff7eb141d <getfsent+173>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7eb1422 <getfsent+178>:	mov    rdx,rax
   0x7ffff7eb1425 <getfsent+181>:	test   rax,rax
   0x7ffff7eb1428 <getfsent+184>:	je     0x7ffff7eb1480 <getfsent+272>
   0x7ffff7eb142a <getfsent+186>:	mov    rdi,QWORD PTR [rip+0x104def]        # 0x7ffff7fb6220
   0x7ffff7eb1431 <getfsent+193>:	mov    QWORD PTR [rip+0x104df0],rax        # 0x7ffff7fb6228
   0x7ffff7eb1438 <getfsent+200>:	test   rdi,rdi
   0x7ffff7eb143b <getfsent+203>:	jne    0x7ffff7eb139a <getfsent+42>
   0x7ffff7eb1441 <getfsent+209>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb1448 <getfsent+216>:	lea    rdi,[rip+0xbdca8]        # 0x7ffff7f6f0f7
   0x7ffff7eb144f <getfsent+223>:	lea    rsi,[rip+0xbdadf]        # 0x7ffff7f6ef35
   0x7ffff7eb1456 <getfsent+230>:	call   0x7ffff7eb1c10 <setmntent>
   0x7ffff7eb145b <getfsent+235>:	mov    rdi,rax
   0x7ffff7eb145e <getfsent+238>:	test   rax,rax
   0x7ffff7eb1461 <getfsent+241>:	je     0x7ffff7eb1480 <getfsent+272>
   0x7ffff7eb1463 <getfsent+243>:	mov    QWORD PTR [rip+0x104db6],rax        # 0x7ffff7fb6220
   0x7ffff7eb146a <getfsent+250>:	mov    rdx,QWORD PTR [rip+0x104db7]        # 0x7ffff7fb6228
   0x7ffff7eb1471 <getfsent+257>:	jmp    0x7ffff7eb139a <getfsent+42>
   0x7ffff7eb1476 <getfsent+262>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1480 <getfsent+272>:	add    rsp,0x8
   0x7ffff7eb1484 <getfsent+276>:	xor    eax,eax
   0x7ffff7eb1486 <getfsent+278>:	pop    rbx
   0x7ffff7eb1487 <getfsent+279>:	pop    rbp
   0x7ffff7eb1488 <getfsent+280>:	ret
   0x7ffff7eb1489 <getfsent+281>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb1490 <getfsent+288>:	lea    rbx,[rip+0xbdc51]        # 0x7ffff7f6f0e8
   0x7ffff7eb1497 <getfsent+295>:	mov    rdi,rbp
   0x7ffff7eb149a <getfsent+298>:	mov    rsi,rbx
   0x7ffff7eb149d <getfsent+301>:	call   0x7ffff7eb1e90 <hasmntopt>
   0x7ffff7eb14a2 <getfsent+306>:	test   rax,rax
   0x7ffff7eb14a5 <getfsent+309>:	jne    0x7ffff7eb13f0 <getfsent+128>
   0x7ffff7eb14ab <getfsent+315>:	lea    rbx,[rip+0xbdc3c]        # 0x7ffff7f6f0ee
   0x7ffff7eb14b2 <getfsent+322>:	mov    rdi,rbp
   0x7ffff7eb14b5 <getfsent+325>:	mov    rsi,rbx
   0x7ffff7eb14b8 <getfsent+328>:	call   0x7ffff7eb1e90 <hasmntopt>
   0x7ffff7eb14bd <getfsent+333>:	test   rax,rax
   0x7ffff7eb14c0 <getfsent+336>:	jne    0x7ffff7eb13f0 <getfsent+128>
   0x7ffff7eb14c6 <getfsent+342>:	lea    rbx,[rip+0xbdc24]        # 0x7ffff7f6f0f1
   0x7ffff7eb14cd <getfsent+349>:	mov    rdi,rbp
   0x7ffff7eb14d0 <getfsent+352>:	mov    rsi,rbx
   0x7ffff7eb14d3 <getfsent+355>:	call   0x7ffff7eb1e90 <hasmntopt>
   0x7ffff7eb14d8 <getfsent+360>:	test   rax,rax
   0x7ffff7eb14db <getfsent+363>:	jne    0x7ffff7eb13f0 <getfsent+128>
   0x7ffff7eb14e1 <getfsent+369>:	lea    rbx,[rip+0xbdc0c]        # 0x7ffff7f6f0f4
   0x7ffff7eb14e8 <getfsent+376>:	mov    rdi,rbp
   0x7ffff7eb14eb <getfsent+379>:	mov    rsi,rbx
   0x7ffff7eb14ee <getfsent+382>:	call   0x7ffff7eb1e90 <hasmntopt>
   0x7ffff7eb14f3 <getfsent+387>:	test   rax,rax
   0x7ffff7eb14f6 <getfsent+390>:	lea    rax,[rip+0xbd5c6]        # 0x7ffff7f6eac3
   0x7ffff7eb14fd <getfsent+397>:	cmove  rbx,rax
   0x7ffff7eb1501 <getfsent+401>:	jmp    0x7ffff7eb13f0 <getfsent+128>
   0x7ffff7eb1506:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1510 <getfsspec>:	endbr64
   0x7ffff7eb1514 <getfsspec+4>:	cmp    QWORD PTR [rip+0x104d0c],0x0        # 0x7ffff7fb6228
   0x7ffff7eb151c <getfsspec+12>:	push   r12
   0x7ffff7eb151e <getfsspec+14>:	push   rbp
   0x7ffff7eb151f <getfsspec+15>:	push   rbx
   0x7ffff7eb1520 <getfsspec+16>:	mov    rbx,rdi
   0x7ffff7eb1523 <getfsspec+19>:	je     0x7ffff7eb15c0 <getfsspec+176>
   0x7ffff7eb1529 <getfsspec+25>:	mov    rdi,QWORD PTR [rip+0x104cf0]        # 0x7ffff7fb6220
   0x7ffff7eb1530 <getfsspec+32>:	test   rdi,rdi
   0x7ffff7eb1533 <getfsspec+35>:	je     0x7ffff7eb1598 <getfsspec+136>
   0x7ffff7eb1535 <getfsspec+37>:	call   0x7ffff7e1cfa0 <rewind>
   0x7ffff7eb153a <getfsspec+42>:	mov    rdi,QWORD PTR [rip+0x104cdf]        # 0x7ffff7fb6220
   0x7ffff7eb1541 <getfsspec+49>:	lea    r12,[rip+0x104cd8]        # 0x7ffff7fb6220
   0x7ffff7eb1548 <getfsspec+56>:	lea    rbp,[r12+0x10]
   0x7ffff7eb154d <getfsspec+61>:	jmp    0x7ffff7eb1563 <getfsspec+83>
   0x7ffff7eb154f <getfsspec+63>:	nop
   0x7ffff7eb1550 <getfsspec+64>:	mov    rdi,QWORD PTR [rax]
   0x7ffff7eb1553 <getfsspec+67>:	mov    rsi,rbx
   0x7ffff7eb1556 <getfsspec+70>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb155b <getfsspec+75>:	test   eax,eax
   0x7ffff7eb155d <getfsspec+77>:	je     0x7ffff7eb1588 <getfsspec+120>
   0x7ffff7eb155f <getfsspec+79>:	mov    rdi,QWORD PTR [r12]
   0x7ffff7eb1563 <getfsspec+83>:	mov    rdx,QWORD PTR [rip+0x104cbe]        # 0x7ffff7fb6228
   0x7ffff7eb156a <getfsspec+90>:	mov    ecx,0x1fc0
   0x7ffff7eb156f <getfsspec+95>:	mov    rsi,rbp
   0x7ffff7eb1572 <getfsspec+98>:	call   0x7ffff7eb1d10 <getmntent_r>
   0x7ffff7eb1577 <getfsspec+103>:	test   rax,rax
   0x7ffff7eb157a <getfsspec+106>:	jne    0x7ffff7eb1550 <getfsspec+64>
   0x7ffff7eb157c <getfsspec+108>:	pop    rbx
   0x7ffff7eb157d <getfsspec+109>:	xor    eax,eax
   0x7ffff7eb157f <getfsspec+111>:	pop    rbp
   0x7ffff7eb1580 <getfsspec+112>:	pop    r12
   0x7ffff7eb1582 <getfsspec+114>:	ret
   0x7ffff7eb1583 <getfsspec+115>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1588 <getfsspec+120>:	pop    rbx
   0x7ffff7eb1589 <getfsspec+121>:	mov    rdi,r12
   0x7ffff7eb158c <getfsspec+124>:	pop    rbp
   0x7ffff7eb158d <getfsspec+125>:	pop    r12
   0x7ffff7eb158f <getfsspec+127>:	jmp    0x7ffff7eb1210
   0x7ffff7eb1594 <getfsspec+132>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb1598 <getfsspec+136>:	lea    rdi,[rip+0xbdb58]        # 0x7ffff7f6f0f7
   0x7ffff7eb159f <getfsspec+143>:	lea    rsi,[rip+0xbd98f]        # 0x7ffff7f6ef35
   0x7ffff7eb15a6 <getfsspec+150>:	call   0x7ffff7eb1c10 <setmntent>
   0x7ffff7eb15ab <getfsspec+155>:	mov    rdi,rax
   0x7ffff7eb15ae <getfsspec+158>:	test   rax,rax
   0x7ffff7eb15b1 <getfsspec+161>:	je     0x7ffff7eb157c <getfsspec+108>
   0x7ffff7eb15b3 <getfsspec+163>:	mov    QWORD PTR [rip+0x104c66],rax        # 0x7ffff7fb6220
   0x7ffff7eb15ba <getfsspec+170>:	jmp    0x7ffff7eb1541 <getfsspec+49>
   0x7ffff7eb15bc <getfsspec+172>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb15c0 <getfsspec+176>:	mov    edi,0x1fc0
   0x7ffff7eb15c5 <getfsspec+181>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7eb15ca <getfsspec+186>:	test   rax,rax
   0x7ffff7eb15cd <getfsspec+189>:	je     0x7ffff7eb157c <getfsspec+108>
   0x7ffff7eb15cf <getfsspec+191>:	mov    QWORD PTR [rip+0x104c52],rax        # 0x7ffff7fb6228
   0x7ffff7eb15d6 <getfsspec+198>:	jmp    0x7ffff7eb1529 <getfsspec+25>
   0x7ffff7eb15db:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb15e0 <getfsfile>:	endbr64
   0x7ffff7eb15e4 <getfsfile+4>:	cmp    QWORD PTR [rip+0x104c3c],0x0        # 0x7ffff7fb6228
   0x7ffff7eb15ec <getfsfile+12>:	push   r12
   0x7ffff7eb15ee <getfsfile+14>:	push   rbp
   0x7ffff7eb15ef <getfsfile+15>:	push   rbx
   0x7ffff7eb15f0 <getfsfile+16>:	mov    rbx,rdi
   0x7ffff7eb15f3 <getfsfile+19>:	je     0x7ffff7eb1690 <getfsfile+176>
   0x7ffff7eb15f9 <getfsfile+25>:	mov    rdi,QWORD PTR [rip+0x104c20]        # 0x7ffff7fb6220
   0x7ffff7eb1600 <getfsfile+32>:	test   rdi,rdi
   0x7ffff7eb1603 <getfsfile+35>:	je     0x7ffff7eb1668 <getfsfile+136>
   0x7ffff7eb1605 <getfsfile+37>:	call   0x7ffff7e1cfa0 <rewind>
   0x7ffff7eb160a <getfsfile+42>:	mov    rdi,QWORD PTR [rip+0x104c0f]        # 0x7ffff7fb6220
   0x7ffff7eb1611 <getfsfile+49>:	lea    r12,[rip+0x104c08]        # 0x7ffff7fb6220
   0x7ffff7eb1618 <getfsfile+56>:	lea    rbp,[r12+0x10]
   0x7ffff7eb161d <getfsfile+61>:	jmp    0x7ffff7eb1634 <getfsfile+84>
   0x7ffff7eb161f <getfsfile+63>:	nop
   0x7ffff7eb1620 <getfsfile+64>:	mov    rdi,QWORD PTR [rax+0x8]
   0x7ffff7eb1624 <getfsfile+68>:	mov    rsi,rbx
   0x7ffff7eb1627 <getfsfile+71>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb162c <getfsfile+76>:	test   eax,eax
   0x7ffff7eb162e <getfsfile+78>:	je     0x7ffff7eb1658 <getfsfile+120>
   0x7ffff7eb1630 <getfsfile+80>:	mov    rdi,QWORD PTR [r12]
   0x7ffff7eb1634 <getfsfile+84>:	mov    rdx,QWORD PTR [rip+0x104bed]        # 0x7ffff7fb6228
   0x7ffff7eb163b <getfsfile+91>:	mov    ecx,0x1fc0
   0x7ffff7eb1640 <getfsfile+96>:	mov    rsi,rbp
   0x7ffff7eb1643 <getfsfile+99>:	call   0x7ffff7eb1d10 <getmntent_r>
   0x7ffff7eb1648 <getfsfile+104>:	test   rax,rax
   0x7ffff7eb164b <getfsfile+107>:	jne    0x7ffff7eb1620 <getfsfile+64>
   0x7ffff7eb164d <getfsfile+109>:	pop    rbx
   0x7ffff7eb164e <getfsfile+110>:	xor    eax,eax
   0x7ffff7eb1650 <getfsfile+112>:	pop    rbp
   0x7ffff7eb1651 <getfsfile+113>:	pop    r12
   0x7ffff7eb1653 <getfsfile+115>:	ret
   0x7ffff7eb1654 <getfsfile+116>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb1658 <getfsfile+120>:	pop    rbx
   0x7ffff7eb1659 <getfsfile+121>:	mov    rdi,r12
   0x7ffff7eb165c <getfsfile+124>:	pop    rbp
   0x7ffff7eb165d <getfsfile+125>:	pop    r12
   0x7ffff7eb165f <getfsfile+127>:	jmp    0x7ffff7eb1210
   0x7ffff7eb1664 <getfsfile+132>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb1668 <getfsfile+136>:	lea    rdi,[rip+0xbda88]        # 0x7ffff7f6f0f7
   0x7ffff7eb166f <getfsfile+143>:	lea    rsi,[rip+0xbd8bf]        # 0x7ffff7f6ef35
   0x7ffff7eb1676 <getfsfile+150>:	call   0x7ffff7eb1c10 <setmntent>
   0x7ffff7eb167b <getfsfile+155>:	mov    rdi,rax
   0x7ffff7eb167e <getfsfile+158>:	test   rax,rax
   0x7ffff7eb1681 <getfsfile+161>:	je     0x7ffff7eb164d <getfsfile+109>
   0x7ffff7eb1683 <getfsfile+163>:	mov    QWORD PTR [rip+0x104b96],rax        # 0x7ffff7fb6220
   0x7ffff7eb168a <getfsfile+170>:	jmp    0x7ffff7eb1611 <getfsfile+49>
   0x7ffff7eb168c <getfsfile+172>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb1690 <getfsfile+176>:	mov    edi,0x1fc0
   0x7ffff7eb1695 <getfsfile+181>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7eb169a <getfsfile+186>:	test   rax,rax
   0x7ffff7eb169d <getfsfile+189>:	je     0x7ffff7eb164d <getfsfile+109>
   0x7ffff7eb169f <getfsfile+191>:	mov    QWORD PTR [rip+0x104b82],rax        # 0x7ffff7fb6228
   0x7ffff7eb16a6 <getfsfile+198>:	jmp    0x7ffff7eb15f9 <getfsfile+25>
   0x7ffff7eb16ab:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb16b0 <endfsent>:	endbr64
   0x7ffff7eb16b4 <endfsent+4>:	mov    rdi,QWORD PTR [rip+0x104b65]        # 0x7ffff7fb6220
   0x7ffff7eb16bb <endfsent+11>:	test   rdi,rdi
   0x7ffff7eb16be <endfsent+14>:	je     0x7ffff7eb16e0 <endfsent+48>
   0x7ffff7eb16c0 <endfsent+16>:	sub    rsp,0x8
   0x7ffff7eb16c4 <endfsent+20>:	call   0x7ffff7eb1ce0 <endmntent>
   0x7ffff7eb16c9 <endfsent+25>:	mov    QWORD PTR [rip+0x104b4c],0x0        # 0x7ffff7fb6220
   0x7ffff7eb16d4 <endfsent+36>:	add    rsp,0x8
   0x7ffff7eb16d8 <endfsent+40>:	ret
   0x7ffff7eb16d9 <endfsent+41>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb16e0 <endfsent+48>:	ret
   0x7ffff7eb16e1:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb16eb:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb16f0:	endbr64
   0x7ffff7eb16f4:	mov    rdi,rsi
   0x7ffff7eb16f7:	jmp    0x7ffff7dbd370 <free@plt>
   0x7ffff7eb16fc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb1700:	endbr64
   0x7ffff7eb1704:	mov    edi,0x1028
   0x7ffff7eb1709:	jmp    0x7ffff7dbd380 <malloc@plt>
   0x7ffff7eb170e:	xchg   ax,ax
   0x7ffff7eb1710 <getmntent>:	endbr64
   0x7ffff7eb1714 <getmntent+4>:	push   rbp
   0x7ffff7eb1715 <getmntent+5>:	mov    rsi,QWORD PTR [rip+0xfe1ec]        # 0x7ffff7faf908
   0x7ffff7eb171c <getmntent+12>:	mov    rbp,rdi
   0x7ffff7eb171f <getmntent+15>:	test   rsi,rsi
   0x7ffff7eb1722 <getmntent+18>:	je     0x7ffff7eb1740 <getmntent+48>
   0x7ffff7eb1724 <getmntent+20>:	mov    rdi,rbp
   0x7ffff7eb1727 <getmntent+23>:	lea    rdx,[rsi+0x28]
   0x7ffff7eb172b <getmntent+27>:	mov    ecx,0x1000
   0x7ffff7eb1730 <getmntent+32>:	pop    rbp
   0x7ffff7eb1731 <getmntent+33>:	jmp    0x7ffff7eb1d10 <getmntent_r>
   0x7ffff7eb1736 <getmntent+38>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1740 <getmntent+48>:	lea    rsi,[rip+0xffffffffffffffb9]        # 0x7ffff7eb1700
   0x7ffff7eb1747 <getmntent+55>:	xor    ecx,ecx
   0x7ffff7eb1749 <getmntent+57>:	lea    rdx,[rip+0xffffffffffffffa0]        # 0x7ffff7eb16f0
   0x7ffff7eb1750 <getmntent+64>:	lea    rdi,[rip+0xfe1b1]        # 0x7ffff7faf908
   0x7ffff7eb1757 <getmntent+71>:	call   0x7ffff7eba690 <__libc_allocate_once_slow>
   0x7ffff7eb175c <getmntent+76>:	mov    rsi,rax
   0x7ffff7eb175f <getmntent+79>:	test   rax,rax
   0x7ffff7eb1762 <getmntent+82>:	jne    0x7ffff7eb1724 <getmntent+20>
   0x7ffff7eb1764 <getmntent+84>:	xor    eax,eax
   0x7ffff7eb1766 <getmntent+86>:	pop    rbp
   0x7ffff7eb1767 <getmntent+87>:	ret
   0x7ffff7eb1768:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1770:	mov    rax,rdi
   0x7ffff7eb1773:	mov    rcx,rdi
   0x7ffff7eb1776:	mov    rdx,rdi
   0x7ffff7eb1779:	jmp    0x7ffff7eb1790
   0x7ffff7eb177b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1780:	mov    BYTE PTR [rcx-0x1],sil
   0x7ffff7eb1784:	cmp    BYTE PTR [rdx],0x0
   0x7ffff7eb1787:	lea    rsi,[rdx+0x1]
   0x7ffff7eb178b:	je     0x7ffff7eb17bf
   0x7ffff7eb178d:	mov    rdx,rsi
   0x7ffff7eb1790:	movzx  esi,BYTE PTR [rdx]
   0x7ffff7eb1793:	add    rcx,0x1
   0x7ffff7eb1797:	cmp    sil,0x5c
   0x7ffff7eb179b:	jne    0x7ffff7eb1780
   0x7ffff7eb179d:	movzx  r8d,BYTE PTR [rdx+0x1]
   0x7ffff7eb17a2:	cmp    r8b,0x30
   0x7ffff7eb17a6:	je     0x7ffff7eb17c0
   0x7ffff7eb17a8:	cmp    r8b,0x5c
   0x7ffff7eb17ac:	jne    0x7ffff7eb17f0
   0x7ffff7eb17ae:	add    rdx,0x1
   0x7ffff7eb17b2:	mov    BYTE PTR [rcx-0x1],sil
   0x7ffff7eb17b6:	cmp    BYTE PTR [rdx],0x0
   0x7ffff7eb17b9:	lea    rsi,[rdx+0x1]
   0x7ffff7eb17bd:	jne    0x7ffff7eb178d
   0x7ffff7eb17bf:	ret
   0x7ffff7eb17c0:	movzx  edi,BYTE PTR [rdx+0x2]
   0x7ffff7eb17c4:	cmp    dil,0x34
   0x7ffff7eb17c8:	je     0x7ffff7eb1810
   0x7ffff7eb17ca:	cmp    dil,0x31
   0x7ffff7eb17ce:	jne    0x7ffff7eb1780
   0x7ffff7eb17d0:	cmp    BYTE PTR [rdx+0x3],0x31
   0x7ffff7eb17d4:	je     0x7ffff7eb1830
   0x7ffff7eb17d6:	cmp    BYTE PTR [rdx+0x3],0x32
   0x7ffff7eb17da:	jne    0x7ffff7eb1780
   0x7ffff7eb17dc:	add    rdx,0x3
   0x7ffff7eb17e0:	mov    esi,0xa
   0x7ffff7eb17e5:	jmp    0x7ffff7eb1780
   0x7ffff7eb17e7:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb17f0:	cmp    r8b,0x31
   0x7ffff7eb17f4:	jne    0x7ffff7eb1780
   0x7ffff7eb17f6:	cmp    BYTE PTR [rdx+0x2],0x33
   0x7ffff7eb17fa:	jne    0x7ffff7eb1780
   0x7ffff7eb17fc:	cmp    BYTE PTR [rdx+0x3],0x34
   0x7ffff7eb1800:	jne    0x7ffff7eb1780
   0x7ffff7eb1806:	add    rdx,0x3
   0x7ffff7eb180a:	jmp    0x7ffff7eb1780
   0x7ffff7eb180f:	nop
   0x7ffff7eb1810:	cmp    BYTE PTR [rdx+0x3],0x30
   0x7ffff7eb1814:	jne    0x7ffff7eb1780
   0x7ffff7eb181a:	add    rdx,0x3
   0x7ffff7eb181e:	mov    esi,0x20
   0x7ffff7eb1823:	jmp    0x7ffff7eb1780
   0x7ffff7eb1828:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1830:	add    rdx,0x3
   0x7ffff7eb1834:	mov    esi,0x9
   0x7ffff7eb1839:	jmp    0x7ffff7eb1780
   0x7ffff7eb183e:	xchg   ax,ax
   0x7ffff7eb1840:	push   r15
   0x7ffff7eb1842:	push   r14
   0x7ffff7eb1844:	mov    r14,rsi
   0x7ffff7eb1847:	push   r13
   0x7ffff7eb1849:	mov    r13d,ecx
   0x7ffff7eb184c:	push   r12
   0x7ffff7eb184e:	lea    r12,[rip+0xbd7ff]        # 0x7ffff7f6f054
   0x7ffff7eb1855:	push   rbp
   0x7ffff7eb1856:	mov    rbp,rdi
   0x7ffff7eb1859:	push   rbx
   0x7ffff7eb185a:	mov    rbx,rdx
   0x7ffff7eb185d:	sub    rsp,0x428
   0x7ffff7eb1864:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb186d:	mov    QWORD PTR [rsp+0x418],rax
   0x7ffff7eb1875:	xor    eax,eax
   0x7ffff7eb1877:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1880:	mov    rdx,rbp
   0x7ffff7eb1883:	mov    esi,r13d
   0x7ffff7eb1886:	mov    rdi,rbx
   0x7ffff7eb1889:	call   0x7ffff7e1f370 <fgets_unlocked>
   0x7ffff7eb188e:	test   rax,rax
   0x7ffff7eb1891:	je     0x7ffff7eb1a40
   0x7ffff7eb1897:	mov    esi,0xa
   0x7ffff7eb189c:	mov    rdi,rbx
   0x7ffff7eb189f:	lea    r15,[rsp+0x10]
   0x7ffff7eb18a4:	call   0x7ffff7dbd600 <*ABS*+0xa82e0@plt>
   0x7ffff7eb18a9:	test   rax,rax
   0x7ffff7eb18ac:	jne    0x7ffff7eb18ca
   0x7ffff7eb18ae:	jmp    0x7ffff7eb1a26
   0x7ffff7eb18b3:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb18b8:	movzx  edx,BYTE PTR [rax-0x1]
   0x7ffff7eb18bc:	cmp    dl,0x20
   0x7ffff7eb18bf:	je     0x7ffff7eb18c6
   0x7ffff7eb18c1:	cmp    dl,0x9
   0x7ffff7eb18c4:	jne    0x7ffff7eb18cf
   0x7ffff7eb18c6:	sub    rax,0x1
   0x7ffff7eb18ca:	cmp    rbx,rax
   0x7ffff7eb18cd:	jne    0x7ffff7eb18b8
   0x7ffff7eb18cf:	mov    BYTE PTR [rax],0x0
   0x7ffff7eb18d2:	mov    rsi,r12
   0x7ffff7eb18d5:	mov    rdi,rbx
   0x7ffff7eb18d8:	call   0x7ffff7dbd410 <*ABS*+0xa8b80@plt>
   0x7ffff7eb18dd:	add    rax,rbx
   0x7ffff7eb18e0:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7eb18e5:	movzx  eax,BYTE PTR [rax]
   0x7ffff7eb18e8:	test   al,al
   0x7ffff7eb18ea:	je     0x7ffff7eb1880
   0x7ffff7eb18ec:	cmp    al,0x23
   0x7ffff7eb18ee:	je     0x7ffff7eb1880
   0x7ffff7eb18f0:	lea    rbp,[rsp+0x8]
   0x7ffff7eb18f5:	mov    rsi,r12
   0x7ffff7eb18f8:	mov    rdi,rbp
   0x7ffff7eb18fb:	call   0x7ffff7e3edc0 <strsep>
   0x7ffff7eb1900:	mov    rdi,rax
   0x7ffff7eb1903:	lea    rax,[rip+0xbbb65]        # 0x7ffff7f6d46f
   0x7ffff7eb190a:	test   rdi,rdi
   0x7ffff7eb190d:	je     0x7ffff7eb1914
   0x7ffff7eb190f:	call   0x7ffff7eb1770
   0x7ffff7eb1914:	mov    rbx,QWORD PTR [rsp+0x8]
   0x7ffff7eb1919:	mov    QWORD PTR [r14],rax
   0x7ffff7eb191c:	test   rbx,rbx
   0x7ffff7eb191f:	je     0x7ffff7eb1934
   0x7ffff7eb1921:	mov    rdi,rbx
   0x7ffff7eb1924:	mov    rsi,r12
   0x7ffff7eb1927:	call   0x7ffff7dbd410 <*ABS*+0xa8b80@plt>
   0x7ffff7eb192c:	add    rbx,rax
   0x7ffff7eb192f:	mov    QWORD PTR [rsp+0x8],rbx
   0x7ffff7eb1934:	mov    rdi,rbp
   0x7ffff7eb1937:	mov    rsi,r12
   0x7ffff7eb193a:	call   0x7ffff7e3edc0 <strsep>
   0x7ffff7eb193f:	mov    rdi,rax
   0x7ffff7eb1942:	lea    rax,[rip+0xbbb26]        # 0x7ffff7f6d46f
   0x7ffff7eb1949:	test   rdi,rdi
   0x7ffff7eb194c:	je     0x7ffff7eb1953
   0x7ffff7eb194e:	call   0x7ffff7eb1770
   0x7ffff7eb1953:	mov    rbx,QWORD PTR [rsp+0x8]
   0x7ffff7eb1958:	mov    QWORD PTR [r14+0x8],rax
   0x7ffff7eb195c:	test   rbx,rbx
   0x7ffff7eb195f:	je     0x7ffff7eb1974
   0x7ffff7eb1961:	mov    rdi,rbx
   0x7ffff7eb1964:	mov    rsi,r12
   0x7ffff7eb1967:	call   0x7ffff7dbd410 <*ABS*+0xa8b80@plt>
   0x7ffff7eb196c:	add    rbx,rax
   0x7ffff7eb196f:	mov    QWORD PTR [rsp+0x8],rbx
   0x7ffff7eb1974:	mov    rdi,rbp
   0x7ffff7eb1977:	mov    rsi,r12
   0x7ffff7eb197a:	call   0x7ffff7e3edc0 <strsep>
   0x7ffff7eb197f:	mov    rdi,rax
   0x7ffff7eb1982:	lea    rax,[rip+0xbbae6]        # 0x7ffff7f6d46f
   0x7ffff7eb1989:	test   rdi,rdi
   0x7ffff7eb198c:	je     0x7ffff7eb1993
   0x7ffff7eb198e:	call   0x7ffff7eb1770
   0x7ffff7eb1993:	mov    rbx,QWORD PTR [rsp+0x8]
   0x7ffff7eb1998:	mov    QWORD PTR [r14+0x10],rax
   0x7ffff7eb199c:	test   rbx,rbx
   0x7ffff7eb199f:	je     0x7ffff7eb19b4
   0x7ffff7eb19a1:	mov    rdi,rbx
   0x7ffff7eb19a4:	mov    rsi,r12
   0x7ffff7eb19a7:	call   0x7ffff7dbd410 <*ABS*+0xa8b80@plt>
   0x7ffff7eb19ac:	add    rbx,rax
   0x7ffff7eb19af:	mov    QWORD PTR [rsp+0x8],rbx
   0x7ffff7eb19b4:	mov    rdi,rbp
   0x7ffff7eb19b7:	mov    rsi,r12
   0x7ffff7eb19ba:	call   0x7ffff7e3edc0 <strsep>
   0x7ffff7eb19bf:	mov    rdi,rax
   0x7ffff7eb19c2:	lea    rax,[rip+0xbbaa6]        # 0x7ffff7f6d46f
   0x7ffff7eb19c9:	test   rdi,rdi
   0x7ffff7eb19cc:	je     0x7ffff7eb19d3
   0x7ffff7eb19ce:	call   0x7ffff7eb1770
   0x7ffff7eb19d3:	mov    rdi,QWORD PTR [rsp+0x8]
   0x7ffff7eb19d8:	mov    QWORD PTR [r14+0x18],rax
   0x7ffff7eb19dc:	test   rdi,rdi
   0x7ffff7eb19df:	je     0x7ffff7eb1a67
   0x7ffff7eb19e5:	xor    eax,eax
   0x7ffff7eb19e7:	lea    rcx,[r14+0x24]
   0x7ffff7eb19eb:	lea    rdx,[r14+0x20]
   0x7ffff7eb19ef:	lea    rsi,[rip+0xbd70c]        # 0x7ffff7f6f102
   0x7ffff7eb19f6:	call   0x7ffff7df72d0 <__isoc99_sscanf>
   0x7ffff7eb19fb:	test   eax,eax
   0x7ffff7eb19fd:	je     0x7ffff7eb1a67
   0x7ffff7eb19ff:	cmp    eax,0x1
   0x7ffff7eb1a02:	je     0x7ffff7eb1a6f
   0x7ffff7eb1a04:	mov    eax,0x1
   0x7ffff7eb1a09:	jmp    0x7ffff7eb1a42
   0x7ffff7eb1a0b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1a10:	mov    esi,0xa
   0x7ffff7eb1a15:	mov    rdi,r15
   0x7ffff7eb1a18:	call   0x7ffff7dbd600 <*ABS*+0xa82e0@plt>
   0x7ffff7eb1a1d:	test   rax,rax
   0x7ffff7eb1a20:	jne    0x7ffff7eb18d2
   0x7ffff7eb1a26:	mov    rdx,rbp
   0x7ffff7eb1a29:	mov    esi,0x400
   0x7ffff7eb1a2e:	mov    rdi,r15
   0x7ffff7eb1a31:	call   0x7ffff7e1f370 <fgets_unlocked>
   0x7ffff7eb1a36:	test   rax,rax
   0x7ffff7eb1a39:	jne    0x7ffff7eb1a10
   0x7ffff7eb1a3b:	jmp    0x7ffff7eb18d2
   0x7ffff7eb1a40:	xor    eax,eax
   0x7ffff7eb1a42:	mov    rdx,QWORD PTR [rsp+0x418]
   0x7ffff7eb1a4a:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb1a53:	jne    0x7ffff7eb1a7e
   0x7ffff7eb1a55:	add    rsp,0x428
   0x7ffff7eb1a5c:	pop    rbx
   0x7ffff7eb1a5d:	pop    rbp
   0x7ffff7eb1a5e:	pop    r12
   0x7ffff7eb1a60:	pop    r13
   0x7ffff7eb1a62:	pop    r14
   0x7ffff7eb1a64:	pop    r15
   0x7ffff7eb1a66:	ret
   0x7ffff7eb1a67:	mov    DWORD PTR [r14+0x20],0x0
   0x7ffff7eb1a6f:	mov    DWORD PTR [r14+0x24],0x0
   0x7ffff7eb1a77:	mov    eax,0x1
   0x7ffff7eb1a7c:	jmp    0x7ffff7eb1a42
   0x7ffff7eb1a7e:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb1a83:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1a8e:	xchg   ax,ax
   0x7ffff7eb1a90:	push   r14
   0x7ffff7eb1a92:	push   r13
   0x7ffff7eb1a94:	push   r12
   0x7ffff7eb1a96:	push   rbp
   0x7ffff7eb1a97:	mov    rbp,rdi
   0x7ffff7eb1a9a:	push   rbx
   0x7ffff7eb1a9b:	movzx  r13d,BYTE PTR [rsi]
   0x7ffff7eb1a9f:	test   r13b,r13b
   0x7ffff7eb1aa2:	je     0x7ffff7eb1b80
   0x7ffff7eb1aa8:	lea    r14,[rsi+0x1]
   0x7ffff7eb1aac:	lea    r12,[rip+0xbd657]        # 0x7ffff7f6f10a
   0x7ffff7eb1ab3:	jmp    0x7ffff7eb1b45
   0x7ffff7eb1ab8:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1ac0:	cmp    rax,QWORD PTR [rbp+0x30]
   0x7ffff7eb1ac4:	jae    0x7ffff7eb1bd8
   0x7ffff7eb1aca:	lea    rdx,[rax+0x1]
   0x7ffff7eb1ace:	mov    QWORD PTR [rbp+0x28],rdx
   0x7ffff7eb1ad2:	mov    BYTE PTR [rax],0x5c
   0x7ffff7eb1ad5:	mov    esi,ebx
   0x7ffff7eb1ad7:	mov    rax,QWORD PTR [rbp+0x28]
   0x7ffff7eb1adb:	sar    esi,0x6
   0x7ffff7eb1ade:	and    esi,0x3
   0x7ffff7eb1ae1:	add    esi,0x30
   0x7ffff7eb1ae4:	cmp    rax,QWORD PTR [rbp+0x30]
   0x7ffff7eb1ae8:	jae    0x7ffff7eb1bc8
   0x7ffff7eb1aee:	lea    rdx,[rax+0x1]
   0x7ffff7eb1af2:	mov    QWORD PTR [rbp+0x28],rdx
   0x7ffff7eb1af6:	mov    BYTE PTR [rax],sil
   0x7ffff7eb1af9:	sar    ebx,0x3
   0x7ffff7eb1afc:	mov    rax,QWORD PTR [rbp+0x28]
   0x7ffff7eb1b00:	and    ebx,0x7
   0x7ffff7eb1b03:	lea    esi,[rbx+0x30]
   0x7ffff7eb1b06:	cmp    rax,QWORD PTR [rbp+0x30]
   0x7ffff7eb1b0a:	jae    0x7ffff7eb1bb8
   0x7ffff7eb1b10:	lea    rdx,[rax+0x1]
   0x7ffff7eb1b14:	mov    QWORD PTR [rbp+0x28],rdx
   0x7ffff7eb1b18:	mov    BYTE PTR [rax],sil
   0x7ffff7eb1b1b:	and    r13d,0x7
   0x7ffff7eb1b1f:	mov    rax,QWORD PTR [rbp+0x28]
   0x7ffff7eb1b23:	add    r13d,0x30
   0x7ffff7eb1b27:	cmp    rax,QWORD PTR [rbp+0x30]
   0x7ffff7eb1b2b:	jae    0x7ffff7eb1ba0
   0x7ffff7eb1b2d:	lea    rdx,[rax+0x1]
   0x7ffff7eb1b31:	mov    QWORD PTR [rbp+0x28],rdx
   0x7ffff7eb1b35:	mov    BYTE PTR [rax],r13b
   0x7ffff7eb1b38:	movzx  r13d,BYTE PTR [r14]
   0x7ffff7eb1b3c:	add    r14,0x1
   0x7ffff7eb1b40:	test   r13b,r13b
   0x7ffff7eb1b43:	je     0x7ffff7eb1b80
   0x7ffff7eb1b45:	movsx  ebx,r13b
   0x7ffff7eb1b49:	mov    rdi,r12
   0x7ffff7eb1b4c:	mov    esi,ebx
   0x7ffff7eb1b4e:	call   0x7ffff7dbd600 <*ABS*+0xa82e0@plt>
   0x7ffff7eb1b53:	test   rax,rax
   0x7ffff7eb1b56:	mov    rax,QWORD PTR [rbp+0x28]
   0x7ffff7eb1b5a:	jne    0x7ffff7eb1ac0
   0x7ffff7eb1b60:	cmp    rax,QWORD PTR [rbp+0x30]
   0x7ffff7eb1b64:	jb     0x7ffff7eb1b2d
   0x7ffff7eb1b66:	movzx  esi,bl
   0x7ffff7eb1b69:	mov    rdi,rbp
   0x7ffff7eb1b6c:	add    r14,0x1
   0x7ffff7eb1b70:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7eb1b75:	movzx  r13d,BYTE PTR [r14-0x1]
   0x7ffff7eb1b7a:	test   r13b,r13b
   0x7ffff7eb1b7d:	jne    0x7ffff7eb1b45
   0x7ffff7eb1b7f:	nop
   0x7ffff7eb1b80:	mov    rax,QWORD PTR [rbp+0x28]
   0x7ffff7eb1b84:	cmp    rax,QWORD PTR [rbp+0x30]
   0x7ffff7eb1b88:	jae    0x7ffff7eb1bf0
   0x7ffff7eb1b8a:	lea    rdx,[rax+0x1]
   0x7ffff7eb1b8e:	mov    QWORD PTR [rbp+0x28],rdx
   0x7ffff7eb1b92:	mov    BYTE PTR [rax],0x20
   0x7ffff7eb1b95:	pop    rbx
   0x7ffff7eb1b96:	pop    rbp
   0x7ffff7eb1b97:	pop    r12
   0x7ffff7eb1b99:	pop    r13
   0x7ffff7eb1b9b:	pop    r14
   0x7ffff7eb1b9d:	ret
   0x7ffff7eb1b9e:	xchg   ax,ax
   0x7ffff7eb1ba0:	movsx  esi,r13b
   0x7ffff7eb1ba4:	mov    rdi,rbp
   0x7ffff7eb1ba7:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7eb1bac:	jmp    0x7ffff7eb1b38
   0x7ffff7eb1bb1:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb1bb8:	mov    rdi,rbp
   0x7ffff7eb1bbb:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7eb1bc0:	jmp    0x7ffff7eb1b1b
   0x7ffff7eb1bc5:	nop    DWORD PTR [rax]
   0x7ffff7eb1bc8:	mov    rdi,rbp
   0x7ffff7eb1bcb:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7eb1bd0:	jmp    0x7ffff7eb1af9
   0x7ffff7eb1bd5:	nop    DWORD PTR [rax]
   0x7ffff7eb1bd8:	mov    esi,0x5c
   0x7ffff7eb1bdd:	mov    rdi,rbp
   0x7ffff7eb1be0:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7eb1be5:	jmp    0x7ffff7eb1ad5
   0x7ffff7eb1bea:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1bf0:	pop    rbx
   0x7ffff7eb1bf1:	mov    rdi,rbp
   0x7ffff7eb1bf4:	mov    esi,0x20
   0x7ffff7eb1bf9:	pop    rbp
   0x7ffff7eb1bfa:	pop    r12
   0x7ffff7eb1bfc:	pop    r13
   0x7ffff7eb1bfe:	pop    r14
   0x7ffff7eb1c00:	jmp    0x7ffff7e22880 <__overflow>
   0x7ffff7eb1c05:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1c10 <setmntent>:	endbr64
   0x7ffff7eb1c14 <setmntent+4>:	push   rbp
   0x7ffff7eb1c15 <setmntent+5>:	mov    rbp,rsp
   0x7ffff7eb1c18 <setmntent+8>:	push   r13
   0x7ffff7eb1c1a <setmntent+10>:	mov    r13,rdi
   0x7ffff7eb1c1d <setmntent+13>:	mov    rdi,rsi
   0x7ffff7eb1c20 <setmntent+16>:	push   r12
   0x7ffff7eb1c22 <setmntent+18>:	mov    r12,rsi
   0x7ffff7eb1c25 <setmntent+21>:	sub    rsp,0x10
   0x7ffff7eb1c29 <setmntent+25>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb1c32 <setmntent+34>:	mov    QWORD PTR [rbp-0x18],rax
   0x7ffff7eb1c36 <setmntent+38>:	xor    eax,eax
   0x7ffff7eb1c38 <setmntent+40>:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7eb1c3d <setmntent+45>:	mov    rsi,rsp
   0x7ffff7eb1c40 <setmntent+48>:	lea    rcx,[rax+0x12]
   0x7ffff7eb1c44 <setmntent+52>:	mov    rdx,rax
   0x7ffff7eb1c47 <setmntent+55>:	mov    rax,rcx
   0x7ffff7eb1c4a <setmntent+58>:	and    rcx,0xfffffffffffff000
   0x7ffff7eb1c51 <setmntent+65>:	sub    rsi,rcx
   0x7ffff7eb1c54 <setmntent+68>:	and    rax,0xfffffffffffffff0
   0x7ffff7eb1c58 <setmntent+72>:	cmp    rsp,rsi
   0x7ffff7eb1c5b <setmntent+75>:	je     0x7ffff7eb1c72 <setmntent+98>
   0x7ffff7eb1c5d <setmntent+77>:	sub    rsp,0x1000
   0x7ffff7eb1c64 <setmntent+84>:	or     QWORD PTR [rsp+0xff8],0x0
   0x7ffff7eb1c6d <setmntent+93>:	cmp    rsp,rsi
   0x7ffff7eb1c70 <setmntent+96>:	jne    0x7ffff7eb1c5d <setmntent+77>
   0x7ffff7eb1c72 <setmntent+98>:	and    eax,0xfff
   0x7ffff7eb1c77 <setmntent+103>:	sub    rsp,rax
   0x7ffff7eb1c7a <setmntent+106>:	test   rax,rax
   0x7ffff7eb1c7d <setmntent+109>:	jne    0x7ffff7eb1cc8 <setmntent+184>
   0x7ffff7eb1c7f <setmntent+111>:	mov    rsi,r12
   0x7ffff7eb1c82 <setmntent+114>:	mov    rdi,rsp
   0x7ffff7eb1c85 <setmntent+117>:	call   0x7ffff7dbd3e0 <*ABS*+0xa9850@plt>
   0x7ffff7eb1c8a <setmntent+122>:	mov    edx,0x6563
   0x7ffff7eb1c8f <setmntent+127>:	mov    rsi,rsp
   0x7ffff7eb1c92 <setmntent+130>:	mov    rdi,r13
   0x7ffff7eb1c95 <setmntent+133>:	mov    WORD PTR [rax],dx
   0x7ffff7eb1c98 <setmntent+136>:	mov    BYTE PTR [rax+0x2],0x0
   0x7ffff7eb1c9c <setmntent+140>:	call   0x7ffff7e146b0 <fopen64>
   0x7ffff7eb1ca1 <setmntent+145>:	test   rax,rax
   0x7ffff7eb1ca4 <setmntent+148>:	je     0x7ffff7eb1cac <setmntent+156>
   0x7ffff7eb1ca6 <setmntent+150>:	or     DWORD PTR [rax],0x8000
   0x7ffff7eb1cac <setmntent+156>:	mov    rdx,QWORD PTR [rbp-0x18]
   0x7ffff7eb1cb0 <setmntent+160>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb1cb9 <setmntent+169>:	jne    0x7ffff7eb1cd0 <setmntent+192>
   0x7ffff7eb1cbb <setmntent+171>:	lea    rsp,[rbp-0x10]
   0x7ffff7eb1cbf <setmntent+175>:	pop    r12
   0x7ffff7eb1cc1 <setmntent+177>:	pop    r13
   0x7ffff7eb1cc3 <setmntent+179>:	pop    rbp
   0x7ffff7eb1cc4 <setmntent+180>:	ret
   0x7ffff7eb1cc5 <setmntent+181>:	nop    DWORD PTR [rax]
   0x7ffff7eb1cc8 <setmntent+184>:	or     QWORD PTR [rsp+rax*1-0x8],0x0
   0x7ffff7eb1cce <setmntent+190>:	jmp    0x7ffff7eb1c7f <setmntent+111>
   0x7ffff7eb1cd0 <setmntent+192>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb1cd5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1ce0 <endmntent>:	endbr64
   0x7ffff7eb1ce4 <endmntent+4>:	test   rdi,rdi
   0x7ffff7eb1ce7 <endmntent+7>:	je     0x7ffff7eb1d00 <endmntent+32>
   0x7ffff7eb1ce9 <endmntent+9>:	sub    rsp,0x8
   0x7ffff7eb1ced <endmntent+13>:	call   0x7ffff7e13cf0 <fclose>
   0x7ffff7eb1cf2 <endmntent+18>:	mov    eax,0x1
   0x7ffff7eb1cf7 <endmntent+23>:	add    rsp,0x8
   0x7ffff7eb1cfb <endmntent+27>:	ret
   0x7ffff7eb1cfc <endmntent+28>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb1d00 <endmntent+32>:	mov    eax,0x1
   0x7ffff7eb1d05 <endmntent+37>:	ret
   0x7ffff7eb1d06:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1d10 <getmntent_r>:	endbr64
   0x7ffff7eb1d14 <getmntent_r+4>:	push   r15
   0x7ffff7eb1d16 <getmntent_r+6>:	mov    r15,rdi
   0x7ffff7eb1d19 <getmntent_r+9>:	push   r14
   0x7ffff7eb1d1b <getmntent_r+11>:	mov    r14,rdx
   0x7ffff7eb1d1e <getmntent_r+14>:	push   r13
   0x7ffff7eb1d20 <getmntent_r+16>:	push   r12
   0x7ffff7eb1d22 <getmntent_r+18>:	mov    r12,rsi
   0x7ffff7eb1d25 <getmntent_r+21>:	push   rbp
   0x7ffff7eb1d26 <getmntent_r+22>:	movabs rbp,0xdfffeffffffffffe
   0x7ffff7eb1d30 <getmntent_r+32>:	push   rbx
   0x7ffff7eb1d31 <getmntent_r+33>:	lea    rbx,[rip+0xbd3de]        # 0x7ffff7f6f116
   0x7ffff7eb1d38 <getmntent_r+40>:	sub    rsp,0x18
   0x7ffff7eb1d3c <getmntent_r+44>:	mov    DWORD PTR [rsp+0xc],ecx
   0x7ffff7eb1d40 <getmntent_r+48>:	mov    ecx,DWORD PTR [rsp+0xc]
   0x7ffff7eb1d44 <getmntent_r+52>:	mov    rdx,r14
   0x7ffff7eb1d47 <getmntent_r+55>:	mov    rsi,r12
   0x7ffff7eb1d4a <getmntent_r+58>:	mov    rdi,r15
   0x7ffff7eb1d4d <getmntent_r+61>:	call   0x7ffff7eb1840
   0x7ffff7eb1d52 <getmntent_r+66>:	test   al,al
   0x7ffff7eb1d54 <getmntent_r+68>:	je     0x7ffff7eb1dd4 <getmntent_r+196>
   0x7ffff7eb1d56 <getmntent_r+70>:	mov    rdi,QWORD PTR [r12+0x10]
   0x7ffff7eb1d5b <getmntent_r+75>:	lea    rsi,[rip+0xbd3ad]        # 0x7ffff7f6f10f
   0x7ffff7eb1d62 <getmntent_r+82>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb1d67 <getmntent_r+87>:	test   eax,eax
   0x7ffff7eb1d69 <getmntent_r+89>:	jne    0x7ffff7eb1dd7 <getmntent_r+199>
   0x7ffff7eb1d6b <getmntent_r+91>:	mov    r13,QWORD PTR [r12+0x18]
   0x7ffff7eb1d70 <getmntent_r+96>:	jmp    0x7ffff7eb1d91 <getmntent_r+129>
   0x7ffff7eb1d72 <getmntent_r+98>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1d78 <getmntent_r+104>:	cmp    BYTE PTR [rdi-0x1],0x2c
   0x7ffff7eb1d7c <getmntent_r+108>:	je     0x7ffff7eb1da9 <getmntent_r+153>
   0x7ffff7eb1d7e <getmntent_r+110>:	mov    esi,0x2c
   0x7ffff7eb1d83 <getmntent_r+115>:	call   0x7ffff7dbd600 <*ABS*+0xa82e0@plt>
   0x7ffff7eb1d88 <getmntent_r+120>:	test   rax,rax
   0x7ffff7eb1d8b <getmntent_r+123>:	je     0x7ffff7eb1dd7 <getmntent_r+199>
   0x7ffff7eb1d8d <getmntent_r+125>:	lea    r13,[rax+0x1]
   0x7ffff7eb1d91 <getmntent_r+129>:	mov    rdi,r13
   0x7ffff7eb1d94 <getmntent_r+132>:	mov    rsi,rbx
   0x7ffff7eb1d97 <getmntent_r+135>:	call   0x7ffff7e3e040
   0x7ffff7eb1d9c <getmntent_r+140>:	mov    rdi,rax
   0x7ffff7eb1d9f <getmntent_r+143>:	test   rax,rax
   0x7ffff7eb1da2 <getmntent_r+146>:	je     0x7ffff7eb1dd7 <getmntent_r+199>
   0x7ffff7eb1da4 <getmntent_r+148>:	cmp    r13,rdi
   0x7ffff7eb1da7 <getmntent_r+151>:	jne    0x7ffff7eb1d78 <getmntent_r+104>
   0x7ffff7eb1da9 <getmntent_r+153>:	movzx  eax,BYTE PTR [rdi+0x6]
   0x7ffff7eb1dad <getmntent_r+157>:	cmp    al,0x3d
   0x7ffff7eb1daf <getmntent_r+159>:	ja     0x7ffff7eb1d7e <getmntent_r+110>
   0x7ffff7eb1db1 <getmntent_r+161>:	bt     rbp,rax
   0x7ffff7eb1db5 <getmntent_r+165>:	jb     0x7ffff7eb1d7e <getmntent_r+110>
   0x7ffff7eb1db7 <getmntent_r+167>:	mov    QWORD PTR [r12+0x20],0x0
   0x7ffff7eb1dc0 <getmntent_r+176>:	pxor   xmm0,xmm0
   0x7ffff7eb1dc4 <getmntent_r+180>:	movups XMMWORD PTR [r12],xmm0
   0x7ffff7eb1dc9 <getmntent_r+185>:	movups XMMWORD PTR [r12+0x10],xmm0
   0x7ffff7eb1dcf <getmntent_r+191>:	jmp    0x7ffff7eb1d40 <getmntent_r+48>
   0x7ffff7eb1dd4 <getmntent_r+196>:	xor    r12d,r12d
   0x7ffff7eb1dd7 <getmntent_r+199>:	add    rsp,0x18
   0x7ffff7eb1ddb <getmntent_r+203>:	mov    rax,r12
   0x7ffff7eb1dde <getmntent_r+206>:	pop    rbx
   0x7ffff7eb1ddf <getmntent_r+207>:	pop    rbp
   0x7ffff7eb1de0 <getmntent_r+208>:	pop    r12
   0x7ffff7eb1de2 <getmntent_r+210>:	pop    r13
   0x7ffff7eb1de4 <getmntent_r+212>:	pop    r14
   0x7ffff7eb1de6 <getmntent_r+214>:	pop    r15
   0x7ffff7eb1de8 <getmntent_r+216>:	ret
   0x7ffff7eb1de9:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb1df0 <addmntent>:	endbr64
   0x7ffff7eb1df4 <addmntent+4>:	push   rbp
   0x7ffff7eb1df5 <addmntent+5>:	mov    edx,0x2
   0x7ffff7eb1dfa <addmntent+10>:	mov    rbp,rdi
   0x7ffff7eb1dfd <addmntent+13>:	push   rbx
   0x7ffff7eb1dfe <addmntent+14>:	mov    rbx,rsi
   0x7ffff7eb1e01 <addmntent+17>:	xor    esi,esi
   0x7ffff7eb1e03 <addmntent+19>:	sub    rsp,0x8
   0x7ffff7eb1e07 <addmntent+23>:	call   0x7ffff7e1c960 <fseek>
   0x7ffff7eb1e0c <addmntent+28>:	test   eax,eax
   0x7ffff7eb1e0e <addmntent+30>:	je     0x7ffff7eb1e20 <addmntent+48>
   0x7ffff7eb1e10 <addmntent+32>:	add    rsp,0x8
   0x7ffff7eb1e14 <addmntent+36>:	mov    eax,0x1
   0x7ffff7eb1e19 <addmntent+41>:	pop    rbx
   0x7ffff7eb1e1a <addmntent+42>:	pop    rbp
   0x7ffff7eb1e1b <addmntent+43>:	ret
   0x7ffff7eb1e1c <addmntent+44>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb1e20 <addmntent+48>:	mov    rsi,QWORD PTR [rbx]
   0x7ffff7eb1e23 <addmntent+51>:	mov    rdi,rbp
   0x7ffff7eb1e26 <addmntent+54>:	call   0x7ffff7eb1a90
   0x7ffff7eb1e2b <addmntent+59>:	mov    rsi,QWORD PTR [rbx+0x8]
   0x7ffff7eb1e2f <addmntent+63>:	mov    rdi,rbp
   0x7ffff7eb1e32 <addmntent+66>:	call   0x7ffff7eb1a90
   0x7ffff7eb1e37 <addmntent+71>:	mov    rsi,QWORD PTR [rbx+0x10]
   0x7ffff7eb1e3b <addmntent+75>:	mov    rdi,rbp
   0x7ffff7eb1e3e <addmntent+78>:	call   0x7ffff7eb1a90
   0x7ffff7eb1e43 <addmntent+83>:	mov    rsi,QWORD PTR [rbx+0x18]
   0x7ffff7eb1e47 <addmntent+87>:	mov    rdi,rbp
   0x7ffff7eb1e4a <addmntent+90>:	call   0x7ffff7eb1a90
   0x7ffff7eb1e4f <addmntent+95>:	mov    ecx,DWORD PTR [rbx+0x24]
   0x7ffff7eb1e52 <addmntent+98>:	mov    edx,DWORD PTR [rbx+0x20]
   0x7ffff7eb1e55 <addmntent+101>:	xor    eax,eax
   0x7ffff7eb1e57 <addmntent+103>:	lea    rsi,[rip+0xbd2bf]        # 0x7ffff7f6f11d
   0x7ffff7eb1e5e <addmntent+110>:	mov    rdi,rbp
   0x7ffff7eb1e61 <addmntent+113>:	call   0x7ffff7df56b0 <fprintf>
   0x7ffff7eb1e66 <addmntent+118>:	test   BYTE PTR [rbp+0x0],0x20
   0x7ffff7eb1e6a <addmntent+122>:	jne    0x7ffff7eb1e10 <addmntent+32>
   0x7ffff7eb1e6c <addmntent+124>:	mov    rdi,rbp
   0x7ffff7eb1e6f <addmntent+127>:	call   0x7ffff7e141b0 <fflush>
   0x7ffff7eb1e74 <addmntent+132>:	test   eax,eax
   0x7ffff7eb1e76 <addmntent+134>:	setne  al
   0x7ffff7eb1e79 <addmntent+137>:	add    rsp,0x8
   0x7ffff7eb1e7d <addmntent+141>:	movzx  eax,al
   0x7ffff7eb1e80 <addmntent+144>:	pop    rbx
   0x7ffff7eb1e81 <addmntent+145>:	pop    rbp
   0x7ffff7eb1e82 <addmntent+146>:	ret
   0x7ffff7eb1e83:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1e8e:	xchg   ax,ax
   0x7ffff7eb1e90 <hasmntopt>:	endbr64
   0x7ffff7eb1e94 <hasmntopt+4>:	push   r13
   0x7ffff7eb1e96 <hasmntopt+6>:	push   r12
   0x7ffff7eb1e98 <hasmntopt+8>:	mov    r12,rdi
   0x7ffff7eb1e9b <hasmntopt+11>:	mov    rdi,rsi
   0x7ffff7eb1e9e <hasmntopt+14>:	push   rbp
   0x7ffff7eb1e9f <hasmntopt+15>:	push   rbx
   0x7ffff7eb1ea0 <hasmntopt+16>:	mov    rbx,rsi
   0x7ffff7eb1ea3 <hasmntopt+19>:	sub    rsp,0x8
   0x7ffff7eb1ea7 <hasmntopt+23>:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7eb1eac <hasmntopt+28>:	mov    r13,QWORD PTR [r12+0x18]
   0x7ffff7eb1eb1 <hasmntopt+33>:	movabs r12,0xdfffeffffffffffe
   0x7ffff7eb1ebb <hasmntopt+43>:	mov    rbp,rax
   0x7ffff7eb1ebe <hasmntopt+46>:	jmp    0x7ffff7eb1edc <hasmntopt+76>
   0x7ffff7eb1ec0 <hasmntopt+48>:	cmp    BYTE PTR [rdi-0x1],0x2c
   0x7ffff7eb1ec4 <hasmntopt+52>:	je     0x7ffff7eb1ef4 <hasmntopt+100>
   0x7ffff7eb1ec6 <hasmntopt+54>:	mov    esi,0x2c
   0x7ffff7eb1ecb <hasmntopt+59>:	call   0x7ffff7dbd600 <*ABS*+0xa82e0@plt>
   0x7ffff7eb1ed0 <hasmntopt+64>:	mov    rdi,rax
   0x7ffff7eb1ed3 <hasmntopt+67>:	test   rax,rax
   0x7ffff7eb1ed6 <hasmntopt+70>:	je     0x7ffff7eb1f02 <hasmntopt+114>
   0x7ffff7eb1ed8 <hasmntopt+72>:	lea    r13,[rax+0x1]
   0x7ffff7eb1edc <hasmntopt+76>:	mov    rdi,r13
   0x7ffff7eb1edf <hasmntopt+79>:	mov    rsi,rbx
   0x7ffff7eb1ee2 <hasmntopt+82>:	call   0x7ffff7e3e040
   0x7ffff7eb1ee7 <hasmntopt+87>:	mov    rdi,rax
   0x7ffff7eb1eea <hasmntopt+90>:	test   rax,rax
   0x7ffff7eb1eed <hasmntopt+93>:	je     0x7ffff7eb1f02 <hasmntopt+114>
   0x7ffff7eb1eef <hasmntopt+95>:	cmp    r13,rdi
   0x7ffff7eb1ef2 <hasmntopt+98>:	jne    0x7ffff7eb1ec0 <hasmntopt+48>
   0x7ffff7eb1ef4 <hasmntopt+100>:	movzx  eax,BYTE PTR [rdi+rbp*1]
   0x7ffff7eb1ef8 <hasmntopt+104>:	cmp    al,0x3d
   0x7ffff7eb1efa <hasmntopt+106>:	ja     0x7ffff7eb1ec6 <hasmntopt+54>
   0x7ffff7eb1efc <hasmntopt+108>:	bt     r12,rax
   0x7ffff7eb1f00 <hasmntopt+112>:	jb     0x7ffff7eb1ec6 <hasmntopt+54>
   0x7ffff7eb1f02 <hasmntopt+114>:	add    rsp,0x8
   0x7ffff7eb1f06 <hasmntopt+118>:	mov    rax,rdi
   0x7ffff7eb1f09 <hasmntopt+121>:	pop    rbx
   0x7ffff7eb1f0a <hasmntopt+122>:	pop    rbp
   0x7ffff7eb1f0b <hasmntopt+123>:	pop    r12
   0x7ffff7eb1f0d <hasmntopt+125>:	pop    r13
   0x7ffff7eb1f0f <hasmntopt+127>:	ret
   0x7ffff7eb1f10 <utimes>:	endbr64
   0x7ffff7eb1f14 <utimes+4>:	sub    rsp,0x38
   0x7ffff7eb1f18 <utimes+8>:	mov    r8,rdi
   0x7ffff7eb1f1b <utimes+11>:	mov    rdx,rsi
   0x7ffff7eb1f1e <utimes+14>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb1f27 <utimes+23>:	mov    QWORD PTR [rsp+0x28],rax
   0x7ffff7eb1f2c <utimes+28>:	xor    eax,eax
   0x7ffff7eb1f2e <utimes+30>:	test   rsi,rsi
   0x7ffff7eb1f31 <utimes+33>:	je     0x7ffff7eb1f6a <utimes+90>
   0x7ffff7eb1f33 <utimes+35>:	imul   rax,QWORD PTR [rsi+0x18],0x3e8
   0x7ffff7eb1f3b <utimes+43>:	movq   xmm0,QWORD PTR [rsi+0x10]
   0x7ffff7eb1f40 <utimes+48>:	mov    rdx,rsp
   0x7ffff7eb1f43 <utimes+51>:	movq   xmm1,QWORD PTR [rsi]
   0x7ffff7eb1f47 <utimes+55>:	movq   xmm2,rax
   0x7ffff7eb1f4c <utimes+60>:	imul   rax,QWORD PTR [rsi+0x8],0x3e8
   0x7ffff7eb1f54 <utimes+68>:	punpcklqdq xmm0,xmm2
   0x7ffff7eb1f58 <utimes+72>:	movaps XMMWORD PTR [rsp+0x10],xmm0
   0x7ffff7eb1f5d <utimes+77>:	movq   xmm3,rax
   0x7ffff7eb1f62 <utimes+82>:	punpcklqdq xmm1,xmm3
   0x7ffff7eb1f66 <utimes+86>:	movaps XMMWORD PTR [rsp],xmm1
   0x7ffff7eb1f6a <utimes+90>:	xor    ecx,ecx
   0x7ffff7eb1f6c <utimes+92>:	mov    rsi,r8
   0x7ffff7eb1f6f <utimes+95>:	mov    edi,0xffffff9c
   0x7ffff7eb1f74 <utimes+100>:	call   0x7ffff7eae420
   0x7ffff7eb1f79 <utimes+105>:	mov    rdx,QWORD PTR [rsp+0x28]
   0x7ffff7eb1f7e <utimes+110>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb1f87 <utimes+119>:	jne    0x7ffff7eb1f8e <utimes+126>
   0x7ffff7eb1f89 <utimes+121>:	add    rsp,0x38
   0x7ffff7eb1f8d <utimes+125>:	ret
   0x7ffff7eb1f8e <utimes+126>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb1f93:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb1f9d:	nop    DWORD PTR [rax]
   0x7ffff7eb1fa0 <lutimes>:	endbr64
   0x7ffff7eb1fa4 <lutimes+4>:	sub    rsp,0x38
   0x7ffff7eb1fa8 <lutimes+8>:	mov    r8,rdi
   0x7ffff7eb1fab <lutimes+11>:	mov    rdx,rsi
   0x7ffff7eb1fae <lutimes+14>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb1fb7 <lutimes+23>:	mov    QWORD PTR [rsp+0x28],rax
   0x7ffff7eb1fbc <lutimes+28>:	xor    eax,eax
   0x7ffff7eb1fbe <lutimes+30>:	test   rsi,rsi
   0x7ffff7eb1fc1 <lutimes+33>:	je     0x7ffff7eb1ffa <lutimes+90>
   0x7ffff7eb1fc3 <lutimes+35>:	imul   rax,QWORD PTR [rsi+0x18],0x3e8
   0x7ffff7eb1fcb <lutimes+43>:	movq   xmm0,QWORD PTR [rsi+0x10]
   0x7ffff7eb1fd0 <lutimes+48>:	mov    rdx,rsp
   0x7ffff7eb1fd3 <lutimes+51>:	movq   xmm1,QWORD PTR [rsi]
   0x7ffff7eb1fd7 <lutimes+55>:	movq   xmm2,rax
   0x7ffff7eb1fdc <lutimes+60>:	imul   rax,QWORD PTR [rsi+0x8],0x3e8
   0x7ffff7eb1fe4 <lutimes+68>:	punpcklqdq xmm0,xmm2
   0x7ffff7eb1fe8 <lutimes+72>:	movaps XMMWORD PTR [rsp+0x10],xmm0
   0x7ffff7eb1fed <lutimes+77>:	movq   xmm3,rax
   0x7ffff7eb1ff2 <lutimes+82>:	punpcklqdq xmm1,xmm3
   0x7ffff7eb1ff6 <lutimes+86>:	movaps XMMWORD PTR [rsp],xmm1
   0x7ffff7eb1ffa <lutimes+90>:	mov    ecx,0x100
   0x7ffff7eb1fff <lutimes+95>:	mov    rsi,r8
   0x7ffff7eb2002 <lutimes+98>:	mov    edi,0xffffff9c
   0x7ffff7eb2007 <lutimes+103>:	call   0x7ffff7eae420
   0x7ffff7eb200c <lutimes+108>:	mov    rdx,QWORD PTR [rsp+0x28]
   0x7ffff7eb2011 <lutimes+113>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb201a <lutimes+122>:	jne    0x7ffff7eb2021 <lutimes+129>
   0x7ffff7eb201c <lutimes+124>:	add    rsp,0x38
   0x7ffff7eb2020 <lutimes+128>:	ret
   0x7ffff7eb2021 <lutimes+129>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb2026:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2030 <futimes>:	endbr64
   0x7ffff7eb2034 <futimes+4>:	sub    rsp,0x38
   0x7ffff7eb2038 <futimes+8>:	mov    rdx,rsi
   0x7ffff7eb203b <futimes+11>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb2044 <futimes+20>:	mov    QWORD PTR [rsp+0x28],rax
   0x7ffff7eb2049 <futimes+25>:	xor    eax,eax
   0x7ffff7eb204b <futimes+27>:	test   rsi,rsi
   0x7ffff7eb204e <futimes+30>:	je     0x7ffff7eb2087 <futimes+87>
   0x7ffff7eb2050 <futimes+32>:	imul   rax,QWORD PTR [rsi+0x18],0x3e8
   0x7ffff7eb2058 <futimes+40>:	movq   xmm0,QWORD PTR [rsi+0x10]
   0x7ffff7eb205d <futimes+45>:	mov    rdx,rsp
   0x7ffff7eb2060 <futimes+48>:	movq   xmm1,QWORD PTR [rsi]
   0x7ffff7eb2064 <futimes+52>:	movq   xmm2,rax
   0x7ffff7eb2069 <futimes+57>:	imul   rax,QWORD PTR [rsi+0x8],0x3e8
   0x7ffff7eb2071 <futimes+65>:	punpcklqdq xmm0,xmm2
   0x7ffff7eb2075 <futimes+69>:	movaps XMMWORD PTR [rsp+0x10],xmm0
   0x7ffff7eb207a <futimes+74>:	movq   xmm3,rax
   0x7ffff7eb207f <futimes+79>:	punpcklqdq xmm1,xmm3
   0x7ffff7eb2083 <futimes+83>:	movaps XMMWORD PTR [rsp],xmm1
   0x7ffff7eb2087 <futimes+87>:	xor    ecx,ecx
   0x7ffff7eb2089 <futimes+89>:	xor    esi,esi
   0x7ffff7eb208b <futimes+91>:	call   0x7ffff7eae420
   0x7ffff7eb2090 <futimes+96>:	mov    rdx,QWORD PTR [rsp+0x28]
   0x7ffff7eb2095 <futimes+101>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb209e <futimes+110>:	jne    0x7ffff7eb20a5 <futimes+117>
   0x7ffff7eb20a0 <futimes+112>:	add    rsp,0x38
   0x7ffff7eb20a4 <futimes+116>:	ret
   0x7ffff7eb20a5 <futimes+117>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb20aa:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb20b0 <futimesat>:	endbr64
   0x7ffff7eb20b4 <futimesat+4>:	sub    rsp,0x38
   0x7ffff7eb20b8 <futimesat+8>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb20c1 <futimesat+17>:	mov    QWORD PTR [rsp+0x28],rax
   0x7ffff7eb20c6 <futimesat+22>:	xor    eax,eax
   0x7ffff7eb20c8 <futimesat+24>:	test   rdx,rdx
   0x7ffff7eb20cb <futimesat+27>:	je     0x7ffff7eb2104 <futimesat+84>
   0x7ffff7eb20cd <futimesat+29>:	imul   rax,QWORD PTR [rdx+0x18],0x3e8
   0x7ffff7eb20d5 <futimesat+37>:	movq   xmm0,QWORD PTR [rdx+0x10]
   0x7ffff7eb20da <futimesat+42>:	movq   xmm1,QWORD PTR [rdx]
   0x7ffff7eb20de <futimesat+46>:	movq   xmm2,rax
   0x7ffff7eb20e3 <futimesat+51>:	imul   rax,QWORD PTR [rdx+0x8],0x3e8
   0x7ffff7eb20eb <futimesat+59>:	mov    rdx,rsp
   0x7ffff7eb20ee <futimesat+62>:	punpcklqdq xmm0,xmm2
   0x7ffff7eb20f2 <futimesat+66>:	movaps XMMWORD PTR [rsp+0x10],xmm0
   0x7ffff7eb20f7 <futimesat+71>:	movq   xmm3,rax
   0x7ffff7eb20fc <futimesat+76>:	punpcklqdq xmm1,xmm3
   0x7ffff7eb2100 <futimesat+80>:	movaps XMMWORD PTR [rsp],xmm1
   0x7ffff7eb2104 <futimesat+84>:	xor    ecx,ecx
   0x7ffff7eb2106 <futimesat+86>:	call   0x7ffff7eae420
   0x7ffff7eb210b <futimesat+91>:	mov    rdx,QWORD PTR [rsp+0x28]
   0x7ffff7eb2110 <futimesat+96>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb2119 <futimesat+105>:	jne    0x7ffff7eb2120 <futimesat+112>
   0x7ffff7eb211b <futimesat+107>:	add    rsp,0x38
   0x7ffff7eb211f <futimesat+111>:	ret
   0x7ffff7eb2120 <futimesat+112>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb2125:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb212f:	nop
   0x7ffff7eb2130 <truncate64>:	endbr64
   0x7ffff7eb2134 <truncate64+4>:	mov    eax,0x4c
   0x7ffff7eb2139 <truncate64+9>:	syscall
   0x7ffff7eb213b <truncate64+11>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb2141 <truncate64+17>:	ja     0x7ffff7eb2148 <truncate64+24>
   0x7ffff7eb2143 <truncate64+19>:	ret
   0x7ffff7eb2144 <truncate64+20>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb2148 <truncate64+24>:	mov    rdx,QWORD PTR [rip+0xfbcc1]        # 0x7ffff7fade10
   0x7ffff7eb214f <truncate64+31>:	neg    eax
   0x7ffff7eb2151 <truncate64+33>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb2154 <truncate64+36>:	mov    eax,0xffffffff
   0x7ffff7eb2159 <truncate64+41>:	ret
   0x7ffff7eb215a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2160 <ftruncate64>:	endbr64
   0x7ffff7eb2164 <ftruncate64+4>:	mov    eax,0x4d
   0x7ffff7eb2169 <ftruncate64+9>:	syscall
   0x7ffff7eb216b <ftruncate64+11>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb2171 <ftruncate64+17>:	ja     0x7ffff7eb2178 <ftruncate64+24>
   0x7ffff7eb2173 <ftruncate64+19>:	ret
   0x7ffff7eb2174 <ftruncate64+20>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb2178 <ftruncate64+24>:	mov    rdx,QWORD PTR [rip+0xfbc91]        # 0x7ffff7fade10
   0x7ffff7eb217f <ftruncate64+31>:	neg    eax
   0x7ffff7eb2181 <ftruncate64+33>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb2184 <ftruncate64+36>:	mov    eax,0xffffffff
   0x7ffff7eb2189 <ftruncate64+41>:	ret
   0x7ffff7eb218a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2190 <chflags>:	endbr64
   0x7ffff7eb2194 <chflags+4>:	cmp    rdi,0x1
   0x7ffff7eb2198 <chflags+8>:	mov    rdx,QWORD PTR [rip+0xfbc71]        # 0x7ffff7fade10
   0x7ffff7eb219f <chflags+15>:	sbb    eax,eax
   0x7ffff7eb21a1 <chflags+17>:	and    eax,0xfffffff0
   0x7ffff7eb21a4 <chflags+20>:	add    eax,0x26
   0x7ffff7eb21a7 <chflags+23>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb21aa <chflags+26>:	mov    eax,0xffffffff
   0x7ffff7eb21af <chflags+31>:	ret
   0x7ffff7eb21b0 <fchflags>:	endbr64
   0x7ffff7eb21b4 <fchflags+4>:	sar    edi,0x1f
   0x7ffff7eb21b7 <fchflags+7>:	mov    rax,QWORD PTR [rip+0xfbc52]        # 0x7ffff7fade10
   0x7ffff7eb21be <fchflags+14>:	and    edi,0xfffffff0
   0x7ffff7eb21c1 <fchflags+17>:	add    edi,0x26
   0x7ffff7eb21c4 <fchflags+20>:	mov    DWORD PTR fs:[rax],edi
   0x7ffff7eb21c7 <fchflags+23>:	mov    eax,0xffffffff
   0x7ffff7eb21cc <fchflags+28>:	ret
   0x7ffff7eb21cd:	nop    DWORD PTR [rax]
   0x7ffff7eb21d0 <insque>:	endbr64
   0x7ffff7eb21d4 <insque+4>:	xor    eax,eax
   0x7ffff7eb21d6 <insque+6>:	test   rsi,rsi
   0x7ffff7eb21d9 <insque+9>:	je     0x7ffff7eb21ea <insque+26>
   0x7ffff7eb21db <insque+11>:	mov    rax,QWORD PTR [rsi]
   0x7ffff7eb21de <insque+14>:	mov    QWORD PTR [rsi],rdi
   0x7ffff7eb21e1 <insque+17>:	test   rax,rax
   0x7ffff7eb21e4 <insque+20>:	je     0x7ffff7eb21ea <insque+26>
   0x7ffff7eb21e6 <insque+22>:	mov    QWORD PTR [rax+0x8],rdi
   0x7ffff7eb21ea <insque+26>:	mov    QWORD PTR [rdi],rax
   0x7ffff7eb21ed <insque+29>:	mov    QWORD PTR [rdi+0x8],rsi
   0x7ffff7eb21f1 <insque+33>:	ret
   0x7ffff7eb21f2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb21fd:	nop    DWORD PTR [rax]
   0x7ffff7eb2200 <remque>:	endbr64
   0x7ffff7eb2204 <remque+4>:	mov    rdx,QWORD PTR [rdi]
   0x7ffff7eb2207 <remque+7>:	mov    rax,QWORD PTR [rdi+0x8]
   0x7ffff7eb220b <remque+11>:	test   rdx,rdx
   0x7ffff7eb220e <remque+14>:	je     0x7ffff7eb2214 <remque+20>
   0x7ffff7eb2210 <remque+16>:	mov    QWORD PTR [rdx+0x8],rax
   0x7ffff7eb2214 <remque+20>:	test   rax,rax
   0x7ffff7eb2217 <remque+23>:	je     0x7ffff7eb221c <remque+28>
   0x7ffff7eb2219 <remque+25>:	mov    QWORD PTR [rax],rdx
   0x7ffff7eb221c <remque+28>:	ret
   0x7ffff7eb221d:	nop    DWORD PTR [rax]
   0x7ffff7eb2220:	movsx  eax,BYTE PTR [rdi]
   0x7ffff7eb2223:	mov    edx,eax
   0x7ffff7eb2225:	test   eax,eax
   0x7ffff7eb2227:	je     0x7ffff7eb2322
   0x7ffff7eb222d:	mov    rcx,rdi
   0x7ffff7eb2230:	xor    r8d,r8d
   0x7ffff7eb2233:	jmp    0x7ffff7eb226e
   0x7ffff7eb2235:	nop    DWORD PTR [rax]
   0x7ffff7eb2238:	mov    BYTE PTR [rcx],dl
   0x7ffff7eb223a:	cmp    eax,0x23
   0x7ffff7eb223d:	je     0x7ffff7eb2310
   0x7ffff7eb2243:	cmp    eax,0x9
   0x7ffff7eb2246:	je     0x7ffff7eb22dd
   0x7ffff7eb224c:	cmp    eax,0x20
   0x7ffff7eb224f:	je     0x7ffff7eb22dd
   0x7ffff7eb2255:	cmp    eax,0xa
   0x7ffff7eb2258:	je     0x7ffff7eb22d8
   0x7ffff7eb225a:	mov    rcx,rsi
   0x7ffff7eb225d:	mov    rax,rdi
   0x7ffff7eb2260:	movsx  eax,BYTE PTR [rax+0x1]
   0x7ffff7eb2264:	add    rdi,0x1
   0x7ffff7eb2268:	mov    edx,eax
   0x7ffff7eb226a:	test   eax,eax
   0x7ffff7eb226c:	je     0x7ffff7eb22a0
   0x7ffff7eb226e:	cmp    eax,0x22
   0x7ffff7eb2271:	je     0x7ffff7eb22b0
   0x7ffff7eb2273:	lea    rsi,[rcx+0x1]
   0x7ffff7eb2277:	cmp    r8d,0x1
   0x7ffff7eb227b:	jne    0x7ffff7eb2238
   0x7ffff7eb227d:	cmp    dl,0x5c
   0x7ffff7eb2280:	je     0x7ffff7eb22c0
   0x7ffff7eb2282:	mov    rax,rdi
   0x7ffff7eb2285:	mov    BYTE PTR [rcx],dl
   0x7ffff7eb2287:	add    rdi,0x1
   0x7ffff7eb228b:	mov    rcx,rsi
   0x7ffff7eb228e:	movsx  eax,BYTE PTR [rax+0x1]
   0x7ffff7eb2292:	mov    edx,eax
   0x7ffff7eb2294:	test   eax,eax
   0x7ffff7eb2296:	jne    0x7ffff7eb226e
   0x7ffff7eb2298:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb22a0:	mov    rsi,rcx
   0x7ffff7eb22a3:	mov    rax,rdi
   0x7ffff7eb22a6:	mov    BYTE PTR [rsi-0x1],0x0
   0x7ffff7eb22aa:	ret
   0x7ffff7eb22ab:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb22b0:	xor    r8d,0x1
   0x7ffff7eb22b4:	mov    rax,rdi
   0x7ffff7eb22b7:	jmp    0x7ffff7eb2260
   0x7ffff7eb22b9:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb22c0:	cmp    BYTE PTR [rdi+0x1],0x22
   0x7ffff7eb22c4:	jne    0x7ffff7eb2282
   0x7ffff7eb22c6:	add    rdi,0x1
   0x7ffff7eb22ca:	mov    edx,0x22
   0x7ffff7eb22cf:	jmp    0x7ffff7eb2282
   0x7ffff7eb22d1:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb22d8:	mov    edx,0xa
   0x7ffff7eb22dd:	mov    BYTE PTR [rip+0x10406d],dl        # 0x7ffff7fb6350
   0x7ffff7eb22e3:	lea    rax,[rdi+0x1]
   0x7ffff7eb22e7:	mov    BYTE PTR [rdi],0x0
   0x7ffff7eb22ea:	jmp    0x7ffff7eb22f4
   0x7ffff7eb22ec:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb22f0:	add    rax,0x1
   0x7ffff7eb22f4:	movzx  edx,BYTE PTR [rax]
   0x7ffff7eb22f7:	lea    ecx,[rdx-0x9]
   0x7ffff7eb22fa:	cmp    cl,0x1
   0x7ffff7eb22fd:	jbe    0x7ffff7eb22f0
   0x7ffff7eb22ff:	cmp    dl,0x20
   0x7ffff7eb2302:	je     0x7ffff7eb22f0
   0x7ffff7eb2304:	mov    BYTE PTR [rsi-0x1],0x0
   0x7ffff7eb2308:	ret
   0x7ffff7eb2309:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb2310:	mov    BYTE PTR [rdi],0x0
   0x7ffff7eb2313:	mov    rax,rdi
   0x7ffff7eb2316:	mov    BYTE PTR [rip+0x104033],0x23        # 0x7ffff7fb6350
   0x7ffff7eb231d:	mov    BYTE PTR [rsi-0x1],0x0
   0x7ffff7eb2321:	ret
   0x7ffff7eb2322:	mov    rsi,rdi
   0x7ffff7eb2325:	mov    rax,rdi
   0x7ffff7eb2328:	jmp    0x7ffff7eb22a6
   0x7ffff7eb232d:	nop    DWORD PTR [rax]
   0x7ffff7eb2330:	push   r14
   0x7ffff7eb2332:	mov    rdx,QWORD PTR [rip+0x10400f]        # 0x7ffff7fb6348
   0x7ffff7eb2339:	push   r13
   0x7ffff7eb233b:	push   r12
   0x7ffff7eb233d:	push   rbp
   0x7ffff7eb233e:	lea    rbp,[rip+0x103f9b]        # 0x7ffff7fb62e0
   0x7ffff7eb2345:	push   rbx
   0x7ffff7eb2346:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2350:	mov    esi,0x64
   0x7ffff7eb2355:	mov    rdi,rbp
   0x7ffff7eb2358:	call   0x7ffff7e1f370 <fgets_unlocked>
   0x7ffff7eb235d:	test   rax,rax
   0x7ffff7eb2360:	je     0x7ffff7eb2469
   0x7ffff7eb2366:	mov    esi,0xa
   0x7ffff7eb236b:	mov    rdi,rbp
   0x7ffff7eb236e:	call   0x7ffff7dbd600 <*ABS*+0xa82e0@plt>
   0x7ffff7eb2373:	test   rax,rax
   0x7ffff7eb2376:	je     0x7ffff7eb23e2
   0x7ffff7eb2378:	mov    rbx,QWORD PTR [rip+0xfba79]        # 0x7ffff7faddf8
   0x7ffff7eb237f:	movsx  rdx,BYTE PTR [rbp+0x0]
   0x7ffff7eb2384:	lea    rdi,[rip+0x103f55]        # 0x7ffff7fb62e0
   0x7ffff7eb238b:	mov    rcx,QWORD PTR fs:[rbx]
   0x7ffff7eb238f:	mov    rax,rdx
   0x7ffff7eb2392:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
   0x7ffff7eb2397:	je     0x7ffff7eb23b3
   0x7ffff7eb2399:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb23a0:	movsx  rdx,BYTE PTR [rdi+0x1]
   0x7ffff7eb23a5:	add    rdi,0x1
   0x7ffff7eb23a9:	mov    rax,rdx
   0x7ffff7eb23ac:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
   0x7ffff7eb23b1:	jne    0x7ffff7eb23a0
   0x7ffff7eb23b3:	test   al,al
   0x7ffff7eb23b5:	je     0x7ffff7eb23bf
   0x7ffff7eb23b7:	cmp    al,0x23
   0x7ffff7eb23b9:	jne    0x7ffff7eb2472
   0x7ffff7eb23bf:	mov    rdx,QWORD PTR [rip+0x103f82]        # 0x7ffff7fb6348
   0x7ffff7eb23c6:	jmp    0x7ffff7eb2350
   0x7ffff7eb23c8:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb23d0:	mov    rdi,rdx
   0x7ffff7eb23d3:	call   0x7ffff7e22ac0 <__uflow>
   0x7ffff7eb23d8:	cmp    eax,0xffffffff
   0x7ffff7eb23db:	je     0x7ffff7eb23bf
   0x7ffff7eb23dd:	cmp    eax,0xa
   0x7ffff7eb23e0:	je     0x7ffff7eb23bf
   0x7ffff7eb23e2:	mov    rdx,QWORD PTR [rip+0x103f5f]        # 0x7ffff7fb6348
   0x7ffff7eb23e9:	jmp    0x7ffff7eb2401
   0x7ffff7eb23eb:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb23f0:	lea    rcx,[rax+0x1]
   0x7ffff7eb23f4:	mov    QWORD PTR [rdx+0x8],rcx
   0x7ffff7eb23f8:	cmp    BYTE PTR [rax],0xa
   0x7ffff7eb23fb:	je     0x7ffff7eb2350
   0x7ffff7eb2401:	mov    rax,QWORD PTR [rdx+0x8]
   0x7ffff7eb2405:	cmp    rax,QWORD PTR [rdx+0x10]
   0x7ffff7eb2409:	jb     0x7ffff7eb23f0
   0x7ffff7eb240b:	jmp    0x7ffff7eb23d0
   0x7ffff7eb240d:	cmp    BYTE PTR [rip+0x103f3c],0x23        # 0x7ffff7fb6350
   0x7ffff7eb2414:	jne    0x7ffff7eb2432
   0x7ffff7eb2416:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2420:	movsx  eax,BYTE PTR [rbp+0x1]
   0x7ffff7eb2424:	add    rbp,0x1
   0x7ffff7eb2428:	cmp    eax,0x20
   0x7ffff7eb242b:	je     0x7ffff7eb2420
   0x7ffff7eb242d:	cmp    eax,0x9
   0x7ffff7eb2430:	je     0x7ffff7eb2420
   0x7ffff7eb2432:	mov    QWORD PTR [rip+0x103e8f],rbp        # 0x7ffff7fb62c8
   0x7ffff7eb2439:	xor    eax,eax
   0x7ffff7eb243b:	cmp    BYTE PTR [rbp+0x0],0x0
   0x7ffff7eb243f:	mov    esi,0xa
   0x7ffff7eb2444:	cmovne rax,rbp
   0x7ffff7eb2448:	mov    rdi,rbp
   0x7ffff7eb244b:	mov    QWORD PTR [rip+0x103e76],rax        # 0x7ffff7fb62c8
   0x7ffff7eb2452:	call   0x7ffff7dbd600 <*ABS*+0xa82e0@plt>
   0x7ffff7eb2457:	mov    rdx,rax
   0x7ffff7eb245a:	lea    rax,[rip+0x103e3f]        # 0x7ffff7fb62a0
   0x7ffff7eb2461:	test   rdx,rdx
   0x7ffff7eb2464:	je     0x7ffff7eb2469
   0x7ffff7eb2466:	mov    BYTE PTR [rdx],0x0
   0x7ffff7eb2469:	pop    rbx
   0x7ffff7eb246a:	pop    rbp
   0x7ffff7eb246b:	pop    r12
   0x7ffff7eb246d:	pop    r13
   0x7ffff7eb246f:	pop    r14
   0x7ffff7eb2471:	ret
   0x7ffff7eb2472:	mov    BYTE PTR [rip+0x103ed7],0x0        # 0x7ffff7fb6350
   0x7ffff7eb2479:	mov    QWORD PTR [rip+0x103e20],rdi        # 0x7ffff7fb62a0
   0x7ffff7eb2480:	call   0x7ffff7eb2220
   0x7ffff7eb2485:	mov    QWORD PTR [rip+0x103e1c],rax        # 0x7ffff7fb62a8
   0x7ffff7eb248c:	cmp    BYTE PTR [rax],0x0
   0x7ffff7eb248f:	mov    rbp,rax
   0x7ffff7eb2492:	jne    0x7ffff7eb25d7
   0x7ffff7eb2498:	pxor   xmm0,xmm0
   0x7ffff7eb249c:	movups XMMWORD PTR [rip+0x103e05],xmm0        # 0x7ffff7fb62a8
   0x7ffff7eb24a3:	mov    DWORD PTR [rip+0x103e0b],0x0        # 0x7ffff7fb62b8
   0x7ffff7eb24ad:	mov    QWORD PTR [rip+0x103e08],0x0        # 0x7ffff7fb62c0
   0x7ffff7eb24b8:	movzx  r12d,BYTE PTR [rbp+0x0]
   0x7ffff7eb24bd:	test   r12b,r12b
   0x7ffff7eb24c0:	je     0x7ffff7eb240d
   0x7ffff7eb24c6:	lea    r13,[rip+0xbcc57]        # 0x7ffff7f6f124
   0x7ffff7eb24cd:	lea    r14,[rip+0xbcc57]        # 0x7ffff7f6f12b
   0x7ffff7eb24d4:	jmp    0x7ffff7eb251b
   0x7ffff7eb24d6:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb24e0:	cmp    BYTE PTR [rbp+0x1],0x66
   0x7ffff7eb24e4:	jne    0x7ffff7eb2521
   0x7ffff7eb24e6:	cmp    BYTE PTR [rbp+0x2],0x66
   0x7ffff7eb24ea:	jne    0x7ffff7eb2521
   0x7ffff7eb24ec:	movsx  rdx,BYTE PTR [rbp+0x3]
   0x7ffff7eb24f1:	mov    rax,QWORD PTR fs:[rbx]
   0x7ffff7eb24f5:	test   BYTE PTR [rax+rdx*2+0x1],0x20
   0x7ffff7eb24fa:	je     0x7ffff7eb2521
   0x7ffff7eb24fc:	and    DWORD PTR [rip+0x103db5],0xfffffffe        # 0x7ffff7fb62b8
   0x7ffff7eb2503:	mov    rdi,rbp
   0x7ffff7eb2506:	call   0x7ffff7eb2220
   0x7ffff7eb250b:	movzx  r12d,BYTE PTR [rax]
   0x7ffff7eb250f:	mov    rbp,rax
   0x7ffff7eb2512:	test   r12b,r12b
   0x7ffff7eb2515:	je     0x7ffff7eb240d
   0x7ffff7eb251b:	cmp    BYTE PTR [rbp+0x0],0x6f
   0x7ffff7eb251f:	je     0x7ffff7eb24e0
   0x7ffff7eb2521:	cmp    BYTE PTR [rbp+0x0],0x6f
   0x7ffff7eb2525:	jne    0x7ffff7eb2550
   0x7ffff7eb2527:	cmp    BYTE PTR [rbp+0x1],0x6e
   0x7ffff7eb252b:	jne    0x7ffff7eb2550
   0x7ffff7eb252d:	movsx  rdx,BYTE PTR [rbp+0x2]
   0x7ffff7eb2532:	mov    rax,QWORD PTR fs:[rbx]
   0x7ffff7eb2536:	test   BYTE PTR [rax+rdx*2+0x1],0x20
   0x7ffff7eb253b:	je     0x7ffff7eb2550
   0x7ffff7eb253d:	or     DWORD PTR [rip+0x103d74],0x1        # 0x7ffff7fb62b8
   0x7ffff7eb2544:	jmp    0x7ffff7eb2503
   0x7ffff7eb2546:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2550:	mov    edx,0x6
   0x7ffff7eb2555:	mov    rsi,r13
   0x7ffff7eb2558:	mov    rdi,rbp
   0x7ffff7eb255b:	call   0x7ffff7dbd590 <*ABS*+0xa88b0@plt>
   0x7ffff7eb2560:	test   eax,eax
   0x7ffff7eb2562:	jne    0x7ffff7eb2580
   0x7ffff7eb2564:	movsx  rdx,BYTE PTR [rbp+0x6]
   0x7ffff7eb2569:	mov    rax,QWORD PTR fs:[rbx]
   0x7ffff7eb256d:	test   BYTE PTR [rax+rdx*2+0x1],0x20
   0x7ffff7eb2572:	je     0x7ffff7eb2580
   0x7ffff7eb2574:	or     DWORD PTR [rip+0x103d3d],0x2        # 0x7ffff7fb62b8
   0x7ffff7eb257b:	jmp    0x7ffff7eb2503
   0x7ffff7eb257d:	nop    DWORD PTR [rax]
   0x7ffff7eb2580:	mov    edx,0x6
   0x7ffff7eb2585:	mov    rsi,r14
   0x7ffff7eb2588:	mov    rdi,rbp
   0x7ffff7eb258b:	call   0x7ffff7dbd590 <*ABS*+0xa88b0@plt>
   0x7ffff7eb2590:	test   eax,eax
   0x7ffff7eb2592:	jne    0x7ffff7eb25bb
   0x7ffff7eb2594:	cmp    BYTE PTR [rbp+0x6],0x3d
   0x7ffff7eb2598:	jne    0x7ffff7eb25bb
   0x7ffff7eb259a:	mov    esi,0x3d
   0x7ffff7eb259f:	mov    rdi,rbp
   0x7ffff7eb25a2:	call   0x7ffff7dbd600 <*ABS*+0xa82e0@plt>
   0x7ffff7eb25a7:	cmp    rax,0x1
   0x7ffff7eb25ab:	sbb    rax,0xffffffffffffffff
   0x7ffff7eb25af:	mov    QWORD PTR [rip+0x103d0a],rax        # 0x7ffff7fb62c0
   0x7ffff7eb25b6:	jmp    0x7ffff7eb2503
   0x7ffff7eb25bb:	cmp    BYTE PTR [rip+0x103d8e],0x23        # 0x7ffff7fb6350
   0x7ffff7eb25c2:	je     0x7ffff7eb2420
   0x7ffff7eb25c8:	cmp    r12b,0x23
   0x7ffff7eb25cc:	je     0x7ffff7eb2420
   0x7ffff7eb25d2:	jmp    0x7ffff7eb2432
   0x7ffff7eb25d7:	mov    rdi,rax
   0x7ffff7eb25da:	call   0x7ffff7eb2220
   0x7ffff7eb25df:	mov    QWORD PTR [rip+0x103cca],rax        # 0x7ffff7fb62b0
   0x7ffff7eb25e6:	cmp    BYTE PTR [rax],0x0
   0x7ffff7eb25e9:	mov    rbp,rax
   0x7ffff7eb25ec:	jne    0x7ffff7eb25fe
   0x7ffff7eb25ee:	mov    QWORD PTR [rip+0x103cb7],0x0        # 0x7ffff7fb62b0
   0x7ffff7eb25f9:	jmp    0x7ffff7eb24a3
   0x7ffff7eb25fe:	mov    rdi,rax
   0x7ffff7eb2601:	call   0x7ffff7eb2220
   0x7ffff7eb2606:	mov    rbp,rax
   0x7ffff7eb2609:	jmp    0x7ffff7eb24a3
   0x7ffff7eb260e:	xchg   ax,ax
   0x7ffff7eb2610 <getttynam>:	endbr64
   0x7ffff7eb2614 <getttynam+4>:	push   r13
   0x7ffff7eb2616 <getttynam+6>:	push   r12
   0x7ffff7eb2618 <getttynam+8>:	push   rbp
   0x7ffff7eb2619 <getttynam+9>:	push   rbx
   0x7ffff7eb261a <getttynam+10>:	mov    rbx,rdi
   0x7ffff7eb261d <getttynam+13>:	sub    rsp,0x8
   0x7ffff7eb2621 <getttynam+17>:	mov    rdi,QWORD PTR [rip+0x103d20]        # 0x7ffff7fb6348
   0x7ffff7eb2628 <getttynam+24>:	test   rdi,rdi
   0x7ffff7eb262b <getttynam+27>:	je     0x7ffff7eb26e8 <getttynam+216>
   0x7ffff7eb2631 <getttynam+33>:	call   0x7ffff7e1cfa0 <rewind>
   0x7ffff7eb2636 <getttynam+38>:	mov    rax,QWORD PTR [rip+0x103d0b]        # 0x7ffff7fb6348
   0x7ffff7eb263d <getttynam+45>:	lea    r13,[rip+0xbaa30]        # 0x7ffff7f6d074
   0x7ffff7eb2644 <getttynam+52>:	lea    rbp,[rip+0xbcae7]        # 0x7ffff7f6f132
   0x7ffff7eb264b <getttynam+59>:	jmp    0x7ffff7eb267b <getttynam+107>
   0x7ffff7eb264d <getttynam+61>:	nop    DWORD PTR [rax]
   0x7ffff7eb2650 <getttynam+64>:	call   0x7ffff7eb2330
   0x7ffff7eb2655 <getttynam+69>:	mov    r12,rax
   0x7ffff7eb2658 <getttynam+72>:	test   rax,rax
   0x7ffff7eb265b <getttynam+75>:	je     0x7ffff7eb26b0 <getttynam+160>
   0x7ffff7eb265d <getttynam+77>:	mov    rsi,QWORD PTR [r12]
   0x7ffff7eb2661 <getttynam+81>:	mov    rdi,rbx
   0x7ffff7eb2664 <getttynam+84>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb2669 <getttynam+89>:	mov    rdi,QWORD PTR [rip+0x103cd8]        # 0x7ffff7fb6348
   0x7ffff7eb2670 <getttynam+96>:	mov    r8d,eax
   0x7ffff7eb2673 <getttynam+99>:	mov    rax,rdi
   0x7ffff7eb2676 <getttynam+102>:	test   r8d,r8d
   0x7ffff7eb2679 <getttynam+105>:	je     0x7ffff7eb26c0 <getttynam+176>
   0x7ffff7eb267b <getttynam+107>:	test   rax,rax
   0x7ffff7eb267e <getttynam+110>:	jne    0x7ffff7eb2650 <getttynam+64>
   0x7ffff7eb2680 <getttynam+112>:	mov    rsi,r13
   0x7ffff7eb2683 <getttynam+115>:	mov    rdi,rbp
   0x7ffff7eb2686 <getttynam+118>:	call   0x7ffff7e146b0 <fopen64>
   0x7ffff7eb268b <getttynam+123>:	mov    QWORD PTR [rip+0x103cb6],rax        # 0x7ffff7fb6348
   0x7ffff7eb2692 <getttynam+130>:	mov    r12,rax
   0x7ffff7eb2695 <getttynam+133>:	test   rax,rax
   0x7ffff7eb2698 <getttynam+136>:	je     0x7ffff7eb26d5 <getttynam+197>
   0x7ffff7eb269a <getttynam+138>:	or     DWORD PTR [rax],0x8000
   0x7ffff7eb26a0 <getttynam+144>:	call   0x7ffff7eb2330
   0x7ffff7eb26a5 <getttynam+149>:	mov    r12,rax
   0x7ffff7eb26a8 <getttynam+152>:	test   rax,rax
   0x7ffff7eb26ab <getttynam+155>:	jne    0x7ffff7eb265d <getttynam+77>
   0x7ffff7eb26ad <getttynam+157>:	nop    DWORD PTR [rax]
   0x7ffff7eb26b0 <getttynam+160>:	mov    rdi,QWORD PTR [rip+0x103c91]        # 0x7ffff7fb6348
   0x7ffff7eb26b7 <getttynam+167>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb26c0 <getttynam+176>:	test   rdi,rdi
   0x7ffff7eb26c3 <getttynam+179>:	je     0x7ffff7eb26d5 <getttynam+197>
   0x7ffff7eb26c5 <getttynam+181>:	call   0x7ffff7e13cf0 <fclose>
   0x7ffff7eb26ca <getttynam+186>:	mov    QWORD PTR [rip+0x103c73],0x0        # 0x7ffff7fb6348
   0x7ffff7eb26d5 <getttynam+197>:	add    rsp,0x8
   0x7ffff7eb26d9 <getttynam+201>:	mov    rax,r12
   0x7ffff7eb26dc <getttynam+204>:	pop    rbx
   0x7ffff7eb26dd <getttynam+205>:	pop    rbp
   0x7ffff7eb26de <getttynam+206>:	pop    r12
   0x7ffff7eb26e0 <getttynam+208>:	pop    r13
   0x7ffff7eb26e2 <getttynam+210>:	ret
   0x7ffff7eb26e3 <getttynam+211>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb26e8 <getttynam+216>:	lea    rsi,[rip+0xba985]        # 0x7ffff7f6d074
   0x7ffff7eb26ef <getttynam+223>:	lea    rdi,[rip+0xbca3c]        # 0x7ffff7f6f132
   0x7ffff7eb26f6 <getttynam+230>:	call   0x7ffff7e146b0 <fopen64>
   0x7ffff7eb26fb <getttynam+235>:	mov    QWORD PTR [rip+0x103c46],rax        # 0x7ffff7fb6348
   0x7ffff7eb2702 <getttynam+242>:	test   rax,rax
   0x7ffff7eb2705 <getttynam+245>:	je     0x7ffff7eb263d <getttynam+45>
   0x7ffff7eb270b <getttynam+251>:	or     DWORD PTR [rax],0x8000
   0x7ffff7eb2711 <getttynam+257>:	jmp    0x7ffff7eb263d <getttynam+45>
   0x7ffff7eb2716:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2720 <getttyent>:	endbr64
   0x7ffff7eb2724 <getttyent+4>:	cmp    QWORD PTR [rip+0x103c1c],0x0        # 0x7ffff7fb6348
   0x7ffff7eb272c <getttyent+12>:	je     0x7ffff7eb2738 <getttyent+24>
   0x7ffff7eb272e <getttyent+14>:	jmp    0x7ffff7eb2330
   0x7ffff7eb2733 <getttyent+19>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2738 <getttyent+24>:	sub    rsp,0x8
   0x7ffff7eb273c <getttyent+28>:	lea    rsi,[rip+0xba931]        # 0x7ffff7f6d074
   0x7ffff7eb2743 <getttyent+35>:	lea    rdi,[rip+0xbc9e8]        # 0x7ffff7f6f132
   0x7ffff7eb274a <getttyent+42>:	call   0x7ffff7e146b0 <fopen64>
   0x7ffff7eb274f <getttyent+47>:	mov    QWORD PTR [rip+0x103bf2],rax        # 0x7ffff7fb6348
   0x7ffff7eb2756 <getttyent+54>:	test   rax,rax
   0x7ffff7eb2759 <getttyent+57>:	je     0x7ffff7eb2770 <getttyent+80>
   0x7ffff7eb275b <getttyent+59>:	or     DWORD PTR [rax],0x8000
   0x7ffff7eb2761 <getttyent+65>:	add    rsp,0x8
   0x7ffff7eb2765 <getttyent+69>:	jmp    0x7ffff7eb2330
   0x7ffff7eb276a <getttyent+74>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2770 <getttyent+80>:	xor    eax,eax
   0x7ffff7eb2772 <getttyent+82>:	add    rsp,0x8
   0x7ffff7eb2776 <getttyent+86>:	ret
   0x7ffff7eb2777:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2780 <setttyent>:	endbr64
   0x7ffff7eb2784 <setttyent+4>:	sub    rsp,0x8
   0x7ffff7eb2788 <setttyent+8>:	mov    rdi,QWORD PTR [rip+0x103bb9]        # 0x7ffff7fb6348
   0x7ffff7eb278f <setttyent+15>:	test   rdi,rdi
   0x7ffff7eb2792 <setttyent+18>:	je     0x7ffff7eb27b0 <setttyent+48>
   0x7ffff7eb2794 <setttyent+20>:	call   0x7ffff7e1cfa0 <rewind>
   0x7ffff7eb2799 <setttyent+25>:	mov    r8d,0x1
   0x7ffff7eb279f <setttyent+31>:	mov    eax,r8d
   0x7ffff7eb27a2 <setttyent+34>:	add    rsp,0x8
   0x7ffff7eb27a6 <setttyent+38>:	ret
   0x7ffff7eb27a7 <setttyent+39>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb27b0 <setttyent+48>:	lea    rsi,[rip+0xba8bd]        # 0x7ffff7f6d074
   0x7ffff7eb27b7 <setttyent+55>:	lea    rdi,[rip+0xbc974]        # 0x7ffff7f6f132
   0x7ffff7eb27be <setttyent+62>:	call   0x7ffff7e146b0 <fopen64>
   0x7ffff7eb27c3 <setttyent+67>:	xor    r8d,r8d
   0x7ffff7eb27c6 <setttyent+70>:	mov    QWORD PTR [rip+0x103b7b],rax        # 0x7ffff7fb6348
   0x7ffff7eb27cd <setttyent+77>:	test   rax,rax
   0x7ffff7eb27d0 <setttyent+80>:	je     0x7ffff7eb279f <setttyent+31>
   0x7ffff7eb27d2 <setttyent+82>:	mov    r8d,0x1
   0x7ffff7eb27d8 <setttyent+88>:	or     DWORD PTR [rax],0x8000
   0x7ffff7eb27de <setttyent+94>:	add    rsp,0x8
   0x7ffff7eb27e2 <setttyent+98>:	mov    eax,r8d
   0x7ffff7eb27e5 <setttyent+101>:	ret
   0x7ffff7eb27e6:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb27f0 <endttyent>:	endbr64
   0x7ffff7eb27f4 <endttyent+4>:	mov    rdi,QWORD PTR [rip+0x103b4d]        # 0x7ffff7fb6348
   0x7ffff7eb27fb <endttyent+11>:	test   rdi,rdi
   0x7ffff7eb27fe <endttyent+14>:	jne    0x7ffff7eb2810 <endttyent+32>
   0x7ffff7eb2800 <endttyent+16>:	mov    eax,0x1
   0x7ffff7eb2805 <endttyent+21>:	ret
   0x7ffff7eb2806 <endttyent+22>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2810 <endttyent+32>:	sub    rsp,0x8
   0x7ffff7eb2814 <endttyent+36>:	call   0x7ffff7e13cf0 <fclose>
   0x7ffff7eb2819 <endttyent+41>:	mov    QWORD PTR [rip+0x103b24],0x0        # 0x7ffff7fb6348
   0x7ffff7eb2824 <endttyent+52>:	cmp    eax,0xffffffff
   0x7ffff7eb2827 <endttyent+55>:	setne  al
   0x7ffff7eb282a <endttyent+58>:	add    rsp,0x8
   0x7ffff7eb282e <endttyent+62>:	movzx  eax,al
   0x7ffff7eb2831 <endttyent+65>:	ret
   0x7ffff7eb2832:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb283c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb2840:	push   r13
   0x7ffff7eb2842:	push   r12
   0x7ffff7eb2844:	push   rbp
   0x7ffff7eb2845:	push   rbx
   0x7ffff7eb2846:	sub    rsp,0xa8
   0x7ffff7eb284d:	mov    rdi,QWORD PTR [rip+0x103b14]        # 0x7ffff7fb6368
   0x7ffff7eb2854:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb285d:	mov    QWORD PTR [rsp+0x98],rax
   0x7ffff7eb2865:	xor    eax,eax
   0x7ffff7eb2867:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb286c:	mov    rdi,QWORD PTR [rip+0x103aed]        # 0x7ffff7fb6360
   0x7ffff7eb2873:	mov    QWORD PTR [rip+0x103aea],0x0        # 0x7ffff7fb6368
   0x7ffff7eb287e:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb2883:	lea    rsi,[rip+0xba7ea]        # 0x7ffff7f6d074
   0x7ffff7eb288a:	lea    rdi,[rip+0xbc8b4]        # 0x7ffff7f6f145
   0x7ffff7eb2891:	mov    QWORD PTR [rip+0x103ac4],0x0        # 0x7ffff7fb6360
   0x7ffff7eb289c:	call   0x7ffff7e146b0 <fopen64>
   0x7ffff7eb28a1:	test   rax,rax
   0x7ffff7eb28a4:	je     0x7ffff7eb299e
   0x7ffff7eb28aa:	mov    rdi,rax
   0x7ffff7eb28ad:	mov    r12,rax
   0x7ffff7eb28b0:	call   0x7ffff7e1c5a0 <fileno_unlocked>
   0x7ffff7eb28b5:	mov    rsi,rsp
   0x7ffff7eb28b8:	mov    edi,eax
   0x7ffff7eb28ba:	call   0x7ffff7ea8e80 <fstat64>
   0x7ffff7eb28bf:	cmp    eax,0xffffffff
   0x7ffff7eb28c2:	je     0x7ffff7eb2996
   0x7ffff7eb28c8:	movabs rax,0x5ffffffffffffffd
   0x7ffff7eb28d2:	mov    r13,QWORD PTR [rsp+0x30]
   0x7ffff7eb28d7:	cmp    r13,rax
   0x7ffff7eb28da:	ja     0x7ffff7eb2996
   0x7ffff7eb28e0:	lea    rbx,[r13+0x3]
   0x7ffff7eb28e4:	mov    rdi,rbx
   0x7ffff7eb28e7:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7eb28ec:	mov    QWORD PTR [rip+0x103a6d],rax        # 0x7ffff7fb6360
   0x7ffff7eb28f3:	mov    rbp,rax
   0x7ffff7eb28f6:	test   rax,rax
   0x7ffff7eb28f9:	je     0x7ffff7eb2996
   0x7ffff7eb28ff:	movabs rdx,0x5555555555555556
   0x7ffff7eb2909:	mov    rax,r13
   0x7ffff7eb290c:	sar    r13,0x3f
   0x7ffff7eb2910:	imul   rdx
   0x7ffff7eb2913:	sub    rdx,r13
   0x7ffff7eb2916:	lea    rdi,[rdx*8+0x0]
   0x7ffff7eb291e:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7eb2923:	mov    QWORD PTR [rip+0x103a3e],rax        # 0x7ffff7fb6368
   0x7ffff7eb292a:	mov    r13,rax
   0x7ffff7eb292d:	test   rax,rax
   0x7ffff7eb2930:	je     0x7ffff7eb2983
   0x7ffff7eb2932:	mov    rax,rbp
   0x7ffff7eb2935:	nop    DWORD PTR [rax]
   0x7ffff7eb2938:	mov    rdx,rbp
   0x7ffff7eb293b:	mov    esi,ebx
   0x7ffff7eb293d:	mov    rdi,rbp
   0x7ffff7eb2940:	sub    rdx,rax
   0x7ffff7eb2943:	sub    esi,edx
   0x7ffff7eb2945:	mov    rdx,r12
   0x7ffff7eb2948:	call   0x7ffff7e1f370 <fgets_unlocked>
   0x7ffff7eb294d:	test   rax,rax
   0x7ffff7eb2950:	jne    0x7ffff7eb2964
   0x7ffff7eb2952:	jmp    0x7ffff7eb2a68
   0x7ffff7eb2957:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2960:	add    rbp,0x1
   0x7ffff7eb2964:	movsx  rax,BYTE PTR [rbp+0x0]
   0x7ffff7eb2969:	cmp    al,0x23
   0x7ffff7eb296b:	setne  dl
   0x7ffff7eb296e:	cmp    al,0x2f
   0x7ffff7eb2970:	je     0x7ffff7eb29f0
   0x7ffff7eb2972:	test   dl,dl
   0x7ffff7eb2974:	je     0x7ffff7eb29f0
   0x7ffff7eb2976:	test   al,al
   0x7ffff7eb2978:	jne    0x7ffff7eb2960
   0x7ffff7eb297a:	mov    rax,QWORD PTR [rip+0x1039df]        # 0x7ffff7fb6360
   0x7ffff7eb2981:	jmp    0x7ffff7eb2938
   0x7ffff7eb2983:	mov    rdi,rbp
   0x7ffff7eb2986:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb298b:	mov    QWORD PTR [rip+0x1039ca],0x0        # 0x7ffff7fb6360
   0x7ffff7eb2996:	mov    rdi,r12
   0x7ffff7eb2999:	call   0x7ffff7e13cf0 <fclose>
   0x7ffff7eb299e:	lea    rax,[rip+0xbc797]        # 0x7ffff7f6f13c
   0x7ffff7eb29a5:	lea    rbx,[rip+0xbacec]        # 0x7ffff7f6d698
   0x7ffff7eb29ac:	movq   xmm1,rax
   0x7ffff7eb29b1:	movq   xmm0,rbx
   0x7ffff7eb29b6:	lea    rax,[rip+0x1039c3]        # 0x7ffff7fb6380
   0x7ffff7eb29bd:	punpcklqdq xmm0,xmm1
   0x7ffff7eb29c1:	movaps XMMWORD PTR [rip+0x1039b8],xmm0        # 0x7ffff7fb6380
   0x7ffff7eb29c8:	mov    rdx,QWORD PTR [rsp+0x98]
   0x7ffff7eb29d0:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb29d9:	jne    0x7ffff7eb2a84
   0x7ffff7eb29df:	add    rsp,0xa8
   0x7ffff7eb29e6:	pop    rbx
   0x7ffff7eb29e7:	pop    rbp
   0x7ffff7eb29e8:	pop    r12
   0x7ffff7eb29ea:	pop    r13
   0x7ffff7eb29ec:	ret
   0x7ffff7eb29ed:	nop    DWORD PTR [rax]
   0x7ffff7eb29f0:	cmp    al,0x23
   0x7ffff7eb29f2:	je     0x7ffff7eb297a
   0x7ffff7eb29f4:	test   al,al
   0x7ffff7eb29f6:	je     0x7ffff7eb297a
   0x7ffff7eb29f8:	cmp    BYTE PTR [rbp+0x1],0x0
   0x7ffff7eb29fc:	je     0x7ffff7eb297a
   0x7ffff7eb2a02:	mov    rcx,QWORD PTR [rip+0xfb3ef]        # 0x7ffff7faddf8
   0x7ffff7eb2a09:	mov    QWORD PTR [r13+0x0],rbp
   0x7ffff7eb2a0d:	lea    rsi,[r13+0x8]
   0x7ffff7eb2a11:	mov    rcx,QWORD PTR fs:[rcx]
   0x7ffff7eb2a15:	test   BYTE PTR [rcx+rax*2+0x1],0x20
   0x7ffff7eb2a1a:	jne    0x7ffff7eb2a4a
   0x7ffff7eb2a1c:	test   dl,dl
   0x7ffff7eb2a1e:	jne    0x7ffff7eb2a37
   0x7ffff7eb2a20:	jmp    0x7ffff7eb2a4a
   0x7ffff7eb2a22:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2a28:	cmp    dl,0x23
   0x7ffff7eb2a2b:	setne  dl
   0x7ffff7eb2a2e:	test   al,al
   0x7ffff7eb2a30:	setne  al
   0x7ffff7eb2a33:	test   dl,al
   0x7ffff7eb2a35:	je     0x7ffff7eb2a4a
   0x7ffff7eb2a37:	movsx  rdx,BYTE PTR [rbp+0x1]
   0x7ffff7eb2a3c:	add    rbp,0x1
   0x7ffff7eb2a40:	mov    rax,rdx
   0x7ffff7eb2a43:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
   0x7ffff7eb2a48:	je     0x7ffff7eb2a28
   0x7ffff7eb2a4a:	mov    BYTE PTR [rbp+0x0],0x0
   0x7ffff7eb2a4e:	mov    rax,QWORD PTR [rip+0x10390b]        # 0x7ffff7fb6360
   0x7ffff7eb2a55:	add    rbp,0x1
   0x7ffff7eb2a59:	mov    r13,rsi
   0x7ffff7eb2a5c:	jmp    0x7ffff7eb2938
   0x7ffff7eb2a61:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb2a68:	mov    QWORD PTR [r13+0x0],0x0
   0x7ffff7eb2a70:	mov    rdi,r12
   0x7ffff7eb2a73:	call   0x7ffff7e13cf0 <fclose>
   0x7ffff7eb2a78:	mov    rax,QWORD PTR [rip+0x1038e9]        # 0x7ffff7fb6368
   0x7ffff7eb2a7f:	jmp    0x7ffff7eb29c8
   0x7ffff7eb2a84:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb2a89:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb2a90 <getusershell>:	endbr64
   0x7ffff7eb2a94 <getusershell+4>:	mov    rax,QWORD PTR [rip+0x1038d5]        # 0x7ffff7fb6370
   0x7ffff7eb2a9b <getusershell+11>:	test   rax,rax
   0x7ffff7eb2a9e <getusershell+14>:	je     0x7ffff7eb2ac0 <getusershell+48>
   0x7ffff7eb2aa0 <getusershell+16>:	mov    r8,QWORD PTR [rax]
   0x7ffff7eb2aa3 <getusershell+19>:	test   r8,r8
   0x7ffff7eb2aa6 <getusershell+22>:	je     0x7ffff7eb2ab3 <getusershell+35>
   0x7ffff7eb2aa8 <getusershell+24>:	add    rax,0x8
   0x7ffff7eb2aac <getusershell+28>:	mov    QWORD PTR [rip+0x1038bd],rax        # 0x7ffff7fb6370
   0x7ffff7eb2ab3 <getusershell+35>:	mov    rax,r8
   0x7ffff7eb2ab6 <getusershell+38>:	ret
   0x7ffff7eb2ab7 <getusershell+39>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2ac0 <getusershell+48>:	sub    rsp,0x8
   0x7ffff7eb2ac4 <getusershell+52>:	call   0x7ffff7eb2840
   0x7ffff7eb2ac9 <getusershell+57>:	mov    r8,QWORD PTR [rax]
   0x7ffff7eb2acc <getusershell+60>:	mov    QWORD PTR [rip+0x10389d],rax        # 0x7ffff7fb6370
   0x7ffff7eb2ad3 <getusershell+67>:	test   r8,r8
   0x7ffff7eb2ad6 <getusershell+70>:	je     0x7ffff7eb2ae3 <getusershell+83>
   0x7ffff7eb2ad8 <getusershell+72>:	add    rax,0x8
   0x7ffff7eb2adc <getusershell+76>:	mov    QWORD PTR [rip+0x10388d],rax        # 0x7ffff7fb6370
   0x7ffff7eb2ae3 <getusershell+83>:	mov    rax,r8
   0x7ffff7eb2ae6 <getusershell+86>:	add    rsp,0x8
   0x7ffff7eb2aea <getusershell+90>:	ret
   0x7ffff7eb2aeb:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2af0 <endusershell>:	endbr64
   0x7ffff7eb2af4 <endusershell+4>:	sub    rsp,0x8
   0x7ffff7eb2af8 <endusershell+8>:	mov    rdi,QWORD PTR [rip+0x103869]        # 0x7ffff7fb6368
   0x7ffff7eb2aff <endusershell+15>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb2b04 <endusershell+20>:	mov    rdi,QWORD PTR [rip+0x103855]        # 0x7ffff7fb6360
   0x7ffff7eb2b0b <endusershell+27>:	mov    QWORD PTR [rip+0x103852],0x0        # 0x7ffff7fb6368
   0x7ffff7eb2b16 <endusershell+38>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb2b1b <endusershell+43>:	mov    QWORD PTR [rip+0x10383a],0x0        # 0x7ffff7fb6360
   0x7ffff7eb2b26 <endusershell+54>:	mov    QWORD PTR [rip+0x10383f],0x0        # 0x7ffff7fb6370
   0x7ffff7eb2b31 <endusershell+65>:	add    rsp,0x8
   0x7ffff7eb2b35 <endusershell+69>:	ret
   0x7ffff7eb2b36:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2b40 <setusershell>:	endbr64
   0x7ffff7eb2b44 <setusershell+4>:	sub    rsp,0x8
   0x7ffff7eb2b48 <setusershell+8>:	call   0x7ffff7eb2840
   0x7ffff7eb2b4d <setusershell+13>:	mov    QWORD PTR [rip+0x10381c],rax        # 0x7ffff7fb6370
   0x7ffff7eb2b54 <setusershell+20>:	add    rsp,0x8
   0x7ffff7eb2b58 <setusershell+24>:	ret
   0x7ffff7eb2b59:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb2b60 <getpass>:	endbr64
   0x7ffff7eb2b64 <getpass+4>:	push   r15
   0x7ffff7eb2b66 <getpass+6>:	lea    rsi,[rip+0xbc5e4]        # 0x7ffff7f6f151
   0x7ffff7eb2b6d <getpass+13>:	push   r14
   0x7ffff7eb2b6f <getpass+15>:	mov    r14,rdi
   0x7ffff7eb2b72 <getpass+18>:	lea    rdi,[rip+0xbab95]        # 0x7ffff7f6d70e
   0x7ffff7eb2b79 <getpass+25>:	push   r13
   0x7ffff7eb2b7b <getpass+27>:	push   r12
   0x7ffff7eb2b7d <getpass+29>:	push   rbp
   0x7ffff7eb2b7e <getpass+30>:	push   rbx
   0x7ffff7eb2b7f <getpass+31>:	sub    rsp,0x98
   0x7ffff7eb2b86 <getpass+38>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb2b8f <getpass+47>:	mov    QWORD PTR [rsp+0x88],rax
   0x7ffff7eb2b97 <getpass+55>:	xor    eax,eax
   0x7ffff7eb2b99 <getpass+57>:	call   0x7ffff7e146b0 <fopen64>
   0x7ffff7eb2b9e <getpass+62>:	mov    rbp,rax
   0x7ffff7eb2ba1 <getpass+65>:	test   rax,rax
   0x7ffff7eb2ba4 <getpass+68>:	je     0x7ffff7eb2c90 <getpass+304>
   0x7ffff7eb2baa <getpass+74>:	or     DWORD PTR [rax],0x8000
   0x7ffff7eb2bb0 <getpass+80>:	mov    r13,rax
   0x7ffff7eb2bb3 <getpass+83>:	mov    r12,rax
   0x7ffff7eb2bb6 <getpass+86>:	mov    rdi,r12
   0x7ffff7eb2bb9 <getpass+89>:	lea    r15,[rsp+0x40]
   0x7ffff7eb2bbe <getpass+94>:	call   0x7ffff7e1c5a0 <fileno_unlocked>
   0x7ffff7eb2bc3 <getpass+99>:	mov    rsi,r15
   0x7ffff7eb2bc6 <getpass+102>:	mov    edi,eax
   0x7ffff7eb2bc8 <getpass+104>:	call   0x7ffff7eaf0d0 <tcgetattr>
   0x7ffff7eb2bcd <getpass+109>:	xor    ebx,ebx
   0x7ffff7eb2bcf <getpass+111>:	test   eax,eax
   0x7ffff7eb2bd1 <getpass+113>:	je     0x7ffff7eb2cc0 <getpass+352>
   0x7ffff7eb2bd7 <getpass+119>:	mov    rdx,r14
   0x7ffff7eb2bda <getpass+122>:	lea    rsi,[rip+0xbdbd0]        # 0x7ffff7f707b1
   0x7ffff7eb2be1 <getpass+129>:	mov    rdi,r13
   0x7ffff7eb2be4 <getpass+132>:	xor    eax,eax
   0x7ffff7eb2be6 <getpass+134>:	call   0x7ffff7e13880
   0x7ffff7eb2beb <getpass+139>:	mov    rdi,r13
   0x7ffff7eb2bee <getpass+142>:	call   0x7ffff7e1f0d0 <fflush_unlocked>
   0x7ffff7eb2bf3 <getpass+147>:	mov    rdx,r12
   0x7ffff7eb2bf6 <getpass+150>:	lea    rsi,[rip+0x10379b]        # 0x7ffff7fb6398
   0x7ffff7eb2bfd <getpass+157>:	lea    rdi,[rip+0x10379c]        # 0x7ffff7fb63a0
   0x7ffff7eb2c04 <getpass+164>:	call   0x7ffff7df6e30 <getline>
   0x7ffff7eb2c09 <getpass+169>:	mov    rdx,QWORD PTR [rip+0x103790]        # 0x7ffff7fb63a0
   0x7ffff7eb2c10 <getpass+176>:	test   rdx,rdx
   0x7ffff7eb2c13 <getpass+179>:	je     0x7ffff7eb2c2c <getpass+204>
   0x7ffff7eb2c15 <getpass+181>:	test   rax,rax
   0x7ffff7eb2c18 <getpass+184>:	js     0x7ffff7eb2cb0 <getpass+336>
   0x7ffff7eb2c1e <getpass+190>:	lea    rax,[rdx+rax*1-0x1]
   0x7ffff7eb2c23 <getpass+195>:	cmp    BYTE PTR [rax],0xa
   0x7ffff7eb2c26 <getpass+198>:	je     0x7ffff7eb2d20 <getpass+448>
   0x7ffff7eb2c2c <getpass+204>:	test   ebx,ebx
   0x7ffff7eb2c2e <getpass+206>:	je     0x7ffff7eb2c47 <getpass+231>
   0x7ffff7eb2c30 <getpass+208>:	mov    rdi,r12
   0x7ffff7eb2c33 <getpass+211>:	call   0x7ffff7e1c5a0 <fileno_unlocked>
   0x7ffff7eb2c38 <getpass+216>:	mov    rdx,rsp
   0x7ffff7eb2c3b <getpass+219>:	mov    esi,0x2
   0x7ffff7eb2c40 <getpass+224>:	mov    edi,eax
   0x7ffff7eb2c42 <getpass+226>:	call   0x7ffff7eaeee0 <tcsetattr>
   0x7ffff7eb2c47 <getpass+231>:	mov    rax,QWORD PTR [rip+0xfb30a]        # 0x7ffff7fadf58
   0x7ffff7eb2c4e <getpass+238>:	cmp    QWORD PTR [rax],r12
   0x7ffff7eb2c51 <getpass+241>:	je     0x7ffff7eb2c5b <getpass+251>
   0x7ffff7eb2c53 <getpass+243>:	mov    rdi,r12
   0x7ffff7eb2c56 <getpass+246>:	call   0x7ffff7e13cf0 <fclose>
   0x7ffff7eb2c5b <getpass+251>:	mov    rax,QWORD PTR [rip+0x10373e]        # 0x7ffff7fb63a0
   0x7ffff7eb2c62 <getpass+258>:	mov    rdx,QWORD PTR [rsp+0x88]
   0x7ffff7eb2c6a <getpass+266>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb2c73 <getpass+275>:	jne    0x7ffff7eb2d41 <getpass+481>
   0x7ffff7eb2c79 <getpass+281>:	add    rsp,0x98
   0x7ffff7eb2c80 <getpass+288>:	pop    rbx
   0x7ffff7eb2c81 <getpass+289>:	pop    rbp
   0x7ffff7eb2c82 <getpass+290>:	pop    r12
   0x7ffff7eb2c84 <getpass+292>:	pop    r13
   0x7ffff7eb2c86 <getpass+294>:	pop    r14
   0x7ffff7eb2c88 <getpass+296>:	pop    r15
   0x7ffff7eb2c8a <getpass+298>:	ret
   0x7ffff7eb2c8b <getpass+299>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2c90 <getpass+304>:	mov    rax,QWORD PTR [rip+0xfb2c1]        # 0x7ffff7fadf58
   0x7ffff7eb2c97 <getpass+311>:	mov    r12,QWORD PTR [rax]
   0x7ffff7eb2c9a <getpass+314>:	mov    rax,QWORD PTR [rip+0xfb207]        # 0x7ffff7fadea8
   0x7ffff7eb2ca1 <getpass+321>:	mov    r13,QWORD PTR [rax]
   0x7ffff7eb2ca4 <getpass+324>:	cmp    r12,r13
   0x7ffff7eb2ca7 <getpass+327>:	cmove  rbp,r12
   0x7ffff7eb2cab <getpass+331>:	jmp    0x7ffff7eb2bb6 <getpass+86>
   0x7ffff7eb2cb0 <getpass+336>:	mov    BYTE PTR [rdx],0x0
   0x7ffff7eb2cb3 <getpass+339>:	jmp    0x7ffff7eb2c2c <getpass+204>
   0x7ffff7eb2cb8 <getpass+344>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2cc0 <getpass+352>:	mov    rax,QWORD PTR [rsp+0x70]
   0x7ffff7eb2cc5 <getpass+357>:	movdqa xmm0,XMMWORD PTR [rsp+0x40]
   0x7ffff7eb2ccb <getpass+363>:	mov    rdi,r12
   0x7ffff7eb2cce <getpass+366>:	xor    ebx,ebx
   0x7ffff7eb2cd0 <getpass+368>:	movdqa xmm1,XMMWORD PTR [rsp+0x50]
   0x7ffff7eb2cd6 <getpass+374>:	movdqa xmm2,XMMWORD PTR [rsp+0x60]
   0x7ffff7eb2cdc <getpass+380>:	mov    QWORD PTR [rsp+0x30],rax
   0x7ffff7eb2ce1 <getpass+385>:	mov    eax,DWORD PTR [rsp+0x78]
   0x7ffff7eb2ce5 <getpass+389>:	and    DWORD PTR [rsp+0x4c],0xfffffff6
   0x7ffff7eb2cea <getpass+394>:	movaps XMMWORD PTR [rsp],xmm0
   0x7ffff7eb2cee <getpass+398>:	movaps XMMWORD PTR [rsp+0x10],xmm1
   0x7ffff7eb2cf3 <getpass+403>:	movaps XMMWORD PTR [rsp+0x20],xmm2
   0x7ffff7eb2cf8 <getpass+408>:	mov    DWORD PTR [rsp+0x38],eax
   0x7ffff7eb2cfc <getpass+412>:	call   0x7ffff7e1c5a0 <fileno_unlocked>
   0x7ffff7eb2d01 <getpass+417>:	mov    rdx,r15
   0x7ffff7eb2d04 <getpass+420>:	mov    esi,0x2
   0x7ffff7eb2d09 <getpass+425>:	mov    edi,eax
   0x7ffff7eb2d0b <getpass+427>:	call   0x7ffff7eaeee0 <tcsetattr>
   0x7ffff7eb2d10 <getpass+432>:	test   eax,eax
   0x7ffff7eb2d12 <getpass+434>:	sete   bl
   0x7ffff7eb2d15 <getpass+437>:	jmp    0x7ffff7eb2bd7 <getpass+119>
   0x7ffff7eb2d1a <getpass+442>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2d20 <getpass+448>:	mov    BYTE PTR [rax],0x0
   0x7ffff7eb2d23 <getpass+451>:	test   ebx,ebx
   0x7ffff7eb2d25 <getpass+453>:	je     0x7ffff7eb2c47 <getpass+231>
   0x7ffff7eb2d2b <getpass+459>:	lea    rsi,[rip+0xba7fd]        # 0x7ffff7f6d52f
   0x7ffff7eb2d32 <getpass+466>:	mov    rdi,r13
   0x7ffff7eb2d35 <getpass+469>:	xor    eax,eax
   0x7ffff7eb2d37 <getpass+471>:	call   0x7ffff7e13880
   0x7ffff7eb2d3c <getpass+476>:	jmp    0x7ffff7eb2c2c <getpass+204>
   0x7ffff7eb2d41 <getpass+481>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb2d46 <getpass+486>:	endbr64
   0x7ffff7eb2d4a <getpass+490>:	mov    r12,rax
   0x7ffff7eb2d4d <getpass+493>:	jmp    0x7ffff7dbea3a
   0x7ffff7eb2d52:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2d5c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb2d60 <ttyslot>:	endbr64
   0x7ffff7eb2d64 <ttyslot+4>:	push   rbp
   0x7ffff7eb2d65 <ttyslot+5>:	mov    edi,0x48
   0x7ffff7eb2d6a <ttyslot+10>:	mov    rbp,rsp
   0x7ffff7eb2d6d <ttyslot+13>:	push   r13
   0x7ffff7eb2d6f <ttyslot+15>:	push   r12
   0x7ffff7eb2d71 <ttyslot+17>:	push   rbx
   0x7ffff7eb2d72 <ttyslot+18>:	sub    rsp,0x18
   0x7ffff7eb2d76 <ttyslot+22>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb2d7f <ttyslot+31>:	mov    QWORD PTR [rbp-0x28],rax
   0x7ffff7eb2d83 <ttyslot+35>:	xor    eax,eax
   0x7ffff7eb2d85 <ttyslot+37>:	call   0x7ffff7e822f0 <sysconf>
   0x7ffff7eb2d8a <ttyslot+42>:	mov    rcx,rsp
   0x7ffff7eb2d8d <ttyslot+45>:	add    rax,0x1
   0x7ffff7eb2d91 <ttyslot+49>:	mov    r12,rax
   0x7ffff7eb2d94 <ttyslot+52>:	mov    eax,0x20
   0x7ffff7eb2d99 <ttyslot+57>:	cmove  r12,rax
   0x7ffff7eb2d9d <ttyslot+61>:	lea    rax,[r12+0x17]
   0x7ffff7eb2da2 <ttyslot+66>:	mov    rdx,rax
   0x7ffff7eb2da5 <ttyslot+69>:	and    rax,0xfffffffffffff000
   0x7ffff7eb2dab <ttyslot+75>:	sub    rcx,rax
   0x7ffff7eb2dae <ttyslot+78>:	and    rdx,0xfffffffffffffff0
   0x7ffff7eb2db2 <ttyslot+82>:	cmp    rsp,rcx
   0x7ffff7eb2db5 <ttyslot+85>:	je     0x7ffff7eb2dcc <ttyslot+108>
   0x7ffff7eb2db7 <ttyslot+87>:	sub    rsp,0x1000
   0x7ffff7eb2dbe <ttyslot+94>:	or     QWORD PTR [rsp+0xff8],0x0
   0x7ffff7eb2dc7 <ttyslot+103>:	cmp    rsp,rcx
   0x7ffff7eb2dca <ttyslot+106>:	jne    0x7ffff7eb2db7 <ttyslot+87>
   0x7ffff7eb2dcc <ttyslot+108>:	and    edx,0xfff
   0x7ffff7eb2dd2 <ttyslot+114>:	sub    rsp,rdx
   0x7ffff7eb2dd5 <ttyslot+117>:	test   rdx,rdx
   0x7ffff7eb2dd8 <ttyslot+120>:	jne    0x7ffff7eb2e30 <ttyslot+208>
   0x7ffff7eb2dda <ttyslot+122>:	call   0x7ffff7eb2780 <setttyent>
   0x7ffff7eb2ddf <ttyslot+127>:	lea    r13,[rsp+0xf]
   0x7ffff7eb2de4 <ttyslot+132>:	xor    ebx,ebx
   0x7ffff7eb2de6 <ttyslot+134>:	and    r13,0xfffffffffffffff0
   0x7ffff7eb2dea <ttyslot+138>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2df0 <ttyslot+144>:	mov    rdx,r12
   0x7ffff7eb2df3 <ttyslot+147>:	mov    rsi,r13
   0x7ffff7eb2df6 <ttyslot+150>:	mov    edi,ebx
   0x7ffff7eb2df8 <ttyslot+152>:	call   0x7ffff7eaad80 <ttyname_r>
   0x7ffff7eb2dfd <ttyslot+157>:	test   eax,eax
   0x7ffff7eb2dff <ttyslot+159>:	je     0x7ffff7eb2e40 <ttyslot+224>
   0x7ffff7eb2e01 <ttyslot+161>:	add    ebx,0x1
   0x7ffff7eb2e04 <ttyslot+164>:	cmp    ebx,0x3
   0x7ffff7eb2e07 <ttyslot+167>:	jne    0x7ffff7eb2df0 <ttyslot+144>
   0x7ffff7eb2e09 <ttyslot+169>:	call   0x7ffff7eb27f0 <endttyent>
   0x7ffff7eb2e0e <ttyslot+174>:	xor    r12d,r12d
   0x7ffff7eb2e11 <ttyslot+177>:	mov    rax,QWORD PTR [rbp-0x28]
   0x7ffff7eb2e15 <ttyslot+181>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb2e1e <ttyslot+190>:	jne    0x7ffff7eb2e87 <ttyslot+295>
   0x7ffff7eb2e20 <ttyslot+192>:	lea    rsp,[rbp-0x18]
   0x7ffff7eb2e24 <ttyslot+196>:	mov    eax,r12d
   0x7ffff7eb2e27 <ttyslot+199>:	pop    rbx
   0x7ffff7eb2e28 <ttyslot+200>:	pop    r12
   0x7ffff7eb2e2a <ttyslot+202>:	pop    r13
   0x7ffff7eb2e2c <ttyslot+204>:	pop    rbp
   0x7ffff7eb2e2d <ttyslot+205>:	ret
   0x7ffff7eb2e2e <ttyslot+206>:	xchg   ax,ax
   0x7ffff7eb2e30 <ttyslot+208>:	or     QWORD PTR [rsp+rdx*1-0x8],0x0
   0x7ffff7eb2e36 <ttyslot+214>:	jmp    0x7ffff7eb2dda <ttyslot+122>
   0x7ffff7eb2e38 <ttyslot+216>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2e40 <ttyslot+224>:	mov    esi,0x2f
   0x7ffff7eb2e45 <ttyslot+229>:	mov    rdi,r13
   0x7ffff7eb2e48 <ttyslot+232>:	mov    r12d,0x1
   0x7ffff7eb2e4e <ttyslot+238>:	call   0x7ffff7dbd5f0 <*ABS*+0xa89e0@plt>
   0x7ffff7eb2e53 <ttyslot+243>:	lea    rbx,[rax+0x1]
   0x7ffff7eb2e57 <ttyslot+247>:	test   rax,rax
   0x7ffff7eb2e5a <ttyslot+250>:	cmove  rbx,r13
   0x7ffff7eb2e5e <ttyslot+254>:	jmp    0x7ffff7eb2e73 <ttyslot+275>
   0x7ffff7eb2e60 <ttyslot+256>:	mov    rdi,QWORD PTR [rax]
   0x7ffff7eb2e63 <ttyslot+259>:	mov    rsi,rbx
   0x7ffff7eb2e66 <ttyslot+262>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb2e6b <ttyslot+267>:	test   eax,eax
   0x7ffff7eb2e6d <ttyslot+269>:	je     0x7ffff7eb2e80 <ttyslot+288>
   0x7ffff7eb2e6f <ttyslot+271>:	add    r12d,0x1
   0x7ffff7eb2e73 <ttyslot+275>:	call   0x7ffff7eb2720 <getttyent>
   0x7ffff7eb2e78 <ttyslot+280>:	test   rax,rax
   0x7ffff7eb2e7b <ttyslot+283>:	jne    0x7ffff7eb2e60 <ttyslot+256>
   0x7ffff7eb2e7d <ttyslot+285>:	jmp    0x7ffff7eb2e09 <ttyslot+169>
   0x7ffff7eb2e7f <ttyslot+287>:	nop
   0x7ffff7eb2e80 <ttyslot+288>:	call   0x7ffff7eb27f0 <endttyent>
   0x7ffff7eb2e85 <ttyslot+293>:	jmp    0x7ffff7eb2e11 <ttyslot+177>
   0x7ffff7eb2e87 <ttyslot+295>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb2e8c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb2e90:	push   r14
   0x7ffff7eb2e92:	push   r13
   0x7ffff7eb2e94:	push   r12
   0x7ffff7eb2e96:	push   rbp
   0x7ffff7eb2e97:	push   rbx
   0x7ffff7eb2e98:	test   rdi,rdi
   0x7ffff7eb2e9b:	je     0x7ffff7eb2ea4
   0x7ffff7eb2e9d:	mov    QWORD PTR [rip+0x10350c],rdi        # 0x7ffff7fb63b0
   0x7ffff7eb2ea4:	mov    DWORD PTR [rip+0x10350e],esi        # 0x7ffff7fb63b8
   0x7ffff7eb2eaa:	test   edx,0xfffffc07
   0x7ffff7eb2eb0:	jne    0x7ffff7eb2eb8
   0x7ffff7eb2eb2:	mov    DWORD PTR [rip+0xfb57c],edx        # 0x7ffff7fae434
   0x7ffff7eb2eb8:	mov    r12d,0x2
   0x7ffff7eb2ebe:	lea    rbp,[rip+0xb825b]        # 0x7ffff7f6b120
   0x7ffff7eb2ec5:	mov    edi,DWORD PTR [rip+0xfb56d]        # 0x7ffff7fae438
   0x7ffff7eb2ecb:	cmp    edi,0xffffffff
   0x7ffff7eb2ece:	je     0x7ffff7eb2f30
   0x7ffff7eb2ed0:	cmp    BYTE PTR [rip+0x1034e5],0x0        # 0x7ffff7fb63bc
   0x7ffff7eb2ed7:	jne    0x7ffff7eb2f1d
   0x7ffff7eb2ed9:	mov    rbx,QWORD PTR [rip+0xfaf30]        # 0x7ffff7fade10
   0x7ffff7eb2ee0:	mov    edx,0x6e
   0x7ffff7eb2ee5:	mov    rsi,rbp
   0x7ffff7eb2ee8:	mov    r13d,DWORD PTR fs:[rbx]
   0x7ffff7eb2eec:	call   0x7ffff7ebc690 <connect>
   0x7ffff7eb2ef1:	cmp    eax,0xffffffff
   0x7ffff7eb2ef4:	jne    0x7ffff7eb2fb0
   0x7ffff7eb2efa:	mov    r14d,DWORD PTR fs:[rbx]
   0x7ffff7eb2efe:	mov    edi,DWORD PTR [rip+0xfb534]        # 0x7ffff7fae438
   0x7ffff7eb2f04:	mov    DWORD PTR [rip+0xfb52a],0xffffffff        # 0x7ffff7fae438
   0x7ffff7eb2f0e:	call   0x7ffff7eaa100 <close>
   0x7ffff7eb2f13:	mov    DWORD PTR fs:[rbx],r13d
   0x7ffff7eb2f17:	cmp    r14d,0x5b
   0x7ffff7eb2f1b:	je     0x7ffff7eb2f68
   0x7ffff7eb2f1d:	pop    rbx
   0x7ffff7eb2f1e:	pop    rbp
   0x7ffff7eb2f1f:	pop    r12
   0x7ffff7eb2f21:	pop    r13
   0x7ffff7eb2f23:	pop    r14
   0x7ffff7eb2f25:	ret
   0x7ffff7eb2f26:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2f30:	test   BYTE PTR [rip+0x103481],0x8        # 0x7ffff7fb63b8
   0x7ffff7eb2f37:	je     0x7ffff7eb2f1d
   0x7ffff7eb2f39:	mov    esi,DWORD PTR [rip+0xfb4fd]        # 0x7ffff7fae43c
   0x7ffff7eb2f3f:	mov    edi,0x1
   0x7ffff7eb2f44:	xor    edx,edx
   0x7ffff7eb2f46:	or     esi,0x80000
   0x7ffff7eb2f4c:	call   0x7ffff7ebcce0 <socket>
   0x7ffff7eb2f51:	mov    DWORD PTR [rip+0xfb4e1],eax        # 0x7ffff7fae438
   0x7ffff7eb2f57:	mov    edi,eax
   0x7ffff7eb2f59:	cmp    eax,0xffffffff
   0x7ffff7eb2f5c:	jne    0x7ffff7eb2ed0
   0x7ffff7eb2f62:	jmp    0x7ffff7eb2f1d
   0x7ffff7eb2f64:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb2f68:	cmp    DWORD PTR [rip+0xfb4cd],0x2        # 0x7ffff7fae43c
   0x7ffff7eb2f6f:	je     0x7ffff7eb2f90
   0x7ffff7eb2f71:	mov    DWORD PTR [rip+0xfb4c1],0x2        # 0x7ffff7fae43c
   0x7ffff7eb2f7b:	cmp    r12d,0x1
   0x7ffff7eb2f7f:	je     0x7ffff7eb2f1d
   0x7ffff7eb2f81:	mov    r12d,0x1
   0x7ffff7eb2f87:	jmp    0x7ffff7eb2ec5
   0x7ffff7eb2f8c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb2f90:	mov    DWORD PTR [rip+0xfb4a2],0x1        # 0x7ffff7fae43c
   0x7ffff7eb2f9a:	cmp    r12d,0x1
   0x7ffff7eb2f9e:	je     0x7ffff7eb2f1d
   0x7ffff7eb2fa4:	jmp    0x7ffff7eb2f81
   0x7ffff7eb2fa6:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb2fb0:	mov    BYTE PTR [rip+0x103405],0x1        # 0x7ffff7fb63bc
   0x7ffff7eb2fb7:	jmp    0x7ffff7eb2f1d
   0x7ffff7eb2fbc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb2fc0:	endbr64
   0x7ffff7eb2fc4:	push   r15
   0x7ffff7eb2fc6:	mov    r15,rdx
   0x7ffff7eb2fc9:	push   r14
   0x7ffff7eb2fcb:	mov    r14,rsi
   0x7ffff7eb2fce:	push   r13
   0x7ffff7eb2fd0:	push   r12
   0x7ffff7eb2fd2:	mov    r12d,edi
   0x7ffff7eb2fd5:	push   rbp
   0x7ffff7eb2fd6:	push   rbx
   0x7ffff7eb2fd7:	mov    ebx,ecx
   0x7ffff7eb2fd9:	sub    rsp,0xe8
   0x7ffff7eb2fe0:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb2fe9:	mov    QWORD PTR [rsp+0xd8],rax
   0x7ffff7eb2ff1:	xor    eax,eax
   0x7ffff7eb2ff3:	mov    rax,QWORD PTR [rip+0xfae16]        # 0x7ffff7fade10
   0x7ffff7eb2ffa:	and    edi,0xfffffc00
   0x7ffff7eb3000:	mov    QWORD PTR [rsp+0x20],0x0
   0x7ffff7eb3009:	mov    QWORD PTR [rsp+0x28],0x0
   0x7ffff7eb3012:	mov    eax,DWORD PTR fs:[rax]
   0x7ffff7eb3015:	mov    DWORD PTR [rsp+0xc],eax
   0x7ffff7eb3019:	jne    0x7ffff7eb3278
   0x7ffff7eb301f:	xor    eax,eax
   0x7ffff7eb3021:	mov    edx,0x1
   0x7ffff7eb3026:	lock cmpxchg DWORD PTR [rip+0x10337a],edx        # 0x7ffff7fb63a8
   0x7ffff7eb302e:	jne    0x7ffff7eb34a8
   0x7ffff7eb3034:	mov    r13d,DWORD PTR [rip+0xfb3f5]        # 0x7ffff7fae430
   0x7ffff7eb303b:	mov    ecx,r12d
   0x7ffff7eb303e:	and    ecx,0x7
   0x7ffff7eb3041:	sar    r13d,cl
   0x7ffff7eb3044:	and    r13d,0x1
   0x7ffff7eb3048:	je     0x7ffff7eb3220
   0x7ffff7eb304e:	test   r12d,0x3f8
   0x7ffff7eb3055:	jne    0x7ffff7eb305e
   0x7ffff7eb3057:	or     r12d,DWORD PTR [rip+0xfb3d6]        # 0x7ffff7fae434
   0x7ffff7eb305e:	lea    rsi,[rsp+0x28]
   0x7ffff7eb3063:	lea    rdi,[rsp+0x20]
   0x7ffff7eb3068:	call   0x7ffff7e1cd60 <open_memstream>
   0x7ffff7eb306d:	mov    rbp,rax
   0x7ffff7eb3070:	test   rax,rax
   0x7ffff7eb3073:	je     0x7ffff7eb3370
   0x7ffff7eb3079:	or     DWORD PTR [rax],0x8000
   0x7ffff7eb307f:	mov    rdi,rax
   0x7ffff7eb3082:	xor    eax,eax
   0x7ffff7eb3084:	mov    edx,r12d
   0x7ffff7eb3087:	lea    rsi,[rip+0xbc0c8]        # 0x7ffff7f6f156
   0x7ffff7eb308e:	call   0x7ffff7df56b0 <fprintf>
   0x7ffff7eb3093:	lea    rsi,[rsp+0x30]
   0x7ffff7eb3098:	mov    edi,0x5
   0x7ffff7eb309d:	call   0x7ffff7e7a6c0 <clock_gettime>
   0x7ffff7eb30a2:	mov    rax,QWORD PTR [rsp+0x30]
   0x7ffff7eb30a7:	lea    rsi,[rsp+0x40]
   0x7ffff7eb30ac:	lea    rdi,[rsp+0x18]
   0x7ffff7eb30b1:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7eb30b6:	call   0x7ffff7e6dfc0 <localtime_r>
   0x7ffff7eb30bb:	mov    rdi,QWORD PTR [rbp+0x28]
   0x7ffff7eb30bf:	mov    rsi,QWORD PTR [rbp+0x30]
   0x7ffff7eb30c3:	mov    rcx,rax
   0x7ffff7eb30c6:	lea    r8,[rip+0xfa8d3]        # 0x7ffff7fad9a0
   0x7ffff7eb30cd:	lea    rdx,[rip+0xbc087]        # 0x7ffff7f6f15b
   0x7ffff7eb30d4:	sub    rsi,rdi
   0x7ffff7eb30d7:	call   0x7ffff7e77e70 <strftime_l>
   0x7ffff7eb30dc:	add    QWORD PTR [rbp+0x28],rax
   0x7ffff7eb30e0:	mov    rdi,rbp
   0x7ffff7eb30e3:	call   0x7ffff7e14dc0 <ftell>
   0x7ffff7eb30e8:	mov    rdi,QWORD PTR [rip+0x1032c1]        # 0x7ffff7fb63b0
   0x7ffff7eb30ef:	mov    r12,rax
   0x7ffff7eb30f2:	test   rdi,rdi
   0x7ffff7eb30f5:	je     0x7ffff7eb3328
   0x7ffff7eb30fb:	mov    rsi,rbp
   0x7ffff7eb30fe:	call   0x7ffff7e1f410 <fputs_unlocked>
   0x7ffff7eb3103:	test   BYTE PTR [rip+0x1032ae],0x1        # 0x7ffff7fb63b8
   0x7ffff7eb310a:	jne    0x7ffff7eb334f
   0x7ffff7eb3110:	cmp    QWORD PTR [rip+0x103298],0x0        # 0x7ffff7fb63b0
   0x7ffff7eb3118:	je     0x7ffff7eb314c
   0x7ffff7eb311a:	mov    rax,QWORD PTR [rbp+0x28]
   0x7ffff7eb311e:	cmp    rax,QWORD PTR [rbp+0x30]
   0x7ffff7eb3122:	jae    0x7ffff7eb34d8
   0x7ffff7eb3128:	lea    rdx,[rax+0x1]
   0x7ffff7eb312c:	mov    QWORD PTR [rbp+0x28],rdx
   0x7ffff7eb3130:	mov    BYTE PTR [rax],0x3a
   0x7ffff7eb3133:	mov    rax,QWORD PTR [rbp+0x28]
   0x7ffff7eb3137:	cmp    rax,QWORD PTR [rbp+0x30]
   0x7ffff7eb313b:	jae    0x7ffff7eb34c0
   0x7ffff7eb3141:	lea    rdx,[rax+0x1]
   0x7ffff7eb3145:	mov    QWORD PTR [rbp+0x28],rdx
   0x7ffff7eb3149:	mov    BYTE PTR [rax],0x20
   0x7ffff7eb314c:	mov    edi,DWORD PTR [rsp+0xc]
   0x7ffff7eb3150:	mov    rax,QWORD PTR [rip+0xfacb9]        # 0x7ffff7fade10
   0x7ffff7eb3157:	mov    ecx,ebx
   0x7ffff7eb3159:	mov    rdx,r15
   0x7ffff7eb315c:	mov    rsi,r14
   0x7ffff7eb315f:	mov    DWORD PTR fs:[rax],edi
   0x7ffff7eb3162:	mov    rdi,rbp
   0x7ffff7eb3165:	call   0x7ffff7e0a0b0
   0x7ffff7eb316a:	mov    rdi,rbp
   0x7ffff7eb316d:	call   0x7ffff7e13cf0 <fclose>
   0x7ffff7eb3172:	mov    rbp,QWORD PTR [rsp+0x20]
   0x7ffff7eb3177:	mov    rbx,rbp
   0x7ffff7eb317a:	test   BYTE PTR [rip+0x103237],0x20        # 0x7ffff7fb63b8
   0x7ffff7eb3181:	je     0x7ffff7eb31df
   0x7ffff7eb3183:	lea    rax,[rbx+r12*1]
   0x7ffff7eb3187:	mov    QWORD PTR [rsp+0x80],rax
   0x7ffff7eb318f:	mov    rax,QWORD PTR [rsp+0x28]
   0x7ffff7eb3194:	mov    rdx,rax
   0x7ffff7eb3197:	sub    rdx,r12
   0x7ffff7eb319a:	mov    QWORD PTR [rsp+0x88],rdx
   0x7ffff7eb31a2:	cmp    BYTE PTR [rbx+rax*1-0x1],0xa
   0x7ffff7eb31a7:	je     0x7ffff7eb31ca
   0x7ffff7eb31a9:	lea    rax,[rip+0xba37f]        # 0x7ffff7f6d52f
   0x7ffff7eb31b0:	mov    r13d,0x2
   0x7ffff7eb31b6:	mov    QWORD PTR [rsp+0x98],0x1
   0x7ffff7eb31c2:	mov    QWORD PTR [rsp+0x90],rax
   0x7ffff7eb31ca:	lea    rsi,[rsp+0x80]
   0x7ffff7eb31d2:	mov    edx,r13d
   0x7ffff7eb31d5:	mov    edi,0x2
   0x7ffff7eb31da:	call   0x7ffff7eafbf0 <writev>
   0x7ffff7eb31df:	cmp    BYTE PTR [rip+0x1031d6],0x0        # 0x7ffff7fb63bc
   0x7ffff7eb31e6:	je     0x7ffff7eb32a0
   0x7ffff7eb31ec:	cmp    DWORD PTR [rip+0xfb249],0x1        # 0x7ffff7fae43c
   0x7ffff7eb31f3:	jne    0x7ffff7eb31fb
   0x7ffff7eb31f5:	add    QWORD PTR [rsp+0x28],0x1
   0x7ffff7eb31fb:	mov    rdx,QWORD PTR [rsp+0x28]
   0x7ffff7eb3200:	mov    rsi,QWORD PTR [rsp+0x20]
   0x7ffff7eb3205:	mov    ecx,0x4000
   0x7ffff7eb320a:	mov    edi,DWORD PTR [rip+0xfb228]        # 0x7ffff7fae438
   0x7ffff7eb3210:	call   0x7ffff7ebca40 <send>
   0x7ffff7eb3215:	test   rax,rax
   0x7ffff7eb3218:	js     0x7ffff7eb33f0
   0x7ffff7eb321e:	xchg   ax,ax
   0x7ffff7eb3220:	xor    eax,eax
   0x7ffff7eb3222:	xchg   DWORD PTR [rip+0x103180],eax        # 0x7ffff7fb63a8
   0x7ffff7eb3228:	cmp    eax,0x1
   0x7ffff7eb322b:	jg     0x7ffff7eb3490
   0x7ffff7eb3231:	mov    rdi,QWORD PTR [rsp+0x20]
   0x7ffff7eb3236:	lea    rax,[rsp+0xb0]
   0x7ffff7eb323e:	cmp    rdi,rax
   0x7ffff7eb3241:	je     0x7ffff7eb3248
   0x7ffff7eb3243:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb3248:	mov    rax,QWORD PTR [rsp+0xd8]
   0x7ffff7eb3250:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb3259:	jne    0x7ffff7eb34ea
   0x7ffff7eb325f:	add    rsp,0xe8
   0x7ffff7eb3266:	pop    rbx
   0x7ffff7eb3267:	pop    rbp
   0x7ffff7eb3268:	pop    r12
   0x7ffff7eb326a:	pop    r13
   0x7ffff7eb326c:	pop    r14
   0x7ffff7eb326e:	pop    r15
   0x7ffff7eb3270:	ret
   0x7ffff7eb3271:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb3278:	mov    edx,r12d
   0x7ffff7eb327b:	lea    rsi,[rip+0xc1b36]        # 0x7ffff7f74db8
   0x7ffff7eb3282:	mov    edi,0x23
   0x7ffff7eb3287:	xor    eax,eax
   0x7ffff7eb3289:	call   0x7ffff7eb35b0 <syslog>
   0x7ffff7eb328e:	and    r12d,0x3ff
   0x7ffff7eb3295:	jmp    0x7ffff7eb301f
   0x7ffff7eb329a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb32a0:	mov    esi,DWORD PTR [rip+0x103112]        # 0x7ffff7fb63b8
   0x7ffff7eb32a6:	mov    edx,DWORD PTR [rip+0xfb188]        # 0x7ffff7fae434
   0x7ffff7eb32ac:	xor    edi,edi
   0x7ffff7eb32ae:	or     esi,0x8
   0x7ffff7eb32b1:	call   0x7ffff7eb2e90
   0x7ffff7eb32b6:	cmp    DWORD PTR [rip+0xfb17f],0x1        # 0x7ffff7fae43c
   0x7ffff7eb32bd:	movzx  eax,BYTE PTR [rip+0x1030f8]        # 0x7ffff7fb63bc
   0x7ffff7eb32c4:	je     0x7ffff7eb34ef
   0x7ffff7eb32ca:	test   al,al
   0x7ffff7eb32cc:	jne    0x7ffff7eb31fb
   0x7ffff7eb32d2:	test   BYTE PTR [rip+0x1030df],0x2        # 0x7ffff7fb63b8
   0x7ffff7eb32d9:	je     0x7ffff7eb3220
   0x7ffff7eb32df:	xor    edx,edx
   0x7ffff7eb32e1:	mov    esi,0x80101
   0x7ffff7eb32e6:	lea    rdi,[rip+0xbbe7d]        # 0x7ffff7f6f16a
   0x7ffff7eb32ed:	xor    eax,eax
   0x7ffff7eb32ef:	call   0x7ffff7ea9690 <open64>
   0x7ffff7eb32f4:	mov    r13d,eax
   0x7ffff7eb32f7:	test   eax,eax
   0x7ffff7eb32f9:	js     0x7ffff7eb3220
   0x7ffff7eb32ff:	mov    rdx,QWORD PTR [rsp+0x20]
   0x7ffff7eb3304:	mov    edi,eax
   0x7ffff7eb3306:	lea    rsi,[rip+0xbbe6a]        # 0x7ffff7f6f177
   0x7ffff7eb330d:	xor    eax,eax
   0x7ffff7eb330f:	add    rdx,r12
   0x7ffff7eb3312:	call   0x7ffff7df5a90 <dprintf>
   0x7ffff7eb3317:	mov    edi,r13d
   0x7ffff7eb331a:	call   0x7ffff7eaa100 <close>
   0x7ffff7eb331f:	jmp    0x7ffff7eb3220
   0x7ffff7eb3324:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb3328:	mov    rax,QWORD PTR [rip+0xfac79]        # 0x7ffff7fadfa8
   0x7ffff7eb332f:	mov    rdi,QWORD PTR [rax]
   0x7ffff7eb3332:	mov    QWORD PTR [rip+0x103077],rdi        # 0x7ffff7fb63b0
   0x7ffff7eb3339:	test   rdi,rdi
   0x7ffff7eb333c:	jne    0x7ffff7eb30fb
   0x7ffff7eb3342:	test   BYTE PTR [rip+0x10306f],0x1        # 0x7ffff7fb63b8
   0x7ffff7eb3349:	je     0x7ffff7eb314c
   0x7ffff7eb334f:	call   0x7ffff7e810b0 <getpid>
   0x7ffff7eb3354:	mov    edx,eax
   0x7ffff7eb3356:	lea    rsi,[rip+0xbbe08]        # 0x7ffff7f6f165
   0x7ffff7eb335d:	mov    rdi,rbp
   0x7ffff7eb3360:	xor    eax,eax
   0x7ffff7eb3362:	call   0x7ffff7df56b0 <fprintf>
   0x7ffff7eb3367:	jmp    0x7ffff7eb3110
   0x7ffff7eb336c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb3370:	movdqa xmm0,XMMWORD PTR [rip+0xc4138]        # 0x7ffff7f774b0
   0x7ffff7eb3378:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   0x7ffff7eb3380:	call   0x7ffff7e810b0 <getpid>
   0x7ffff7eb3385:	lea    rbx,[rsp+0xb0]
   0x7ffff7eb338d:	mov    rsi,rbx
   0x7ffff7eb3390:	movsxd rdx,eax
   0x7ffff7eb3393:	mov    ecx,eax
   0x7ffff7eb3395:	sub    rsi,0x1
   0x7ffff7eb3399:	imul   rdx,rdx,0x66666667
   0x7ffff7eb33a0:	sar    ecx,0x1f
   0x7ffff7eb33a3:	sar    rdx,0x22
   0x7ffff7eb33a7:	sub    edx,ecx
   0x7ffff7eb33a9:	lea    ecx,[rdx+rdx*4]
   0x7ffff7eb33ac:	add    ecx,ecx
   0x7ffff7eb33ae:	sub    eax,ecx
   0x7ffff7eb33b0:	add    eax,0x30
   0x7ffff7eb33b3:	mov    BYTE PTR [rsi],al
   0x7ffff7eb33b5:	mov    eax,edx
   0x7ffff7eb33b7:	test   edx,edx
   0x7ffff7eb33b9:	jne    0x7ffff7eb3390
   0x7ffff7eb33bb:	mov    rdx,rbx
   0x7ffff7eb33be:	lea    rdi,[rsp+0xbf]
   0x7ffff7eb33c6:	xor    r12d,r12d
   0x7ffff7eb33c9:	sub    rdx,rsi
   0x7ffff7eb33cc:	call   0x7ffff7dbd3e0 <*ABS*+0xa9850@plt>
   0x7ffff7eb33d1:	mov    edx,0x5d
   0x7ffff7eb33d6:	mov    QWORD PTR [rsp+0x20],rbx
   0x7ffff7eb33db:	mov    WORD PTR [rax],dx
   0x7ffff7eb33de:	add    rax,0x1
   0x7ffff7eb33e2:	sub    rax,rbx
   0x7ffff7eb33e5:	mov    QWORD PTR [rsp+0x28],rax
   0x7ffff7eb33ea:	jmp    0x7ffff7eb317a
   0x7ffff7eb33ef:	nop
   0x7ffff7eb33f0:	cmp    BYTE PTR [rip+0x102fc5],0x0        # 0x7ffff7fb63bc
   0x7ffff7eb33f7:	je     0x7ffff7eb32d2
   0x7ffff7eb33fd:	mov    edi,DWORD PTR [rip+0xfb035]        # 0x7ffff7fae438
   0x7ffff7eb3403:	call   0x7ffff7eaa100 <close>
   0x7ffff7eb3408:	mov    esi,DWORD PTR [rip+0x102faa]        # 0x7ffff7fb63b8
   0x7ffff7eb340e:	mov    edx,DWORD PTR [rip+0xfb020]        # 0x7ffff7fae434
   0x7ffff7eb3414:	xor    edi,edi
   0x7ffff7eb3416:	mov    DWORD PTR [rip+0xfb018],0xffffffff        # 0x7ffff7fae438
   0x7ffff7eb3420:	mov    BYTE PTR [rip+0x102f95],0x0        # 0x7ffff7fb63bc
   0x7ffff7eb3427:	or     esi,0x8
   0x7ffff7eb342a:	call   0x7ffff7eb2e90
   0x7ffff7eb342f:	cmp    BYTE PTR [rip+0x102f86],0x0        # 0x7ffff7fb63bc
   0x7ffff7eb3436:	je     0x7ffff7eb32d2
   0x7ffff7eb343c:	mov    rdx,QWORD PTR [rsp+0x28]
   0x7ffff7eb3441:	mov    rsi,QWORD PTR [rsp+0x20]
   0x7ffff7eb3446:	mov    ecx,0x4000
   0x7ffff7eb344b:	mov    edi,DWORD PTR [rip+0xfafe7]        # 0x7ffff7fae438
   0x7ffff7eb3451:	call   0x7ffff7ebca40 <send>
   0x7ffff7eb3456:	test   rax,rax
   0x7ffff7eb3459:	jns    0x7ffff7eb3220
   0x7ffff7eb345f:	cmp    BYTE PTR [rip+0x102f56],0x0        # 0x7ffff7fb63bc
   0x7ffff7eb3466:	je     0x7ffff7eb32d2
   0x7ffff7eb346c:	mov    edi,DWORD PTR [rip+0xfafc6]        # 0x7ffff7fae438
   0x7ffff7eb3472:	call   0x7ffff7eaa100 <close>
   0x7ffff7eb3477:	mov    DWORD PTR [rip+0xfafb7],0xffffffff        # 0x7ffff7fae438
   0x7ffff7eb3481:	mov    BYTE PTR [rip+0x102f34],0x0        # 0x7ffff7fb63bc
   0x7ffff7eb3488:	jmp    0x7ffff7eb32d2
   0x7ffff7eb348d:	nop    DWORD PTR [rax]
   0x7ffff7eb3490:	lea    rdi,[rip+0x102f11]        # 0x7ffff7fb63a8
   0x7ffff7eb3497:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7eb349c:	jmp    0x7ffff7eb3231
   0x7ffff7eb34a1:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb34a8:	lea    rdi,[rip+0x102ef9]        # 0x7ffff7fb63a8
   0x7ffff7eb34af:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7eb34b4:	jmp    0x7ffff7eb3034
   0x7ffff7eb34b9:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb34c0:	mov    esi,0x20
   0x7ffff7eb34c5:	mov    rdi,rbp
   0x7ffff7eb34c8:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7eb34cd:	jmp    0x7ffff7eb314c
   0x7ffff7eb34d2:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb34d8:	mov    esi,0x3a
   0x7ffff7eb34dd:	mov    rdi,rbp
   0x7ffff7eb34e0:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7eb34e5:	jmp    0x7ffff7eb3133
   0x7ffff7eb34ea:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb34ef:	add    QWORD PTR [rsp+0x28],0x1
   0x7ffff7eb34f5:	jmp    0x7ffff7eb32ca
   0x7ffff7eb34fa:	endbr64
   0x7ffff7eb34fe:	mov    r12,rax
   0x7ffff7eb3501:	jmp    0x7ffff7dbea4f
   0x7ffff7eb3506:	endbr64
   0x7ffff7eb350a:	mov    r12,rax
   0x7ffff7eb350d:	jmp    0x7ffff7dbea4f
   0x7ffff7eb3512:	endbr64
   0x7ffff7eb3516:	mov    r12,rax
   0x7ffff7eb3519:	jmp    0x7ffff7dbea4f
   0x7ffff7eb351e:	endbr64
   0x7ffff7eb3522:	mov    r12,rax
   0x7ffff7eb3525:	jmp    0x7ffff7dbea4f
   0x7ffff7eb352a:	endbr64
   0x7ffff7eb352e:	mov    r12,rax
   0x7ffff7eb3531:	jmp    0x7ffff7dbea51
   0x7ffff7eb3536:	endbr64
   0x7ffff7eb353a:	mov    r12,rax
   0x7ffff7eb353d:	jmp    0x7ffff7dbea4f
   0x7ffff7eb3542:	endbr64
   0x7ffff7eb3546:	mov    r12,rax
   0x7ffff7eb3549:	jmp    0x7ffff7dbea4f
   0x7ffff7eb354e:	endbr64
   0x7ffff7eb3552:	mov    r12,rax
   0x7ffff7eb3555:	jmp    0x7ffff7dbea4f
   0x7ffff7eb355a:	endbr64
   0x7ffff7eb355e:	mov    r12,rax
   0x7ffff7eb3561:	jmp    0x7ffff7dbea4f
   0x7ffff7eb3566:	endbr64
   0x7ffff7eb356a:	mov    r12,rax
   0x7ffff7eb356d:	jmp    0x7ffff7dbea4f
   0x7ffff7eb3572:	endbr64
   0x7ffff7eb3576:	mov    r12,rax
   0x7ffff7eb3579:	jmp    0x7ffff7dbea4f
   0x7ffff7eb357e:	endbr64
   0x7ffff7eb3582:	mov    r12,rax
   0x7ffff7eb3585:	jmp    0x7ffff7dbea4f
   0x7ffff7eb358a:	endbr64
   0x7ffff7eb358e:	mov    r12,rax
   0x7ffff7eb3591:	jmp    0x7ffff7dbea4f
   0x7ffff7eb3596:	endbr64
   0x7ffff7eb359a:	mov    r12,rax
   0x7ffff7eb359d:	jmp    0x7ffff7dbea4f
   0x7ffff7eb35a2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb35ad:	nop    DWORD PTR [rax]
   0x7ffff7eb35b0 <syslog>:	endbr64
   0x7ffff7eb35b4 <syslog+4>:	sub    rsp,0xd8
   0x7ffff7eb35bb <syslog+11>:	mov    QWORD PTR [rsp+0x30],rdx
   0x7ffff7eb35c0 <syslog+16>:	mov    QWORD PTR [rsp+0x38],rcx
   0x7ffff7eb35c5 <syslog+21>:	mov    QWORD PTR [rsp+0x40],r8
   0x7ffff7eb35ca <syslog+26>:	mov    QWORD PTR [rsp+0x48],r9
   0x7ffff7eb35cf <syslog+31>:	test   al,al
   0x7ffff7eb35d1 <syslog+33>:	je     0x7ffff7eb360a <syslog+90>
   0x7ffff7eb35d3 <syslog+35>:	movaps XMMWORD PTR [rsp+0x50],xmm0
   0x7ffff7eb35d8 <syslog+40>:	movaps XMMWORD PTR [rsp+0x60],xmm1
   0x7ffff7eb35dd <syslog+45>:	movaps XMMWORD PTR [rsp+0x70],xmm2
   0x7ffff7eb35e2 <syslog+50>:	movaps XMMWORD PTR [rsp+0x80],xmm3
   0x7ffff7eb35ea <syslog+58>:	movaps XMMWORD PTR [rsp+0x90],xmm4
   0x7ffff7eb35f2 <syslog+66>:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   0x7ffff7eb35fa <syslog+74>:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   0x7ffff7eb3602 <syslog+82>:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   0x7ffff7eb360a <syslog+90>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb3613 <syslog+99>:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7eb3618 <syslog+104>:	xor    eax,eax
   0x7ffff7eb361a <syslog+106>:	lea    rax,[rsp+0xe0]
   0x7ffff7eb3622 <syslog+114>:	xor    ecx,ecx
   0x7ffff7eb3624 <syslog+116>:	mov    rdx,rsp
   0x7ffff7eb3627 <syslog+119>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7eb362c <syslog+124>:	lea    rax,[rsp+0x20]
   0x7ffff7eb3631 <syslog+129>:	mov    QWORD PTR [rsp+0x10],rax
   0x7ffff7eb3636 <syslog+134>:	mov    DWORD PTR [rsp],0x10
   0x7ffff7eb363d <syslog+141>:	mov    DWORD PTR [rsp+0x4],0x30
   0x7ffff7eb3645 <syslog+149>:	call   0x7ffff7eb2fc0
   0x7ffff7eb364a <syslog+154>:	mov    rax,QWORD PTR [rsp+0x18]
   0x7ffff7eb364f <syslog+159>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb3658 <syslog+168>:	jne    0x7ffff7eb3662 <syslog+178>
   0x7ffff7eb365a <syslog+170>:	add    rsp,0xd8
   0x7ffff7eb3661 <syslog+177>:	ret
   0x7ffff7eb3662 <syslog+178>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb3667:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3670 <vsyslog>:	endbr64
   0x7ffff7eb3674 <vsyslog+4>:	xor    ecx,ecx
   0x7ffff7eb3676 <vsyslog+6>:	jmp    0x7ffff7eb2fc0
   0x7ffff7eb367b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3680 <__syslog_chk>:	endbr64
   0x7ffff7eb3684 <__syslog_chk+4>:	sub    rsp,0xd8
   0x7ffff7eb368b <__syslog_chk+11>:	mov    r10d,esi
   0x7ffff7eb368e <__syslog_chk+14>:	mov    rsi,rdx
   0x7ffff7eb3691 <__syslog_chk+17>:	mov    QWORD PTR [rsp+0x38],rcx
   0x7ffff7eb3696 <__syslog_chk+22>:	mov    QWORD PTR [rsp+0x40],r8
   0x7ffff7eb369b <__syslog_chk+27>:	mov    QWORD PTR [rsp+0x48],r9
   0x7ffff7eb36a0 <__syslog_chk+32>:	test   al,al
   0x7ffff7eb36a2 <__syslog_chk+34>:	je     0x7ffff7eb36db <__syslog_chk+91>
   0x7ffff7eb36a4 <__syslog_chk+36>:	movaps XMMWORD PTR [rsp+0x50],xmm0
   0x7ffff7eb36a9 <__syslog_chk+41>:	movaps XMMWORD PTR [rsp+0x60],xmm1
   0x7ffff7eb36ae <__syslog_chk+46>:	movaps XMMWORD PTR [rsp+0x70],xmm2
   0x7ffff7eb36b3 <__syslog_chk+51>:	movaps XMMWORD PTR [rsp+0x80],xmm3
   0x7ffff7eb36bb <__syslog_chk+59>:	movaps XMMWORD PTR [rsp+0x90],xmm4
   0x7ffff7eb36c3 <__syslog_chk+67>:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   0x7ffff7eb36cb <__syslog_chk+75>:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   0x7ffff7eb36d3 <__syslog_chk+83>:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   0x7ffff7eb36db <__syslog_chk+91>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb36e4 <__syslog_chk+100>:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7eb36e9 <__syslog_chk+105>:	xor    eax,eax
   0x7ffff7eb36eb <__syslog_chk+107>:	xor    ecx,ecx
   0x7ffff7eb36ed <__syslog_chk+109>:	test   r10d,r10d
   0x7ffff7eb36f0 <__syslog_chk+112>:	lea    rax,[rsp+0xe0]
   0x7ffff7eb36f8 <__syslog_chk+120>:	setg   cl
   0x7ffff7eb36fb <__syslog_chk+123>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7eb3700 <__syslog_chk+128>:	mov    rdx,rsp
   0x7ffff7eb3703 <__syslog_chk+131>:	lea    rax,[rsp+0x20]
   0x7ffff7eb3708 <__syslog_chk+136>:	add    ecx,ecx
   0x7ffff7eb370a <__syslog_chk+138>:	mov    QWORD PTR [rsp+0x10],rax
   0x7ffff7eb370f <__syslog_chk+143>:	mov    DWORD PTR [rsp],0x18
   0x7ffff7eb3716 <__syslog_chk+150>:	mov    DWORD PTR [rsp+0x4],0x30
   0x7ffff7eb371e <__syslog_chk+158>:	call   0x7ffff7eb2fc0
   0x7ffff7eb3723 <__syslog_chk+163>:	mov    rax,QWORD PTR [rsp+0x18]
   0x7ffff7eb3728 <__syslog_chk+168>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb3731 <__syslog_chk+177>:	jne    0x7ffff7eb373b <__syslog_chk+187>
   0x7ffff7eb3733 <__syslog_chk+179>:	add    rsp,0xd8
   0x7ffff7eb373a <__syslog_chk+186>:	ret
   0x7ffff7eb373b <__syslog_chk+187>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb3740 <__vsyslog_chk>:	endbr64
   0x7ffff7eb3744 <__vsyslog_chk+4>:	mov    r8d,esi
   0x7ffff7eb3747 <__vsyslog_chk+7>:	mov    rsi,rdx
   0x7ffff7eb374a <__vsyslog_chk+10>:	mov    rdx,rcx
   0x7ffff7eb374d <__vsyslog_chk+13>:	xor    ecx,ecx
   0x7ffff7eb374f <__vsyslog_chk+15>:	test   r8d,r8d
   0x7ffff7eb3752 <__vsyslog_chk+18>:	setg   cl
   0x7ffff7eb3755 <__vsyslog_chk+21>:	add    ecx,ecx
   0x7ffff7eb3757 <__vsyslog_chk+23>:	jmp    0x7ffff7eb2fc0
   0x7ffff7eb375c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb3760 <openlog>:	endbr64
   0x7ffff7eb3764 <openlog+4>:	push   r14
   0x7ffff7eb3766 <openlog+6>:	xor    eax,eax
   0x7ffff7eb3768 <openlog+8>:	push   r13
   0x7ffff7eb376a <openlog+10>:	push   r12
   0x7ffff7eb376c <openlog+12>:	mov    r12d,esi
   0x7ffff7eb376f <openlog+15>:	push   rbp
   0x7ffff7eb3770 <openlog+16>:	mov    ebp,edx
   0x7ffff7eb3772 <openlog+18>:	mov    edx,0x1
   0x7ffff7eb3777 <openlog+23>:	push   rbx
   0x7ffff7eb3778 <openlog+24>:	mov    rbx,rdi
   0x7ffff7eb377b <openlog+27>:	lock cmpxchg DWORD PTR [rip+0x102c25],edx        # 0x7ffff7fb63a8
   0x7ffff7eb3783 <openlog+35>:	jne    0x7ffff7eb3890 <openlog+304>
   0x7ffff7eb3789 <openlog+41>:	test   rbx,rbx
   0x7ffff7eb378c <openlog+44>:	je     0x7ffff7eb3795 <openlog+53>
   0x7ffff7eb378e <openlog+46>:	mov    QWORD PTR [rip+0x102c1b],rbx        # 0x7ffff7fb63b0
   0x7ffff7eb3795 <openlog+53>:	mov    DWORD PTR [rip+0x102c1c],r12d        # 0x7ffff7fb63b8
   0x7ffff7eb379c <openlog+60>:	test   ebp,0xfffffc07
   0x7ffff7eb37a2 <openlog+66>:	jne    0x7ffff7eb37aa <openlog+74>
   0x7ffff7eb37a4 <openlog+68>:	mov    DWORD PTR [rip+0xfac8a],ebp        # 0x7ffff7fae434
   0x7ffff7eb37aa <openlog+74>:	mov    r12d,0x2
   0x7ffff7eb37b0 <openlog+80>:	lea    rbp,[rip+0xb7969]        # 0x7ffff7f6b120
   0x7ffff7eb37b7 <openlog+87>:	mov    edi,DWORD PTR [rip+0xfac7b]        # 0x7ffff7fae438
   0x7ffff7eb37bd <openlog+93>:	cmp    edi,0xffffffff
   0x7ffff7eb37c0 <openlog+96>:	je     0x7ffff7eb3830 <openlog+208>
   0x7ffff7eb37c2 <openlog+98>:	cmp    BYTE PTR [rip+0x102bf3],0x0        # 0x7ffff7fb63bc
   0x7ffff7eb37c9 <openlog+105>:	jne    0x7ffff7eb380f <openlog+175>
   0x7ffff7eb37cb <openlog+107>:	mov    rbx,QWORD PTR [rip+0xfa63e]        # 0x7ffff7fade10
   0x7ffff7eb37d2 <openlog+114>:	mov    edx,0x6e
   0x7ffff7eb37d7 <openlog+119>:	mov    rsi,rbp
   0x7ffff7eb37da <openlog+122>:	mov    r13d,DWORD PTR fs:[rbx]
   0x7ffff7eb37de <openlog+126>:	call   0x7ffff7ebc690 <connect>
   0x7ffff7eb37e3 <openlog+131>:	cmp    eax,0xffffffff
   0x7ffff7eb37e6 <openlog+134>:	jne    0x7ffff7eb38e0 <openlog+384>
   0x7ffff7eb37ec <openlog+140>:	mov    edi,DWORD PTR [rip+0xfac46]        # 0x7ffff7fae438
   0x7ffff7eb37f2 <openlog+146>:	mov    r14d,DWORD PTR fs:[rbx]
   0x7ffff7eb37f6 <openlog+150>:	mov    DWORD PTR [rip+0xfac38],0xffffffff        # 0x7ffff7fae438
   0x7ffff7eb3800 <openlog+160>:	call   0x7ffff7eaa100 <close>
   0x7ffff7eb3805 <openlog+165>:	mov    DWORD PTR fs:[rbx],r13d
   0x7ffff7eb3809 <openlog+169>:	cmp    r14d,0x5b
   0x7ffff7eb380d <openlog+173>:	je     0x7ffff7eb3868 <openlog+264>
   0x7ffff7eb380f <openlog+175>:	xor    eax,eax
   0x7ffff7eb3811 <openlog+177>:	xchg   DWORD PTR [rip+0x102b91],eax        # 0x7ffff7fb63a8
   0x7ffff7eb3817 <openlog+183>:	cmp    eax,0x1
   0x7ffff7eb381a <openlog+186>:	jg     0x7ffff7eb38a8 <openlog+328>
   0x7ffff7eb3820 <openlog+192>:	pop    rbx
   0x7ffff7eb3821 <openlog+193>:	pop    rbp
   0x7ffff7eb3822 <openlog+194>:	pop    r12
   0x7ffff7eb3824 <openlog+196>:	pop    r13
   0x7ffff7eb3826 <openlog+198>:	pop    r14
   0x7ffff7eb3828 <openlog+200>:	ret
   0x7ffff7eb3829 <openlog+201>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb3830 <openlog+208>:	test   BYTE PTR [rip+0x102b81],0x8        # 0x7ffff7fb63b8
   0x7ffff7eb3837 <openlog+215>:	je     0x7ffff7eb380f <openlog+175>
   0x7ffff7eb3839 <openlog+217>:	mov    esi,DWORD PTR [rip+0xfabfd]        # 0x7ffff7fae43c
   0x7ffff7eb383f <openlog+223>:	xor    edx,edx
   0x7ffff7eb3841 <openlog+225>:	mov    edi,0x1
   0x7ffff7eb3846 <openlog+230>:	or     esi,0x80000
   0x7ffff7eb384c <openlog+236>:	call   0x7ffff7ebcce0 <socket>
   0x7ffff7eb3851 <openlog+241>:	mov    DWORD PTR [rip+0xfabe1],eax        # 0x7ffff7fae438
   0x7ffff7eb3857 <openlog+247>:	mov    edi,eax
   0x7ffff7eb3859 <openlog+249>:	cmp    eax,0xffffffff
   0x7ffff7eb385c <openlog+252>:	jne    0x7ffff7eb37c2 <openlog+98>
   0x7ffff7eb3862 <openlog+258>:	jmp    0x7ffff7eb380f <openlog+175>
   0x7ffff7eb3864 <openlog+260>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb3868 <openlog+264>:	cmp    DWORD PTR [rip+0xfabcd],0x2        # 0x7ffff7fae43c
   0x7ffff7eb386f <openlog+271>:	je     0x7ffff7eb38c0 <openlog+352>
   0x7ffff7eb3871 <openlog+273>:	mov    DWORD PTR [rip+0xfabc1],0x2        # 0x7ffff7fae43c
   0x7ffff7eb387b <openlog+283>:	cmp    r12d,0x1
   0x7ffff7eb387f <openlog+287>:	je     0x7ffff7eb380f <openlog+175>
   0x7ffff7eb3881 <openlog+289>:	mov    r12d,0x1
   0x7ffff7eb3887 <openlog+295>:	jmp    0x7ffff7eb37b7 <openlog+87>
   0x7ffff7eb388c <openlog+300>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb3890 <openlog+304>:	lea    rdi,[rip+0x102b11]        # 0x7ffff7fb63a8
   0x7ffff7eb3897 <openlog+311>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7eb389c <openlog+316>:	jmp    0x7ffff7eb3789 <openlog+41>
   0x7ffff7eb38a1 <openlog+321>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb38a8 <openlog+328>:	pop    rbx
   0x7ffff7eb38a9 <openlog+329>:	lea    rdi,[rip+0x102af8]        # 0x7ffff7fb63a8
   0x7ffff7eb38b0 <openlog+336>:	pop    rbp
   0x7ffff7eb38b1 <openlog+337>:	pop    r12
   0x7ffff7eb38b3 <openlog+339>:	pop    r13
   0x7ffff7eb38b5 <openlog+341>:	pop    r14
   0x7ffff7eb38b7 <openlog+343>:	jmp    0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7eb38bc <openlog+348>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb38c0 <openlog+352>:	mov    DWORD PTR [rip+0xfab72],0x1        # 0x7ffff7fae43c
   0x7ffff7eb38ca <openlog+362>:	cmp    r12d,0x1
   0x7ffff7eb38ce <openlog+366>:	je     0x7ffff7eb380f <openlog+175>
   0x7ffff7eb38d4 <openlog+372>:	jmp    0x7ffff7eb3881 <openlog+289>
   0x7ffff7eb38d6 <openlog+374>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb38e0 <openlog+384>:	mov    BYTE PTR [rip+0x102ad5],0x1        # 0x7ffff7fb63bc
   0x7ffff7eb38e7 <openlog+391>:	jmp    0x7ffff7eb380f <openlog+175>
   0x7ffff7eb38ec <openlog+396>:	endbr64
   0x7ffff7eb38f0 <openlog+400>:	mov    rbp,rax
   0x7ffff7eb38f3 <openlog+403>:	jmp    0x7ffff7dbea7a
   0x7ffff7eb38f8:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3900 <closelog>:	endbr64
   0x7ffff7eb3904 <closelog+4>:	push   rbp
   0x7ffff7eb3905 <closelog+5>:	xor    eax,eax
   0x7ffff7eb3907 <closelog+7>:	mov    edx,0x1
   0x7ffff7eb390c <closelog+12>:	lock cmpxchg DWORD PTR [rip+0x102a94],edx        # 0x7ffff7fb63a8
   0x7ffff7eb3914 <closelog+20>:	jne    0x7ffff7eb3970 <closelog+112>
   0x7ffff7eb3916 <closelog+22>:	cmp    BYTE PTR [rip+0x102a9f],0x0        # 0x7ffff7fb63bc
   0x7ffff7eb391d <closelog+29>:	jne    0x7ffff7eb3948 <closelog+72>
   0x7ffff7eb391f <closelog+31>:	mov    QWORD PTR [rip+0x102a86],0x0        # 0x7ffff7fb63b0
   0x7ffff7eb392a <closelog+42>:	xor    eax,eax
   0x7ffff7eb392c <closelog+44>:	mov    DWORD PTR [rip+0xfab06],0x2        # 0x7ffff7fae43c
   0x7ffff7eb3936 <closelog+54>:	xchg   DWORD PTR [rip+0x102a6c],eax        # 0x7ffff7fb63a8
   0x7ffff7eb393c <closelog+60>:	cmp    eax,0x1
   0x7ffff7eb393f <closelog+63>:	jg     0x7ffff7eb3980 <closelog+128>
   0x7ffff7eb3941 <closelog+65>:	pop    rbp
   0x7ffff7eb3942 <closelog+66>:	ret
   0x7ffff7eb3943 <closelog+67>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3948 <closelog+72>:	mov    edi,DWORD PTR [rip+0xfaaea]        # 0x7ffff7fae438
   0x7ffff7eb394e <closelog+78>:	call   0x7ffff7eaa100 <close>
   0x7ffff7eb3953 <closelog+83>:	mov    DWORD PTR [rip+0xfaadb],0xffffffff        # 0x7ffff7fae438
   0x7ffff7eb395d <closelog+93>:	mov    BYTE PTR [rip+0x102a58],0x0        # 0x7ffff7fb63bc
   0x7ffff7eb3964 <closelog+100>:	jmp    0x7ffff7eb391f <closelog+31>
   0x7ffff7eb3966 <closelog+102>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3970 <closelog+112>:	lea    rdi,[rip+0x102a31]        # 0x7ffff7fb63a8
   0x7ffff7eb3977 <closelog+119>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7eb397c <closelog+124>:	jmp    0x7ffff7eb3916 <closelog+22>
   0x7ffff7eb397e <closelog+126>:	xchg   ax,ax
   0x7ffff7eb3980 <closelog+128>:	lea    rdi,[rip+0x102a21]        # 0x7ffff7fb63a8
   0x7ffff7eb3987 <closelog+135>:	pop    rbp
   0x7ffff7eb3988 <closelog+136>:	jmp    0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7eb398d <closelog+141>:	endbr64
   0x7ffff7eb3991 <closelog+145>:	mov    rbp,rax
   0x7ffff7eb3994 <closelog+148>:	jmp    0x7ffff7dbea9b
   0x7ffff7eb3999:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb39a0 <setlogmask>:	endbr64
   0x7ffff7eb39a4 <setlogmask+4>:	push   r12
   0x7ffff7eb39a6 <setlogmask+6>:	xor    eax,eax
   0x7ffff7eb39a8 <setlogmask+8>:	mov    edx,0x1
   0x7ffff7eb39ad <setlogmask+13>:	push   rbx
   0x7ffff7eb39ae <setlogmask+14>:	mov    ebx,edi
   0x7ffff7eb39b0 <setlogmask+16>:	sub    rsp,0x8
   0x7ffff7eb39b4 <setlogmask+20>:	lock cmpxchg DWORD PTR [rip+0x1029ec],edx        # 0x7ffff7fb63a8
   0x7ffff7eb39bc <setlogmask+28>:	jne    0x7ffff7eb39f0 <setlogmask+80>
   0x7ffff7eb39be <setlogmask+30>:	mov    r12d,DWORD PTR [rip+0xfaa6b]        # 0x7ffff7fae430
   0x7ffff7eb39c5 <setlogmask+37>:	test   ebx,ebx
   0x7ffff7eb39c7 <setlogmask+39>:	je     0x7ffff7eb39cf <setlogmask+47>
   0x7ffff7eb39c9 <setlogmask+41>:	mov    DWORD PTR [rip+0xfaa61],ebx        # 0x7ffff7fae430
   0x7ffff7eb39cf <setlogmask+47>:	xor    eax,eax
   0x7ffff7eb39d1 <setlogmask+49>:	xchg   DWORD PTR [rip+0x1029d1],eax        # 0x7ffff7fb63a8
   0x7ffff7eb39d7 <setlogmask+55>:	cmp    eax,0x1
   0x7ffff7eb39da <setlogmask+58>:	jg     0x7ffff7eb3a00 <setlogmask+96>
   0x7ffff7eb39dc <setlogmask+60>:	add    rsp,0x8
   0x7ffff7eb39e0 <setlogmask+64>:	mov    eax,r12d
   0x7ffff7eb39e3 <setlogmask+67>:	pop    rbx
   0x7ffff7eb39e4 <setlogmask+68>:	pop    r12
   0x7ffff7eb39e6 <setlogmask+70>:	ret
   0x7ffff7eb39e7 <setlogmask+71>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb39f0 <setlogmask+80>:	lea    rdi,[rip+0x1029b1]        # 0x7ffff7fb63a8
   0x7ffff7eb39f7 <setlogmask+87>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7eb39fc <setlogmask+92>:	jmp    0x7ffff7eb39be <setlogmask+30>
   0x7ffff7eb39fe <setlogmask+94>:	xchg   ax,ax
   0x7ffff7eb3a00 <setlogmask+96>:	lea    rdi,[rip+0x1029a1]        # 0x7ffff7fb63a8
   0x7ffff7eb3a07 <setlogmask+103>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7eb3a0c <setlogmask+108>:	add    rsp,0x8
   0x7ffff7eb3a10 <setlogmask+112>:	mov    eax,r12d
   0x7ffff7eb3a13 <setlogmask+115>:	pop    rbx
   0x7ffff7eb3a14 <setlogmask+116>:	pop    r12
   0x7ffff7eb3a16 <setlogmask+118>:	ret
   0x7ffff7eb3a17:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3a20 <syscall>:	endbr64
   0x7ffff7eb3a24 <syscall+4>:	mov    rax,rdi
   0x7ffff7eb3a27 <syscall+7>:	mov    rdi,rsi
   0x7ffff7eb3a2a <syscall+10>:	mov    rsi,rdx
   0x7ffff7eb3a2d <syscall+13>:	mov    rdx,rcx
   0x7ffff7eb3a30 <syscall+16>:	mov    r10,r8
   0x7ffff7eb3a33 <syscall+19>:	mov    r8,r9
   0x7ffff7eb3a36 <syscall+22>:	mov    r9,QWORD PTR [rsp+0x8]
   0x7ffff7eb3a3b <syscall+27>:	syscall
   0x7ffff7eb3a3d <syscall+29>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb3a43 <syscall+35>:	jae    0x7ffff7eb3a46 <syscall+38>
   0x7ffff7eb3a45 <syscall+37>:	ret
   0x7ffff7eb3a46 <syscall+38>:	mov    rcx,QWORD PTR [rip+0xfa3c3]        # 0x7ffff7fade10
   0x7ffff7eb3a4d <syscall+45>:	neg    eax
   0x7ffff7eb3a4f <syscall+47>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb3a52 <syscall+50>:	or     rax,0xffffffffffffffff
   0x7ffff7eb3a56 <syscall+54>:	ret
   0x7ffff7eb3a57:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3a60 <daemon>:	endbr64
   0x7ffff7eb3a64 <daemon+4>:	push   r12
   0x7ffff7eb3a66 <daemon+6>:	push   rbp
   0x7ffff7eb3a67 <daemon+7>:	mov    ebp,edi
   0x7ffff7eb3a69 <daemon+9>:	push   rbx
   0x7ffff7eb3a6a <daemon+10>:	mov    ebx,esi
   0x7ffff7eb3a6c <daemon+12>:	sub    rsp,0xa0
   0x7ffff7eb3a73 <daemon+19>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb3a7c <daemon+28>:	mov    QWORD PTR [rsp+0x98],rax
   0x7ffff7eb3a84 <daemon+36>:	xor    eax,eax
   0x7ffff7eb3a86 <daemon+38>:	call   0x7ffff7e7f710 <fork>
   0x7ffff7eb3a8b <daemon+43>:	mov    r12d,eax
   0x7ffff7eb3a8e <daemon+46>:	cmp    eax,0xffffffff
   0x7ffff7eb3a91 <daemon+49>:	je     0x7ffff7eb3aba <daemon+90>
   0x7ffff7eb3a93 <daemon+51>:	test   eax,eax
   0x7ffff7eb3a95 <daemon+53>:	je     0x7ffff7eb3aa0 <daemon+64>
   0x7ffff7eb3a97 <daemon+55>:	xor    edi,edi
   0x7ffff7eb3a99 <daemon+57>:	call   0x7ffff7e7fc70 <_exit>
   0x7ffff7eb3a9e <daemon+62>:	xchg   ax,ax
   0x7ffff7eb3aa0 <daemon+64>:	call   0x7ffff7e81400 <setsid>
   0x7ffff7eb3aa5 <daemon+69>:	cmp    eax,0xffffffff
   0x7ffff7eb3aa8 <daemon+72>:	je     0x7ffff7eb3b9d <daemon+317>
   0x7ffff7eb3aae <daemon+78>:	test   ebp,ebp
   0x7ffff7eb3ab0 <daemon+80>:	je     0x7ffff7eb3b70 <daemon+272>
   0x7ffff7eb3ab6 <daemon+86>:	test   ebx,ebx
   0x7ffff7eb3ab8 <daemon+88>:	je     0x7ffff7eb3ae0 <daemon+128>
   0x7ffff7eb3aba <daemon+90>:	mov    rax,QWORD PTR [rsp+0x98]
   0x7ffff7eb3ac2 <daemon+98>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb3acb <daemon+107>:	jne    0x7ffff7eb3bb9 <daemon+345>
   0x7ffff7eb3ad1 <daemon+113>:	add    rsp,0xa0
   0x7ffff7eb3ad8 <daemon+120>:	mov    eax,r12d
   0x7ffff7eb3adb <daemon+123>:	pop    rbx
   0x7ffff7eb3adc <daemon+124>:	pop    rbp
   0x7ffff7eb3add <daemon+125>:	pop    r12
   0x7ffff7eb3adf <daemon+127>:	ret
   0x7ffff7eb3ae0 <daemon+128>:	xor    edx,edx
   0x7ffff7eb3ae2 <daemon+130>:	mov    esi,0x2
   0x7ffff7eb3ae7 <daemon+135>:	lea    rdi,[rip+0xb94f9]        # 0x7ffff7f6cfe7
   0x7ffff7eb3aee <daemon+142>:	xor    eax,eax
   0x7ffff7eb3af0 <daemon+144>:	call   0x7ffff7eaeb80 <__open_nocancel>
   0x7ffff7eb3af5 <daemon+149>:	mov    ebp,eax
   0x7ffff7eb3af7 <daemon+151>:	cmp    eax,0xffffffff
   0x7ffff7eb3afa <daemon+154>:	je     0x7ffff7eb3bb0 <daemon+336>
   0x7ffff7eb3b00 <daemon+160>:	mov    rsi,rsp
   0x7ffff7eb3b03 <daemon+163>:	mov    edi,eax
   0x7ffff7eb3b05 <daemon+165>:	call   0x7ffff7ea8e80 <fstat64>
   0x7ffff7eb3b0a <daemon+170>:	mov    r12d,eax
   0x7ffff7eb3b0d <daemon+173>:	test   eax,eax
   0x7ffff7eb3b0f <daemon+175>:	jne    0x7ffff7eb3bb0 <daemon+336>
   0x7ffff7eb3b15 <daemon+181>:	mov    eax,DWORD PTR [rsp+0x18]
   0x7ffff7eb3b19 <daemon+185>:	and    eax,0xf000
   0x7ffff7eb3b1e <daemon+190>:	cmp    eax,0x2000
   0x7ffff7eb3b23 <daemon+195>:	jne    0x7ffff7eb3b88 <daemon+296>
   0x7ffff7eb3b25 <daemon+197>:	cmp    QWORD PTR [rsp+0x28],0x103
   0x7ffff7eb3b2e <daemon+206>:	jne    0x7ffff7eb3b88 <daemon+296>
   0x7ffff7eb3b30 <daemon+208>:	xor    esi,esi
   0x7ffff7eb3b32 <daemon+210>:	mov    edi,ebp
   0x7ffff7eb3b34 <daemon+212>:	call   0x7ffff7eaa1c0 <dup2>
   0x7ffff7eb3b39 <daemon+217>:	mov    esi,0x1
   0x7ffff7eb3b3e <daemon+222>:	mov    edi,ebp
   0x7ffff7eb3b40 <daemon+224>:	call   0x7ffff7eaa1c0 <dup2>
   0x7ffff7eb3b45 <daemon+229>:	mov    esi,0x2
   0x7ffff7eb3b4a <daemon+234>:	mov    edi,ebp
   0x7ffff7eb3b4c <daemon+236>:	call   0x7ffff7eaa1c0 <dup2>
   0x7ffff7eb3b51 <daemon+241>:	cmp    ebp,0x2
   0x7ffff7eb3b54 <daemon+244>:	jle    0x7ffff7eb3aba <daemon+90>
   0x7ffff7eb3b5a <daemon+250>:	mov    edi,ebp
   0x7ffff7eb3b5c <daemon+252>:	call   0x7ffff7eaa100 <close>
   0x7ffff7eb3b61 <daemon+257>:	jmp    0x7ffff7eb3aba <daemon+90>
   0x7ffff7eb3b66 <daemon+262>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3b70 <daemon+272>:	lea    rdi,[rip+0xb978a]        # 0x7ffff7f6d301
   0x7ffff7eb3b77 <daemon+279>:	call   0x7ffff7eaa320 <chdir>
   0x7ffff7eb3b7c <daemon+284>:	jmp    0x7ffff7eb3ab6 <daemon+86>
   0x7ffff7eb3b81 <daemon+289>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb3b88 <daemon+296>:	mov    edi,ebp
   0x7ffff7eb3b8a <daemon+298>:	call   0x7ffff7eaea10 <__close_nocancel>
   0x7ffff7eb3b8f <daemon+303>:	mov    rax,QWORD PTR [rip+0xfa27a]        # 0x7ffff7fade10
   0x7ffff7eb3b96 <daemon+310>:	mov    DWORD PTR fs:[rax],0x13
   0x7ffff7eb3b9d <daemon+317>:	mov    r12d,0xffffffff
   0x7ffff7eb3ba3 <daemon+323>:	jmp    0x7ffff7eb3aba <daemon+90>
   0x7ffff7eb3ba8 <daemon+328>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3bb0 <daemon+336>:	mov    edi,ebp
   0x7ffff7eb3bb2 <daemon+338>:	call   0x7ffff7eaea10 <__close_nocancel>
   0x7ffff7eb3bb7 <daemon+343>:	jmp    0x7ffff7eb3b9d <daemon+317>
   0x7ffff7eb3bb9 <daemon+345>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb3bbe:	xchg   ax,ax
   0x7ffff7eb3bc0 <mmap64>:	endbr64
   0x7ffff7eb3bc4 <mmap64+4>:	mov    r10d,ecx
   0x7ffff7eb3bc7 <mmap64+7>:	test   r9d,0xfff
   0x7ffff7eb3bce <mmap64+14>:	jne    0x7ffff7eb3be0 <mmap64+32>
   0x7ffff7eb3bd0 <mmap64+16>:	mov    eax,0x9
   0x7ffff7eb3bd5 <mmap64+21>:	syscall
   0x7ffff7eb3bd7 <mmap64+23>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb3bdd <mmap64+29>:	ja     0x7ffff7eb3c00 <mmap64+64>
   0x7ffff7eb3bdf <mmap64+31>:	ret
   0x7ffff7eb3be0 <mmap64+32>:	mov    rax,QWORD PTR [rip+0xfa229]        # 0x7ffff7fade10
   0x7ffff7eb3be7 <mmap64+39>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7eb3bee <mmap64+46>:	mov    rax,0xffffffffffffffff
   0x7ffff7eb3bf5 <mmap64+53>:	ret
   0x7ffff7eb3bf6 <mmap64+54>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3c00 <mmap64+64>:	mov    rdx,QWORD PTR [rip+0xfa209]        # 0x7ffff7fade10
   0x7ffff7eb3c07 <mmap64+71>:	neg    eax
   0x7ffff7eb3c09 <mmap64+73>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb3c0c <mmap64+76>:	mov    rax,0xffffffffffffffff
   0x7ffff7eb3c13 <mmap64+83>:	ret
   0x7ffff7eb3c14:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3c1e:	xchg   ax,ax
   0x7ffff7eb3c20 <munmap>:	endbr64
   0x7ffff7eb3c24 <munmap+4>:	mov    eax,0xb
   0x7ffff7eb3c29 <munmap+9>:	syscall
   0x7ffff7eb3c2b <munmap+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb3c31 <munmap+17>:	jae    0x7ffff7eb3c34 <munmap+20>
   0x7ffff7eb3c33 <munmap+19>:	ret
   0x7ffff7eb3c34 <munmap+20>:	mov    rcx,QWORD PTR [rip+0xfa1d5]        # 0x7ffff7fade10
   0x7ffff7eb3c3b <munmap+27>:	neg    eax
   0x7ffff7eb3c3d <munmap+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb3c40 <munmap+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb3c44 <munmap+36>:	ret
   0x7ffff7eb3c45:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3c4f:	nop
   0x7ffff7eb3c50 <mprotect>:	endbr64
   0x7ffff7eb3c54 <mprotect+4>:	mov    eax,0xa
   0x7ffff7eb3c59 <mprotect+9>:	syscall
   0x7ffff7eb3c5b <mprotect+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb3c61 <mprotect+17>:	jae    0x7ffff7eb3c64 <mprotect+20>
   0x7ffff7eb3c63 <mprotect+19>:	ret
   0x7ffff7eb3c64 <mprotect+20>:	mov    rcx,QWORD PTR [rip+0xfa1a5]        # 0x7ffff7fade10
   0x7ffff7eb3c6b <mprotect+27>:	neg    eax
   0x7ffff7eb3c6d <mprotect+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb3c70 <mprotect+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb3c74 <mprotect+36>:	ret
   0x7ffff7eb3c75:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3c7f:	nop
   0x7ffff7eb3c80 <msync>:	endbr64
   0x7ffff7eb3c84 <msync+4>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7eb3c8c <msync+12>:	test   eax,eax
   0x7ffff7eb3c8e <msync+14>:	jne    0x7ffff7eb3ca0 <msync+32>
   0x7ffff7eb3c90 <msync+16>:	mov    eax,0x1a
   0x7ffff7eb3c95 <msync+21>:	syscall
   0x7ffff7eb3c97 <msync+23>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb3c9d <msync+29>:	ja     0x7ffff7eb3cf0 <msync+112>
   0x7ffff7eb3c9f <msync+31>:	ret
   0x7ffff7eb3ca0 <msync+32>:	sub    rsp,0x28
   0x7ffff7eb3ca4 <msync+36>:	mov    DWORD PTR [rsp+0x1c],edx
   0x7ffff7eb3ca8 <msync+40>:	mov    QWORD PTR [rsp+0x10],rsi
   0x7ffff7eb3cad <msync+45>:	mov    QWORD PTR [rsp+0x8],rdi
   0x7ffff7eb3cb2 <msync+50>:	call   0x7ffff7e25a70
   0x7ffff7eb3cb7 <msync+55>:	mov    edx,DWORD PTR [rsp+0x1c]
   0x7ffff7eb3cbb <msync+59>:	mov    rsi,QWORD PTR [rsp+0x10]
   0x7ffff7eb3cc0 <msync+64>:	mov    r8d,eax
   0x7ffff7eb3cc3 <msync+67>:	mov    rdi,QWORD PTR [rsp+0x8]
   0x7ffff7eb3cc8 <msync+72>:	mov    eax,0x1a
   0x7ffff7eb3ccd <msync+77>:	syscall
   0x7ffff7eb3ccf <msync+79>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb3cd5 <msync+85>:	ja     0x7ffff7eb3d08 <msync+136>
   0x7ffff7eb3cd7 <msync+87>:	mov    edi,r8d
   0x7ffff7eb3cda <msync+90>:	mov    DWORD PTR [rsp+0x8],eax
   0x7ffff7eb3cde <msync+94>:	call   0x7ffff7e25ae0
   0x7ffff7eb3ce3 <msync+99>:	mov    eax,DWORD PTR [rsp+0x8]
   0x7ffff7eb3ce7 <msync+103>:	add    rsp,0x28
   0x7ffff7eb3ceb <msync+107>:	ret
   0x7ffff7eb3cec <msync+108>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb3cf0 <msync+112>:	mov    rdx,QWORD PTR [rip+0xfa119]        # 0x7ffff7fade10
   0x7ffff7eb3cf7 <msync+119>:	neg    eax
   0x7ffff7eb3cf9 <msync+121>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb3cfc <msync+124>:	mov    eax,0xffffffff
   0x7ffff7eb3d01 <msync+129>:	ret
   0x7ffff7eb3d02 <msync+130>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3d08 <msync+136>:	mov    rdx,QWORD PTR [rip+0xfa101]        # 0x7ffff7fade10
   0x7ffff7eb3d0f <msync+143>:	neg    eax
   0x7ffff7eb3d11 <msync+145>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb3d14 <msync+148>:	mov    eax,0xffffffff
   0x7ffff7eb3d19 <msync+153>:	jmp    0x7ffff7eb3cd7 <msync+87>
   0x7ffff7eb3d1b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3d20 <madvise>:	endbr64
   0x7ffff7eb3d24 <madvise+4>:	mov    eax,0x1c
   0x7ffff7eb3d29 <madvise+9>:	syscall
   0x7ffff7eb3d2b <madvise+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb3d31 <madvise+17>:	jae    0x7ffff7eb3d34 <madvise+20>
   0x7ffff7eb3d33 <madvise+19>:	ret
   0x7ffff7eb3d34 <madvise+20>:	mov    rcx,QWORD PTR [rip+0xfa0d5]        # 0x7ffff7fade10
   0x7ffff7eb3d3b <madvise+27>:	neg    eax
   0x7ffff7eb3d3d <madvise+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb3d40 <madvise+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb3d44 <madvise+36>:	ret
   0x7ffff7eb3d45:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3d4f:	nop
   0x7ffff7eb3d50 <mincore>:	endbr64
   0x7ffff7eb3d54 <mincore+4>:	mov    eax,0x1b
   0x7ffff7eb3d59 <mincore+9>:	syscall
   0x7ffff7eb3d5b <mincore+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb3d61 <mincore+17>:	jae    0x7ffff7eb3d64 <mincore+20>
   0x7ffff7eb3d63 <mincore+19>:	ret
   0x7ffff7eb3d64 <mincore+20>:	mov    rcx,QWORD PTR [rip+0xfa0a5]        # 0x7ffff7fade10
   0x7ffff7eb3d6b <mincore+27>:	neg    eax
   0x7ffff7eb3d6d <mincore+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb3d70 <mincore+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb3d74 <mincore+36>:	ret
   0x7ffff7eb3d75:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3d7f:	nop
   0x7ffff7eb3d80 <remap_file_pages>:	endbr64
   0x7ffff7eb3d84 <remap_file_pages+4>:	mov    r10,rcx
   0x7ffff7eb3d87 <remap_file_pages+7>:	mov    eax,0xd8
   0x7ffff7eb3d8c <remap_file_pages+12>:	syscall
   0x7ffff7eb3d8e <remap_file_pages+14>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb3d94 <remap_file_pages+20>:	jae    0x7ffff7eb3d97 <remap_file_pages+23>
   0x7ffff7eb3d96 <remap_file_pages+22>:	ret
   0x7ffff7eb3d97 <remap_file_pages+23>:	mov    rcx,QWORD PTR [rip+0xfa072]        # 0x7ffff7fade10
   0x7ffff7eb3d9e <remap_file_pages+30>:	neg    eax
   0x7ffff7eb3da0 <remap_file_pages+32>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb3da3 <remap_file_pages+35>:	or     rax,0xffffffffffffffff
   0x7ffff7eb3da7 <remap_file_pages+39>:	ret
   0x7ffff7eb3da8:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3db0 <mlock>:	endbr64
   0x7ffff7eb3db4 <mlock+4>:	mov    eax,0x95
   0x7ffff7eb3db9 <mlock+9>:	syscall
   0x7ffff7eb3dbb <mlock+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb3dc1 <mlock+17>:	jae    0x7ffff7eb3dc4 <mlock+20>
   0x7ffff7eb3dc3 <mlock+19>:	ret
   0x7ffff7eb3dc4 <mlock+20>:	mov    rcx,QWORD PTR [rip+0xfa045]        # 0x7ffff7fade10
   0x7ffff7eb3dcb <mlock+27>:	neg    eax
   0x7ffff7eb3dcd <mlock+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb3dd0 <mlock+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb3dd4 <mlock+36>:	ret
   0x7ffff7eb3dd5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3ddf:	nop
   0x7ffff7eb3de0 <munlock>:	endbr64
   0x7ffff7eb3de4 <munlock+4>:	mov    eax,0x96
   0x7ffff7eb3de9 <munlock+9>:	syscall
   0x7ffff7eb3deb <munlock+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb3df1 <munlock+17>:	jae    0x7ffff7eb3df4 <munlock+20>
   0x7ffff7eb3df3 <munlock+19>:	ret
   0x7ffff7eb3df4 <munlock+20>:	mov    rcx,QWORD PTR [rip+0xfa015]        # 0x7ffff7fade10
   0x7ffff7eb3dfb <munlock+27>:	neg    eax
   0x7ffff7eb3dfd <munlock+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb3e00 <munlock+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb3e04 <munlock+36>:	ret
   0x7ffff7eb3e05:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3e0f:	nop
   0x7ffff7eb3e10 <mlockall>:	endbr64
   0x7ffff7eb3e14 <mlockall+4>:	mov    eax,0x97
   0x7ffff7eb3e19 <mlockall+9>:	syscall
   0x7ffff7eb3e1b <mlockall+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb3e21 <mlockall+17>:	jae    0x7ffff7eb3e24 <mlockall+20>
   0x7ffff7eb3e23 <mlockall+19>:	ret
   0x7ffff7eb3e24 <mlockall+20>:	mov    rcx,QWORD PTR [rip+0xf9fe5]        # 0x7ffff7fade10
   0x7ffff7eb3e2b <mlockall+27>:	neg    eax
   0x7ffff7eb3e2d <mlockall+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb3e30 <mlockall+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb3e34 <mlockall+36>:	ret
   0x7ffff7eb3e35:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3e3f:	nop
   0x7ffff7eb3e40 <munlockall>:	endbr64
   0x7ffff7eb3e44 <munlockall+4>:	mov    eax,0x98
   0x7ffff7eb3e49 <munlockall+9>:	syscall
   0x7ffff7eb3e4b <munlockall+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb3e51 <munlockall+17>:	jae    0x7ffff7eb3e54 <munlockall+20>
   0x7ffff7eb3e53 <munlockall+19>:	ret
   0x7ffff7eb3e54 <munlockall+20>:	mov    rcx,QWORD PTR [rip+0xf9fb5]        # 0x7ffff7fade10
   0x7ffff7eb3e5b <munlockall+27>:	neg    eax
   0x7ffff7eb3e5d <munlockall+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb3e60 <munlockall+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb3e64 <munlockall+36>:	ret
   0x7ffff7eb3e65:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3e6f:	nop
   0x7ffff7eb3e70 <fcvt>:	endbr64
   0x7ffff7eb3e74 <fcvt+4>:	push   r13
   0x7ffff7eb3e76 <fcvt+6>:	mov    r13,rdx
   0x7ffff7eb3e79 <fcvt+9>:	push   r12
   0x7ffff7eb3e7b <fcvt+11>:	mov    r12,rsi
   0x7ffff7eb3e7e <fcvt+14>:	push   rbp
   0x7ffff7eb3e7f <fcvt+15>:	mov    ebp,edi
   0x7ffff7eb3e81 <fcvt+17>:	sub    rsp,0x10
   0x7ffff7eb3e85 <fcvt+21>:	mov    rcx,QWORD PTR [rip+0xfba84]        # 0x7ffff7faf910
   0x7ffff7eb3e8c <fcvt+28>:	test   rcx,rcx
   0x7ffff7eb3e8f <fcvt+31>:	je     0x7ffff7eb3eb8 <fcvt+72>
   0x7ffff7eb3e91 <fcvt+33>:	mov    rdx,r13
   0x7ffff7eb3e94 <fcvt+36>:	mov    rsi,r12
   0x7ffff7eb3e97 <fcvt+39>:	mov    edi,ebp
   0x7ffff7eb3e99 <fcvt+41>:	mov    r8d,0x148
   0x7ffff7eb3e9f <fcvt+47>:	call   0x7ffff7eb3f80 <fcvt_r>
   0x7ffff7eb3ea4 <fcvt+52>:	mov    rax,QWORD PTR [rip+0xfba65]        # 0x7ffff7faf910
   0x7ffff7eb3eab <fcvt+59>:	add    rsp,0x10
   0x7ffff7eb3eaf <fcvt+63>:	pop    rbp
   0x7ffff7eb3eb0 <fcvt+64>:	pop    r12
   0x7ffff7eb3eb2 <fcvt+66>:	pop    r13
   0x7ffff7eb3eb4 <fcvt+68>:	ret
   0x7ffff7eb3eb5 <fcvt+69>:	nop    DWORD PTR [rax]
   0x7ffff7eb3eb8 <fcvt+72>:	mov    r8d,0x14
   0x7ffff7eb3ebe <fcvt+78>:	lea    rcx,[rip+0x10251b]        # 0x7ffff7fb63e0
   0x7ffff7eb3ec5 <fcvt+85>:	movsd  QWORD PTR [rsp+0x8],xmm0
   0x7ffff7eb3ecb <fcvt+91>:	call   0x7ffff7eb3f80 <fcvt_r>
   0x7ffff7eb3ed0 <fcvt+96>:	movsd  xmm0,QWORD PTR [rsp+0x8]
   0x7ffff7eb3ed6 <fcvt+102>:	cmp    eax,0xffffffff
   0x7ffff7eb3ed9 <fcvt+105>:	je     0x7ffff7eb3ef0 <fcvt+128>
   0x7ffff7eb3edb <fcvt+107>:	add    rsp,0x10
   0x7ffff7eb3edf <fcvt+111>:	lea    rax,[rip+0x1024fa]        # 0x7ffff7fb63e0
   0x7ffff7eb3ee6 <fcvt+118>:	pop    rbp
   0x7ffff7eb3ee7 <fcvt+119>:	pop    r12
   0x7ffff7eb3ee9 <fcvt+121>:	pop    r13
   0x7ffff7eb3eeb <fcvt+123>:	ret
   0x7ffff7eb3eec <fcvt+124>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb3ef0 <fcvt+128>:	mov    edi,0x148
   0x7ffff7eb3ef5 <fcvt+133>:	movsd  QWORD PTR [rsp+0x8],xmm0
   0x7ffff7eb3efb <fcvt+139>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7eb3f00 <fcvt+144>:	movsd  xmm0,QWORD PTR [rsp+0x8]
   0x7ffff7eb3f06 <fcvt+150>:	test   rax,rax
   0x7ffff7eb3f09 <fcvt+153>:	mov    QWORD PTR [rip+0xfba00],rax        # 0x7ffff7faf910
   0x7ffff7eb3f10 <fcvt+160>:	mov    rcx,rax
   0x7ffff7eb3f13 <fcvt+163>:	jne    0x7ffff7eb3e91 <fcvt+33>
   0x7ffff7eb3f19 <fcvt+169>:	jmp    0x7ffff7eb3edb <fcvt+107>
   0x7ffff7eb3f1b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3f20 <ecvt>:	endbr64
   0x7ffff7eb3f24 <ecvt+4>:	push   r12
   0x7ffff7eb3f26 <ecvt+6>:	lea    r12,[rip+0x102493]        # 0x7ffff7fb63c0
   0x7ffff7eb3f2d <ecvt+13>:	mov    r8d,0x14
   0x7ffff7eb3f33 <ecvt+19>:	mov    rcx,r12
   0x7ffff7eb3f36 <ecvt+22>:	call   0x7ffff7eb4240 <ecvt_r>
   0x7ffff7eb3f3b <ecvt+27>:	mov    rax,r12
   0x7ffff7eb3f3e <ecvt+30>:	pop    r12
   0x7ffff7eb3f40 <ecvt+32>:	ret
   0x7ffff7eb3f41:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb3f4c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb3f50 <gcvt>:	endbr64
   0x7ffff7eb3f54 <gcvt+4>:	mov    eax,0x11
   0x7ffff7eb3f59 <gcvt+9>:	push   r12
   0x7ffff7eb3f5b <gcvt+11>:	mov    r12,rsi
   0x7ffff7eb3f5e <gcvt+14>:	lea    rsi,[rip+0xbb217]        # 0x7ffff7f6f17c
   0x7ffff7eb3f65 <gcvt+21>:	cmp    edi,eax
   0x7ffff7eb3f67 <gcvt+23>:	cmovle eax,edi
   0x7ffff7eb3f6a <gcvt+26>:	mov    rdi,r12
   0x7ffff7eb3f6d <gcvt+29>:	mov    edx,eax
   0x7ffff7eb3f6f <gcvt+31>:	mov    eax,0x1
   0x7ffff7eb3f74 <gcvt+36>:	call   0x7ffff7df5900 <sprintf>
   0x7ffff7eb3f79 <gcvt+41>:	mov    rax,r12
   0x7ffff7eb3f7c <gcvt+44>:	pop    r12
   0x7ffff7eb3f7e <gcvt+46>:	ret
   0x7ffff7eb3f7f:	nop
   0x7ffff7eb3f80 <fcvt_r>:	endbr64
   0x7ffff7eb3f84 <fcvt_r+4>:	test   rcx,rcx
   0x7ffff7eb3f87 <fcvt_r+7>:	je     0x7ffff7eb421d <fcvt_r+669>
   0x7ffff7eb3f8d <fcvt_r+13>:	push   r15
   0x7ffff7eb3f8f <fcvt_r+15>:	movapd xmm1,xmm0
   0x7ffff7eb3f93 <fcvt_r+19>:	mov    eax,edi
   0x7ffff7eb3f95 <fcvt_r+21>:	push   r14
   0x7ffff7eb3f97 <fcvt_r+23>:	mov    r14,rsi
   0x7ffff7eb3f9a <fcvt_r+26>:	push   r13
   0x7ffff7eb3f9c <fcvt_r+28>:	mov    r13,r8
   0x7ffff7eb3f9f <fcvt_r+31>:	push   r12
   0x7ffff7eb3fa1 <fcvt_r+33>:	push   rbp
   0x7ffff7eb3fa2 <fcvt_r+34>:	mov    rbp,rcx
   0x7ffff7eb3fa5 <fcvt_r+37>:	push   rbx
   0x7ffff7eb3fa6 <fcvt_r+38>:	sub    rsp,0x18
   0x7ffff7eb3faa <fcvt_r+42>:	andpd  xmm1,XMMWORD PTR [rip+0xc30de]        # 0x7ffff7f77090
   0x7ffff7eb3fb2 <fcvt_r+50>:	movsd  xmm2,QWORD PTR [rip+0xc3726]        # 0x7ffff7f776e0
   0x7ffff7eb3fba <fcvt_r+58>:	ucomisd xmm2,xmm1
   0x7ffff7eb3fbe <fcvt_r+62>:	jae    0x7ffff7eb4100 <fcvt_r+384>
   0x7ffff7eb3fc4 <fcvt_r+68>:	mov    ecx,0x11
   0x7ffff7eb3fc9 <fcvt_r+73>:	cmp    edi,ecx
   0x7ffff7eb3fcb <fcvt_r+75>:	cmovle ecx,edi
   0x7ffff7eb3fce <fcvt_r+78>:	xor    esi,esi
   0x7ffff7eb3fd0 <fcvt_r+80>:	xor    r15d,r15d
   0x7ffff7eb3fd3 <fcvt_r+83>:	mov    DWORD PTR [rdx],esi
   0x7ffff7eb3fd5 <fcvt_r+85>:	mov    rdi,rbp
   0x7ffff7eb3fd8 <fcvt_r+88>:	lea    rdx,[rip+0xbb1a2]        # 0x7ffff7f6f181
   0x7ffff7eb3fdf <fcvt_r+95>:	mov    rsi,r13
   0x7ffff7eb3fe2 <fcvt_r+98>:	mov    eax,0x1
   0x7ffff7eb3fe7 <fcvt_r+103>:	movsd  QWORD PTR [rsp+0x8],xmm0
   0x7ffff7eb3fed <fcvt_r+109>:	call   0x7ffff7df5840 <snprintf>
   0x7ffff7eb3ff2 <fcvt_r+114>:	movsxd rbx,eax
   0x7ffff7eb3ff5 <fcvt_r+117>:	mov    rcx,rbx
   0x7ffff7eb3ff8 <fcvt_r+120>:	cmp    r13,rbx
   0x7ffff7eb3ffb <fcvt_r+123>:	jle    0x7ffff7eb4206 <fcvt_r+646>
   0x7ffff7eb4001 <fcvt_r+129>:	xor    eax,eax
   0x7ffff7eb4003 <fcvt_r+131>:	test   rbx,rbx
   0x7ffff7eb4006 <fcvt_r+134>:	movsd  xmm0,QWORD PTR [rsp+0x8]
   0x7ffff7eb400c <fcvt_r+140>:	jg     0x7ffff7eb4025 <fcvt_r+165>
   0x7ffff7eb400e <fcvt_r+142>:	jmp    0x7ffff7eb41bf <fcvt_r+575>
   0x7ffff7eb4013 <fcvt_r+147>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4018 <fcvt_r+152>:	add    rax,0x1
   0x7ffff7eb401c <fcvt_r+156>:	cmp    rbx,rax
   0x7ffff7eb401f <fcvt_r+159>:	je     0x7ffff7eb4130 <fcvt_r+432>
   0x7ffff7eb4025 <fcvt_r+165>:	movsx  edx,BYTE PTR [rbp+rax*1+0x0]
   0x7ffff7eb402a <fcvt_r+170>:	sub    edx,0x30
   0x7ffff7eb402d <fcvt_r+173>:	cmp    edx,0x9
   0x7ffff7eb4030 <fcvt_r+176>:	jbe    0x7ffff7eb4018 <fcvt_r+152>
   0x7ffff7eb4032 <fcvt_r+178>:	mov    DWORD PTR [r14],eax
   0x7ffff7eb4035 <fcvt_r+181>:	movsxd rdi,eax
   0x7ffff7eb4038 <fcvt_r+184>:	test   rax,rax
   0x7ffff7eb403b <fcvt_r+187>:	je     0x7ffff7eb40e8 <fcvt_r+360>
   0x7ffff7eb4041 <fcvt_r+193>:	cmp    rbx,rax
   0x7ffff7eb4044 <fcvt_r+196>:	jle    0x7ffff7eb40aa <fcvt_r+298>
   0x7ffff7eb4046 <fcvt_r+198>:	mov    r12,rax
   0x7ffff7eb4049 <fcvt_r+201>:	jmp    0x7ffff7eb405e <fcvt_r+222>
   0x7ffff7eb404b <fcvt_r+203>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4050 <fcvt_r+208>:	movsx  edx,BYTE PTR [rbp+r12*1+0x0]
   0x7ffff7eb4056 <fcvt_r+214>:	sub    edx,0x30
   0x7ffff7eb4059 <fcvt_r+217>:	cmp    edx,0x9
   0x7ffff7eb405c <fcvt_r+220>:	jbe    0x7ffff7eb406e <fcvt_r+238>
   0x7ffff7eb405e <fcvt_r+222>:	add    r12,0x1
   0x7ffff7eb4062 <fcvt_r+226>:	lea    rsi,[r12+rbp*1]
   0x7ffff7eb4066 <fcvt_r+230>:	mov    r8,rsi
   0x7ffff7eb4069 <fcvt_r+233>:	cmp    rbx,r12
   0x7ffff7eb406c <fcvt_r+236>:	jne    0x7ffff7eb4050 <fcvt_r+208>
   0x7ffff7eb406e <fcvt_r+238>:	add    rdi,rbp
   0x7ffff7eb4071 <fcvt_r+241>:	cmp    rax,0x1
   0x7ffff7eb4075 <fcvt_r+245>:	je     0x7ffff7eb4180 <fcvt_r+512>
   0x7ffff7eb407b <fcvt_r+251>:	mov    rdx,rbx
   0x7ffff7eb407e <fcvt_r+254>:	mov    rsi,r8
   0x7ffff7eb4081 <fcvt_r+257>:	mov    DWORD PTR [rsp+0x8],ecx
   0x7ffff7eb4085 <fcvt_r+261>:	sub    rdx,r12
   0x7ffff7eb4088 <fcvt_r+264>:	call   0x7ffff7dbd430 <*ABS*+0xa9620@plt>
   0x7ffff7eb408d <fcvt_r+269>:	movsxd rax,DWORD PTR [r14]
   0x7ffff7eb4090 <fcvt_r+272>:	xor    edx,edx
   0x7ffff7eb4092 <fcvt_r+274>:	mov    ecx,DWORD PTR [rsp+0x8]
   0x7ffff7eb4096 <fcvt_r+278>:	test   eax,eax
   0x7ffff7eb4098 <fcvt_r+280>:	cmovs  rax,rdx
   0x7ffff7eb409c <fcvt_r+284>:	sub    r12,rax
   0x7ffff7eb409f <fcvt_r+287>:	mov    rax,rbx
   0x7ffff7eb40a2 <fcvt_r+290>:	sub    rax,r12
   0x7ffff7eb40a5 <fcvt_r+293>:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
   0x7ffff7eb40aa <fcvt_r+298>:	test   r15d,r15d
   0x7ffff7eb40ad <fcvt_r+301>:	je     0x7ffff7eb40e8 <fcvt_r+360>
   0x7ffff7eb40af <fcvt_r+303>:	sub    r13,0x1
   0x7ffff7eb40b3 <fcvt_r+307>:	add    DWORD PTR [r14],r15d
   0x7ffff7eb40b6 <fcvt_r+310>:	cmp    r13,rbx
   0x7ffff7eb40b9 <fcvt_r+313>:	jle    0x7ffff7eb40e8 <fcvt_r+360>
   0x7ffff7eb40bb <fcvt_r+315>:	lea    edx,[r15+rcx*1]
   0x7ffff7eb40bf <fcvt_r+319>:	jmp    0x7ffff7eb40cd <fcvt_r+333>
   0x7ffff7eb40c1 <fcvt_r+321>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb40c8 <fcvt_r+328>:	cmp    r13,rbx
   0x7ffff7eb40cb <fcvt_r+331>:	jle    0x7ffff7eb40de <fcvt_r+350>
   0x7ffff7eb40cd <fcvt_r+333>:	add    rbx,0x1
   0x7ffff7eb40d1 <fcvt_r+337>:	mov    eax,edx
   0x7ffff7eb40d3 <fcvt_r+339>:	sub    eax,ebx
   0x7ffff7eb40d5 <fcvt_r+341>:	mov    BYTE PTR [rbp+rbx*1-0x1],0x30
   0x7ffff7eb40da <fcvt_r+346>:	test   eax,eax
   0x7ffff7eb40dc <fcvt_r+348>:	jg     0x7ffff7eb40c8 <fcvt_r+328>
   0x7ffff7eb40de <fcvt_r+350>:	mov    BYTE PTR [rbp+rbx*1+0x0],0x0
   0x7ffff7eb40e3 <fcvt_r+355>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb40e8 <fcvt_r+360>:	xor    eax,eax
   0x7ffff7eb40ea <fcvt_r+362>:	add    rsp,0x18
   0x7ffff7eb40ee <fcvt_r+366>:	pop    rbx
   0x7ffff7eb40ef <fcvt_r+367>:	pop    rbp
   0x7ffff7eb40f0 <fcvt_r+368>:	pop    r12
   0x7ffff7eb40f2 <fcvt_r+370>:	pop    r13
   0x7ffff7eb40f4 <fcvt_r+372>:	pop    r14
   0x7ffff7eb40f6 <fcvt_r+374>:	pop    r15
   0x7ffff7eb40f8 <fcvt_r+376>:	ret
   0x7ffff7eb40f9 <fcvt_r+377>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb4100 <fcvt_r+384>:	movmskpd ecx,xmm0
   0x7ffff7eb4104 <fcvt_r+388>:	xor    esi,esi
   0x7ffff7eb4106 <fcvt_r+390>:	and    ecx,0x1
   0x7ffff7eb4109 <fcvt_r+393>:	setne  sil
   0x7ffff7eb410d <fcvt_r+397>:	je     0x7ffff7eb4117 <fcvt_r+407>
   0x7ffff7eb410f <fcvt_r+399>:	xorpd  xmm0,XMMWORD PTR [rip+0xc2f69]        # 0x7ffff7f77080
   0x7ffff7eb4117 <fcvt_r+407>:	test   eax,eax
   0x7ffff7eb4119 <fcvt_r+409>:	js     0x7ffff7eb4140 <fcvt_r+448>
   0x7ffff7eb411b <fcvt_r+411>:	mov    ecx,0x11
   0x7ffff7eb4120 <fcvt_r+416>:	cmp    eax,ecx
   0x7ffff7eb4122 <fcvt_r+418>:	cmovle ecx,eax
   0x7ffff7eb4125 <fcvt_r+421>:	xor    r15d,r15d
   0x7ffff7eb4128 <fcvt_r+424>:	jmp    0x7ffff7eb3fd3 <fcvt_r+83>
   0x7ffff7eb412d <fcvt_r+429>:	nop    DWORD PTR [rax]
   0x7ffff7eb4130 <fcvt_r+432>:	mov    DWORD PTR [r14],ecx
   0x7ffff7eb4133 <fcvt_r+435>:	jmp    0x7ffff7eb40aa <fcvt_r+298>
   0x7ffff7eb4138 <fcvt_r+440>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4140 <fcvt_r+448>:	neg    eax
   0x7ffff7eb4142 <fcvt_r+450>:	movsd  xmm2,QWORD PTR [rip+0xc360e]        # 0x7ffff7f77758
   0x7ffff7eb414a <fcvt_r+458>:	movsd  xmm1,QWORD PTR [rip+0xc356e]        # 0x7ffff7f776c0
   0x7ffff7eb4152 <fcvt_r+466>:	mov    r15d,eax
   0x7ffff7eb4155 <fcvt_r+469>:	xor    eax,eax
   0x7ffff7eb4157 <fcvt_r+471>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4160 <fcvt_r+480>:	movq   rcx,xmm0
   0x7ffff7eb4165 <fcvt_r+485>:	mulsd  xmm0,xmm2
   0x7ffff7eb4169 <fcvt_r+489>:	comisd xmm1,xmm0
   0x7ffff7eb416d <fcvt_r+493>:	ja     0x7ffff7eb41b0 <fcvt_r+560>
   0x7ffff7eb416f <fcvt_r+495>:	add    eax,0x1
   0x7ffff7eb4172 <fcvt_r+498>:	cmp    eax,r15d
   0x7ffff7eb4175 <fcvt_r+501>:	jne    0x7ffff7eb4160 <fcvt_r+480>
   0x7ffff7eb4177 <fcvt_r+503>:	xor    ecx,ecx
   0x7ffff7eb4179 <fcvt_r+505>:	jmp    0x7ffff7eb3fd3 <fcvt_r+83>
   0x7ffff7eb417e <fcvt_r+510>:	xchg   ax,ax
   0x7ffff7eb4180 <fcvt_r+512>:	cmp    BYTE PTR [rbp+0x0],0x30
   0x7ffff7eb4184 <fcvt_r+516>:	jne    0x7ffff7eb419d <fcvt_r+541>
   0x7ffff7eb4186 <fcvt_r+518>:	ucomisd xmm0,QWORD PTR [rip+0xc2f0a]        # 0x7ffff7f77098
   0x7ffff7eb418e <fcvt_r+526>:	mov    edx,0x1
   0x7ffff7eb4193 <fcvt_r+531>:	setp   al
   0x7ffff7eb4196 <fcvt_r+534>:	cmovne eax,edx
   0x7ffff7eb4199 <fcvt_r+537>:	test   al,al
   0x7ffff7eb419b <fcvt_r+539>:	jne    0x7ffff7eb41cb <fcvt_r+587>
   0x7ffff7eb419d <fcvt_r+541>:	lea    rdi,[rbp+0x1]
   0x7ffff7eb41a1 <fcvt_r+545>:	jmp    0x7ffff7eb407b <fcvt_r+251>
   0x7ffff7eb41a6 <fcvt_r+550>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb41b0 <fcvt_r+560>:	movq   xmm0,rcx
   0x7ffff7eb41b5 <fcvt_r+565>:	mov    r15d,eax
   0x7ffff7eb41b8 <fcvt_r+568>:	xor    ecx,ecx
   0x7ffff7eb41ba <fcvt_r+570>:	jmp    0x7ffff7eb3fd3 <fcvt_r+83>
   0x7ffff7eb41bf <fcvt_r+575>:	mov    DWORD PTR [r14],0x0
   0x7ffff7eb41c6 <fcvt_r+582>:	jmp    0x7ffff7eb40ea <fcvt_r+362>
   0x7ffff7eb41cb <fcvt_r+587>:	mov    DWORD PTR [r14],0x0
   0x7ffff7eb41d2 <fcvt_r+594>:	xor    eax,eax
   0x7ffff7eb41d4 <fcvt_r+596>:	cmp    rbx,r12
   0x7ffff7eb41d7 <fcvt_r+599>:	jg     0x7ffff7eb41f3 <fcvt_r+627>
   0x7ffff7eb41d9 <fcvt_r+601>:	jmp    0x7ffff7eb41fe <fcvt_r+638>
   0x7ffff7eb41db <fcvt_r+603>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb41e0 <fcvt_r+608>:	sub    eax,0x1
   0x7ffff7eb41e3 <fcvt_r+611>:	add    r12,0x1
   0x7ffff7eb41e7 <fcvt_r+615>:	mov    DWORD PTR [r14],eax
   0x7ffff7eb41ea <fcvt_r+618>:	cmp    rbx,r12
   0x7ffff7eb41ed <fcvt_r+621>:	je     0x7ffff7eb4210 <fcvt_r+656>
   0x7ffff7eb41ef <fcvt_r+623>:	lea    rsi,[r12+rbp*1]
   0x7ffff7eb41f3 <fcvt_r+627>:	cmp    BYTE PTR [rbp+r12*1+0x0],0x30
   0x7ffff7eb41f9 <fcvt_r+633>:	mov    r8,rsi
   0x7ffff7eb41fc <fcvt_r+636>:	je     0x7ffff7eb41e0 <fcvt_r+608>
   0x7ffff7eb41fe <fcvt_r+638>:	mov    rdi,rbp
   0x7ffff7eb4201 <fcvt_r+641>:	jmp    0x7ffff7eb407b <fcvt_r+251>
   0x7ffff7eb4206 <fcvt_r+646>:	mov    eax,0xffffffff
   0x7ffff7eb420b <fcvt_r+651>:	jmp    0x7ffff7eb40ea <fcvt_r+362>
   0x7ffff7eb4210 <fcvt_r+656>:	lea    r8,[rbp+rbx*1+0x0]
   0x7ffff7eb4215 <fcvt_r+661>:	mov    rdi,rbp
   0x7ffff7eb4218 <fcvt_r+664>:	jmp    0x7ffff7eb407b <fcvt_r+251>
   0x7ffff7eb421d <fcvt_r+669>:	mov    rax,QWORD PTR [rip+0xf9bec]        # 0x7ffff7fade10
   0x7ffff7eb4224 <fcvt_r+676>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7eb422b <fcvt_r+683>:	mov    eax,0xffffffff
   0x7ffff7eb4230 <fcvt_r+688>:	ret
   0x7ffff7eb4231:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb423c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb4240 <ecvt_r>:	endbr64
   0x7ffff7eb4244 <ecvt_r+4>:	push   rbp
   0x7ffff7eb4245 <ecvt_r+5>:	movapd xmm1,xmm0
   0x7ffff7eb4249 <ecvt_r+9>:	mov    eax,edi
   0x7ffff7eb424b <ecvt_r+11>:	push   rbx
   0x7ffff7eb424c <ecvt_r+12>:	mov    rbx,rsi
   0x7ffff7eb424f <ecvt_r+15>:	sub    rsp,0x8
   0x7ffff7eb4253 <ecvt_r+19>:	test   edi,edi
   0x7ffff7eb4255 <ecvt_r+21>:	movq   xmm3,QWORD PTR [rip+0xc2e33]        # 0x7ffff7f77090
   0x7ffff7eb425d <ecvt_r+29>:	movsd  xmm6,QWORD PTR [rip+0xc347b]        # 0x7ffff7f776e0
   0x7ffff7eb4265 <ecvt_r+37>:	setle  sil
   0x7ffff7eb4269 <ecvt_r+41>:	test   r8,r8
   0x7ffff7eb426c <ecvt_r+44>:	setne  dil
   0x7ffff7eb4270 <ecvt_r+48>:	andpd  xmm1,xmm3
   0x7ffff7eb4274 <ecvt_r+52>:	and    esi,edi
   0x7ffff7eb4276 <ecvt_r+54>:	ucomisd xmm6,xmm1
   0x7ffff7eb427a <ecvt_r+58>:	jb     0x7ffff7eb4360 <ecvt_r+288>
   0x7ffff7eb4280 <ecvt_r+64>:	pxor   xmm1,xmm1
   0x7ffff7eb4284 <ecvt_r+68>:	ucomisd xmm0,xmm1
   0x7ffff7eb4288 <ecvt_r+72>:	jp     0x7ffff7eb4295 <ecvt_r+85>
   0x7ffff7eb428a <ecvt_r+74>:	mov    ebp,0x0
   0x7ffff7eb428f <ecvt_r+79>:	je     0x7ffff7eb4330 <ecvt_r+240>
   0x7ffff7eb4295 <ecvt_r+85>:	movapd xmm4,xmm0
   0x7ffff7eb4299 <ecvt_r+89>:	movapd xmm2,xmm0
   0x7ffff7eb429d <ecvt_r+93>:	xorpd  xmm2,XMMWORD PTR [rip+0xc2ddb]        # 0x7ffff7f77080
   0x7ffff7eb42a5 <ecvt_r+101>:	xor    ebp,ebp
   0x7ffff7eb42a7 <ecvt_r+103>:	cmpltsd xmm4,xmm1
   0x7ffff7eb42ac <ecvt_r+108>:	andpd  xmm2,xmm4
   0x7ffff7eb42b0 <ecvt_r+112>:	andnpd xmm4,xmm0
   0x7ffff7eb42b4 <ecvt_r+116>:	orpd   xmm2,xmm4
   0x7ffff7eb42b8 <ecvt_r+120>:	movsd  xmm4,QWORD PTR [rip+0xc34a0]        # 0x7ffff7f77760
   0x7ffff7eb42c0 <ecvt_r+128>:	comisd xmm4,xmm2
   0x7ffff7eb42c4 <ecvt_r+132>:	jbe    0x7ffff7eb42e6 <ecvt_r+166>
   0x7ffff7eb42c6 <ecvt_r+134>:	divsd  xmm0,xmm4
   0x7ffff7eb42ca <ecvt_r+138>:	mov    ebp,0xfffffecd
   0x7ffff7eb42cf <ecvt_r+143>:	comisd xmm1,xmm0
   0x7ffff7eb42d3 <ecvt_r+147>:	movapd xmm2,xmm0
   0x7ffff7eb42d7 <ecvt_r+151>:	jbe    0x7ffff7eb42e6 <ecvt_r+166>
   0x7ffff7eb42d9 <ecvt_r+153>:	xorpd  xmm2,XMMWORD PTR [rip+0xc2d9f]        # 0x7ffff7f77080
   0x7ffff7eb42e1 <ecvt_r+161>:	mov    ebp,0xfffffecd
   0x7ffff7eb42e6 <ecvt_r+166>:	movsd  xmm1,QWORD PTR [rip+0xc33d2]        # 0x7ffff7f776c0
   0x7ffff7eb42ee <ecvt_r+174>:	comisd xmm1,xmm2
   0x7ffff7eb42f2 <ecvt_r+178>:	ja     0x7ffff7eb4390 <ecvt_r+336>
   0x7ffff7eb42f8 <ecvt_r+184>:	movsd  xmm5,QWORD PTR [rip+0xc3468]        # 0x7ffff7f77768
   0x7ffff7eb4300 <ecvt_r+192>:	comisd xmm2,xmm5
   0x7ffff7eb4304 <ecvt_r+196>:	jb     0x7ffff7eb4330 <ecvt_r+240>
   0x7ffff7eb4306 <ecvt_r+198>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4310 <ecvt_r+208>:	mulsd  xmm1,xmm5
   0x7ffff7eb4314 <ecvt_r+212>:	add    ebp,0x1
   0x7ffff7eb4317 <ecvt_r+215>:	movapd xmm4,xmm1
   0x7ffff7eb431b <ecvt_r+219>:	mulsd  xmm4,xmm5
   0x7ffff7eb431f <ecvt_r+223>:	comisd xmm2,xmm4
   0x7ffff7eb4323 <ecvt_r+227>:	jae    0x7ffff7eb4310 <ecvt_r+208>
   0x7ffff7eb4325 <ecvt_r+229>:	divsd  xmm0,xmm1
   0x7ffff7eb4329 <ecvt_r+233>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb4330 <ecvt_r+240>:	test   sil,sil
   0x7ffff7eb4333 <ecvt_r+243>:	je     0x7ffff7eb4369 <ecvt_r+297>
   0x7ffff7eb4335 <ecvt_r+245>:	andpd  xmm3,xmm0
   0x7ffff7eb4339 <ecvt_r+249>:	ucomisd xmm6,xmm3
   0x7ffff7eb433d <ecvt_r+253>:	jb     0x7ffff7eb43be <ecvt_r+382>
   0x7ffff7eb433f <ecvt_r+255>:	movmskpd edi,xmm0
   0x7ffff7eb4343 <ecvt_r+259>:	and    edi,0x1
   0x7ffff7eb4346 <ecvt_r+262>:	mov    BYTE PTR [rcx],0x0
   0x7ffff7eb4349 <ecvt_r+265>:	mov    DWORD PTR [rbx],0x1
   0x7ffff7eb434f <ecvt_r+271>:	mov    DWORD PTR [rdx],edi
   0x7ffff7eb4351 <ecvt_r+273>:	add    DWORD PTR [rbx],ebp
   0x7ffff7eb4353 <ecvt_r+275>:	xor    eax,eax
   0x7ffff7eb4355 <ecvt_r+277>:	add    rsp,0x8
   0x7ffff7eb4359 <ecvt_r+281>:	pop    rbx
   0x7ffff7eb435a <ecvt_r+282>:	pop    rbp
   0x7ffff7eb435b <ecvt_r+283>:	ret
   0x7ffff7eb435c <ecvt_r+284>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb4360 <ecvt_r+288>:	xor    ebp,ebp
   0x7ffff7eb4362 <ecvt_r+290>:	xor    edi,edi
   0x7ffff7eb4364 <ecvt_r+292>:	test   sil,sil
   0x7ffff7eb4367 <ecvt_r+295>:	jne    0x7ffff7eb4346 <ecvt_r+262>
   0x7ffff7eb4369 <ecvt_r+297>:	mov    edi,0x11
   0x7ffff7eb436e <ecvt_r+302>:	mov    rsi,rbx
   0x7ffff7eb4371 <ecvt_r+305>:	cmp    eax,edi
   0x7ffff7eb4373 <ecvt_r+307>:	cmovle edi,eax
   0x7ffff7eb4376 <ecvt_r+310>:	sub    edi,0x1
   0x7ffff7eb4379 <ecvt_r+313>:	call   0x7ffff7eb3f80 <fcvt_r>
   0x7ffff7eb437e <ecvt_r+318>:	test   eax,eax
   0x7ffff7eb4380 <ecvt_r+320>:	je     0x7ffff7eb4351 <ecvt_r+273>
   0x7ffff7eb4382 <ecvt_r+322>:	mov    eax,0xffffffff
   0x7ffff7eb4387 <ecvt_r+327>:	jmp    0x7ffff7eb4355 <ecvt_r+277>
   0x7ffff7eb4389 <ecvt_r+329>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb4390 <ecvt_r+336>:	movsd  xmm5,QWORD PTR [rip+0xc33d0]        # 0x7ffff7f77768
   0x7ffff7eb4398 <ecvt_r+344>:	movapd xmm4,xmm1
   0x7ffff7eb439c <ecvt_r+348>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb43a0 <ecvt_r+352>:	mulsd  xmm4,xmm5
   0x7ffff7eb43a4 <ecvt_r+356>:	movapd xmm7,xmm2
   0x7ffff7eb43a8 <ecvt_r+360>:	sub    ebp,0x1
   0x7ffff7eb43ab <ecvt_r+363>:	mulsd  xmm7,xmm4
   0x7ffff7eb43af <ecvt_r+367>:	comisd xmm1,xmm7
   0x7ffff7eb43b3 <ecvt_r+371>:	ja     0x7ffff7eb43a0 <ecvt_r+352>
   0x7ffff7eb43b5 <ecvt_r+373>:	mulsd  xmm0,xmm4
   0x7ffff7eb43b9 <ecvt_r+377>:	jmp    0x7ffff7eb4330 <ecvt_r+240>
   0x7ffff7eb43be <ecvt_r+382>:	xor    edi,edi
   0x7ffff7eb43c0 <ecvt_r+384>:	jmp    0x7ffff7eb4346 <ecvt_r+262>
   0x7ffff7eb43c2:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb43cc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb43d0 <qfcvt>:	endbr64
   0x7ffff7eb43d4 <qfcvt+4>:	mov    rcx,QWORD PTR [rip+0xfb53d]        # 0x7ffff7faf918
   0x7ffff7eb43db <qfcvt+11>:	push   r13
   0x7ffff7eb43dd <qfcvt+13>:	mov    r13,rdx
   0x7ffff7eb43e0 <qfcvt+16>:	push   r12
   0x7ffff7eb43e2 <qfcvt+18>:	mov    r12,rsi
   0x7ffff7eb43e5 <qfcvt+21>:	push   rbp
   0x7ffff7eb43e6 <qfcvt+22>:	mov    ebp,edi
   0x7ffff7eb43e8 <qfcvt+24>:	test   rcx,rcx
   0x7ffff7eb43eb <qfcvt+27>:	je     0x7ffff7eb4420 <qfcvt+80>
   0x7ffff7eb43ed <qfcvt+29>:	push   QWORD PTR [rsp+0x28]
   0x7ffff7eb43f1 <qfcvt+33>:	mov    rdx,r13
   0x7ffff7eb43f4 <qfcvt+36>:	mov    rsi,r12
   0x7ffff7eb43f7 <qfcvt+39>:	mov    edi,ebp
   0x7ffff7eb43f9 <qfcvt+41>:	push   QWORD PTR [rsp+0x28]
   0x7ffff7eb43fd <qfcvt+45>:	mov    r8d,0x1365
   0x7ffff7eb4403 <qfcvt+51>:	call   0x7ffff7eb44e0 <qfcvt_r>
   0x7ffff7eb4408 <qfcvt+56>:	pop    rdx
   0x7ffff7eb4409 <qfcvt+57>:	mov    rax,QWORD PTR [rip+0xfb508]        # 0x7ffff7faf918
   0x7ffff7eb4410 <qfcvt+64>:	pop    rcx
   0x7ffff7eb4411 <qfcvt+65>:	pop    rbp
   0x7ffff7eb4412 <qfcvt+66>:	pop    r12
   0x7ffff7eb4414 <qfcvt+68>:	pop    r13
   0x7ffff7eb4416 <qfcvt+70>:	ret
   0x7ffff7eb4417 <qfcvt+71>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4420 <qfcvt+80>:	push   QWORD PTR [rsp+0x28]
   0x7ffff7eb4424 <qfcvt+84>:	mov    r8d,0x21
   0x7ffff7eb442a <qfcvt+90>:	lea    rcx,[rip+0x10200f]        # 0x7ffff7fb6440
   0x7ffff7eb4431 <qfcvt+97>:	push   QWORD PTR [rsp+0x28]
   0x7ffff7eb4435 <qfcvt+101>:	call   0x7ffff7eb44e0 <qfcvt_r>
   0x7ffff7eb443a <qfcvt+106>:	pop    rsi
   0x7ffff7eb443b <qfcvt+107>:	pop    rdi
   0x7ffff7eb443c <qfcvt+108>:	cmp    eax,0xffffffff
   0x7ffff7eb443f <qfcvt+111>:	je     0x7ffff7eb4450 <qfcvt+128>
   0x7ffff7eb4441 <qfcvt+113>:	pop    rbp
   0x7ffff7eb4442 <qfcvt+114>:	lea    rax,[rip+0x101ff7]        # 0x7ffff7fb6440
   0x7ffff7eb4449 <qfcvt+121>:	pop    r12
   0x7ffff7eb444b <qfcvt+123>:	pop    r13
   0x7ffff7eb444d <qfcvt+125>:	ret
   0x7ffff7eb444e <qfcvt+126>:	xchg   ax,ax
   0x7ffff7eb4450 <qfcvt+128>:	mov    edi,0x1365
   0x7ffff7eb4455 <qfcvt+133>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7eb445a <qfcvt+138>:	mov    QWORD PTR [rip+0xfb4b7],rax        # 0x7ffff7faf918
   0x7ffff7eb4461 <qfcvt+145>:	mov    rcx,rax
   0x7ffff7eb4464 <qfcvt+148>:	test   rax,rax
   0x7ffff7eb4467 <qfcvt+151>:	jne    0x7ffff7eb43ed <qfcvt+29>
   0x7ffff7eb4469 <qfcvt+153>:	jmp    0x7ffff7eb4441 <qfcvt+113>
   0x7ffff7eb446b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4470 <qecvt>:	endbr64
   0x7ffff7eb4474 <qecvt+4>:	push   r12
   0x7ffff7eb4476 <qecvt+6>:	lea    r12,[rip+0x101f83]        # 0x7ffff7fb6400
   0x7ffff7eb447d <qecvt+13>:	mov    r8d,0x21
   0x7ffff7eb4483 <qecvt+19>:	push   QWORD PTR [rsp+0x18]
   0x7ffff7eb4487 <qecvt+23>:	mov    rcx,r12
   0x7ffff7eb448a <qecvt+26>:	push   QWORD PTR [rsp+0x18]
   0x7ffff7eb448e <qecvt+30>:	call   0x7ffff7eb47b0 <qecvt_r>
   0x7ffff7eb4493 <qecvt+35>:	pop    rax
   0x7ffff7eb4494 <qecvt+36>:	mov    rax,r12
   0x7ffff7eb4497 <qecvt+39>:	pop    rdx
   0x7ffff7eb4498 <qecvt+40>:	pop    r12
   0x7ffff7eb449a <qecvt+42>:	ret
   0x7ffff7eb449b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb44a0 <qgcvt>:	endbr64
   0x7ffff7eb44a4 <qgcvt+4>:	mov    eax,0x15
   0x7ffff7eb44a9 <qgcvt+9>:	push   r12
   0x7ffff7eb44ab <qgcvt+11>:	mov    r12,rsi
   0x7ffff7eb44ae <qgcvt+14>:	lea    rsi,[rip+0xbacd1]        # 0x7ffff7f6f186
   0x7ffff7eb44b5 <qgcvt+21>:	cmp    edi,eax
   0x7ffff7eb44b7 <qgcvt+23>:	push   QWORD PTR [rsp+0x18]
   0x7ffff7eb44bb <qgcvt+27>:	cmovle eax,edi
   0x7ffff7eb44be <qgcvt+30>:	push   QWORD PTR [rsp+0x18]
   0x7ffff7eb44c2 <qgcvt+34>:	mov    rdi,r12
   0x7ffff7eb44c5 <qgcvt+37>:	mov    edx,eax
   0x7ffff7eb44c7 <qgcvt+39>:	xor    eax,eax
   0x7ffff7eb44c9 <qgcvt+41>:	call   0x7ffff7df5900 <sprintf>
   0x7ffff7eb44ce <qgcvt+46>:	pop    rax
   0x7ffff7eb44cf <qgcvt+47>:	mov    rax,r12
   0x7ffff7eb44d2 <qgcvt+50>:	pop    rdx
   0x7ffff7eb44d3 <qgcvt+51>:	pop    r12
   0x7ffff7eb44d5 <qgcvt+53>:	ret
   0x7ffff7eb44d6:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb44e0 <qfcvt_r>:	endbr64
   0x7ffff7eb44e4 <qfcvt_r+4>:	push   r15
   0x7ffff7eb44e6 <qfcvt_r+6>:	push   r14
   0x7ffff7eb44e8 <qfcvt_r+8>:	push   r13
   0x7ffff7eb44ea <qfcvt_r+10>:	push   r12
   0x7ffff7eb44ec <qfcvt_r+12>:	push   rbp
   0x7ffff7eb44ed <qfcvt_r+13>:	push   rbx
   0x7ffff7eb44ee <qfcvt_r+14>:	sub    rsp,0x18
   0x7ffff7eb44f2 <qfcvt_r+18>:	fld    TBYTE PTR [rsp+0x50]
   0x7ffff7eb44f6 <qfcvt_r+22>:	test   rcx,rcx
   0x7ffff7eb44f9 <qfcvt_r+25>:	je     0x7ffff7eb478d <qfcvt_r+685>
   0x7ffff7eb44ff <qfcvt_r+31>:	fld    st(0)
   0x7ffff7eb4501 <qfcvt_r+33>:	mov    r14,rsi
   0x7ffff7eb4504 <qfcvt_r+36>:	mov    rbp,rcx
   0x7ffff7eb4507 <qfcvt_r+39>:	fabs
   0x7ffff7eb4509 <qfcvt_r+41>:	mov    r13,r8
   0x7ffff7eb450c <qfcvt_r+44>:	fld    TBYTE PTR [rip+0xc2b5e]        # 0x7ffff7f77070
   0x7ffff7eb4512 <qfcvt_r+50>:	fucomip st,st(1)
   0x7ffff7eb4514 <qfcvt_r+52>:	fstp   st(0)
   0x7ffff7eb4516 <qfcvt_r+54>:	jae    0x7ffff7eb4668 <qfcvt_r+392>
   0x7ffff7eb451c <qfcvt_r+60>:	mov    eax,0x15
   0x7ffff7eb4521 <qfcvt_r+65>:	cmp    edi,eax
   0x7ffff7eb4523 <qfcvt_r+67>:	cmovle eax,edi
   0x7ffff7eb4526 <qfcvt_r+70>:	xor    esi,esi
   0x7ffff7eb4528 <qfcvt_r+72>:	xor    r15d,r15d
   0x7ffff7eb452b <qfcvt_r+75>:	mov    ecx,eax
   0x7ffff7eb452d <qfcvt_r+77>:	sub    rsp,0x10
   0x7ffff7eb4531 <qfcvt_r+81>:	mov    DWORD PTR [rdx],esi
   0x7ffff7eb4533 <qfcvt_r+83>:	mov    rdi,rbp
   0x7ffff7eb4536 <qfcvt_r+86>:	lea    rdx,[rip+0xbac4f]        # 0x7ffff7f6f18c
   0x7ffff7eb453d <qfcvt_r+93>:	fld    st(0)
   0x7ffff7eb453f <qfcvt_r+95>:	fstp   TBYTE PTR [rsp]
   0x7ffff7eb4542 <qfcvt_r+98>:	mov    rsi,r13
   0x7ffff7eb4545 <qfcvt_r+101>:	xor    eax,eax
   0x7ffff7eb4547 <qfcvt_r+103>:	fstp   TBYTE PTR [rsp+0x60]
   0x7ffff7eb454b <qfcvt_r+107>:	call   0x7ffff7df5840 <snprintf>
   0x7ffff7eb4550 <qfcvt_r+112>:	movsxd rbx,eax
   0x7ffff7eb4553 <qfcvt_r+115>:	pop    rax
   0x7ffff7eb4554 <qfcvt_r+116>:	pop    rdx
   0x7ffff7eb4555 <qfcvt_r+117>:	mov    rcx,rbx
   0x7ffff7eb4558 <qfcvt_r+120>:	cmp    r13,rbx
   0x7ffff7eb455b <qfcvt_r+123>:	jle    0x7ffff7eb4776 <qfcvt_r+662>
   0x7ffff7eb4561 <qfcvt_r+129>:	fld    TBYTE PTR [rsp+0x50]
   0x7ffff7eb4565 <qfcvt_r+133>:	xor    eax,eax
   0x7ffff7eb4567 <qfcvt_r+135>:	test   rbx,rbx
   0x7ffff7eb456a <qfcvt_r+138>:	jg     0x7ffff7eb4585 <qfcvt_r+165>
   0x7ffff7eb456c <qfcvt_r+140>:	fstp   st(0)
   0x7ffff7eb456e <qfcvt_r+142>:	jmp    0x7ffff7eb4730 <qfcvt_r+592>
   0x7ffff7eb4573 <qfcvt_r+147>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4578 <qfcvt_r+152>:	add    rax,0x1
   0x7ffff7eb457c <qfcvt_r+156>:	cmp    rbx,rax
   0x7ffff7eb457f <qfcvt_r+159>:	je     0x7ffff7eb4698 <qfcvt_r+440>
   0x7ffff7eb4585 <qfcvt_r+165>:	movsx  edx,BYTE PTR [rbp+rax*1+0x0]
   0x7ffff7eb458a <qfcvt_r+170>:	sub    edx,0x30
   0x7ffff7eb458d <qfcvt_r+173>:	cmp    edx,0x9
   0x7ffff7eb4590 <qfcvt_r+176>:	jbe    0x7ffff7eb4578 <qfcvt_r+152>
   0x7ffff7eb4592 <qfcvt_r+178>:	mov    DWORD PTR [r14],eax
   0x7ffff7eb4595 <qfcvt_r+181>:	movsxd rdi,eax
   0x7ffff7eb4598 <qfcvt_r+184>:	test   rax,rax
   0x7ffff7eb459b <qfcvt_r+187>:	je     0x7ffff7eb4650 <qfcvt_r+368>
   0x7ffff7eb45a1 <qfcvt_r+193>:	cmp    rbx,rax
   0x7ffff7eb45a4 <qfcvt_r+196>:	jle    0x7ffff7eb460e <qfcvt_r+302>
   0x7ffff7eb45a6 <qfcvt_r+198>:	mov    r12,rax
   0x7ffff7eb45a9 <qfcvt_r+201>:	jmp    0x7ffff7eb45be <qfcvt_r+222>
   0x7ffff7eb45ab <qfcvt_r+203>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb45b0 <qfcvt_r+208>:	movsx  edx,BYTE PTR [rbp+r12*1+0x0]
   0x7ffff7eb45b6 <qfcvt_r+214>:	sub    edx,0x30
   0x7ffff7eb45b9 <qfcvt_r+217>:	cmp    edx,0x9
   0x7ffff7eb45bc <qfcvt_r+220>:	jbe    0x7ffff7eb45ce <qfcvt_r+238>
   0x7ffff7eb45be <qfcvt_r+222>:	add    r12,0x1
   0x7ffff7eb45c2 <qfcvt_r+226>:	lea    rsi,[r12+rbp*1]
   0x7ffff7eb45c6 <qfcvt_r+230>:	mov    r8,rsi
   0x7ffff7eb45c9 <qfcvt_r+233>:	cmp    rbx,r12
   0x7ffff7eb45cc <qfcvt_r+236>:	jne    0x7ffff7eb45b0 <qfcvt_r+208>
   0x7ffff7eb45ce <qfcvt_r+238>:	add    rdi,rbp
   0x7ffff7eb45d1 <qfcvt_r+241>:	cmp    rax,0x1
   0x7ffff7eb45d5 <qfcvt_r+245>:	je     0x7ffff7eb46f0 <qfcvt_r+528>
   0x7ffff7eb45db <qfcvt_r+251>:	fstp   st(0)
   0x7ffff7eb45dd <qfcvt_r+253>:	mov    rdx,rbx
   0x7ffff7eb45e0 <qfcvt_r+256>:	mov    rsi,r8
   0x7ffff7eb45e3 <qfcvt_r+259>:	mov    DWORD PTR [rsp+0xc],ecx
   0x7ffff7eb45e7 <qfcvt_r+263>:	sub    rdx,r12
   0x7ffff7eb45ea <qfcvt_r+266>:	call   0x7ffff7dbd430 <*ABS*+0xa9620@plt>
   0x7ffff7eb45ef <qfcvt_r+271>:	movsxd rax,DWORD PTR [r14]
   0x7ffff7eb45f2 <qfcvt_r+274>:	xor    edx,edx
   0x7ffff7eb45f4 <qfcvt_r+276>:	mov    ecx,DWORD PTR [rsp+0xc]
   0x7ffff7eb45f8 <qfcvt_r+280>:	test   eax,eax
   0x7ffff7eb45fa <qfcvt_r+282>:	cmovs  rax,rdx
   0x7ffff7eb45fe <qfcvt_r+286>:	sub    r12,rax
   0x7ffff7eb4601 <qfcvt_r+289>:	mov    rax,rbx
   0x7ffff7eb4604 <qfcvt_r+292>:	sub    rax,r12
   0x7ffff7eb4607 <qfcvt_r+295>:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
   0x7ffff7eb460c <qfcvt_r+300>:	jmp    0x7ffff7eb4610 <qfcvt_r+304>
   0x7ffff7eb460e <qfcvt_r+302>:	fstp   st(0)
   0x7ffff7eb4610 <qfcvt_r+304>:	test   r15d,r15d
   0x7ffff7eb4613 <qfcvt_r+307>:	je     0x7ffff7eb4652 <qfcvt_r+370>
   0x7ffff7eb4615 <qfcvt_r+309>:	sub    r13,0x1
   0x7ffff7eb4619 <qfcvt_r+313>:	add    DWORD PTR [r14],r15d
   0x7ffff7eb461c <qfcvt_r+316>:	cmp    r13,rbx
   0x7ffff7eb461f <qfcvt_r+319>:	jle    0x7ffff7eb4652 <qfcvt_r+370>
   0x7ffff7eb4621 <qfcvt_r+321>:	lea    edx,[r15+rcx*1]
   0x7ffff7eb4625 <qfcvt_r+325>:	jmp    0x7ffff7eb4635 <qfcvt_r+341>
   0x7ffff7eb4627 <qfcvt_r+327>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4630 <qfcvt_r+336>:	cmp    r13,rbx
   0x7ffff7eb4633 <qfcvt_r+339>:	jle    0x7ffff7eb4646 <qfcvt_r+358>
   0x7ffff7eb4635 <qfcvt_r+341>:	add    rbx,0x1
   0x7ffff7eb4639 <qfcvt_r+345>:	mov    eax,edx
   0x7ffff7eb463b <qfcvt_r+347>:	sub    eax,ebx
   0x7ffff7eb463d <qfcvt_r+349>:	mov    BYTE PTR [rbp+rbx*1-0x1],0x30
   0x7ffff7eb4642 <qfcvt_r+354>:	test   eax,eax
   0x7ffff7eb4644 <qfcvt_r+356>:	jg     0x7ffff7eb4630 <qfcvt_r+336>
   0x7ffff7eb4646 <qfcvt_r+358>:	mov    BYTE PTR [rbp+rbx*1+0x0],0x0
   0x7ffff7eb464b <qfcvt_r+363>:	jmp    0x7ffff7eb4652 <qfcvt_r+370>
   0x7ffff7eb464d <qfcvt_r+365>:	nop    DWORD PTR [rax]
   0x7ffff7eb4650 <qfcvt_r+368>:	fstp   st(0)
   0x7ffff7eb4652 <qfcvt_r+370>:	xor    eax,eax
   0x7ffff7eb4654 <qfcvt_r+372>:	add    rsp,0x18
   0x7ffff7eb4658 <qfcvt_r+376>:	pop    rbx
   0x7ffff7eb4659 <qfcvt_r+377>:	pop    rbp
   0x7ffff7eb465a <qfcvt_r+378>:	pop    r12
   0x7ffff7eb465c <qfcvt_r+380>:	pop    r13
   0x7ffff7eb465e <qfcvt_r+382>:	pop    r14
   0x7ffff7eb4660 <qfcvt_r+384>:	pop    r15
   0x7ffff7eb4662 <qfcvt_r+386>:	ret
   0x7ffff7eb4663 <qfcvt_r+387>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4668 <qfcvt_r+392>:	fxam
   0x7ffff7eb466a <qfcvt_r+394>:	fnstsw ax
   0x7ffff7eb466c <qfcvt_r+396>:	xor    esi,esi
   0x7ffff7eb466e <qfcvt_r+398>:	test   ah,0x2
   0x7ffff7eb4671 <qfcvt_r+401>:	setne  sil
   0x7ffff7eb4675 <qfcvt_r+405>:	je     0x7ffff7eb4679 <qfcvt_r+409>
   0x7ffff7eb4677 <qfcvt_r+407>:	fchs
   0x7ffff7eb4679 <qfcvt_r+409>:	test   edi,edi
   0x7ffff7eb467b <qfcvt_r+411>:	js     0x7ffff7eb46a8 <qfcvt_r+456>
   0x7ffff7eb467d <qfcvt_r+413>:	mov    eax,0x15
   0x7ffff7eb4682 <qfcvt_r+418>:	cmp    edi,eax
   0x7ffff7eb4684 <qfcvt_r+420>:	cmovle eax,edi
   0x7ffff7eb4687 <qfcvt_r+423>:	xor    r15d,r15d
   0x7ffff7eb468a <qfcvt_r+426>:	mov    ecx,eax
   0x7ffff7eb468c <qfcvt_r+428>:	jmp    0x7ffff7eb452d <qfcvt_r+77>
   0x7ffff7eb4691 <qfcvt_r+433>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb4698 <qfcvt_r+440>:	fstp   st(0)
   0x7ffff7eb469a <qfcvt_r+442>:	mov    DWORD PTR [r14],ecx
   0x7ffff7eb469d <qfcvt_r+445>:	jmp    0x7ffff7eb4610 <qfcvt_r+304>
   0x7ffff7eb46a2 <qfcvt_r+450>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb46a8 <qfcvt_r+456>:	fld    QWORD PTR [rip+0xc30aa]        # 0x7ffff7f77758
   0x7ffff7eb46ae <qfcvt_r+462>:	neg    edi
   0x7ffff7eb46b0 <qfcvt_r+464>:	xor    eax,eax
   0x7ffff7eb46b2 <qfcvt_r+466>:	mov    r15d,edi
   0x7ffff7eb46b5 <qfcvt_r+469>:	fld1
   0x7ffff7eb46b7 <qfcvt_r+471>:	jmp    0x7ffff7eb46c6 <qfcvt_r+486>
   0x7ffff7eb46b9 <qfcvt_r+473>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb46c0 <qfcvt_r+480>:	fxch   st(1)
   0x7ffff7eb46c2 <qfcvt_r+482>:	fxch   st(2)
   0x7ffff7eb46c4 <qfcvt_r+484>:	fxch   st(1)
   0x7ffff7eb46c6 <qfcvt_r+486>:	fld    st(2)
   0x7ffff7eb46c8 <qfcvt_r+488>:	fmul   st,st(2)
   0x7ffff7eb46ca <qfcvt_r+490>:	fxch   st(1)
   0x7ffff7eb46cc <qfcvt_r+492>:	fcomi  st,st(1)
   0x7ffff7eb46ce <qfcvt_r+494>:	ja     0x7ffff7eb4720 <qfcvt_r+576>
   0x7ffff7eb46d0 <qfcvt_r+496>:	fstp   st(3)
   0x7ffff7eb46d2 <qfcvt_r+498>:	fxch   st(1)
   0x7ffff7eb46d4 <qfcvt_r+500>:	fxch   st(2)
   0x7ffff7eb46d6 <qfcvt_r+502>:	add    eax,0x1
   0x7ffff7eb46d9 <qfcvt_r+505>:	cmp    eax,r15d
   0x7ffff7eb46dc <qfcvt_r+508>:	jne    0x7ffff7eb46c0 <qfcvt_r+480>
   0x7ffff7eb46de <qfcvt_r+510>:	fstp   st(0)
   0x7ffff7eb46e0 <qfcvt_r+512>:	fstp   st(1)
   0x7ffff7eb46e2 <qfcvt_r+514>:	xor    ecx,ecx
   0x7ffff7eb46e4 <qfcvt_r+516>:	jmp    0x7ffff7eb452d <qfcvt_r+77>
   0x7ffff7eb46e9 <qfcvt_r+521>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb46f0 <qfcvt_r+528>:	cmp    BYTE PTR [rbp+0x0],0x30
   0x7ffff7eb46f4 <qfcvt_r+532>:	jne    0x7ffff7eb470d <qfcvt_r+557>
   0x7ffff7eb46f6 <qfcvt_r+534>:	fldz
   0x7ffff7eb46f8 <qfcvt_r+536>:	mov    edx,0x1
   0x7ffff7eb46fd <qfcvt_r+541>:	fucomip st,st(1)
   0x7ffff7eb46ff <qfcvt_r+543>:	fstp   st(0)
   0x7ffff7eb4701 <qfcvt_r+545>:	setp   al
   0x7ffff7eb4704 <qfcvt_r+548>:	cmovne eax,edx
   0x7ffff7eb4707 <qfcvt_r+551>:	test   al,al
   0x7ffff7eb4709 <qfcvt_r+553>:	jne    0x7ffff7eb473c <qfcvt_r+604>
   0x7ffff7eb470b <qfcvt_r+555>:	jmp    0x7ffff7eb470f <qfcvt_r+559>
   0x7ffff7eb470d <qfcvt_r+557>:	fstp   st(0)
   0x7ffff7eb470f <qfcvt_r+559>:	lea    rdi,[rbp+0x1]
   0x7ffff7eb4713 <qfcvt_r+563>:	jmp    0x7ffff7eb45dd <qfcvt_r+253>
   0x7ffff7eb4718 <qfcvt_r+568>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4720 <qfcvt_r+576>:	fstp   st(0)
   0x7ffff7eb4722 <qfcvt_r+578>:	fstp   st(0)
   0x7ffff7eb4724 <qfcvt_r+580>:	fstp   st(0)
   0x7ffff7eb4726 <qfcvt_r+582>:	mov    r15d,eax
   0x7ffff7eb4729 <qfcvt_r+585>:	xor    ecx,ecx
   0x7ffff7eb472b <qfcvt_r+587>:	jmp    0x7ffff7eb452d <qfcvt_r+77>
   0x7ffff7eb4730 <qfcvt_r+592>:	mov    DWORD PTR [r14],0x0
   0x7ffff7eb4737 <qfcvt_r+599>:	jmp    0x7ffff7eb4654 <qfcvt_r+372>
   0x7ffff7eb473c <qfcvt_r+604>:	mov    DWORD PTR [r14],0x0
   0x7ffff7eb4743 <qfcvt_r+611>:	xor    eax,eax
   0x7ffff7eb4745 <qfcvt_r+613>:	cmp    rbx,r12
   0x7ffff7eb4748 <qfcvt_r+616>:	jg     0x7ffff7eb4763 <qfcvt_r+643>
   0x7ffff7eb474a <qfcvt_r+618>:	jmp    0x7ffff7eb476e <qfcvt_r+654>
   0x7ffff7eb474c <qfcvt_r+620>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb4750 <qfcvt_r+624>:	sub    eax,0x1
   0x7ffff7eb4753 <qfcvt_r+627>:	add    r12,0x1
   0x7ffff7eb4757 <qfcvt_r+631>:	mov    DWORD PTR [r14],eax
   0x7ffff7eb475a <qfcvt_r+634>:	cmp    rbx,r12
   0x7ffff7eb475d <qfcvt_r+637>:	je     0x7ffff7eb4780 <qfcvt_r+672>
   0x7ffff7eb475f <qfcvt_r+639>:	lea    rsi,[r12+rbp*1]
   0x7ffff7eb4763 <qfcvt_r+643>:	cmp    BYTE PTR [rbp+r12*1+0x0],0x30
   0x7ffff7eb4769 <qfcvt_r+649>:	mov    r8,rsi
   0x7ffff7eb476c <qfcvt_r+652>:	je     0x7ffff7eb4750 <qfcvt_r+624>
   0x7ffff7eb476e <qfcvt_r+654>:	mov    rdi,rbp
   0x7ffff7eb4771 <qfcvt_r+657>:	jmp    0x7ffff7eb45dd <qfcvt_r+253>
   0x7ffff7eb4776 <qfcvt_r+662>:	mov    eax,0xffffffff
   0x7ffff7eb477b <qfcvt_r+667>:	jmp    0x7ffff7eb4654 <qfcvt_r+372>
   0x7ffff7eb4780 <qfcvt_r+672>:	lea    r8,[rbp+rbx*1+0x0]
   0x7ffff7eb4785 <qfcvt_r+677>:	mov    rdi,rbp
   0x7ffff7eb4788 <qfcvt_r+680>:	jmp    0x7ffff7eb45dd <qfcvt_r+253>
   0x7ffff7eb478d <qfcvt_r+685>:	fstp   st(0)
   0x7ffff7eb478f <qfcvt_r+687>:	mov    rax,QWORD PTR [rip+0xf967a]        # 0x7ffff7fade10
   0x7ffff7eb4796 <qfcvt_r+694>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7eb479d <qfcvt_r+701>:	mov    eax,0xffffffff
   0x7ffff7eb47a2 <qfcvt_r+706>:	jmp    0x7ffff7eb4654 <qfcvt_r+372>
   0x7ffff7eb47a7:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb47b0 <qecvt_r>:	endbr64
   0x7ffff7eb47b4 <qecvt_r+4>:	push   rbp
   0x7ffff7eb47b5 <qecvt_r+5>:	mov    eax,edi
   0x7ffff7eb47b7 <qecvt_r+7>:	push   rbx
   0x7ffff7eb47b8 <qecvt_r+8>:	mov    rbx,rsi
   0x7ffff7eb47bb <qecvt_r+11>:	sub    rsp,0x8
   0x7ffff7eb47bf <qecvt_r+15>:	test   edi,edi
   0x7ffff7eb47c1 <qecvt_r+17>:	fld    TBYTE PTR [rsp+0x20]
   0x7ffff7eb47c5 <qecvt_r+21>:	setle  sil
   0x7ffff7eb47c9 <qecvt_r+25>:	test   r8,r8
   0x7ffff7eb47cc <qecvt_r+28>:	setne  dil
   0x7ffff7eb47d0 <qecvt_r+32>:	and    esi,edi
   0x7ffff7eb47d2 <qecvt_r+34>:	fld    st(0)
   0x7ffff7eb47d4 <qecvt_r+36>:	fabs
   0x7ffff7eb47d6 <qecvt_r+38>:	fld    TBYTE PTR [rip+0xc2894]        # 0x7ffff7f77070
   0x7ffff7eb47dc <qecvt_r+44>:	fucomip st,st(1)
   0x7ffff7eb47de <qecvt_r+46>:	fstp   st(0)
   0x7ffff7eb47e0 <qecvt_r+48>:	jb     0x7ffff7eb48d0 <qecvt_r+288>
   0x7ffff7eb47e6 <qecvt_r+54>:	fldz
   0x7ffff7eb47e8 <qecvt_r+56>:	fxch   st(1)
   0x7ffff7eb47ea <qecvt_r+58>:	fucomi st,st(1)
   0x7ffff7eb47ec <qecvt_r+60>:	fstp   st(1)
   0x7ffff7eb47ee <qecvt_r+62>:	jp     0x7ffff7eb47fb <qecvt_r+75>
   0x7ffff7eb47f0 <qecvt_r+64>:	mov    ebp,0x0
   0x7ffff7eb47f5 <qecvt_r+69>:	je     0x7ffff7eb4880 <qecvt_r+208>
   0x7ffff7eb47fb <qecvt_r+75>:	fldz
   0x7ffff7eb47fd <qecvt_r+77>:	fld    st(1)
   0x7ffff7eb47ff <qecvt_r+79>:	fchs
   0x7ffff7eb4801 <qecvt_r+81>:	fxch   st(1)
   0x7ffff7eb4803 <qecvt_r+83>:	fcomi  st,st(2)
   0x7ffff7eb4805 <qecvt_r+85>:	fxch   st(1)
   0x7ffff7eb4807 <qecvt_r+87>:	fcmovbe st,st(2)
   0x7ffff7eb4809 <qecvt_r+89>:	xor    ebp,ebp
   0x7ffff7eb480b <qecvt_r+91>:	fld    TBYTE PTR [rip+0xc2caf]        # 0x7ffff7f774c0
   0x7ffff7eb4811 <qecvt_r+97>:	fcomi  st,st(1)
   0x7ffff7eb4813 <qecvt_r+99>:	jbe    0x7ffff7eb4830 <qecvt_r+128>
   0x7ffff7eb4815 <qecvt_r+101>:	fstp   st(1)
   0x7ffff7eb4817 <qecvt_r+103>:	fdivp  st(2),st
   0x7ffff7eb4819 <qecvt_r+105>:	mov    ebp,0xffffecbd
   0x7ffff7eb481e <qecvt_r+110>:	fld    st(1)
   0x7ffff7eb4820 <qecvt_r+112>:	fxch   st(1)
   0x7ffff7eb4822 <qecvt_r+114>:	fcomip st,st(2)
   0x7ffff7eb4824 <qecvt_r+116>:	jbe    0x7ffff7eb4834 <qecvt_r+132>
   0x7ffff7eb4826 <qecvt_r+118>:	fchs
   0x7ffff7eb4828 <qecvt_r+120>:	mov    ebp,0xffffecbd
   0x7ffff7eb482d <qecvt_r+125>:	jmp    0x7ffff7eb4834 <qecvt_r+132>
   0x7ffff7eb482f <qecvt_r+127>:	nop
   0x7ffff7eb4830 <qecvt_r+128>:	fstp   st(0)
   0x7ffff7eb4832 <qecvt_r+130>:	fstp   st(1)
   0x7ffff7eb4834 <qecvt_r+132>:	fld    DWORD PTR [rip+0xc35de]        # 0x7ffff7f77e18
   0x7ffff7eb483a <qecvt_r+138>:	fld1
   0x7ffff7eb483c <qecvt_r+140>:	fcomi  st,st(2)
   0x7ffff7eb483e <qecvt_r+142>:	ja     0x7ffff7eb4908 <qecvt_r+344>
   0x7ffff7eb4844 <qecvt_r+148>:	fld    st(1)
   0x7ffff7eb4846 <qecvt_r+150>:	fxch   st(3)
   0x7ffff7eb4848 <qecvt_r+152>:	fcomi  st,st(3)
   0x7ffff7eb484a <qecvt_r+154>:	fstp   st(3)
   0x7ffff7eb484c <qecvt_r+156>:	jb     0x7ffff7eb4870 <qecvt_r+192>
   0x7ffff7eb484e <qecvt_r+158>:	xchg   ax,ax
   0x7ffff7eb4850 <qecvt_r+160>:	fmul   st,st(1)
   0x7ffff7eb4852 <qecvt_r+162>:	add    ebp,0x1
   0x7ffff7eb4855 <qecvt_r+165>:	fld    st(0)
   0x7ffff7eb4857 <qecvt_r+167>:	fmul   st,st(2)
   0x7ffff7eb4859 <qecvt_r+169>:	fxch   st(3)
   0x7ffff7eb485b <qecvt_r+171>:	fcomi  st,st(3)
   0x7ffff7eb485d <qecvt_r+173>:	fstp   st(3)
   0x7ffff7eb485f <qecvt_r+175>:	jae    0x7ffff7eb4850 <qecvt_r+160>
   0x7ffff7eb4861 <qecvt_r+177>:	fstp   st(2)
   0x7ffff7eb4863 <qecvt_r+179>:	fstp   st(0)
   0x7ffff7eb4865 <qecvt_r+181>:	fdivp  st(1),st
   0x7ffff7eb4867 <qecvt_r+183>:	jmp    0x7ffff7eb4880 <qecvt_r+208>
   0x7ffff7eb4869 <qecvt_r+185>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb4870 <qecvt_r+192>:	fstp   st(0)
   0x7ffff7eb4872 <qecvt_r+194>:	fstp   st(0)
   0x7ffff7eb4874 <qecvt_r+196>:	fstp   st(0)
   0x7ffff7eb4876 <qecvt_r+198>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4880 <qecvt_r+208>:	test   sil,sil
   0x7ffff7eb4883 <qecvt_r+211>:	je     0x7ffff7eb48d9 <qecvt_r+297>
   0x7ffff7eb4885 <qecvt_r+213>:	fld    st(0)
   0x7ffff7eb4887 <qecvt_r+215>:	fabs
   0x7ffff7eb4889 <qecvt_r+217>:	fld    TBYTE PTR [rip+0xc27e1]        # 0x7ffff7f77070
   0x7ffff7eb488f <qecvt_r+223>:	fucomip st,st(1)
   0x7ffff7eb4891 <qecvt_r+225>:	fstp   st(0)
   0x7ffff7eb4893 <qecvt_r+227>:	jb     0x7ffff7eb492e <qecvt_r+382>
   0x7ffff7eb4899 <qecvt_r+233>:	fxam
   0x7ffff7eb489b <qecvt_r+235>:	fnstsw ax
   0x7ffff7eb489d <qecvt_r+237>:	fstp   st(0)
   0x7ffff7eb489f <qecvt_r+239>:	xor    edi,edi
   0x7ffff7eb48a1 <qecvt_r+241>:	test   ah,0x2
   0x7ffff7eb48a4 <qecvt_r+244>:	setne  dil
   0x7ffff7eb48a8 <qecvt_r+248>:	jmp    0x7ffff7eb48b2 <qecvt_r+258>
   0x7ffff7eb48aa <qecvt_r+250>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb48b0 <qecvt_r+256>:	fstp   st(0)
   0x7ffff7eb48b2 <qecvt_r+258>:	mov    BYTE PTR [rcx],0x0
   0x7ffff7eb48b5 <qecvt_r+261>:	mov    DWORD PTR [rbx],0x1
   0x7ffff7eb48bb <qecvt_r+267>:	mov    DWORD PTR [rdx],edi
   0x7ffff7eb48bd <qecvt_r+269>:	add    DWORD PTR [rbx],ebp
   0x7ffff7eb48bf <qecvt_r+271>:	xor    eax,eax
   0x7ffff7eb48c1 <qecvt_r+273>:	add    rsp,0x8
   0x7ffff7eb48c5 <qecvt_r+277>:	pop    rbx
   0x7ffff7eb48c6 <qecvt_r+278>:	pop    rbp
   0x7ffff7eb48c7 <qecvt_r+279>:	ret
   0x7ffff7eb48c8 <qecvt_r+280>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb48d0 <qecvt_r+288>:	xor    ebp,ebp
   0x7ffff7eb48d2 <qecvt_r+290>:	xor    edi,edi
   0x7ffff7eb48d4 <qecvt_r+292>:	test   sil,sil
   0x7ffff7eb48d7 <qecvt_r+295>:	jne    0x7ffff7eb48b0 <qecvt_r+256>
   0x7ffff7eb48d9 <qecvt_r+297>:	mov    edi,0x15
   0x7ffff7eb48de <qecvt_r+302>:	mov    rsi,rbx
   0x7ffff7eb48e1 <qecvt_r+305>:	cmp    eax,edi
   0x7ffff7eb48e3 <qecvt_r+307>:	cmovle edi,eax
   0x7ffff7eb48e6 <qecvt_r+310>:	sub    rsp,0x10
   0x7ffff7eb48ea <qecvt_r+314>:	fstp   TBYTE PTR [rsp]
   0x7ffff7eb48ed <qecvt_r+317>:	sub    edi,0x1
   0x7ffff7eb48f0 <qecvt_r+320>:	call   0x7ffff7eb44e0 <qfcvt_r>
   0x7ffff7eb48f5 <qecvt_r+325>:	pop    rdx
   0x7ffff7eb48f6 <qecvt_r+326>:	pop    rcx
   0x7ffff7eb48f7 <qecvt_r+327>:	test   eax,eax
   0x7ffff7eb48f9 <qecvt_r+329>:	je     0x7ffff7eb48bd <qecvt_r+269>
   0x7ffff7eb48fb <qecvt_r+331>:	mov    eax,0xffffffff
   0x7ffff7eb4900 <qecvt_r+336>:	jmp    0x7ffff7eb48c1 <qecvt_r+273>
   0x7ffff7eb4902 <qecvt_r+338>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4908 <qecvt_r+344>:	fld    st(0)
   0x7ffff7eb490a <qecvt_r+346>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4910 <qecvt_r+352>:	fmul   st,st(2)
   0x7ffff7eb4912 <qecvt_r+354>:	sub    ebp,0x1
   0x7ffff7eb4915 <qecvt_r+357>:	fld    st(3)
   0x7ffff7eb4917 <qecvt_r+359>:	fmul   st,st(1)
   0x7ffff7eb4919 <qecvt_r+361>:	fxch   st(2)
   0x7ffff7eb491b <qecvt_r+363>:	fcomi  st,st(2)
   0x7ffff7eb491d <qecvt_r+365>:	fstp   st(2)
   0x7ffff7eb491f <qecvt_r+367>:	ja     0x7ffff7eb4910 <qecvt_r+352>
   0x7ffff7eb4921 <qecvt_r+369>:	fstp   st(3)
   0x7ffff7eb4923 <qecvt_r+371>:	fstp   st(0)
   0x7ffff7eb4925 <qecvt_r+373>:	fstp   st(0)
   0x7ffff7eb4927 <qecvt_r+375>:	fmulp  st(1),st
   0x7ffff7eb4929 <qecvt_r+377>:	jmp    0x7ffff7eb4880 <qecvt_r+208>
   0x7ffff7eb492e <qecvt_r+382>:	fstp   st(0)
   0x7ffff7eb4930 <qecvt_r+384>:	xor    edi,edi
   0x7ffff7eb4932 <qecvt_r+386>:	jmp    0x7ffff7eb48b2 <qecvt_r+258>
   0x7ffff7eb4937:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4940 <hdestroy>:	endbr64
   0x7ffff7eb4944 <hdestroy+4>:	lea    rdi,[rip+0x101b25]        # 0x7ffff7fb6470
   0x7ffff7eb494b <hdestroy+11>:	jmp    0x7ffff7eb4a80 <hdestroy_r>
   0x7ffff7eb4950 <hsearch>:	endbr64
   0x7ffff7eb4954 <hsearch+4>:	sub    rsp,0x18
   0x7ffff7eb4958 <hsearch+8>:	lea    r8,[rip+0x101b11]        # 0x7ffff7fb6470
   0x7ffff7eb495f <hsearch+15>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb4968 <hsearch+24>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7eb496d <hsearch+29>:	xor    eax,eax
   0x7ffff7eb496f <hsearch+31>:	mov    rcx,rsp
   0x7ffff7eb4972 <hsearch+34>:	call   0x7ffff7eb4ab0 <hsearch_r>
   0x7ffff7eb4977 <hsearch+39>:	mov    rax,QWORD PTR [rsp]
   0x7ffff7eb497b <hsearch+43>:	mov    rdx,QWORD PTR [rsp+0x8]
   0x7ffff7eb4980 <hsearch+48>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb4989 <hsearch+57>:	jne    0x7ffff7eb4990 <hsearch+64>
   0x7ffff7eb498b <hsearch+59>:	add    rsp,0x18
   0x7ffff7eb498f <hsearch+63>:	ret
   0x7ffff7eb4990 <hsearch+64>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb4995:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb49a0 <hcreate>:	endbr64
   0x7ffff7eb49a4 <hcreate+4>:	lea    rsi,[rip+0x101ac5]        # 0x7ffff7fb6470
   0x7ffff7eb49ab <hcreate+11>:	jmp    0x7ffff7eb49b0 <hcreate_r>
   0x7ffff7eb49b0 <hcreate_r>:	endbr64
   0x7ffff7eb49b4 <hcreate_r+4>:	test   rsi,rsi
   0x7ffff7eb49b7 <hcreate_r+7>:	je     0x7ffff7eb4a6b <hcreate_r+187>
   0x7ffff7eb49bd <hcreate_r+13>:	push   rbx
   0x7ffff7eb49be <hcreate_r+14>:	xor    eax,eax
   0x7ffff7eb49c0 <hcreate_r+16>:	cmp    QWORD PTR [rsi],0x0
   0x7ffff7eb49c4 <hcreate_r+20>:	mov    rbx,rsi
   0x7ffff7eb49c7 <hcreate_r+23>:	je     0x7ffff7eb49d0 <hcreate_r+32>
   0x7ffff7eb49c9 <hcreate_r+25>:	pop    rbx
   0x7ffff7eb49ca <hcreate_r+26>:	ret
   0x7ffff7eb49cb <hcreate_r+27>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb49d0 <hcreate_r+32>:	mov    eax,0x3
   0x7ffff7eb49d5 <hcreate_r+37>:	mov    r8d,0xfffffffd
   0x7ffff7eb49db <hcreate_r+43>:	cmp    rdi,rax
   0x7ffff7eb49de <hcreate_r+46>:	cmovb  rdi,rax
   0x7ffff7eb49e2 <hcreate_r+50>:	or     rdi,0x1
   0x7ffff7eb49e6 <hcreate_r+54>:	cmp    rdi,r8
   0x7ffff7eb49e9 <hcreate_r+57>:	ja     0x7ffff7eb4a59 <hcreate_r+169>
   0x7ffff7eb49eb <hcreate_r+59>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb49f0 <hcreate_r+64>:	mov    esi,edi
   0x7ffff7eb49f2 <hcreate_r+66>:	cmp    rdi,0x8
   0x7ffff7eb49f6 <hcreate_r+70>:	jbe    0x7ffff7eb4a21 <hcreate_r+113>
   0x7ffff7eb49f8 <hcreate_r+72>:	imul   eax,edi,0xaaaaaaab
   0x7ffff7eb49fe <hcreate_r+78>:	cmp    eax,0x55555555
   0x7ffff7eb4a03 <hcreate_r+83>:	jbe    0x7ffff7eb4a50 <hcreate_r+160>
   0x7ffff7eb4a05 <hcreate_r+85>:	mov    ecx,0x3
   0x7ffff7eb4a0a <hcreate_r+90>:	jmp    0x7ffff7eb4a14 <hcreate_r+100>
   0x7ffff7eb4a0c <hcreate_r+92>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb4a10 <hcreate_r+96>:	test   edx,edx
   0x7ffff7eb4a12 <hcreate_r+98>:	je     0x7ffff7eb4a50 <hcreate_r+160>
   0x7ffff7eb4a14 <hcreate_r+100>:	add    ecx,0x2
   0x7ffff7eb4a17 <hcreate_r+103>:	mov    eax,esi
   0x7ffff7eb4a19 <hcreate_r+105>:	xor    edx,edx
   0x7ffff7eb4a1b <hcreate_r+107>:	div    ecx
   0x7ffff7eb4a1d <hcreate_r+109>:	cmp    ecx,eax
   0x7ffff7eb4a1f <hcreate_r+111>:	jbe    0x7ffff7eb4a10 <hcreate_r+96>
   0x7ffff7eb4a21 <hcreate_r+113>:	mov    DWORD PTR [rbx+0x8],esi
   0x7ffff7eb4a24 <hcreate_r+116>:	lea    edi,[rsi+0x1]
   0x7ffff7eb4a27 <hcreate_r+119>:	mov    esi,0x18
   0x7ffff7eb4a2c <hcreate_r+124>:	mov    DWORD PTR [rbx+0xc],0x0
   0x7ffff7eb4a33 <hcreate_r+131>:	call   0x7ffff7dbd400 <calloc@plt>
   0x7ffff7eb4a38 <hcreate_r+136>:	test   rax,rax
   0x7ffff7eb4a3b <hcreate_r+139>:	mov    QWORD PTR [rbx],rax
   0x7ffff7eb4a3e <hcreate_r+142>:	pop    rbx
   0x7ffff7eb4a3f <hcreate_r+143>:	setne  al
   0x7ffff7eb4a42 <hcreate_r+146>:	movzx  eax,al
   0x7ffff7eb4a45 <hcreate_r+149>:	ret
   0x7ffff7eb4a46 <hcreate_r+150>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4a50 <hcreate_r+160>:	add    rdi,0x2
   0x7ffff7eb4a54 <hcreate_r+164>:	cmp    rdi,r8
   0x7ffff7eb4a57 <hcreate_r+167>:	jbe    0x7ffff7eb49f0 <hcreate_r+64>
   0x7ffff7eb4a59 <hcreate_r+169>:	mov    rax,QWORD PTR [rip+0xf93b0]        # 0x7ffff7fade10
   0x7ffff7eb4a60 <hcreate_r+176>:	mov    DWORD PTR fs:[rax],0xc
   0x7ffff7eb4a67 <hcreate_r+183>:	xor    eax,eax
   0x7ffff7eb4a69 <hcreate_r+185>:	pop    rbx
   0x7ffff7eb4a6a <hcreate_r+186>:	ret
   0x7ffff7eb4a6b <hcreate_r+187>:	mov    rax,QWORD PTR [rip+0xf939e]        # 0x7ffff7fade10
   0x7ffff7eb4a72 <hcreate_r+194>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7eb4a79 <hcreate_r+201>:	xor    eax,eax
   0x7ffff7eb4a7b <hcreate_r+203>:	ret
   0x7ffff7eb4a7c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb4a80 <hdestroy_r>:	endbr64
   0x7ffff7eb4a84 <hdestroy_r+4>:	test   rdi,rdi
   0x7ffff7eb4a87 <hdestroy_r+7>:	je     0x7ffff7eb4aa0 <hdestroy_r+32>
   0x7ffff7eb4a89 <hdestroy_r+9>:	push   rbx
   0x7ffff7eb4a8a <hdestroy_r+10>:	mov    rbx,rdi
   0x7ffff7eb4a8d <hdestroy_r+13>:	mov    rdi,QWORD PTR [rdi]
   0x7ffff7eb4a90 <hdestroy_r+16>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb4a95 <hdestroy_r+21>:	mov    QWORD PTR [rbx],0x0
   0x7ffff7eb4a9c <hdestroy_r+28>:	pop    rbx
   0x7ffff7eb4a9d <hdestroy_r+29>:	ret
   0x7ffff7eb4a9e <hdestroy_r+30>:	xchg   ax,ax
   0x7ffff7eb4aa0 <hdestroy_r+32>:	mov    rax,QWORD PTR [rip+0xf9369]        # 0x7ffff7fade10
   0x7ffff7eb4aa7 <hdestroy_r+39>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7eb4aae <hdestroy_r+46>:	ret
   0x7ffff7eb4aaf:	nop
   0x7ffff7eb4ab0 <hsearch_r>:	endbr64
   0x7ffff7eb4ab4 <hsearch_r+4>:	push   r15
   0x7ffff7eb4ab6 <hsearch_r+6>:	mov    r15,rdi
   0x7ffff7eb4ab9 <hsearch_r+9>:	push   r14
   0x7ffff7eb4abb <hsearch_r+11>:	push   r13
   0x7ffff7eb4abd <hsearch_r+13>:	push   r12
   0x7ffff7eb4abf <hsearch_r+15>:	push   rbp
   0x7ffff7eb4ac0 <hsearch_r+16>:	push   rbx
   0x7ffff7eb4ac1 <hsearch_r+17>:	sub    rsp,0x48
   0x7ffff7eb4ac5 <hsearch_r+21>:	mov    QWORD PTR [rsp+0x38],rsi
   0x7ffff7eb4aca <hsearch_r+26>:	mov    DWORD PTR [rsp+0x28],edx
   0x7ffff7eb4ace <hsearch_r+30>:	mov    QWORD PTR [rsp+0x20],rcx
   0x7ffff7eb4ad3 <hsearch_r+35>:	mov    QWORD PTR [rsp+0x18],r8
   0x7ffff7eb4ad8 <hsearch_r+40>:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7eb4add <hsearch_r+45>:	test   eax,eax
   0x7ffff7eb4adf <hsearch_r+47>:	je     0x7ffff7eb4cc0 <hsearch_r+528>
   0x7ffff7eb4ae5 <hsearch_r+53>:	lea    edx,[rax-0x1]
   0x7ffff7eb4ae8 <hsearch_r+56>:	mov    ebx,eax
   0x7ffff7eb4aea <hsearch_r+58>:	mov    eax,edx
   0x7ffff7eb4aec <hsearch_r+60>:	add    rax,r15
   0x7ffff7eb4aef <hsearch_r+63>:	nop
   0x7ffff7eb4af0 <hsearch_r+64>:	movsx  edx,BYTE PTR [rax]
   0x7ffff7eb4af3 <hsearch_r+67>:	shl    ebx,0x4
   0x7ffff7eb4af6 <hsearch_r+70>:	add    ebx,edx
   0x7ffff7eb4af8 <hsearch_r+72>:	mov    rdx,rax
   0x7ffff7eb4afb <hsearch_r+75>:	sub    rax,0x1
   0x7ffff7eb4aff <hsearch_r+79>:	cmp    r15,rdx
   0x7ffff7eb4b02 <hsearch_r+82>:	jne    0x7ffff7eb4af0 <hsearch_r+64>
   0x7ffff7eb4b04 <hsearch_r+84>:	test   ebx,ebx
   0x7ffff7eb4b06 <hsearch_r+86>:	mov    eax,0x1
   0x7ffff7eb4b0b <hsearch_r+91>:	cmove  ebx,eax
   0x7ffff7eb4b0e <hsearch_r+94>:	mov    rdi,QWORD PTR [rsp+0x18]
   0x7ffff7eb4b13 <hsearch_r+99>:	mov    eax,ebx
   0x7ffff7eb4b15 <hsearch_r+101>:	xor    edx,edx
   0x7ffff7eb4b17 <hsearch_r+103>:	mov    esi,DWORD PTR [rdi+0x8]
   0x7ffff7eb4b1a <hsearch_r+106>:	mov    r11,QWORD PTR [rdi]
   0x7ffff7eb4b1d <hsearch_r+109>:	div    esi
   0x7ffff7eb4b1f <hsearch_r+111>:	mov    DWORD PTR [rsp+0x2c],esi
   0x7ffff7eb4b23 <hsearch_r+115>:	lea    eax,[rdx+0x1]
   0x7ffff7eb4b26 <hsearch_r+118>:	mov    r12,rax
   0x7ffff7eb4b29 <hsearch_r+121>:	lea    rax,[rax+rax*2]
   0x7ffff7eb4b2d <hsearch_r+125>:	lea    rax,[r11+rax*8]
   0x7ffff7eb4b31 <hsearch_r+129>:	mov    QWORD PTR [rsp+0x30],rax
   0x7ffff7eb4b36 <hsearch_r+134>:	mov    eax,DWORD PTR [rax]
   0x7ffff7eb4b38 <hsearch_r+136>:	test   eax,eax
   0x7ffff7eb4b3a <hsearch_r+138>:	je     0x7ffff7eb4bad <hsearch_r+253>
   0x7ffff7eb4b3c <hsearch_r+140>:	cmp    eax,ebx
   0x7ffff7eb4b3e <hsearch_r+142>:	je     0x7ffff7eb4c58 <hsearch_r+424>
   0x7ffff7eb4b44 <hsearch_r+148>:	mov    edi,DWORD PTR [rsp+0x2c]
   0x7ffff7eb4b48 <hsearch_r+152>:	mov    eax,ebx
   0x7ffff7eb4b4a <hsearch_r+154>:	xor    edx,edx
   0x7ffff7eb4b4c <hsearch_r+156>:	mov    r14d,r12d
   0x7ffff7eb4b4f <hsearch_r+159>:	mov    r13d,r12d
   0x7ffff7eb4b52 <hsearch_r+162>:	lea    ecx,[rdi-0x2]
   0x7ffff7eb4b55 <hsearch_r+165>:	div    ecx
   0x7ffff7eb4b57 <hsearch_r+167>:	mov    rcx,r15
   0x7ffff7eb4b5a <hsearch_r+170>:	mov    r15d,ebx
   0x7ffff7eb4b5d <hsearch_r+173>:	lea    ebp,[rdx+0x1]
   0x7ffff7eb4b60 <hsearch_r+176>:	sub    edi,ebp
   0x7ffff7eb4b62 <hsearch_r+178>:	mov    r12d,ebp
   0x7ffff7eb4b65 <hsearch_r+181>:	mov    ebx,edi
   0x7ffff7eb4b67 <hsearch_r+183>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4b70 <hsearch_r+192>:	mov    edx,r14d
   0x7ffff7eb4b73 <hsearch_r+195>:	lea    eax,[r14+rbx*1]
   0x7ffff7eb4b77 <hsearch_r+199>:	sub    edx,r12d
   0x7ffff7eb4b7a <hsearch_r+202>:	cmp    r14d,r12d
   0x7ffff7eb4b7d <hsearch_r+205>:	cmova  eax,edx
   0x7ffff7eb4b80 <hsearch_r+208>:	mov    r14d,eax
   0x7ffff7eb4b83 <hsearch_r+211>:	cmp    eax,r13d
   0x7ffff7eb4b86 <hsearch_r+214>:	je     0x7ffff7eb4cb0 <hsearch_r+512>
   0x7ffff7eb4b8c <hsearch_r+220>:	mov    eax,eax
   0x7ffff7eb4b8e <hsearch_r+222>:	lea    rax,[rax+rax*2]
   0x7ffff7eb4b92 <hsearch_r+226>:	lea    rbp,[r11+rax*8]
   0x7ffff7eb4b96 <hsearch_r+230>:	mov    eax,DWORD PTR [rbp+0x0]
   0x7ffff7eb4b99 <hsearch_r+233>:	cmp    eax,r15d
   0x7ffff7eb4b9c <hsearch_r+236>:	je     0x7ffff7eb4be0 <hsearch_r+304>
   0x7ffff7eb4b9e <hsearch_r+238>:	test   eax,eax
   0x7ffff7eb4ba0 <hsearch_r+240>:	jne    0x7ffff7eb4b70 <hsearch_r+192>
   0x7ffff7eb4ba2 <hsearch_r+242>:	mov    QWORD PTR [rsp+0x30],rbp
   0x7ffff7eb4ba7 <hsearch_r+247>:	mov    ebx,r15d
   0x7ffff7eb4baa <hsearch_r+250>:	mov    r15,rcx
   0x7ffff7eb4bad <hsearch_r+253>:	cmp    DWORD PTR [rsp+0x28],0x1
   0x7ffff7eb4bb2 <hsearch_r+258>:	je     0x7ffff7eb4c18 <hsearch_r+360>
   0x7ffff7eb4bb4 <hsearch_r+260>:	mov    rax,QWORD PTR [rip+0xf9255]        # 0x7ffff7fade10
   0x7ffff7eb4bbb <hsearch_r+267>:	xor    ebp,ebp
   0x7ffff7eb4bbd <hsearch_r+269>:	mov    DWORD PTR fs:[rax],0x3
   0x7ffff7eb4bc4 <hsearch_r+276>:	xor    eax,eax
   0x7ffff7eb4bc6 <hsearch_r+278>:	mov    rcx,QWORD PTR [rsp+0x20]
   0x7ffff7eb4bcb <hsearch_r+283>:	mov    QWORD PTR [rcx],rbp
   0x7ffff7eb4bce <hsearch_r+286>:	add    rsp,0x48
   0x7ffff7eb4bd2 <hsearch_r+290>:	pop    rbx
   0x7ffff7eb4bd3 <hsearch_r+291>:	pop    rbp
   0x7ffff7eb4bd4 <hsearch_r+292>:	pop    r12
   0x7ffff7eb4bd6 <hsearch_r+294>:	pop    r13
   0x7ffff7eb4bd8 <hsearch_r+296>:	pop    r14
   0x7ffff7eb4bda <hsearch_r+298>:	pop    r15
   0x7ffff7eb4bdc <hsearch_r+300>:	ret
   0x7ffff7eb4bdd <hsearch_r+301>:	nop    DWORD PTR [rax]
   0x7ffff7eb4be0 <hsearch_r+304>:	mov    rsi,QWORD PTR [rbp+0x8]
   0x7ffff7eb4be4 <hsearch_r+308>:	mov    rdi,rcx
   0x7ffff7eb4be7 <hsearch_r+311>:	mov    QWORD PTR [rsp+0x10],r11
   0x7ffff7eb4bec <hsearch_r+316>:	mov    QWORD PTR [rsp+0x8],rcx
   0x7ffff7eb4bf1 <hsearch_r+321>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb4bf6 <hsearch_r+326>:	mov    rcx,QWORD PTR [rsp+0x8]
   0x7ffff7eb4bfb <hsearch_r+331>:	mov    r11,QWORD PTR [rsp+0x10]
   0x7ffff7eb4c00 <hsearch_r+336>:	test   eax,eax
   0x7ffff7eb4c02 <hsearch_r+338>:	jne    0x7ffff7eb4b70 <hsearch_r+192>
   0x7ffff7eb4c08 <hsearch_r+344>:	lea    rbp,[rbp+0x8]
   0x7ffff7eb4c0c <hsearch_r+348>:	mov    eax,0x1
   0x7ffff7eb4c11 <hsearch_r+353>:	jmp    0x7ffff7eb4bc6 <hsearch_r+278>
   0x7ffff7eb4c13 <hsearch_r+355>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4c18 <hsearch_r+360>:	mov    rax,QWORD PTR [rsp+0x18]
   0x7ffff7eb4c1d <hsearch_r+365>:	mov    eax,DWORD PTR [rax+0xc]
   0x7ffff7eb4c20 <hsearch_r+368>:	cmp    DWORD PTR [rsp+0x2c],eax
   0x7ffff7eb4c24 <hsearch_r+372>:	je     0x7ffff7eb4c90 <hsearch_r+480>
   0x7ffff7eb4c26 <hsearch_r+374>:	mov    rcx,QWORD PTR [rsp+0x30]
   0x7ffff7eb4c2b <hsearch_r+379>:	mov    rsi,QWORD PTR [rsp+0x38]
   0x7ffff7eb4c30 <hsearch_r+384>:	add    eax,0x1
   0x7ffff7eb4c33 <hsearch_r+387>:	mov    QWORD PTR [rcx+0x10],rsi
   0x7ffff7eb4c37 <hsearch_r+391>:	mov    rsi,QWORD PTR [rsp+0x18]
   0x7ffff7eb4c3c <hsearch_r+396>:	lea    rbp,[rcx+0x8]
   0x7ffff7eb4c40 <hsearch_r+400>:	mov    DWORD PTR [rcx],ebx
   0x7ffff7eb4c42 <hsearch_r+402>:	mov    QWORD PTR [rcx+0x8],r15
   0x7ffff7eb4c46 <hsearch_r+406>:	mov    DWORD PTR [rsi+0xc],eax
   0x7ffff7eb4c49 <hsearch_r+409>:	mov    eax,0x1
   0x7ffff7eb4c4e <hsearch_r+414>:	jmp    0x7ffff7eb4bc6 <hsearch_r+278>
   0x7ffff7eb4c53 <hsearch_r+419>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4c58 <hsearch_r+424>:	mov    rax,QWORD PTR [rsp+0x30]
   0x7ffff7eb4c5d <hsearch_r+429>:	mov    rdi,r15
   0x7ffff7eb4c60 <hsearch_r+432>:	mov    QWORD PTR [rsp+0x8],r11
   0x7ffff7eb4c65 <hsearch_r+437>:	mov    rsi,QWORD PTR [rax+0x8]
   0x7ffff7eb4c69 <hsearch_r+441>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb4c6e <hsearch_r+446>:	mov    r11,QWORD PTR [rsp+0x8]
   0x7ffff7eb4c73 <hsearch_r+451>:	test   eax,eax
   0x7ffff7eb4c75 <hsearch_r+453>:	jne    0x7ffff7eb4b44 <hsearch_r+148>
   0x7ffff7eb4c7b <hsearch_r+459>:	mov    rbp,QWORD PTR [rsp+0x30]
   0x7ffff7eb4c80 <hsearch_r+464>:	mov    eax,0x1
   0x7ffff7eb4c85 <hsearch_r+469>:	add    rbp,0x8
   0x7ffff7eb4c89 <hsearch_r+473>:	jmp    0x7ffff7eb4bc6 <hsearch_r+278>
   0x7ffff7eb4c8e <hsearch_r+478>:	xchg   ax,ax
   0x7ffff7eb4c90 <hsearch_r+480>:	mov    rax,QWORD PTR [rip+0xf9179]        # 0x7ffff7fade10
   0x7ffff7eb4c97 <hsearch_r+487>:	xor    ebp,ebp
   0x7ffff7eb4c99 <hsearch_r+489>:	mov    DWORD PTR fs:[rax],0xc
   0x7ffff7eb4ca0 <hsearch_r+496>:	xor    eax,eax
   0x7ffff7eb4ca2 <hsearch_r+498>:	jmp    0x7ffff7eb4bc6 <hsearch_r+278>
   0x7ffff7eb4ca7 <hsearch_r+503>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4cb0 <hsearch_r+512>:	mov    ebx,r15d
   0x7ffff7eb4cb3 <hsearch_r+515>:	mov    r15,rcx
   0x7ffff7eb4cb6 <hsearch_r+518>:	jmp    0x7ffff7eb4bad <hsearch_r+253>
   0x7ffff7eb4cbb <hsearch_r+523>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4cc0 <hsearch_r+528>:	mov    ebx,0x1
   0x7ffff7eb4cc5 <hsearch_r+533>:	jmp    0x7ffff7eb4b0e <hsearch_r+94>
   0x7ffff7eb4cca:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4cd0:	push   r13
   0x7ffff7eb4cd2:	mov    r13d,edx
   0x7ffff7eb4cd5:	push   r12
   0x7ffff7eb4cd7:	mov    r12,rsi
   0x7ffff7eb4cda:	push   rbp
   0x7ffff7eb4cdb:	mov    rbp,rdi
   0x7ffff7eb4cde:	test   QWORD PTR [rdi+0x8],0xfffffffffffffffe
   0x7ffff7eb4ce6:	jne    0x7ffff7eb4cf4
   0x7ffff7eb4ce8:	cmp    QWORD PTR [rdi+0x10],0x0
   0x7ffff7eb4ced:	mov    esi,0x3
   0x7ffff7eb4cf2:	je     0x7ffff7eb4d25
   0x7ffff7eb4cf4:	mov    rdi,rbp
   0x7ffff7eb4cf7:	xor    esi,esi
   0x7ffff7eb4cf9:	call   r12
   0x7ffff7eb4cfc:	mov    rdi,QWORD PTR [rbp+0x8]
   0x7ffff7eb4d00:	and    rdi,0xfffffffffffffffe
   0x7ffff7eb4d04:	jne    0x7ffff7eb4d38
   0x7ffff7eb4d06:	mov    rdi,rbp
   0x7ffff7eb4d09:	mov    edx,r13d
   0x7ffff7eb4d0c:	mov    esi,0x1
   0x7ffff7eb4d11:	call   r12
   0x7ffff7eb4d14:	mov    rdi,QWORD PTR [rbp+0x10]
   0x7ffff7eb4d18:	test   rdi,rdi
   0x7ffff7eb4d1b:	jne    0x7ffff7eb4d50
   0x7ffff7eb4d1d:	mov    edx,r13d
   0x7ffff7eb4d20:	mov    esi,0x2
   0x7ffff7eb4d25:	mov    rdi,rbp
   0x7ffff7eb4d28:	mov    rax,r12
   0x7ffff7eb4d2b:	pop    rbp
   0x7ffff7eb4d2c:	pop    r12
   0x7ffff7eb4d2e:	pop    r13
   0x7ffff7eb4d30:	jmp    rax
   0x7ffff7eb4d32:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4d38:	lea    edx,[r13+0x1]
   0x7ffff7eb4d3c:	mov    rsi,r12
   0x7ffff7eb4d3f:	call   0x7ffff7eb4cd0
   0x7ffff7eb4d44:	jmp    0x7ffff7eb4d06
   0x7ffff7eb4d46:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4d50:	lea    edx,[r13+0x1]
   0x7ffff7eb4d54:	mov    rsi,r12
   0x7ffff7eb4d57:	call   0x7ffff7eb4cd0
   0x7ffff7eb4d5c:	jmp    0x7ffff7eb4d1d
   0x7ffff7eb4d5e:	xchg   ax,ax
   0x7ffff7eb4d60:	push   r13
   0x7ffff7eb4d62:	mov    r13,rdx
   0x7ffff7eb4d65:	push   r12
   0x7ffff7eb4d67:	mov    r12,rsi
   0x7ffff7eb4d6a:	push   rbp
   0x7ffff7eb4d6b:	mov    rbp,rdi
   0x7ffff7eb4d6e:	test   QWORD PTR [rdi+0x8],0xfffffffffffffffe
   0x7ffff7eb4d76:	jne    0x7ffff7eb4d84
   0x7ffff7eb4d78:	cmp    QWORD PTR [rdi+0x10],0x0
   0x7ffff7eb4d7d:	mov    esi,0x3
   0x7ffff7eb4d82:	je     0x7ffff7eb4db5
   0x7ffff7eb4d84:	mov    rdi,rbp
   0x7ffff7eb4d87:	xor    esi,esi
   0x7ffff7eb4d89:	call   r12
   0x7ffff7eb4d8c:	mov    rdi,QWORD PTR [rbp+0x8]
   0x7ffff7eb4d90:	and    rdi,0xfffffffffffffffe
   0x7ffff7eb4d94:	jne    0x7ffff7eb4dc8
   0x7ffff7eb4d96:	mov    rdi,rbp
   0x7ffff7eb4d99:	mov    rdx,r13
   0x7ffff7eb4d9c:	mov    esi,0x1
   0x7ffff7eb4da1:	call   r12
   0x7ffff7eb4da4:	mov    rdi,QWORD PTR [rbp+0x10]
   0x7ffff7eb4da8:	test   rdi,rdi
   0x7ffff7eb4dab:	jne    0x7ffff7eb4dd8
   0x7ffff7eb4dad:	mov    rdx,r13
   0x7ffff7eb4db0:	mov    esi,0x2
   0x7ffff7eb4db5:	mov    rdi,rbp
   0x7ffff7eb4db8:	mov    rax,r12
   0x7ffff7eb4dbb:	pop    rbp
   0x7ffff7eb4dbc:	pop    r12
   0x7ffff7eb4dbe:	pop    r13
   0x7ffff7eb4dc0:	jmp    rax
   0x7ffff7eb4dc2:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4dc8:	mov    rdx,r13
   0x7ffff7eb4dcb:	mov    rsi,r12
   0x7ffff7eb4dce:	call   0x7ffff7eb4d60
   0x7ffff7eb4dd3:	jmp    0x7ffff7eb4d96
   0x7ffff7eb4dd5:	nop    DWORD PTR [rax]
   0x7ffff7eb4dd8:	mov    rdx,r13
   0x7ffff7eb4ddb:	mov    rsi,r12
   0x7ffff7eb4dde:	call   0x7ffff7eb4d60
   0x7ffff7eb4de3:	jmp    0x7ffff7eb4dad
   0x7ffff7eb4de5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4df0:	push   r13
   0x7ffff7eb4df2:	push   r12
   0x7ffff7eb4df4:	push   rbp
   0x7ffff7eb4df5:	mov    rbp,rdi
   0x7ffff7eb4df8:	push   rbx
   0x7ffff7eb4df9:	mov    rbx,rsi
   0x7ffff7eb4dfc:	sub    rsp,0x8
   0x7ffff7eb4e00:	mov    r12,QWORD PTR [rdi+0x8]
   0x7ffff7eb4e04:	and    r12,0xfffffffffffffffe
   0x7ffff7eb4e08:	jne    0x7ffff7eb4e30
   0x7ffff7eb4e0a:	mov    r12,QWORD PTR [rbp+0x10]
   0x7ffff7eb4e0e:	test   r12,r12
   0x7ffff7eb4e11:	jne    0x7ffff7eb4e5c
   0x7ffff7eb4e13:	mov    rdi,QWORD PTR [rbp+0x0]
   0x7ffff7eb4e17:	call   rbx
   0x7ffff7eb4e19:	add    rsp,0x8
   0x7ffff7eb4e1d:	mov    rdi,rbp
   0x7ffff7eb4e20:	pop    rbx
   0x7ffff7eb4e21:	pop    rbp
   0x7ffff7eb4e22:	pop    r12
   0x7ffff7eb4e24:	pop    r13
   0x7ffff7eb4e26:	jmp    0x7ffff7dbd370 <free@plt>
   0x7ffff7eb4e2b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4e30:	mov    r13,QWORD PTR [r12+0x8]
   0x7ffff7eb4e35:	and    r13,0xfffffffffffffffe
   0x7ffff7eb4e39:	jne    0x7ffff7eb4e88
   0x7ffff7eb4e3b:	mov    r13,QWORD PTR [r12+0x10]
   0x7ffff7eb4e40:	test   r13,r13
   0x7ffff7eb4e43:	jne    0x7ffff7eb4ebb
   0x7ffff7eb4e45:	mov    rdi,QWORD PTR [r12]
   0x7ffff7eb4e49:	call   rbx
   0x7ffff7eb4e4b:	mov    rdi,r12
   0x7ffff7eb4e4e:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb4e53:	mov    r12,QWORD PTR [rbp+0x10]
   0x7ffff7eb4e57:	test   r12,r12
   0x7ffff7eb4e5a:	je     0x7ffff7eb4e13
   0x7ffff7eb4e5c:	mov    r13,QWORD PTR [r12+0x8]
   0x7ffff7eb4e61:	and    r13,0xfffffffffffffffe
   0x7ffff7eb4e65:	jne    0x7ffff7eb4f20
   0x7ffff7eb4e6b:	mov    r13,QWORD PTR [r12+0x10]
   0x7ffff7eb4e70:	test   r13,r13
   0x7ffff7eb4e73:	jne    0x7ffff7eb4ef0
   0x7ffff7eb4e75:	mov    rdi,QWORD PTR [r12]
   0x7ffff7eb4e79:	call   rbx
   0x7ffff7eb4e7b:	mov    rdi,r12
   0x7ffff7eb4e7e:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb4e83:	jmp    0x7ffff7eb4e13
   0x7ffff7eb4e85:	nop    DWORD PTR [rax]
   0x7ffff7eb4e88:	mov    rdi,QWORD PTR [r13+0x8]
   0x7ffff7eb4e8c:	and    rdi,0xfffffffffffffffe
   0x7ffff7eb4e90:	jne    0x7ffff7eb4f50
   0x7ffff7eb4e96:	mov    rdi,QWORD PTR [r13+0x10]
   0x7ffff7eb4e9a:	test   rdi,rdi
   0x7ffff7eb4e9d:	jne    0x7ffff7eb4fc0
   0x7ffff7eb4ea3:	mov    rdi,QWORD PTR [r13+0x0]
   0x7ffff7eb4ea7:	call   rbx
   0x7ffff7eb4ea9:	mov    rdi,r13
   0x7ffff7eb4eac:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb4eb1:	mov    r13,QWORD PTR [r12+0x10]
   0x7ffff7eb4eb6:	test   r13,r13
   0x7ffff7eb4eb9:	je     0x7ffff7eb4e45
   0x7ffff7eb4ebb:	mov    rdi,QWORD PTR [r13+0x8]
   0x7ffff7eb4ebf:	and    rdi,0xfffffffffffffffe
   0x7ffff7eb4ec3:	jne    0x7ffff7eb4f70
   0x7ffff7eb4ec9:	mov    rdi,QWORD PTR [r13+0x10]
   0x7ffff7eb4ecd:	test   rdi,rdi
   0x7ffff7eb4ed0:	jne    0x7ffff7eb4f60
   0x7ffff7eb4ed6:	mov    rdi,QWORD PTR [r13+0x0]
   0x7ffff7eb4eda:	call   rbx
   0x7ffff7eb4edc:	mov    rdi,r13
   0x7ffff7eb4edf:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb4ee4:	jmp    0x7ffff7eb4e45
   0x7ffff7eb4ee9:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb4ef0:	mov    rdi,QWORD PTR [r13+0x8]
   0x7ffff7eb4ef4:	and    rdi,0xfffffffffffffffe
   0x7ffff7eb4ef8:	jne    0x7ffff7eb4fb0
   0x7ffff7eb4efe:	mov    rdi,QWORD PTR [r13+0x10]
   0x7ffff7eb4f02:	test   rdi,rdi
   0x7ffff7eb4f05:	jne    0x7ffff7eb4fa0
   0x7ffff7eb4f0b:	mov    rdi,QWORD PTR [r13+0x0]
   0x7ffff7eb4f0f:	call   rbx
   0x7ffff7eb4f11:	mov    rdi,r13
   0x7ffff7eb4f14:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb4f19:	jmp    0x7ffff7eb4e75
   0x7ffff7eb4f1e:	xchg   ax,ax
   0x7ffff7eb4f20:	mov    rdi,QWORD PTR [r13+0x8]
   0x7ffff7eb4f24:	and    rdi,0xfffffffffffffffe
   0x7ffff7eb4f28:	jne    0x7ffff7eb4f90
   0x7ffff7eb4f2a:	mov    rdi,QWORD PTR [r13+0x10]
   0x7ffff7eb4f2e:	test   rdi,rdi
   0x7ffff7eb4f31:	jne    0x7ffff7eb4f80
   0x7ffff7eb4f33:	mov    rdi,QWORD PTR [r13+0x0]
   0x7ffff7eb4f37:	call   rbx
   0x7ffff7eb4f39:	mov    rdi,r13
   0x7ffff7eb4f3c:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb4f41:	jmp    0x7ffff7eb4e6b
   0x7ffff7eb4f46:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4f50:	call   0x7ffff7eb4df0
   0x7ffff7eb4f55:	jmp    0x7ffff7eb4e96
   0x7ffff7eb4f5a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4f60:	mov    rsi,rbx
   0x7ffff7eb4f63:	call   0x7ffff7eb4df0
   0x7ffff7eb4f68:	jmp    0x7ffff7eb4ed6
   0x7ffff7eb4f6d:	nop    DWORD PTR [rax]
   0x7ffff7eb4f70:	mov    rsi,rbx
   0x7ffff7eb4f73:	call   0x7ffff7eb4df0
   0x7ffff7eb4f78:	jmp    0x7ffff7eb4ec9
   0x7ffff7eb4f7d:	nop    DWORD PTR [rax]
   0x7ffff7eb4f80:	mov    rsi,rbx
   0x7ffff7eb4f83:	call   0x7ffff7eb4df0
   0x7ffff7eb4f88:	jmp    0x7ffff7eb4f33
   0x7ffff7eb4f8a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4f90:	mov    rsi,rbx
   0x7ffff7eb4f93:	call   0x7ffff7eb4df0
   0x7ffff7eb4f98:	jmp    0x7ffff7eb4f2a
   0x7ffff7eb4f9a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb4fa0:	mov    rsi,rbx
   0x7ffff7eb4fa3:	call   0x7ffff7eb4df0
   0x7ffff7eb4fa8:	jmp    0x7ffff7eb4f0b
   0x7ffff7eb4fad:	nop    DWORD PTR [rax]
   0x7ffff7eb4fb0:	mov    rsi,rbx
   0x7ffff7eb4fb3:	call   0x7ffff7eb4df0
   0x7ffff7eb4fb8:	jmp    0x7ffff7eb4efe
   0x7ffff7eb4fbd:	nop    DWORD PTR [rax]
   0x7ffff7eb4fc0:	mov    rsi,rbx
   0x7ffff7eb4fc3:	call   0x7ffff7eb4df0
   0x7ffff7eb4fc8:	jmp    0x7ffff7eb4ea3
   0x7ffff7eb4fcd:	nop    DWORD PTR [rax]
   0x7ffff7eb4fd0 <tsearch>:	endbr64
   0x7ffff7eb4fd4 <tsearch+4>:	push   r15
   0x7ffff7eb4fd6 <tsearch+6>:	push   r14
   0x7ffff7eb4fd8 <tsearch+8>:	push   r13
   0x7ffff7eb4fda <tsearch+10>:	push   r12
   0x7ffff7eb4fdc <tsearch+12>:	push   rbp
   0x7ffff7eb4fdd <tsearch+13>:	push   rbx
   0x7ffff7eb4fde <tsearch+14>:	sub    rsp,0x28
   0x7ffff7eb4fe2 <tsearch+18>:	mov    QWORD PTR [rsp+0x10],rdx
   0x7ffff7eb4fe7 <tsearch+23>:	test   rsi,rsi
   0x7ffff7eb4fea <tsearch+26>:	je     0x7ffff7eb5340 <tsearch+880>
   0x7ffff7eb4ff0 <tsearch+32>:	mov    rdx,QWORD PTR [rsi]
   0x7ffff7eb4ff3 <tsearch+35>:	mov    rbp,rdi
   0x7ffff7eb4ff6 <tsearch+38>:	mov    r13,rsi
   0x7ffff7eb4ff9 <tsearch+41>:	mov    rax,rdx
   0x7ffff7eb4ffc <tsearch+44>:	and    rax,0xfffffffffffffffe
   0x7ffff7eb5000 <tsearch+48>:	jne    0x7ffff7eb5240 <tsearch+624>
   0x7ffff7eb5006 <tsearch+54>:	xor    ebx,ebx
   0x7ffff7eb5008 <tsearch+56>:	xor    r12d,r12d
   0x7ffff7eb500b <tsearch+59>:	and    rdx,0xfffffffffffffffe
   0x7ffff7eb500f <tsearch+63>:	mov    DWORD PTR [rsp+0x1c],0x0
   0x7ffff7eb5017 <tsearch+71>:	mov    QWORD PTR [rsp+0x8],0x0
   0x7ffff7eb5020 <tsearch+80>:	mov    r14,rdx
   0x7ffff7eb5023 <tsearch+83>:	je     0x7ffff7eb50db <tsearch+267>
   0x7ffff7eb5029 <tsearch+89>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb5030 <tsearch+96>:	mov    rsi,QWORD PTR [r14]
   0x7ffff7eb5033 <tsearch+99>:	mov    rax,QWORD PTR [rsp+0x10]
   0x7ffff7eb5038 <tsearch+104>:	mov    rdi,rbp
   0x7ffff7eb503b <tsearch+107>:	call   rax
   0x7ffff7eb503d <tsearch+109>:	mov    ecx,eax
   0x7ffff7eb503f <tsearch+111>:	test   eax,eax
   0x7ffff7eb5041 <tsearch+113>:	je     0x7ffff7eb52d0 <tsearch+768>
   0x7ffff7eb5047 <tsearch+119>:	mov    rax,QWORD PTR [r13+0x0]
   0x7ffff7eb504b <tsearch+123>:	and    rax,0xfffffffffffffffe
   0x7ffff7eb504f <tsearch+127>:	mov    r10,QWORD PTR [rax+0x8]
   0x7ffff7eb5053 <tsearch+131>:	mov    rsi,QWORD PTR [rax+0x10]
   0x7ffff7eb5057 <tsearch+135>:	mov    rdi,r10
   0x7ffff7eb505a <tsearch+138>:	and    rdi,0xfffffffffffffffe
   0x7ffff7eb505e <tsearch+142>:	test   rsi,rsi
   0x7ffff7eb5061 <tsearch+145>:	je     0x7ffff7eb50a8 <tsearch+216>
   0x7ffff7eb5063 <tsearch+147>:	test   rdi,rdi
   0x7ffff7eb5066 <tsearch+150>:	je     0x7ffff7eb50a8 <tsearch+216>
   0x7ffff7eb5068 <tsearch+152>:	test   BYTE PTR [rsi+0x8],0x1
   0x7ffff7eb506c <tsearch+156>:	je     0x7ffff7eb50a8 <tsearch+216>
   0x7ffff7eb506e <tsearch+158>:	test   BYTE PTR [rdi+0x8],0x1
   0x7ffff7eb5072 <tsearch+162>:	je     0x7ffff7eb50a8 <tsearch+216>
   0x7ffff7eb5074 <tsearch+164>:	or     r10,0x1
   0x7ffff7eb5078 <tsearch+168>:	mov    QWORD PTR [rax+0x8],r10
   0x7ffff7eb507c <tsearch+172>:	and    QWORD PTR [rsi+0x8],0xfffffffffffffffe
   0x7ffff7eb5081 <tsearch+177>:	and    QWORD PTR [rdi+0x8],0xfffffffffffffffe
   0x7ffff7eb5086 <tsearch+182>:	test   r12,r12
   0x7ffff7eb5089 <tsearch+185>:	je     0x7ffff7eb50a8 <tsearch+216>
   0x7ffff7eb508b <tsearch+187>:	mov    r10,QWORD PTR [r12]
   0x7ffff7eb508f <tsearch+191>:	and    r10,0xfffffffffffffffe
   0x7ffff7eb5093 <tsearch+195>:	mov    r11,QWORD PTR [r10+0x8]
   0x7ffff7eb5097 <tsearch+199>:	test   r11b,0x1
   0x7ffff7eb509b <tsearch+203>:	jne    0x7ffff7eb5250 <tsearch+640>
   0x7ffff7eb50a1 <tsearch+209>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb50a8 <tsearch+216>:	test   ecx,ecx
   0x7ffff7eb50aa <tsearch+218>:	js     0x7ffff7eb5128 <tsearch+344>
   0x7ffff7eb50ac <tsearch+220>:	mov    rdx,QWORD PTR [r14+0x10]
   0x7ffff7eb50b0 <tsearch+224>:	lea    rsi,[r14+0x10]
   0x7ffff7eb50b4 <tsearch+228>:	test   rdx,0xfffffffffffffffe
   0x7ffff7eb50bb <tsearch+235>:	je     0x7ffff7eb5139 <tsearch+361>
   0x7ffff7eb50bd <tsearch+237>:	and    rdx,0xfffffffffffffffe
   0x7ffff7eb50c1 <tsearch+241>:	mov    DWORD PTR [rsp+0x1c],ebx
   0x7ffff7eb50c5 <tsearch+245>:	mov    ebx,ecx
   0x7ffff7eb50c7 <tsearch+247>:	mov    QWORD PTR [rsp+0x8],r12
   0x7ffff7eb50cc <tsearch+252>:	mov    r14,rdx
   0x7ffff7eb50cf <tsearch+255>:	mov    r12,r13
   0x7ffff7eb50d2 <tsearch+258>:	mov    r13,rsi
   0x7ffff7eb50d5 <tsearch+261>:	jne    0x7ffff7eb5030 <tsearch+96>
   0x7ffff7eb50db <tsearch+267>:	mov    edi,0x18
   0x7ffff7eb50e0 <tsearch+272>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7eb50e5 <tsearch+277>:	mov    r12,rax
   0x7ffff7eb50e8 <tsearch+280>:	test   rax,rax
   0x7ffff7eb50eb <tsearch+283>:	je     0x7ffff7eb5340 <tsearch+880>
   0x7ffff7eb50f1 <tsearch+289>:	mov    rax,QWORD PTR [r13+0x0]
   0x7ffff7eb50f5 <tsearch+293>:	movdqa xmm0,XMMWORD PTR [rip+0xc23d3]        # 0x7ffff7f774d0
   0x7ffff7eb50fd <tsearch+301>:	and    eax,0x1
   0x7ffff7eb5100 <tsearch+304>:	or     rax,r12
   0x7ffff7eb5103 <tsearch+307>:	mov    QWORD PTR [r13+0x0],rax
   0x7ffff7eb5107 <tsearch+311>:	mov    QWORD PTR [r12],rbp
   0x7ffff7eb510b <tsearch+315>:	movups XMMWORD PTR [r12+0x8],xmm0
   0x7ffff7eb5111 <tsearch+321>:	add    rsp,0x28
   0x7ffff7eb5115 <tsearch+325>:	mov    rax,r12
   0x7ffff7eb5118 <tsearch+328>:	pop    rbx
   0x7ffff7eb5119 <tsearch+329>:	pop    rbp
   0x7ffff7eb511a <tsearch+330>:	pop    r12
   0x7ffff7eb511c <tsearch+332>:	pop    r13
   0x7ffff7eb511e <tsearch+334>:	pop    r14
   0x7ffff7eb5120 <tsearch+336>:	pop    r15
   0x7ffff7eb5122 <tsearch+338>:	ret
   0x7ffff7eb5123 <tsearch+339>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5128 <tsearch+344>:	mov    rdx,QWORD PTR [r14+0x8]
   0x7ffff7eb512c <tsearch+348>:	lea    rsi,[r14+0x8]
   0x7ffff7eb5130 <tsearch+352>:	test   rdx,0xfffffffffffffffe
   0x7ffff7eb5137 <tsearch+359>:	jne    0x7ffff7eb50bd <tsearch+237>
   0x7ffff7eb5139 <tsearch+361>:	mov    edi,0x18
   0x7ffff7eb513e <tsearch+366>:	mov    QWORD PTR [rsp+0x10],rsi
   0x7ffff7eb5143 <tsearch+371>:	mov    r15,r12
   0x7ffff7eb5146 <tsearch+374>:	mov    DWORD PTR [rsp+0x8],ecx
   0x7ffff7eb514a <tsearch+378>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7eb514f <tsearch+383>:	mov    r12,rax
   0x7ffff7eb5152 <tsearch+386>:	test   rax,rax
   0x7ffff7eb5155 <tsearch+389>:	je     0x7ffff7eb5340 <tsearch+880>
   0x7ffff7eb515b <tsearch+395>:	mov    rsi,QWORD PTR [rsp+0x10]
   0x7ffff7eb5160 <tsearch+400>:	movdqa xmm0,XMMWORD PTR [rip+0xc2368]        # 0x7ffff7f774d0
   0x7ffff7eb5168 <tsearch+408>:	mov    rax,QWORD PTR [rsi]
   0x7ffff7eb516b <tsearch+411>:	and    eax,0x1
   0x7ffff7eb516e <tsearch+414>:	or     rax,r12
   0x7ffff7eb5171 <tsearch+417>:	mov    QWORD PTR [rsi],rax
   0x7ffff7eb5174 <tsearch+420>:	mov    QWORD PTR [r12],rbp
   0x7ffff7eb5178 <tsearch+424>:	movups XMMWORD PTR [r12+0x8],xmm0
   0x7ffff7eb517e <tsearch+430>:	cmp    r13,rsi
   0x7ffff7eb5181 <tsearch+433>:	je     0x7ffff7eb5111 <tsearch+321>
   0x7ffff7eb5183 <tsearch+435>:	mov    rax,QWORD PTR [rsi]
   0x7ffff7eb5186 <tsearch+438>:	mov    ecx,DWORD PTR [rsp+0x8]
   0x7ffff7eb518a <tsearch+442>:	and    rax,0xfffffffffffffffe
   0x7ffff7eb518e <tsearch+446>:	mov    rdx,QWORD PTR [rax+0x8]
   0x7ffff7eb5192 <tsearch+450>:	mov    rdi,QWORD PTR [rax+0x10]
   0x7ffff7eb5196 <tsearch+454>:	mov    r10,rdx
   0x7ffff7eb5199 <tsearch+457>:	or     rdx,0x1
   0x7ffff7eb519d <tsearch+461>:	and    r10,0xfffffffffffffffe
   0x7ffff7eb51a1 <tsearch+465>:	test   rdi,rdi
   0x7ffff7eb51a4 <tsearch+468>:	mov    QWORD PTR [rax+0x8],rdx
   0x7ffff7eb51a8 <tsearch+472>:	je     0x7ffff7eb51af <tsearch+479>
   0x7ffff7eb51aa <tsearch+474>:	and    QWORD PTR [rdi+0x8],0xfffffffffffffffe
   0x7ffff7eb51af <tsearch+479>:	test   r10,r10
   0x7ffff7eb51b2 <tsearch+482>:	je     0x7ffff7eb51b9 <tsearch+489>
   0x7ffff7eb51b4 <tsearch+484>:	and    QWORD PTR [r10+0x8],0xfffffffffffffffe
   0x7ffff7eb51b9 <tsearch+489>:	mov    rdx,QWORD PTR [r13+0x0]
   0x7ffff7eb51bd <tsearch+493>:	and    rdx,0xfffffffffffffffe
   0x7ffff7eb51c1 <tsearch+497>:	mov    rsi,QWORD PTR [rdx+0x8]
   0x7ffff7eb51c5 <tsearch+501>:	test   sil,0x1
   0x7ffff7eb51c9 <tsearch+505>:	je     0x7ffff7eb5111 <tsearch+321>
   0x7ffff7eb51cf <tsearch+511>:	mov    r11,QWORD PTR [r15]
   0x7ffff7eb51d2 <tsearch+514>:	mov    r8,r11
   0x7ffff7eb51d5 <tsearch+517>:	and    r8,0xfffffffffffffffe
   0x7ffff7eb51d9 <tsearch+521>:	test   ecx,ecx
   0x7ffff7eb51db <tsearch+523>:	setg   bpl
   0x7ffff7eb51df <tsearch+527>:	test   ebx,ebx
   0x7ffff7eb51e1 <tsearch+529>:	setg   bl
   0x7ffff7eb51e4 <tsearch+532>:	cmp    bpl,bl
   0x7ffff7eb51e7 <tsearch+535>:	je     0x7ffff7eb537f <tsearch+943>
   0x7ffff7eb51ed <tsearch+541>:	or     rsi,0x1
   0x7ffff7eb51f1 <tsearch+545>:	mov    QWORD PTR [rdx+0x8],rsi
   0x7ffff7eb51f5 <tsearch+549>:	mov    rsi,rdi
   0x7ffff7eb51f8 <tsearch+552>:	or     QWORD PTR [r8+0x8],0x1
   0x7ffff7eb51fd <tsearch+557>:	and    esi,0x1
   0x7ffff7eb5200 <tsearch+560>:	and    QWORD PTR [rax+0x8],0xfffffffffffffffe
   0x7ffff7eb5205 <tsearch+565>:	test   ecx,ecx
   0x7ffff7eb5207 <tsearch+567>:	js     0x7ffff7eb5348 <tsearch+888>
   0x7ffff7eb520d <tsearch+573>:	mov    QWORD PTR [rdx+0x10],r10
   0x7ffff7eb5211 <tsearch+577>:	or     rsi,r8
   0x7ffff7eb5214 <tsearch+580>:	mov    QWORD PTR [rax+0x8],rdx
   0x7ffff7eb5218 <tsearch+584>:	mov    rdx,QWORD PTR [r8+0x8]
   0x7ffff7eb521c <tsearch+588>:	and    edx,0x1
   0x7ffff7eb521f <tsearch+591>:	or     rdx,rdi
   0x7ffff7eb5222 <tsearch+594>:	mov    QWORD PTR [r8+0x8],rdx
   0x7ffff7eb5226 <tsearch+598>:	mov    QWORD PTR [rax+0x10],rsi
   0x7ffff7eb522a <tsearch+602>:	mov    rdx,QWORD PTR [r15]
   0x7ffff7eb522d <tsearch+605>:	and    edx,0x1
   0x7ffff7eb5230 <tsearch+608>:	or     rax,rdx
   0x7ffff7eb5233 <tsearch+611>:	mov    QWORD PTR [r15],rax
   0x7ffff7eb5236 <tsearch+614>:	jmp    0x7ffff7eb5111 <tsearch+321>
   0x7ffff7eb523b <tsearch+619>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5240 <tsearch+624>:	and    QWORD PTR [rax+0x8],0xfffffffffffffffe
   0x7ffff7eb5245 <tsearch+629>:	jmp    0x7ffff7eb5006 <tsearch+54>
   0x7ffff7eb524a <tsearch+634>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5250 <tsearch+640>:	mov    rdx,QWORD PTR [rsp+0x8]
   0x7ffff7eb5255 <tsearch+645>:	mov    r8d,DWORD PTR [rsp+0x1c]
   0x7ffff7eb525a <tsearch+650>:	mov    rdx,QWORD PTR [rdx]
   0x7ffff7eb525d <tsearch+653>:	mov    r15,rdx
   0x7ffff7eb5260 <tsearch+656>:	and    r15,0xfffffffffffffffe
   0x7ffff7eb5264 <tsearch+660>:	test   ebx,ebx
   0x7ffff7eb5266 <tsearch+662>:	setg   r9b
   0x7ffff7eb526a <tsearch+666>:	test   r8d,r8d
   0x7ffff7eb526d <tsearch+669>:	setg   r8b
   0x7ffff7eb5271 <tsearch+673>:	cmp    r9b,r8b
   0x7ffff7eb5274 <tsearch+676>:	je     0x7ffff7eb5300 <tsearch+816>
   0x7ffff7eb527a <tsearch+682>:	or     r11,0x1
   0x7ffff7eb527e <tsearch+686>:	mov    QWORD PTR [r10+0x8],r11
   0x7ffff7eb5282 <tsearch+690>:	mov    r11,rsi
   0x7ffff7eb5285 <tsearch+693>:	or     QWORD PTR [r15+0x8],0x1
   0x7ffff7eb528a <tsearch+698>:	and    r11d,0x1
   0x7ffff7eb528e <tsearch+702>:	and    QWORD PTR [rax+0x8],0xfffffffffffffffe
   0x7ffff7eb5293 <tsearch+707>:	test   ebx,ebx
   0x7ffff7eb5295 <tsearch+709>:	js     0x7ffff7eb52e0 <tsearch+784>
   0x7ffff7eb5297 <tsearch+711>:	mov    QWORD PTR [r10+0x10],rdi
   0x7ffff7eb529b <tsearch+715>:	mov    rdi,QWORD PTR [r15+0x8]
   0x7ffff7eb529f <tsearch+719>:	or     r11,r15
   0x7ffff7eb52a2 <tsearch+722>:	mov    QWORD PTR [rax+0x8],r10
   0x7ffff7eb52a6 <tsearch+726>:	and    edi,0x1
   0x7ffff7eb52a9 <tsearch+729>:	or     rsi,rdi
   0x7ffff7eb52ac <tsearch+732>:	mov    QWORD PTR [r15+0x8],rsi
   0x7ffff7eb52b0 <tsearch+736>:	mov    QWORD PTR [rax+0x10],r11
   0x7ffff7eb52b4 <tsearch+740>:	mov    rdi,QWORD PTR [rsp+0x8]
   0x7ffff7eb52b9 <tsearch+745>:	mov    rsi,QWORD PTR [rdi]
   0x7ffff7eb52bc <tsearch+748>:	mov    QWORD PTR [rsp+0x8],rsi
   0x7ffff7eb52c1 <tsearch+753>:	and    esi,0x1
   0x7ffff7eb52c4 <tsearch+756>:	or     rax,rsi
   0x7ffff7eb52c7 <tsearch+759>:	mov    QWORD PTR [rdi],rax
   0x7ffff7eb52ca <tsearch+762>:	jmp    0x7ffff7eb50a8 <tsearch+216>
   0x7ffff7eb52cf <tsearch+767>:	nop
   0x7ffff7eb52d0 <tsearch+768>:	mov    r12,r14
   0x7ffff7eb52d3 <tsearch+771>:	jmp    0x7ffff7eb5111 <tsearch+321>
   0x7ffff7eb52d8 <tsearch+776>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb52e0 <tsearch+784>:	mov    rdx,QWORD PTR [r10+0x8]
   0x7ffff7eb52e4 <tsearch+788>:	or     r11,r10
   0x7ffff7eb52e7 <tsearch+791>:	and    edx,0x1
   0x7ffff7eb52ea <tsearch+794>:	or     rsi,rdx
   0x7ffff7eb52ed <tsearch+797>:	mov    QWORD PTR [r10+0x8],rsi
   0x7ffff7eb52f1 <tsearch+801>:	mov    QWORD PTR [rax+0x10],r11
   0x7ffff7eb52f5 <tsearch+805>:	mov    QWORD PTR [r15+0x10],rdi
   0x7ffff7eb52f9 <tsearch+809>:	mov    QWORD PTR [rax+0x8],r15
   0x7ffff7eb52fd <tsearch+813>:	jmp    0x7ffff7eb52b4 <tsearch+740>
   0x7ffff7eb52ff <tsearch+815>:	nop
   0x7ffff7eb5300 <tsearch+816>:	mov    rax,rdx
   0x7ffff7eb5303 <tsearch+819>:	mov    rsi,QWORD PTR [rsp+0x8]
   0x7ffff7eb5308 <tsearch+824>:	and    r11,0xfffffffffffffffe
   0x7ffff7eb530c <tsearch+828>:	and    eax,0x1
   0x7ffff7eb530f <tsearch+831>:	or     rax,r10
   0x7ffff7eb5312 <tsearch+834>:	mov    QWORD PTR [rsi],rax
   0x7ffff7eb5315 <tsearch+837>:	mov    QWORD PTR [r10+0x8],r11
   0x7ffff7eb5319 <tsearch+841>:	or     QWORD PTR [r15+0x8],0x1
   0x7ffff7eb531e <tsearch+846>:	test   ebx,ebx
   0x7ffff7eb5320 <tsearch+848>:	js     0x7ffff7eb536a <tsearch+922>
   0x7ffff7eb5322 <tsearch+850>:	mov    rax,QWORD PTR [r10+0x8]
   0x7ffff7eb5326 <tsearch+854>:	mov    rsi,rax
   0x7ffff7eb5329 <tsearch+857>:	and    eax,0x1
   0x7ffff7eb532c <tsearch+860>:	and    rsi,0xfffffffffffffffe
   0x7ffff7eb5330 <tsearch+864>:	or     rax,r15
   0x7ffff7eb5333 <tsearch+867>:	mov    QWORD PTR [r15+0x10],rsi
   0x7ffff7eb5337 <tsearch+871>:	mov    QWORD PTR [r10+0x8],rax
   0x7ffff7eb533b <tsearch+875>:	jmp    0x7ffff7eb50a8 <tsearch+216>
   0x7ffff7eb5340 <tsearch+880>:	xor    r12d,r12d
   0x7ffff7eb5343 <tsearch+883>:	jmp    0x7ffff7eb5111 <tsearch+321>
   0x7ffff7eb5348 <tsearch+888>:	mov    rcx,QWORD PTR [rdx+0x8]
   0x7ffff7eb534c <tsearch+892>:	or     rsi,rdx
   0x7ffff7eb534f <tsearch+895>:	and    ecx,0x1
   0x7ffff7eb5352 <tsearch+898>:	or     rcx,rdi
   0x7ffff7eb5355 <tsearch+901>:	mov    QWORD PTR [rdx+0x8],rcx
   0x7ffff7eb5359 <tsearch+905>:	mov    QWORD PTR [rax+0x10],rsi
   0x7ffff7eb535d <tsearch+909>:	mov    QWORD PTR [r8+0x10],r10
   0x7ffff7eb5361 <tsearch+913>:	mov    QWORD PTR [rax+0x8],r8
   0x7ffff7eb5365 <tsearch+917>:	jmp    0x7ffff7eb522a <tsearch+602>
   0x7ffff7eb536a <tsearch+922>:	mov    rax,QWORD PTR [r10+0x10]
   0x7ffff7eb536e <tsearch+926>:	or     rax,0x1
   0x7ffff7eb5372 <tsearch+930>:	mov    QWORD PTR [r15+0x8],rax
   0x7ffff7eb5376 <tsearch+934>:	mov    QWORD PTR [r10+0x10],r15
   0x7ffff7eb537a <tsearch+938>:	jmp    0x7ffff7eb50a8 <tsearch+216>
   0x7ffff7eb537f <tsearch+943>:	and    r11d,0x1
   0x7ffff7eb5383 <tsearch+947>:	and    rsi,0xfffffffffffffffe
   0x7ffff7eb5387 <tsearch+951>:	or     r11,rdx
   0x7ffff7eb538a <tsearch+954>:	mov    QWORD PTR [r15],r11
   0x7ffff7eb538d <tsearch+957>:	mov    QWORD PTR [rdx+0x8],rsi
   0x7ffff7eb5391 <tsearch+961>:	or     QWORD PTR [r8+0x8],0x1
   0x7ffff7eb5396 <tsearch+966>:	test   ecx,ecx
   0x7ffff7eb5398 <tsearch+968>:	js     0x7ffff7eb53b8 <tsearch+1000>
   0x7ffff7eb539a <tsearch+970>:	mov    rax,QWORD PTR [rdx+0x8]
   0x7ffff7eb539e <tsearch+974>:	mov    rcx,rax
   0x7ffff7eb53a1 <tsearch+977>:	and    eax,0x1
   0x7ffff7eb53a4 <tsearch+980>:	and    rcx,0xfffffffffffffffe
   0x7ffff7eb53a8 <tsearch+984>:	or     rax,r8
   0x7ffff7eb53ab <tsearch+987>:	mov    QWORD PTR [r8+0x10],rcx
   0x7ffff7eb53af <tsearch+991>:	mov    QWORD PTR [rdx+0x8],rax
   0x7ffff7eb53b3 <tsearch+995>:	jmp    0x7ffff7eb5111 <tsearch+321>
   0x7ffff7eb53b8 <tsearch+1000>:	mov    rax,QWORD PTR [rdx+0x10]
   0x7ffff7eb53bc <tsearch+1004>:	or     rax,0x1
   0x7ffff7eb53c0 <tsearch+1008>:	mov    QWORD PTR [r8+0x8],rax
   0x7ffff7eb53c4 <tsearch+1012>:	mov    QWORD PTR [rdx+0x10],r8
   0x7ffff7eb53c8 <tsearch+1016>:	jmp    0x7ffff7eb5111 <tsearch+321>
   0x7ffff7eb53cd:	nop    DWORD PTR [rax]
   0x7ffff7eb53d0 <tfind>:	endbr64
   0x7ffff7eb53d4 <tfind+4>:	push   r13
   0x7ffff7eb53d6 <tfind+6>:	push   r12
   0x7ffff7eb53d8 <tfind+8>:	push   rbp
   0x7ffff7eb53d9 <tfind+9>:	push   rbx
   0x7ffff7eb53da <tfind+10>:	sub    rsp,0x8
   0x7ffff7eb53de <tfind+14>:	test   rsi,rsi
   0x7ffff7eb53e1 <tfind+17>:	je     0x7ffff7eb5430 <tfind+96>
   0x7ffff7eb53e3 <tfind+19>:	mov    rbx,QWORD PTR [rsi]
   0x7ffff7eb53e6 <tfind+22>:	mov    rbp,rdi
   0x7ffff7eb53e9 <tfind+25>:	mov    r12,rdx
   0x7ffff7eb53ec <tfind+28>:	and    rbx,0xfffffffffffffffe
   0x7ffff7eb53f0 <tfind+32>:	jne    0x7ffff7eb540f <tfind+63>
   0x7ffff7eb53f2 <tfind+34>:	jmp    0x7ffff7eb5430 <tfind+96>
   0x7ffff7eb53f4 <tfind+36>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb53f8 <tfind+40>:	lea    rdx,[rbx+0x8]
   0x7ffff7eb53fc <tfind+44>:	add    rbx,0x10
   0x7ffff7eb5400 <tfind+48>:	test   eax,eax
   0x7ffff7eb5402 <tfind+50>:	cmovs  rbx,rdx
   0x7ffff7eb5406 <tfind+54>:	mov    rbx,QWORD PTR [rbx]
   0x7ffff7eb5409 <tfind+57>:	and    rbx,0xfffffffffffffffe
   0x7ffff7eb540d <tfind+61>:	je     0x7ffff7eb5430 <tfind+96>
   0x7ffff7eb540f <tfind+63>:	mov    rsi,QWORD PTR [rbx]
   0x7ffff7eb5412 <tfind+66>:	mov    r13,rbx
   0x7ffff7eb5415 <tfind+69>:	mov    rdi,rbp
   0x7ffff7eb5418 <tfind+72>:	call   r12
   0x7ffff7eb541b <tfind+75>:	test   eax,eax
   0x7ffff7eb541d <tfind+77>:	jne    0x7ffff7eb53f8 <tfind+40>
   0x7ffff7eb541f <tfind+79>:	add    rsp,0x8
   0x7ffff7eb5423 <tfind+83>:	mov    rax,r13
   0x7ffff7eb5426 <tfind+86>:	pop    rbx
   0x7ffff7eb5427 <tfind+87>:	pop    rbp
   0x7ffff7eb5428 <tfind+88>:	pop    r12
   0x7ffff7eb542a <tfind+90>:	pop    r13
   0x7ffff7eb542c <tfind+92>:	ret
   0x7ffff7eb542d <tfind+93>:	nop    DWORD PTR [rax]
   0x7ffff7eb5430 <tfind+96>:	add    rsp,0x8
   0x7ffff7eb5434 <tfind+100>:	xor    r13d,r13d
   0x7ffff7eb5437 <tfind+103>:	pop    rbx
   0x7ffff7eb5438 <tfind+104>:	mov    rax,r13
   0x7ffff7eb543b <tfind+107>:	pop    rbp
   0x7ffff7eb543c <tfind+108>:	pop    r12
   0x7ffff7eb543e <tfind+110>:	pop    r13
   0x7ffff7eb5440 <tfind+112>:	ret
   0x7ffff7eb5441:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb544c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb5450 <tdelete>:	endbr64
   0x7ffff7eb5454 <tdelete+4>:	push   rbp
   0x7ffff7eb5455 <tdelete+5>:	mov    rbp,rsp
   0x7ffff7eb5458 <tdelete+8>:	push   r15
   0x7ffff7eb545a <tdelete+10>:	push   r14
   0x7ffff7eb545c <tdelete+12>:	mov    r14,rdi
   0x7ffff7eb545f <tdelete+15>:	push   r13
   0x7ffff7eb5461 <tdelete+17>:	push   r12
   0x7ffff7eb5463 <tdelete+19>:	push   rbx
   0x7ffff7eb5464 <tdelete+20>:	mov    rbx,rsi
   0x7ffff7eb5467 <tdelete+23>:	sub    rsp,0x48
   0x7ffff7eb546b <tdelete+27>:	mov    QWORD PTR [rbp-0x58],rdx
   0x7ffff7eb546f <tdelete+31>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb5478 <tdelete+40>:	mov    QWORD PTR [rbp-0x38],rax
   0x7ffff7eb547c <tdelete+44>:	mov    rax,rsp
   0x7ffff7eb547f <tdelete+47>:	cmp    rsp,rax
   0x7ffff7eb5482 <tdelete+50>:	je     0x7ffff7eb5499 <tdelete+73>
   0x7ffff7eb5484 <tdelete+52>:	sub    rsp,0x1000
   0x7ffff7eb548b <tdelete+59>:	or     QWORD PTR [rsp+0xff8],0x0
   0x7ffff7eb5494 <tdelete+68>:	cmp    rsp,rax
   0x7ffff7eb5497 <tdelete+71>:	jne    0x7ffff7eb5484 <tdelete+52>
   0x7ffff7eb5499 <tdelete+73>:	sub    rsp,0x150
   0x7ffff7eb54a0 <tdelete+80>:	or     QWORD PTR [rsp+0x148],0x0
   0x7ffff7eb54a9 <tdelete+89>:	lea    r13,[rsp+0xf]
   0x7ffff7eb54ae <tdelete+94>:	and    r13,0xfffffffffffffff0
   0x7ffff7eb54b2 <tdelete+98>:	mov    QWORD PTR [rbp-0x50],r13
   0x7ffff7eb54b6 <tdelete+102>:	test   rbx,rbx
   0x7ffff7eb54b9 <tdelete+105>:	je     0x7ffff7eb5525 <tdelete+213>
   0x7ffff7eb54bb <tdelete+107>:	mov    r12,QWORD PTR [rbx]
   0x7ffff7eb54be <tdelete+110>:	and    r12,0xfffffffffffffffe
   0x7ffff7eb54c2 <tdelete+114>:	je     0x7ffff7eb5525 <tdelete+213>
   0x7ffff7eb54c4 <tdelete+116>:	mov    DWORD PTR [rbp-0x44],0x28
   0x7ffff7eb54cb <tdelete+123>:	mov    rax,r12
   0x7ffff7eb54ce <tdelete+126>:	xor    r13d,r13d
   0x7ffff7eb54d1 <tdelete+129>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb54d8 <tdelete+136>:	mov    rsi,QWORD PTR [rax]
   0x7ffff7eb54db <tdelete+139>:	mov    rdi,r14
   0x7ffff7eb54de <tdelete+142>:	mov    rax,QWORD PTR [rbp-0x58]
   0x7ffff7eb54e2 <tdelete+146>:	mov    r15d,r13d
   0x7ffff7eb54e5 <tdelete+149>:	call   rax
   0x7ffff7eb54e7 <tdelete+151>:	mov    ecx,eax
   0x7ffff7eb54e9 <tdelete+153>:	test   eax,eax
   0x7ffff7eb54eb <tdelete+155>:	je     0x7ffff7eb55e8 <tdelete+408>
   0x7ffff7eb54f1 <tdelete+161>:	lea    r12,[r13*8+0x0]
   0x7ffff7eb54f9 <tdelete+169>:	cmp    DWORD PTR [rbp-0x44],r13d
   0x7ffff7eb54fd <tdelete+173>:	je     0x7ffff7eb5570 <tdelete+288>
   0x7ffff7eb54ff <tdelete+175>:	mov    rax,QWORD PTR [rbp-0x50]
   0x7ffff7eb5503 <tdelete+179>:	mov    QWORD PTR [rax+r12*1],rbx
   0x7ffff7eb5507 <tdelete+183>:	mov    r12,QWORD PTR [rbx]
   0x7ffff7eb550a <tdelete+186>:	and    r12,0xfffffffffffffffe
   0x7ffff7eb550e <tdelete+190>:	test   ecx,ecx
   0x7ffff7eb5510 <tdelete+192>:	js     0x7ffff7eb5550 <tdelete+256>
   0x7ffff7eb5512 <tdelete+194>:	mov    rax,QWORD PTR [r12+0x10]
   0x7ffff7eb5517 <tdelete+199>:	lea    rbx,[r12+0x10]
   0x7ffff7eb551c <tdelete+204>:	add    r13,0x1
   0x7ffff7eb5520 <tdelete+208>:	test   rax,rax
   0x7ffff7eb5523 <tdelete+211>:	jne    0x7ffff7eb54d8 <tdelete+136>
   0x7ffff7eb5525 <tdelete+213>:	xor    r12d,r12d
   0x7ffff7eb5528 <tdelete+216>:	mov    rax,QWORD PTR [rbp-0x38]
   0x7ffff7eb552c <tdelete+220>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb5535 <tdelete+229>:	jne    0x7ffff7eb5a9f <tdelete+1615>
   0x7ffff7eb553b <tdelete+235>:	lea    rsp,[rbp-0x28]
   0x7ffff7eb553f <tdelete+239>:	mov    rax,r12
   0x7ffff7eb5542 <tdelete+242>:	pop    rbx
   0x7ffff7eb5543 <tdelete+243>:	pop    r12
   0x7ffff7eb5545 <tdelete+245>:	pop    r13
   0x7ffff7eb5547 <tdelete+247>:	pop    r14
   0x7ffff7eb5549 <tdelete+249>:	pop    r15
   0x7ffff7eb554b <tdelete+251>:	pop    rbp
   0x7ffff7eb554c <tdelete+252>:	ret
   0x7ffff7eb554d <tdelete+253>:	nop    DWORD PTR [rax]
   0x7ffff7eb5550 <tdelete+256>:	mov    rax,QWORD PTR [r12+0x8]
   0x7ffff7eb5555 <tdelete+261>:	lea    rbx,[r12+0x8]
   0x7ffff7eb555a <tdelete+266>:	add    r13,0x1
   0x7ffff7eb555e <tdelete+270>:	and    rax,0xfffffffffffffffe
   0x7ffff7eb5562 <tdelete+274>:	jne    0x7ffff7eb54d8 <tdelete+136>
   0x7ffff7eb5568 <tdelete+280>:	jmp    0x7ffff7eb5525 <tdelete+213>
   0x7ffff7eb556a <tdelete+282>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5570 <tdelete+288>:	add    DWORD PTR [rbp-0x44],0x14
   0x7ffff7eb5574 <tdelete+292>:	movsxd rax,DWORD PTR [rbp-0x44]
   0x7ffff7eb5578 <tdelete+296>:	mov    rsi,rsp
   0x7ffff7eb557b <tdelete+299>:	lea    rax,[rax*8+0x17]
   0x7ffff7eb5583 <tdelete+307>:	mov    rdx,rax
   0x7ffff7eb5586 <tdelete+310>:	and    rax,0xfffffffffffff000
   0x7ffff7eb558c <tdelete+316>:	sub    rsi,rax
   0x7ffff7eb558f <tdelete+319>:	and    rdx,0xfffffffffffffff0
   0x7ffff7eb5593 <tdelete+323>:	cmp    rsp,rsi
   0x7ffff7eb5596 <tdelete+326>:	je     0x7ffff7eb55ad <tdelete+349>
   0x7ffff7eb5598 <tdelete+328>:	sub    rsp,0x1000
   0x7ffff7eb559f <tdelete+335>:	or     QWORD PTR [rsp+0xff8],0x0
   0x7ffff7eb55a8 <tdelete+344>:	cmp    rsp,rsi
   0x7ffff7eb55ab <tdelete+347>:	jne    0x7ffff7eb5598 <tdelete+328>
   0x7ffff7eb55ad <tdelete+349>:	and    edx,0xfff
   0x7ffff7eb55b3 <tdelete+355>:	sub    rsp,rdx
   0x7ffff7eb55b6 <tdelete+358>:	test   rdx,rdx
   0x7ffff7eb55b9 <tdelete+361>:	je     0x7ffff7eb55c1 <tdelete+369>
   0x7ffff7eb55bb <tdelete+363>:	or     QWORD PTR [rsp+rdx*1-0x8],0x0
   0x7ffff7eb55c1 <tdelete+369>:	mov    rsi,QWORD PTR [rbp-0x50]
   0x7ffff7eb55c5 <tdelete+373>:	lea    rdi,[rsp+0xf]
   0x7ffff7eb55ca <tdelete+378>:	mov    rdx,r12
   0x7ffff7eb55cd <tdelete+381>:	mov    DWORD PTR [rbp-0x60],ecx
   0x7ffff7eb55d0 <tdelete+384>:	and    rdi,0xfffffffffffffff0
   0x7ffff7eb55d4 <tdelete+388>:	call   0x7ffff7dbd620 <*ABS*+0xa9c90@plt>
   0x7ffff7eb55d9 <tdelete+393>:	mov    ecx,DWORD PTR [rbp-0x60]
   0x7ffff7eb55dc <tdelete+396>:	mov    QWORD PTR [rbp-0x50],rax
   0x7ffff7eb55e0 <tdelete+400>:	jmp    0x7ffff7eb54ff <tdelete+175>
   0x7ffff7eb55e5 <tdelete+405>:	nop    DWORD PTR [rax]
   0x7ffff7eb55e8 <tdelete+408>:	mov    r8,QWORD PTR [rbx]
   0x7ffff7eb55eb <tdelete+411>:	mov    r13,r8
   0x7ffff7eb55ee <tdelete+414>:	and    r13,0xfffffffffffffffe
   0x7ffff7eb55f2 <tdelete+418>:	mov    rax,QWORD PTR [r13+0x8]
   0x7ffff7eb55f6 <tdelete+422>:	and    rax,0xfffffffffffffffe
   0x7ffff7eb55fa <tdelete+426>:	cmp    QWORD PTR [r13+0x10],0x0
   0x7ffff7eb55ff <tdelete+431>:	je     0x7ffff7eb5a48 <tdelete+1528>
   0x7ffff7eb5605 <tdelete+437>:	test   rax,rax
   0x7ffff7eb5608 <tdelete+440>:	je     0x7ffff7eb5a81 <tdelete+1585>
   0x7ffff7eb560e <tdelete+446>:	movsxd rdx,r15d
   0x7ffff7eb5611 <tdelete+449>:	lea    r14,[r13+0x10]
   0x7ffff7eb5615 <tdelete+453>:	mov    rcx,rbx
   0x7ffff7eb5618 <tdelete+456>:	shl    rdx,0x3
   0x7ffff7eb561c <tdelete+460>:	jmp    0x7ffff7eb564c <tdelete+508>
   0x7ffff7eb561e <tdelete+462>:	xchg   ax,ax
   0x7ffff7eb5620 <tdelete+464>:	mov    rdi,QWORD PTR [r14]
   0x7ffff7eb5623 <tdelete+467>:	mov    rax,QWORD PTR [rbp-0x50]
   0x7ffff7eb5627 <tdelete+471>:	add    r15d,0x1
   0x7ffff7eb562b <tdelete+475>:	and    rdi,0xfffffffffffffffe
   0x7ffff7eb562f <tdelete+479>:	mov    QWORD PTR [rax+rdx*1],rcx
   0x7ffff7eb5633 <tdelete+483>:	add    rdx,0x8
   0x7ffff7eb5637 <tdelete+487>:	test   QWORD PTR [rdi+0x8],0xfffffffffffffffe
   0x7ffff7eb563f <tdelete+495>:	je     0x7ffff7eb56f8 <tdelete+680>
   0x7ffff7eb5645 <tdelete+501>:	mov    rcx,r14
   0x7ffff7eb5648 <tdelete+504>:	lea    r14,[rdi+0x8]
   0x7ffff7eb564c <tdelete+508>:	cmp    DWORD PTR [rbp-0x44],r15d
   0x7ffff7eb5650 <tdelete+512>:	jne    0x7ffff7eb5620 <tdelete+464>
   0x7ffff7eb5652 <tdelete+514>:	add    DWORD PTR [rbp-0x44],0x14
   0x7ffff7eb5656 <tdelete+518>:	movsxd rax,DWORD PTR [rbp-0x44]
   0x7ffff7eb565a <tdelete+522>:	mov    rdi,rsp
   0x7ffff7eb565d <tdelete+525>:	lea    rax,[rax*8+0x17]
   0x7ffff7eb5665 <tdelete+533>:	mov    rsi,rax
   0x7ffff7eb5668 <tdelete+536>:	and    rax,0xfffffffffffff000
   0x7ffff7eb566e <tdelete+542>:	sub    rdi,rax
   0x7ffff7eb5671 <tdelete+545>:	and    rsi,0xfffffffffffffff0
   0x7ffff7eb5675 <tdelete+549>:	cmp    rsp,rdi
   0x7ffff7eb5678 <tdelete+552>:	je     0x7ffff7eb568f <tdelete+575>
   0x7ffff7eb567a <tdelete+554>:	sub    rsp,0x1000
   0x7ffff7eb5681 <tdelete+561>:	or     QWORD PTR [rsp+0xff8],0x0
   0x7ffff7eb568a <tdelete+570>:	cmp    rsp,rdi
   0x7ffff7eb568d <tdelete+573>:	jne    0x7ffff7eb567a <tdelete+554>
   0x7ffff7eb568f <tdelete+575>:	and    esi,0xfff
   0x7ffff7eb5695 <tdelete+581>:	sub    rsp,rsi
   0x7ffff7eb5698 <tdelete+584>:	test   rsi,rsi
   0x7ffff7eb569b <tdelete+587>:	je     0x7ffff7eb56a3 <tdelete+595>
   0x7ffff7eb569d <tdelete+589>:	or     QWORD PTR [rsp+rsi*1-0x8],0x0
   0x7ffff7eb56a3 <tdelete+595>:	mov    rsi,QWORD PTR [rbp-0x50]
   0x7ffff7eb56a7 <tdelete+599>:	lea    rdi,[rsp+0xf]
   0x7ffff7eb56ac <tdelete+604>:	mov    QWORD PTR [rbp-0x68],rcx
   0x7ffff7eb56b0 <tdelete+608>:	add    r15d,0x1
   0x7ffff7eb56b4 <tdelete+612>:	and    rdi,0xfffffffffffffff0
   0x7ffff7eb56b8 <tdelete+616>:	mov    QWORD PTR [rbp-0x60],r8
   0x7ffff7eb56bc <tdelete+620>:	mov    QWORD PTR [rbp-0x58],rdx
   0x7ffff7eb56c0 <tdelete+624>:	call   0x7ffff7dbd620 <*ABS*+0xa9c90@plt>
   0x7ffff7eb56c5 <tdelete+629>:	mov    rdi,QWORD PTR [r14]
   0x7ffff7eb56c8 <tdelete+632>:	mov    rdx,QWORD PTR [rbp-0x58]
   0x7ffff7eb56cc <tdelete+636>:	mov    rcx,QWORD PTR [rbp-0x68]
   0x7ffff7eb56d0 <tdelete+640>:	mov    r8,QWORD PTR [rbp-0x60]
   0x7ffff7eb56d4 <tdelete+644>:	mov    QWORD PTR [rbp-0x50],rax
   0x7ffff7eb56d8 <tdelete+648>:	and    rdi,0xfffffffffffffffe
   0x7ffff7eb56dc <tdelete+652>:	mov    QWORD PTR [rax+rdx*1],rcx
   0x7ffff7eb56e0 <tdelete+656>:	add    rdx,0x8
   0x7ffff7eb56e4 <tdelete+660>:	test   QWORD PTR [rdi+0x8],0xfffffffffffffffe
   0x7ffff7eb56ec <tdelete+668>:	jne    0x7ffff7eb5645 <tdelete+501>
   0x7ffff7eb56f2 <tdelete+674>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb56f8 <tdelete+680>:	mov    rax,QWORD PTR [rdi+0x10]
   0x7ffff7eb56fc <tdelete+684>:	mov    rcx,rax
   0x7ffff7eb56ff <tdelete+687>:	test   r15d,r15d
   0x7ffff7eb5702 <tdelete+690>:	jne    0x7ffff7eb59f0 <tdelete+1440>
   0x7ffff7eb5708 <tdelete+696>:	and    r8d,0x1
   0x7ffff7eb570c <tdelete+700>:	or     r8,rax
   0x7ffff7eb570f <tdelete+703>:	mov    QWORD PTR [rbx],r8
   0x7ffff7eb5712 <tdelete+706>:	cmp    r13,rdi
   0x7ffff7eb5715 <tdelete+709>:	je     0x7ffff7eb571e <tdelete+718>
   0x7ffff7eb5717 <tdelete+711>:	mov    rdx,QWORD PTR [rdi]
   0x7ffff7eb571a <tdelete+714>:	mov    QWORD PTR [r13+0x0],rdx
   0x7ffff7eb571e <tdelete+718>:	test   BYTE PTR [rdi+0x8],0x1
   0x7ffff7eb5722 <tdelete+722>:	jne    0x7ffff7eb583d <tdelete+1005>
   0x7ffff7eb5728 <tdelete+728>:	test   r15d,r15d
   0x7ffff7eb572b <tdelete+731>:	je     0x7ffff7eb5a90 <tdelete+1600>
   0x7ffff7eb5731 <tdelete+737>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb5738 <tdelete+744>:	test   rcx,rcx
   0x7ffff7eb573b <tdelete+747>:	je     0x7ffff7eb5749 <tdelete+761>
   0x7ffff7eb573d <tdelete+749>:	mov    rax,QWORD PTR [rcx+0x8]
   0x7ffff7eb5741 <tdelete+753>:	test   al,0x1
   0x7ffff7eb5743 <tdelete+755>:	jne    0x7ffff7eb5a37 <tdelete+1511>
   0x7ffff7eb5749 <tdelete+761>:	mov    rax,QWORD PTR [rbp-0x50]
   0x7ffff7eb574d <tdelete+765>:	movsxd r11,r15d
   0x7ffff7eb5750 <tdelete+768>:	mov    r8,QWORD PTR [rax+r11*8-0x8]
   0x7ffff7eb5755 <tdelete+773>:	mov    rsi,QWORD PTR [r8]
   0x7ffff7eb5758 <tdelete+776>:	mov    rdx,rsi
   0x7ffff7eb575b <tdelete+779>:	and    rdx,0xfffffffffffffffe
   0x7ffff7eb575f <tdelete+783>:	mov    r9,QWORD PTR [rdx+0x8]
   0x7ffff7eb5763 <tdelete+787>:	mov    rax,r9
   0x7ffff7eb5766 <tdelete+790>:	and    rax,0xfffffffffffffffe
   0x7ffff7eb576a <tdelete+794>:	cmp    rax,rcx
   0x7ffff7eb576d <tdelete+797>:	je     0x7ffff7eb58c0 <tdelete+1136>
   0x7ffff7eb5773 <tdelete+803>:	mov    rcx,QWORD PTR [rax+0x8]
   0x7ffff7eb5777 <tdelete+807>:	test   cl,0x1
   0x7ffff7eb577a <tdelete+810>:	je     0x7ffff7eb57bb <tdelete+875>
   0x7ffff7eb577c <tdelete+812>:	mov    rbx,QWORD PTR [rax+0x10]
   0x7ffff7eb5780 <tdelete+816>:	and    esi,0x1
   0x7ffff7eb5783 <tdelete+819>:	and    rcx,0xfffffffffffffffe
   0x7ffff7eb5787 <tdelete+823>:	add    r15d,0x1
   0x7ffff7eb578b <tdelete+827>:	or     rsi,rax
   0x7ffff7eb578e <tdelete+830>:	mov    QWORD PTR [rax+0x8],rcx
   0x7ffff7eb5792 <tdelete+834>:	mov    r9,rbx
   0x7ffff7eb5795 <tdelete+837>:	or     r9,0x1
   0x7ffff7eb5799 <tdelete+841>:	mov    QWORD PTR [rdx+0x8],r9
   0x7ffff7eb579d <tdelete+845>:	mov    QWORD PTR [rax+0x10],rdx
   0x7ffff7eb57a1 <tdelete+849>:	mov    QWORD PTR [r8],rsi
   0x7ffff7eb57a4 <tdelete+852>:	lea    r8,[rax+0x10]
   0x7ffff7eb57a8 <tdelete+856>:	mov    rax,QWORD PTR [rbp-0x50]
   0x7ffff7eb57ac <tdelete+860>:	mov    QWORD PTR [rax+r11*8],r8
   0x7ffff7eb57b0 <tdelete+864>:	mov    rax,rbx
   0x7ffff7eb57b3 <tdelete+867>:	and    rax,0xfffffffffffffffe
   0x7ffff7eb57b7 <tdelete+871>:	mov    rcx,QWORD PTR [rax+0x8]
   0x7ffff7eb57bb <tdelete+875>:	mov    rsi,QWORD PTR [rax+0x10]
   0x7ffff7eb57bf <tdelete+879>:	mov    rbx,rcx
   0x7ffff7eb57c2 <tdelete+882>:	test   rsi,rsi
   0x7ffff7eb57c5 <tdelete+885>:	je     0x7ffff7eb5850 <tdelete+1024>
   0x7ffff7eb57cb <tdelete+891>:	mov    r11,QWORD PTR [rsi+0x8]
   0x7ffff7eb57cf <tdelete+895>:	test   r11b,0x1
   0x7ffff7eb57d3 <tdelete+899>:	je     0x7ffff7eb5850 <tdelete+1024>
   0x7ffff7eb57d5 <tdelete+901>:	and    rbx,0xfffffffffffffffe
   0x7ffff7eb57d9 <tdelete+905>:	jne    0x7ffff7eb5a1c <tdelete+1484>
   0x7ffff7eb57df <tdelete+911>:	mov    rcx,r11
   0x7ffff7eb57e2 <tdelete+914>:	and    r11,0xfffffffffffffffe
   0x7ffff7eb57e6 <tdelete+918>:	movq   xmm1,rdx
   0x7ffff7eb57eb <tdelete+923>:	or     rcx,0x1
   0x7ffff7eb57ef <tdelete+927>:	and    r9d,0x1
   0x7ffff7eb57f3 <tdelete+931>:	cmovne r11,rcx
   0x7ffff7eb57f7 <tdelete+935>:	mov    QWORD PTR [rsi+0x8],r11
   0x7ffff7eb57fb <tdelete+939>:	mov    rcx,QWORD PTR [rdx+0x8]
   0x7ffff7eb57ff <tdelete+943>:	and    ecx,0x1
   0x7ffff7eb5802 <tdelete+946>:	or     rcx,QWORD PTR [rsi+0x10]
   0x7ffff7eb5806 <tdelete+950>:	mov    QWORD PTR [rdx+0x8],rcx
   0x7ffff7eb580a <tdelete+954>:	mov    rcx,QWORD PTR [rsi+0x8]
   0x7ffff7eb580e <tdelete+958>:	mov    r9,rcx
   0x7ffff7eb5811 <tdelete+961>:	and    ecx,0x1
   0x7ffff7eb5814 <tdelete+964>:	or     rcx,rax
   0x7ffff7eb5817 <tdelete+967>:	and    r9,0xfffffffffffffffe
   0x7ffff7eb581b <tdelete+971>:	movq   xmm0,rcx
   0x7ffff7eb5820 <tdelete+976>:	mov    QWORD PTR [rax+0x10],r9
   0x7ffff7eb5824 <tdelete+980>:	punpcklqdq xmm0,xmm1
   0x7ffff7eb5828 <tdelete+984>:	movups XMMWORD PTR [rsi+0x8],xmm0
   0x7ffff7eb582c <tdelete+988>:	mov    rax,QWORD PTR [r8]
   0x7ffff7eb582f <tdelete+991>:	and    eax,0x1
   0x7ffff7eb5832 <tdelete+994>:	or     rax,rsi
   0x7ffff7eb5835 <tdelete+997>:	mov    QWORD PTR [r8],rax
   0x7ffff7eb5838 <tdelete+1000>:	and    QWORD PTR [rdx+0x8],0xfffffffffffffffe
   0x7ffff7eb583d <tdelete+1005>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb5842 <tdelete+1010>:	jmp    0x7ffff7eb5528 <tdelete+216>
   0x7ffff7eb5847 <tdelete+1015>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5850 <tdelete+1024>:	and    rbx,0xfffffffffffffffe
   0x7ffff7eb5854 <tdelete+1028>:	je     0x7ffff7eb58a0 <tdelete+1104>
   0x7ffff7eb5856 <tdelete+1030>:	test   BYTE PTR [rbx+0x8],0x1
   0x7ffff7eb585a <tdelete+1034>:	je     0x7ffff7eb58a0 <tdelete+1104>
   0x7ffff7eb585c <tdelete+1036>:	or     rcx,0x1
   0x7ffff7eb5860 <tdelete+1040>:	and    r9d,0x1
   0x7ffff7eb5864 <tdelete+1044>:	cmovne rbx,rcx
   0x7ffff7eb5868 <tdelete+1048>:	mov    QWORD PTR [rax+0x8],rbx
   0x7ffff7eb586c <tdelete+1052>:	and    QWORD PTR [rdx+0x8],0xfffffffffffffffe
   0x7ffff7eb5871 <tdelete+1057>:	mov    rcx,QWORD PTR [rax+0x8]
   0x7ffff7eb5875 <tdelete+1061>:	and    rcx,0xfffffffffffffffe
   0x7ffff7eb5879 <tdelete+1065>:	and    QWORD PTR [rcx+0x8],0xfffffffffffffffe
   0x7ffff7eb587e <tdelete+1070>:	mov    rcx,QWORD PTR [rdx+0x8]
   0x7ffff7eb5882 <tdelete+1074>:	and    ecx,0x1
   0x7ffff7eb5885 <tdelete+1077>:	or     rcx,rsi
   0x7ffff7eb5888 <tdelete+1080>:	mov    QWORD PTR [rdx+0x8],rcx
   0x7ffff7eb588c <tdelete+1084>:	mov    QWORD PTR [rax+0x10],rdx
   0x7ffff7eb5890 <tdelete+1088>:	mov    rdx,QWORD PTR [r8]
   0x7ffff7eb5893 <tdelete+1091>:	and    edx,0x1
   0x7ffff7eb5896 <tdelete+1094>:	or     rax,rdx
   0x7ffff7eb5899 <tdelete+1097>:	mov    QWORD PTR [r8],rax
   0x7ffff7eb589c <tdelete+1100>:	jmp    0x7ffff7eb583d <tdelete+1005>
   0x7ffff7eb589e <tdelete+1102>:	xchg   ax,ax
   0x7ffff7eb58a0 <tdelete+1104>:	or     rcx,0x1
   0x7ffff7eb58a4 <tdelete+1108>:	mov    QWORD PTR [rax+0x8],rcx
   0x7ffff7eb58a8 <tdelete+1112>:	sub    r15d,0x1
   0x7ffff7eb58ac <tdelete+1116>:	je     0x7ffff7eb5a30 <tdelete+1504>
   0x7ffff7eb58b2 <tdelete+1122>:	mov    rcx,rdx
   0x7ffff7eb58b5 <tdelete+1125>:	jmp    0x7ffff7eb5738 <tdelete+744>
   0x7ffff7eb58ba <tdelete+1130>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb58c0 <tdelete+1136>:	mov    r9,QWORD PTR [rdx+0x10]
   0x7ffff7eb58c4 <tdelete+1140>:	mov    rax,QWORD PTR [r9+0x8]
   0x7ffff7eb58c8 <tdelete+1144>:	mov    rcx,r9
   0x7ffff7eb58cb <tdelete+1147>:	test   al,0x1
   0x7ffff7eb58cd <tdelete+1149>:	je     0x7ffff7eb5915 <tdelete+1221>
   0x7ffff7eb58cf <tdelete+1151>:	and    rax,0xfffffffffffffffe
   0x7ffff7eb58d3 <tdelete+1155>:	and    esi,0x1
   0x7ffff7eb58d6 <tdelete+1158>:	add    r15d,0x1
   0x7ffff7eb58da <tdelete+1162>:	mov    QWORD PTR [r9+0x8],rax
   0x7ffff7eb58de <tdelete+1166>:	or     rsi,r9
   0x7ffff7eb58e1 <tdelete+1169>:	or     QWORD PTR [rdx+0x8],0x1
   0x7ffff7eb58e6 <tdelete+1174>:	mov    rax,QWORD PTR [r9+0x8]
   0x7ffff7eb58ea <tdelete+1178>:	mov    rcx,rax
   0x7ffff7eb58ed <tdelete+1181>:	and    eax,0x1
   0x7ffff7eb58f0 <tdelete+1184>:	and    rcx,0xfffffffffffffffe
   0x7ffff7eb58f4 <tdelete+1188>:	or     rax,rdx
   0x7ffff7eb58f7 <tdelete+1191>:	mov    QWORD PTR [rdx+0x10],rcx
   0x7ffff7eb58fb <tdelete+1195>:	mov    QWORD PTR [r9+0x8],rax
   0x7ffff7eb58ff <tdelete+1199>:	mov    rax,QWORD PTR [rbp-0x50]
   0x7ffff7eb5903 <tdelete+1203>:	mov    QWORD PTR [r8],rsi
   0x7ffff7eb5906 <tdelete+1206>:	lea    r8,[r9+0x8]
   0x7ffff7eb590a <tdelete+1210>:	mov    r9,rcx
   0x7ffff7eb590d <tdelete+1213>:	mov    QWORD PTR [rax+r11*8],r8
   0x7ffff7eb5911 <tdelete+1217>:	mov    rax,QWORD PTR [rcx+0x8]
   0x7ffff7eb5915 <tdelete+1221>:	mov    rsi,rax
   0x7ffff7eb5918 <tdelete+1224>:	and    rsi,0xfffffffffffffffe
   0x7ffff7eb591c <tdelete+1228>:	je     0x7ffff7eb5980 <tdelete+1328>
   0x7ffff7eb591e <tdelete+1230>:	mov    r11,QWORD PTR [rsi+0x8]
   0x7ffff7eb5922 <tdelete+1234>:	test   r11b,0x1
   0x7ffff7eb5926 <tdelete+1238>:	je     0x7ffff7eb5980 <tdelete+1328>
   0x7ffff7eb5928 <tdelete+1240>:	mov    rbx,QWORD PTR [rcx+0x10]
   0x7ffff7eb592c <tdelete+1244>:	test   rbx,rbx
   0x7ffff7eb592f <tdelete+1247>:	jne    0x7ffff7eb5a64 <tdelete+1556>
   0x7ffff7eb5935 <tdelete+1253>:	mov    rax,r11
   0x7ffff7eb5938 <tdelete+1256>:	test   BYTE PTR [rdx+0x8],0x1
   0x7ffff7eb593c <tdelete+1260>:	je     0x7ffff7eb5a58 <tdelete+1544>
   0x7ffff7eb5942 <tdelete+1266>:	or     rax,0x1
   0x7ffff7eb5946 <tdelete+1270>:	and    r11,0xfffffffffffffffe
   0x7ffff7eb594a <tdelete+1274>:	mov    QWORD PTR [rsi+0x8],rax
   0x7ffff7eb594e <tdelete+1278>:	mov    rax,QWORD PTR [rcx+0x8]
   0x7ffff7eb5952 <tdelete+1282>:	mov    QWORD PTR [rdx+0x10],r11
   0x7ffff7eb5956 <tdelete+1286>:	and    eax,0x1
   0x7ffff7eb5959 <tdelete+1289>:	or     rax,QWORD PTR [rsi+0x10]
   0x7ffff7eb595d <tdelete+1293>:	mov    QWORD PTR [rcx+0x8],rax
   0x7ffff7eb5961 <tdelete+1297>:	mov    rax,QWORD PTR [rsi+0x8]
   0x7ffff7eb5965 <tdelete+1301>:	mov    QWORD PTR [rsi+0x10],r9
   0x7ffff7eb5969 <tdelete+1305>:	and    eax,0x1
   0x7ffff7eb596c <tdelete+1308>:	or     rax,rdx
   0x7ffff7eb596f <tdelete+1311>:	mov    QWORD PTR [rsi+0x8],rax
   0x7ffff7eb5973 <tdelete+1315>:	jmp    0x7ffff7eb582c <tdelete+988>
   0x7ffff7eb5978 <tdelete+1320>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5980 <tdelete+1328>:	mov    r9,QWORD PTR [rcx+0x10]
   0x7ffff7eb5984 <tdelete+1332>:	test   r9,r9
   0x7ffff7eb5987 <tdelete+1335>:	je     0x7ffff7eb59e0 <tdelete+1424>
   0x7ffff7eb5989 <tdelete+1337>:	mov    rbx,r9
   0x7ffff7eb598c <tdelete+1340>:	test   BYTE PTR [r9+0x8],0x1
   0x7ffff7eb5991 <tdelete+1345>:	je     0x7ffff7eb59e0 <tdelete+1424>
   0x7ffff7eb5993 <tdelete+1347>:	or     rax,0x1
   0x7ffff7eb5997 <tdelete+1351>:	test   BYTE PTR [rdx+0x8],0x1
   0x7ffff7eb599b <tdelete+1355>:	cmovne rsi,rax
   0x7ffff7eb599f <tdelete+1359>:	mov    QWORD PTR [rcx+0x8],rsi
   0x7ffff7eb59a3 <tdelete+1363>:	and    QWORD PTR [rdx+0x8],0xfffffffffffffffe
   0x7ffff7eb59a8 <tdelete+1368>:	and    QWORD PTR [rbx+0x8],0xfffffffffffffffe
   0x7ffff7eb59ad <tdelete+1373>:	mov    rax,QWORD PTR [rcx+0x8]
   0x7ffff7eb59b1 <tdelete+1377>:	mov    rsi,rax
   0x7ffff7eb59b4 <tdelete+1380>:	and    eax,0x1
   0x7ffff7eb59b7 <tdelete+1383>:	or     rax,rdx
   0x7ffff7eb59ba <tdelete+1386>:	and    rsi,0xfffffffffffffffe
   0x7ffff7eb59be <tdelete+1390>:	mov    QWORD PTR [rdx+0x10],rsi
   0x7ffff7eb59c2 <tdelete+1394>:	mov    QWORD PTR [rcx+0x8],rax
   0x7ffff7eb59c6 <tdelete+1398>:	mov    rax,QWORD PTR [r8]
   0x7ffff7eb59c9 <tdelete+1401>:	and    eax,0x1
   0x7ffff7eb59cc <tdelete+1404>:	or     rcx,rax
   0x7ffff7eb59cf <tdelete+1407>:	mov    QWORD PTR [r8],rcx
   0x7ffff7eb59d2 <tdelete+1410>:	jmp    0x7ffff7eb583d <tdelete+1005>
   0x7ffff7eb59d7 <tdelete+1415>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb59e0 <tdelete+1424>:	or     rax,0x1
   0x7ffff7eb59e4 <tdelete+1428>:	mov    QWORD PTR [rcx+0x8],rax
   0x7ffff7eb59e8 <tdelete+1432>:	jmp    0x7ffff7eb58a8 <tdelete+1112>
   0x7ffff7eb59ed <tdelete+1437>:	nop    DWORD PTR [rax]
   0x7ffff7eb59f0 <tdelete+1440>:	mov    rbx,QWORD PTR [rbp-0x50]
   0x7ffff7eb59f4 <tdelete+1444>:	movsxd rdx,r15d
   0x7ffff7eb59f7 <tdelete+1447>:	mov    rdx,QWORD PTR [rbx+rdx*8-0x8]
   0x7ffff7eb59fc <tdelete+1452>:	mov    rdx,QWORD PTR [rdx]
   0x7ffff7eb59ff <tdelete+1455>:	and    rdx,0xfffffffffffffffe
   0x7ffff7eb5a03 <tdelete+1459>:	cmp    rdi,QWORD PTR [rdx+0x10]
   0x7ffff7eb5a07 <tdelete+1463>:	je     0x7ffff7eb5a78 <tdelete+1576>
   0x7ffff7eb5a09 <tdelete+1465>:	mov    rsi,QWORD PTR [rdx+0x8]
   0x7ffff7eb5a0d <tdelete+1469>:	and    esi,0x1
   0x7ffff7eb5a10 <tdelete+1472>:	or     rsi,rax
   0x7ffff7eb5a13 <tdelete+1475>:	mov    QWORD PTR [rdx+0x8],rsi
   0x7ffff7eb5a17 <tdelete+1479>:	jmp    0x7ffff7eb5712 <tdelete+706>
   0x7ffff7eb5a1c <tdelete+1484>:	test   BYTE PTR [rbx+0x8],0x1
   0x7ffff7eb5a20 <tdelete+1488>:	je     0x7ffff7eb57df <tdelete+911>
   0x7ffff7eb5a26 <tdelete+1494>:	jmp    0x7ffff7eb585c <tdelete+1036>
   0x7ffff7eb5a2b <tdelete+1499>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5a30 <tdelete+1504>:	mov    rax,QWORD PTR [rdx+0x8]
   0x7ffff7eb5a34 <tdelete+1508>:	mov    rcx,rdx
   0x7ffff7eb5a37 <tdelete+1511>:	and    rax,0xfffffffffffffffe
   0x7ffff7eb5a3b <tdelete+1515>:	mov    QWORD PTR [rcx+0x8],rax
   0x7ffff7eb5a3f <tdelete+1519>:	jmp    0x7ffff7eb583d <tdelete+1005>
   0x7ffff7eb5a44 <tdelete+1524>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb5a48 <tdelete+1528>:	test   rax,rax
   0x7ffff7eb5a4b <tdelete+1531>:	je     0x7ffff7eb5a81 <tdelete+1585>
   0x7ffff7eb5a4d <tdelete+1533>:	mov    rdi,r13
   0x7ffff7eb5a50 <tdelete+1536>:	jmp    0x7ffff7eb56fc <tdelete+684>
   0x7ffff7eb5a55 <tdelete+1541>:	nop    DWORD PTR [rax]
   0x7ffff7eb5a58 <tdelete+1544>:	and    rax,0xfffffffffffffffe
   0x7ffff7eb5a5c <tdelete+1548>:	mov    r11,rax
   0x7ffff7eb5a5f <tdelete+1551>:	jmp    0x7ffff7eb594a <tdelete+1274>
   0x7ffff7eb5a64 <tdelete+1556>:	test   BYTE PTR [rbx+0x8],0x1
   0x7ffff7eb5a68 <tdelete+1560>:	je     0x7ffff7eb5935 <tdelete+1253>
   0x7ffff7eb5a6e <tdelete+1566>:	jmp    0x7ffff7eb5993 <tdelete+1347>
   0x7ffff7eb5a73 <tdelete+1571>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5a78 <tdelete+1576>:	mov    QWORD PTR [rdx+0x10],rax
   0x7ffff7eb5a7c <tdelete+1580>:	jmp    0x7ffff7eb5712 <tdelete+706>
   0x7ffff7eb5a81 <tdelete+1585>:	mov    rdi,r13
   0x7ffff7eb5a84 <tdelete+1588>:	jmp    0x7ffff7eb56f8 <tdelete+680>
   0x7ffff7eb5a89 <tdelete+1593>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb5a90 <tdelete+1600>:	test   rax,rax
   0x7ffff7eb5a93 <tdelete+1603>:	je     0x7ffff7eb583d <tdelete+1005>
   0x7ffff7eb5a99 <tdelete+1609>:	mov    rax,QWORD PTR [rax+0x8]
   0x7ffff7eb5a9d <tdelete+1613>:	jmp    0x7ffff7eb5a37 <tdelete+1511>
   0x7ffff7eb5a9f <tdelete+1615>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb5aa4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5aaf:	nop
   0x7ffff7eb5ab0 <twalk>:	endbr64
   0x7ffff7eb5ab4 <twalk+4>:	test   rdi,rdi
   0x7ffff7eb5ab7 <twalk+7>:	je     0x7ffff7eb5b30 <twalk+128>
   0x7ffff7eb5ab9 <twalk+9>:	push   r12
   0x7ffff7eb5abb <twalk+11>:	mov    r12,rsi
   0x7ffff7eb5abe <twalk+14>:	push   rbp
   0x7ffff7eb5abf <twalk+15>:	sub    rsp,0x8
   0x7ffff7eb5ac3 <twalk+19>:	test   rsi,rsi
   0x7ffff7eb5ac6 <twalk+22>:	jne    0x7ffff7eb5ad0 <twalk+32>
   0x7ffff7eb5ac8 <twalk+24>:	add    rsp,0x8
   0x7ffff7eb5acc <twalk+28>:	pop    rbp
   0x7ffff7eb5acd <twalk+29>:	pop    r12
   0x7ffff7eb5acf <twalk+31>:	ret
   0x7ffff7eb5ad0 <twalk+32>:	mov    rbp,rdi
   0x7ffff7eb5ad3 <twalk+35>:	xor    edx,edx
   0x7ffff7eb5ad5 <twalk+37>:	test   QWORD PTR [rdi+0x8],0xfffffffffffffffe
   0x7ffff7eb5add <twalk+45>:	jne    0x7ffff7eb5aeb <twalk+59>
   0x7ffff7eb5adf <twalk+47>:	cmp    QWORD PTR [rdi+0x10],0x0
   0x7ffff7eb5ae4 <twalk+52>:	mov    esi,0x3
   0x7ffff7eb5ae9 <twalk+57>:	je     0x7ffff7eb5b1a <twalk+106>
   0x7ffff7eb5aeb <twalk+59>:	mov    rdi,rbp
   0x7ffff7eb5aee <twalk+62>:	xor    esi,esi
   0x7ffff7eb5af0 <twalk+64>:	call   r12
   0x7ffff7eb5af3 <twalk+67>:	mov    rdi,QWORD PTR [rbp+0x8]
   0x7ffff7eb5af7 <twalk+71>:	and    rdi,0xfffffffffffffffe
   0x7ffff7eb5afb <twalk+75>:	jne    0x7ffff7eb5b50 <twalk+160>
   0x7ffff7eb5afd <twalk+77>:	mov    rdi,rbp
   0x7ffff7eb5b00 <twalk+80>:	xor    edx,edx
   0x7ffff7eb5b02 <twalk+82>:	mov    esi,0x1
   0x7ffff7eb5b07 <twalk+87>:	call   r12
   0x7ffff7eb5b0a <twalk+90>:	mov    rdi,QWORD PTR [rbp+0x10]
   0x7ffff7eb5b0e <twalk+94>:	test   rdi,rdi
   0x7ffff7eb5b11 <twalk+97>:	jne    0x7ffff7eb5b38 <twalk+136>
   0x7ffff7eb5b13 <twalk+99>:	xor    edx,edx
   0x7ffff7eb5b15 <twalk+101>:	mov    esi,0x2
   0x7ffff7eb5b1a <twalk+106>:	add    rsp,0x8
   0x7ffff7eb5b1e <twalk+110>:	mov    rdi,rbp
   0x7ffff7eb5b21 <twalk+113>:	mov    rax,r12
   0x7ffff7eb5b24 <twalk+116>:	pop    rbp
   0x7ffff7eb5b25 <twalk+117>:	pop    r12
   0x7ffff7eb5b27 <twalk+119>:	jmp    rax
   0x7ffff7eb5b29 <twalk+121>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb5b30 <twalk+128>:	ret
   0x7ffff7eb5b31 <twalk+129>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb5b38 <twalk+136>:	mov    edx,0x1
   0x7ffff7eb5b3d <twalk+141>:	mov    rsi,r12
   0x7ffff7eb5b40 <twalk+144>:	call   0x7ffff7eb4cd0
   0x7ffff7eb5b45 <twalk+149>:	jmp    0x7ffff7eb5b13 <twalk+99>
   0x7ffff7eb5b47 <twalk+151>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5b50 <twalk+160>:	mov    edx,0x1
   0x7ffff7eb5b55 <twalk+165>:	mov    rsi,r12
   0x7ffff7eb5b58 <twalk+168>:	call   0x7ffff7eb4cd0
   0x7ffff7eb5b5d <twalk+173>:	jmp    0x7ffff7eb5afd <twalk+77>
   0x7ffff7eb5b5f:	nop
   0x7ffff7eb5b60 <twalk_r>:	endbr64
   0x7ffff7eb5b64 <twalk_r+4>:	test   rdi,rdi
   0x7ffff7eb5b67 <twalk_r+7>:	je     0x7ffff7eb5be0 <twalk_r+128>
   0x7ffff7eb5b69 <twalk_r+9>:	push   r13
   0x7ffff7eb5b6b <twalk_r+11>:	push   r12
   0x7ffff7eb5b6d <twalk_r+13>:	mov    r12,rsi
   0x7ffff7eb5b70 <twalk_r+16>:	push   rbp
   0x7ffff7eb5b71 <twalk_r+17>:	test   rsi,rsi
   0x7ffff7eb5b74 <twalk_r+20>:	jne    0x7ffff7eb5b80 <twalk_r+32>
   0x7ffff7eb5b76 <twalk_r+22>:	pop    rbp
   0x7ffff7eb5b77 <twalk_r+23>:	pop    r12
   0x7ffff7eb5b79 <twalk_r+25>:	pop    r13
   0x7ffff7eb5b7b <twalk_r+27>:	ret
   0x7ffff7eb5b7c <twalk_r+28>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb5b80 <twalk_r+32>:	mov    rbp,rdi
   0x7ffff7eb5b83 <twalk_r+35>:	mov    r13,rdx
   0x7ffff7eb5b86 <twalk_r+38>:	test   QWORD PTR [rdi+0x8],0xfffffffffffffffe
   0x7ffff7eb5b8e <twalk_r+46>:	jne    0x7ffff7eb5b9c <twalk_r+60>
   0x7ffff7eb5b90 <twalk_r+48>:	cmp    QWORD PTR [rdi+0x10],0x0
   0x7ffff7eb5b95 <twalk_r+53>:	mov    esi,0x3
   0x7ffff7eb5b9a <twalk_r+58>:	je     0x7ffff7eb5bcd <twalk_r+109>
   0x7ffff7eb5b9c <twalk_r+60>:	mov    rdi,rbp
   0x7ffff7eb5b9f <twalk_r+63>:	xor    esi,esi
   0x7ffff7eb5ba1 <twalk_r+65>:	call   r12
   0x7ffff7eb5ba4 <twalk_r+68>:	mov    rdi,QWORD PTR [rbp+0x8]
   0x7ffff7eb5ba8 <twalk_r+72>:	and    rdi,0xfffffffffffffffe
   0x7ffff7eb5bac <twalk_r+76>:	jne    0x7ffff7eb5bf8 <twalk_r+152>
   0x7ffff7eb5bae <twalk_r+78>:	mov    rdi,rbp
   0x7ffff7eb5bb1 <twalk_r+81>:	mov    rdx,r13
   0x7ffff7eb5bb4 <twalk_r+84>:	mov    esi,0x1
   0x7ffff7eb5bb9 <twalk_r+89>:	call   r12
   0x7ffff7eb5bbc <twalk_r+92>:	mov    rdi,QWORD PTR [rbp+0x10]
   0x7ffff7eb5bc0 <twalk_r+96>:	test   rdi,rdi
   0x7ffff7eb5bc3 <twalk_r+99>:	jne    0x7ffff7eb5be8 <twalk_r+136>
   0x7ffff7eb5bc5 <twalk_r+101>:	mov    rdx,r13
   0x7ffff7eb5bc8 <twalk_r+104>:	mov    esi,0x2
   0x7ffff7eb5bcd <twalk_r+109>:	mov    rdi,rbp
   0x7ffff7eb5bd0 <twalk_r+112>:	mov    rax,r12
   0x7ffff7eb5bd3 <twalk_r+115>:	pop    rbp
   0x7ffff7eb5bd4 <twalk_r+116>:	pop    r12
   0x7ffff7eb5bd6 <twalk_r+118>:	pop    r13
   0x7ffff7eb5bd8 <twalk_r+120>:	jmp    rax
   0x7ffff7eb5bda <twalk_r+122>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5be0 <twalk_r+128>:	ret
   0x7ffff7eb5be1 <twalk_r+129>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb5be8 <twalk_r+136>:	mov    rdx,r13
   0x7ffff7eb5beb <twalk_r+139>:	mov    rsi,r12
   0x7ffff7eb5bee <twalk_r+142>:	call   0x7ffff7eb4d60
   0x7ffff7eb5bf3 <twalk_r+147>:	jmp    0x7ffff7eb5bc5 <twalk_r+101>
   0x7ffff7eb5bf5 <twalk_r+149>:	nop    DWORD PTR [rax]
   0x7ffff7eb5bf8 <twalk_r+152>:	mov    rdx,r13
   0x7ffff7eb5bfb <twalk_r+155>:	mov    rsi,r12
   0x7ffff7eb5bfe <twalk_r+158>:	call   0x7ffff7eb4d60
   0x7ffff7eb5c03 <twalk_r+163>:	jmp    0x7ffff7eb5bae <twalk_r+78>
   0x7ffff7eb5c05:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5c10 <tdestroy>:	endbr64
   0x7ffff7eb5c14 <tdestroy+4>:	test   rdi,rdi
   0x7ffff7eb5c17 <tdestroy+7>:	je     0x7ffff7eb5c58 <tdestroy+72>
   0x7ffff7eb5c19 <tdestroy+9>:	push   r13
   0x7ffff7eb5c1b <tdestroy+11>:	push   r12
   0x7ffff7eb5c1d <tdestroy+13>:	push   rbp
   0x7ffff7eb5c1e <tdestroy+14>:	mov    rbp,rdi
   0x7ffff7eb5c21 <tdestroy+17>:	push   rbx
   0x7ffff7eb5c22 <tdestroy+18>:	mov    rbx,rsi
   0x7ffff7eb5c25 <tdestroy+21>:	sub    rsp,0x8
   0x7ffff7eb5c29 <tdestroy+25>:	mov    r12,QWORD PTR [rdi+0x8]
   0x7ffff7eb5c2d <tdestroy+29>:	and    r12,0xfffffffffffffffe
   0x7ffff7eb5c31 <tdestroy+33>:	jne    0x7ffff7eb5c88 <tdestroy+120>
   0x7ffff7eb5c33 <tdestroy+35>:	mov    r12,QWORD PTR [rbp+0x10]
   0x7ffff7eb5c37 <tdestroy+39>:	test   r12,r12
   0x7ffff7eb5c3a <tdestroy+42>:	jne    0x7ffff7eb5c60 <tdestroy+80>
   0x7ffff7eb5c3c <tdestroy+44>:	mov    rdi,QWORD PTR [rbp+0x0]
   0x7ffff7eb5c40 <tdestroy+48>:	call   rbx
   0x7ffff7eb5c42 <tdestroy+50>:	add    rsp,0x8
   0x7ffff7eb5c46 <tdestroy+54>:	mov    rdi,rbp
   0x7ffff7eb5c49 <tdestroy+57>:	pop    rbx
   0x7ffff7eb5c4a <tdestroy+58>:	pop    rbp
   0x7ffff7eb5c4b <tdestroy+59>:	pop    r12
   0x7ffff7eb5c4d <tdestroy+61>:	pop    r13
   0x7ffff7eb5c4f <tdestroy+63>:	jmp    0x7ffff7dbd370 <free@plt>
   0x7ffff7eb5c54 <tdestroy+68>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb5c58 <tdestroy+72>:	ret
   0x7ffff7eb5c59 <tdestroy+73>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb5c60 <tdestroy+80>:	mov    r13,QWORD PTR [r12+0x8]
   0x7ffff7eb5c65 <tdestroy+85>:	and    r13,0xfffffffffffffffe
   0x7ffff7eb5c69 <tdestroy+89>:	jne    0x7ffff7eb5cd0 <tdestroy+192>
   0x7ffff7eb5c6b <tdestroy+91>:	mov    rdi,QWORD PTR [r12+0x10]
   0x7ffff7eb5c70 <tdestroy+96>:	test   rdi,rdi
   0x7ffff7eb5c73 <tdestroy+99>:	jne    0x7ffff7eb5cc0 <tdestroy+176>
   0x7ffff7eb5c75 <tdestroy+101>:	mov    rdi,QWORD PTR [r12]
   0x7ffff7eb5c79 <tdestroy+105>:	call   rbx
   0x7ffff7eb5c7b <tdestroy+107>:	mov    rdi,r12
   0x7ffff7eb5c7e <tdestroy+110>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb5c83 <tdestroy+115>:	jmp    0x7ffff7eb5c3c <tdestroy+44>
   0x7ffff7eb5c85 <tdestroy+117>:	nop    DWORD PTR [rax]
   0x7ffff7eb5c88 <tdestroy+120>:	mov    r13,QWORD PTR [r12+0x8]
   0x7ffff7eb5c8d <tdestroy+125>:	and    r13,0xfffffffffffffffe
   0x7ffff7eb5c91 <tdestroy+129>:	jne    0x7ffff7eb5d30 <tdestroy+288>
   0x7ffff7eb5c97 <tdestroy+135>:	mov    r13,QWORD PTR [r12+0x10]
   0x7ffff7eb5c9c <tdestroy+140>:	test   r13,r13
   0x7ffff7eb5c9f <tdestroy+143>:	jne    0x7ffff7eb5d00 <tdestroy+240>
   0x7ffff7eb5ca1 <tdestroy+145>:	mov    rdi,QWORD PTR [r12]
   0x7ffff7eb5ca5 <tdestroy+149>:	call   rbx
   0x7ffff7eb5ca7 <tdestroy+151>:	mov    rdi,r12
   0x7ffff7eb5caa <tdestroy+154>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb5caf <tdestroy+159>:	mov    r12,QWORD PTR [rbp+0x10]
   0x7ffff7eb5cb3 <tdestroy+163>:	test   r12,r12
   0x7ffff7eb5cb6 <tdestroy+166>:	je     0x7ffff7eb5c3c <tdestroy+44>
   0x7ffff7eb5cb8 <tdestroy+168>:	jmp    0x7ffff7eb5c60 <tdestroy+80>
   0x7ffff7eb5cba <tdestroy+170>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5cc0 <tdestroy+176>:	mov    rsi,rbx
   0x7ffff7eb5cc3 <tdestroy+179>:	call   0x7ffff7eb4df0
   0x7ffff7eb5cc8 <tdestroy+184>:	jmp    0x7ffff7eb5c75 <tdestroy+101>
   0x7ffff7eb5cca <tdestroy+186>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5cd0 <tdestroy+192>:	mov    rdi,QWORD PTR [r13+0x8]
   0x7ffff7eb5cd4 <tdestroy+196>:	and    rdi,0xfffffffffffffffe
   0x7ffff7eb5cd8 <tdestroy+200>:	jne    0x7ffff7eb5db0 <tdestroy+416>
   0x7ffff7eb5cde <tdestroy+206>:	mov    rdi,QWORD PTR [r13+0x10]
   0x7ffff7eb5ce2 <tdestroy+210>:	test   rdi,rdi
   0x7ffff7eb5ce5 <tdestroy+213>:	jne    0x7ffff7eb5da0 <tdestroy+400>
   0x7ffff7eb5ceb <tdestroy+219>:	mov    rdi,QWORD PTR [r13+0x0]
   0x7ffff7eb5cef <tdestroy+223>:	call   rbx
   0x7ffff7eb5cf1 <tdestroy+225>:	mov    rdi,r13
   0x7ffff7eb5cf4 <tdestroy+228>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb5cf9 <tdestroy+233>:	jmp    0x7ffff7eb5c6b <tdestroy+91>
   0x7ffff7eb5cfe <tdestroy+238>:	xchg   ax,ax
   0x7ffff7eb5d00 <tdestroy+240>:	mov    rdi,QWORD PTR [r13+0x8]
   0x7ffff7eb5d04 <tdestroy+244>:	and    rdi,0xfffffffffffffffe
   0x7ffff7eb5d08 <tdestroy+248>:	jne    0x7ffff7eb5d90 <tdestroy+384>
   0x7ffff7eb5d0e <tdestroy+254>:	mov    rdi,QWORD PTR [r13+0x10]
   0x7ffff7eb5d12 <tdestroy+258>:	test   rdi,rdi
   0x7ffff7eb5d15 <tdestroy+261>:	jne    0x7ffff7eb5d80 <tdestroy+368>
   0x7ffff7eb5d17 <tdestroy+263>:	mov    rdi,QWORD PTR [r13+0x0]
   0x7ffff7eb5d1b <tdestroy+267>:	call   rbx
   0x7ffff7eb5d1d <tdestroy+269>:	mov    rdi,r13
   0x7ffff7eb5d20 <tdestroy+272>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb5d25 <tdestroy+277>:	jmp    0x7ffff7eb5ca1 <tdestroy+145>
   0x7ffff7eb5d2a <tdestroy+282>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5d30 <tdestroy+288>:	mov    rdi,QWORD PTR [r13+0x8]
   0x7ffff7eb5d34 <tdestroy+292>:	and    rdi,0xfffffffffffffffe
   0x7ffff7eb5d38 <tdestroy+296>:	jne    0x7ffff7eb5d70 <tdestroy+352>
   0x7ffff7eb5d3a <tdestroy+298>:	mov    rdi,QWORD PTR [r13+0x10]
   0x7ffff7eb5d3e <tdestroy+302>:	test   rdi,rdi
   0x7ffff7eb5d41 <tdestroy+305>:	jne    0x7ffff7eb5d60 <tdestroy+336>
   0x7ffff7eb5d43 <tdestroy+307>:	mov    rdi,QWORD PTR [r13+0x0]
   0x7ffff7eb5d47 <tdestroy+311>:	call   rbx
   0x7ffff7eb5d49 <tdestroy+313>:	mov    rdi,r13
   0x7ffff7eb5d4c <tdestroy+316>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eb5d51 <tdestroy+321>:	jmp    0x7ffff7eb5c97 <tdestroy+135>
   0x7ffff7eb5d56 <tdestroy+326>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5d60 <tdestroy+336>:	mov    rsi,rbx
   0x7ffff7eb5d63 <tdestroy+339>:	call   0x7ffff7eb4df0
   0x7ffff7eb5d68 <tdestroy+344>:	jmp    0x7ffff7eb5d43 <tdestroy+307>
   0x7ffff7eb5d6a <tdestroy+346>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5d70 <tdestroy+352>:	call   0x7ffff7eb4df0
   0x7ffff7eb5d75 <tdestroy+357>:	jmp    0x7ffff7eb5d3a <tdestroy+298>
   0x7ffff7eb5d77 <tdestroy+359>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5d80 <tdestroy+368>:	mov    rsi,rbx
   0x7ffff7eb5d83 <tdestroy+371>:	call   0x7ffff7eb4df0
   0x7ffff7eb5d88 <tdestroy+376>:	jmp    0x7ffff7eb5d17 <tdestroy+263>
   0x7ffff7eb5d8a <tdestroy+378>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5d90 <tdestroy+384>:	mov    rsi,rbx
   0x7ffff7eb5d93 <tdestroy+387>:	call   0x7ffff7eb4df0
   0x7ffff7eb5d98 <tdestroy+392>:	jmp    0x7ffff7eb5d0e <tdestroy+254>
   0x7ffff7eb5d9d <tdestroy+397>:	nop    DWORD PTR [rax]
   0x7ffff7eb5da0 <tdestroy+400>:	mov    rsi,rbx
   0x7ffff7eb5da3 <tdestroy+403>:	call   0x7ffff7eb4df0
   0x7ffff7eb5da8 <tdestroy+408>:	jmp    0x7ffff7eb5ceb <tdestroy+219>
   0x7ffff7eb5dad <tdestroy+413>:	nop    DWORD PTR [rax]
   0x7ffff7eb5db0 <tdestroy+416>:	mov    rsi,rbx
   0x7ffff7eb5db3 <tdestroy+419>:	call   0x7ffff7eb4df0
   0x7ffff7eb5db8 <tdestroy+424>:	jmp    0x7ffff7eb5cde <tdestroy+206>
   0x7ffff7eb5dbd:	nop    DWORD PTR [rax]
   0x7ffff7eb5dc0 <lsearch>:	endbr64
   0x7ffff7eb5dc4 <lsearch+4>:	push   r15
   0x7ffff7eb5dc6 <lsearch+6>:	mov    r15,rdi
   0x7ffff7eb5dc9 <lsearch+9>:	push   r14
   0x7ffff7eb5dcb <lsearch+11>:	mov    r14,r8
   0x7ffff7eb5dce <lsearch+14>:	push   r13
   0x7ffff7eb5dd0 <lsearch+16>:	mov    r13,rcx
   0x7ffff7eb5dd3 <lsearch+19>:	push   r12
   0x7ffff7eb5dd5 <lsearch+21>:	mov    r12,rsi
   0x7ffff7eb5dd8 <lsearch+24>:	push   rbp
   0x7ffff7eb5dd9 <lsearch+25>:	mov    rbp,rdx
   0x7ffff7eb5ddc <lsearch+28>:	push   rbx
   0x7ffff7eb5ddd <lsearch+29>:	xor    ebx,ebx
   0x7ffff7eb5ddf <lsearch+31>:	sub    rsp,0x18
   0x7ffff7eb5de3 <lsearch+35>:	mov    rax,QWORD PTR [rdx]
   0x7ffff7eb5de6 <lsearch+38>:	mov    QWORD PTR [rsp+0x8],rsi
   0x7ffff7eb5deb <lsearch+43>:	test   rax,rax
   0x7ffff7eb5dee <lsearch+46>:	jne    0x7ffff7eb5e08 <lsearch+72>
   0x7ffff7eb5df0 <lsearch+48>:	jmp    0x7ffff7eb5e28 <lsearch+104>
   0x7ffff7eb5df2 <lsearch+50>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5df8 <lsearch+56>:	mov    rax,QWORD PTR [rbp+0x0]
   0x7ffff7eb5dfc <lsearch+60>:	add    rbx,0x1
   0x7ffff7eb5e00 <lsearch+64>:	add    r12,r13
   0x7ffff7eb5e03 <lsearch+67>:	cmp    rbx,rax
   0x7ffff7eb5e06 <lsearch+70>:	jae    0x7ffff7eb5e28 <lsearch+104>
   0x7ffff7eb5e08 <lsearch+72>:	mov    rsi,r12
   0x7ffff7eb5e0b <lsearch+75>:	mov    rdi,r15
   0x7ffff7eb5e0e <lsearch+78>:	call   r14
   0x7ffff7eb5e11 <lsearch+81>:	test   eax,eax
   0x7ffff7eb5e13 <lsearch+83>:	jne    0x7ffff7eb5df8 <lsearch+56>
   0x7ffff7eb5e15 <lsearch+85>:	mov    rax,QWORD PTR [rbp+0x0]
   0x7ffff7eb5e19 <lsearch+89>:	cmp    rax,rbx
   0x7ffff7eb5e1c <lsearch+92>:	jbe    0x7ffff7eb5e28 <lsearch+104>
   0x7ffff7eb5e1e <lsearch+94>:	test   r12,r12
   0x7ffff7eb5e21 <lsearch+97>:	jne    0x7ffff7eb5e47 <lsearch+135>
   0x7ffff7eb5e23 <lsearch+99>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5e28 <lsearch+104>:	imul   rax,r13
   0x7ffff7eb5e2c <lsearch+108>:	mov    rdi,QWORD PTR [rsp+0x8]
   0x7ffff7eb5e31 <lsearch+113>:	mov    rdx,r13
   0x7ffff7eb5e34 <lsearch+116>:	mov    rsi,r15
   0x7ffff7eb5e37 <lsearch+119>:	add    rdi,rax
   0x7ffff7eb5e3a <lsearch+122>:	call   0x7ffff7dbd620 <*ABS*+0xa9c90@plt>
   0x7ffff7eb5e3f <lsearch+127>:	add    QWORD PTR [rbp+0x0],0x1
   0x7ffff7eb5e44 <lsearch+132>:	mov    r12,rax
   0x7ffff7eb5e47 <lsearch+135>:	add    rsp,0x18
   0x7ffff7eb5e4b <lsearch+139>:	mov    rax,r12
   0x7ffff7eb5e4e <lsearch+142>:	pop    rbx
   0x7ffff7eb5e4f <lsearch+143>:	pop    rbp
   0x7ffff7eb5e50 <lsearch+144>:	pop    r12
   0x7ffff7eb5e52 <lsearch+146>:	pop    r13
   0x7ffff7eb5e54 <lsearch+148>:	pop    r14
   0x7ffff7eb5e56 <lsearch+150>:	pop    r15
   0x7ffff7eb5e58 <lsearch+152>:	ret
   0x7ffff7eb5e59:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb5e60 <lfind>:	endbr64
   0x7ffff7eb5e64 <lfind+4>:	push   r15
   0x7ffff7eb5e66 <lfind+6>:	push   r14
   0x7ffff7eb5e68 <lfind+8>:	push   r13
   0x7ffff7eb5e6a <lfind+10>:	push   r12
   0x7ffff7eb5e6c <lfind+12>:	push   rbp
   0x7ffff7eb5e6d <lfind+13>:	push   rbx
   0x7ffff7eb5e6e <lfind+14>:	sub    rsp,0x8
   0x7ffff7eb5e72 <lfind+18>:	cmp    QWORD PTR [rdx],0x0
   0x7ffff7eb5e76 <lfind+22>:	je     0x7ffff7eb5ec8 <lfind+104>
   0x7ffff7eb5e78 <lfind+24>:	mov    r14,rdi
   0x7ffff7eb5e7b <lfind+27>:	mov    r12,rsi
   0x7ffff7eb5e7e <lfind+30>:	mov    rbp,rdx
   0x7ffff7eb5e81 <lfind+33>:	mov    r15,rcx
   0x7ffff7eb5e84 <lfind+36>:	mov    r13,r8
   0x7ffff7eb5e87 <lfind+39>:	xor    ebx,ebx
   0x7ffff7eb5e89 <lfind+41>:	jmp    0x7ffff7eb5e9d <lfind+61>
   0x7ffff7eb5e8b <lfind+43>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5e90 <lfind+48>:	add    r12,r15
   0x7ffff7eb5e93 <lfind+51>:	add    rbx,0x1
   0x7ffff7eb5e97 <lfind+55>:	cmp    QWORD PTR [rbp+0x0],rbx
   0x7ffff7eb5e9b <lfind+59>:	jbe    0x7ffff7eb5ec8 <lfind+104>
   0x7ffff7eb5e9d <lfind+61>:	mov    rsi,r12
   0x7ffff7eb5ea0 <lfind+64>:	mov    rdi,r14
   0x7ffff7eb5ea3 <lfind+67>:	call   r13
   0x7ffff7eb5ea6 <lfind+70>:	test   eax,eax
   0x7ffff7eb5ea8 <lfind+72>:	jne    0x7ffff7eb5e90 <lfind+48>
   0x7ffff7eb5eaa <lfind+74>:	cmp    QWORD PTR [rbp+0x0],rbx
   0x7ffff7eb5eae <lfind+78>:	jbe    0x7ffff7eb5ec8 <lfind+104>
   0x7ffff7eb5eb0 <lfind+80>:	add    rsp,0x8
   0x7ffff7eb5eb4 <lfind+84>:	mov    rax,r12
   0x7ffff7eb5eb7 <lfind+87>:	pop    rbx
   0x7ffff7eb5eb8 <lfind+88>:	pop    rbp
   0x7ffff7eb5eb9 <lfind+89>:	pop    r12
   0x7ffff7eb5ebb <lfind+91>:	pop    r13
   0x7ffff7eb5ebd <lfind+93>:	pop    r14
   0x7ffff7eb5ebf <lfind+95>:	pop    r15
   0x7ffff7eb5ec1 <lfind+97>:	ret
   0x7ffff7eb5ec2 <lfind+98>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5ec8 <lfind+104>:	xor    r12d,r12d
   0x7ffff7eb5ecb <lfind+107>:	jmp    0x7ffff7eb5eb0 <lfind+80>
   0x7ffff7eb5ecd:	nop    DWORD PTR [rax]
   0x7ffff7eb5ed0:	endbr64
   0x7ffff7eb5ed4:	push   r13
   0x7ffff7eb5ed6:	mov    r13d,edx
   0x7ffff7eb5ed9:	push   r12
   0x7ffff7eb5edb:	mov    r12,rsi
   0x7ffff7eb5ede:	lea    rsi,[rip+0xbacee]        # 0x7ffff7f70bd3
   0x7ffff7eb5ee5:	push   rbp
   0x7ffff7eb5ee6:	mov    rbp,rdi
   0x7ffff7eb5ee9:	push   rbx
   0x7ffff7eb5eea:	sub    rsp,0x8
   0x7ffff7eb5eee:	mov    rax,QWORD PTR [rip+0xf80b3]        # 0x7ffff7fadfa8
   0x7ffff7eb5ef5:	mov    rbx,QWORD PTR [rip+0xf7fac]        # 0x7ffff7fadea8
   0x7ffff7eb5efc:	mov    rdx,QWORD PTR [rax]
   0x7ffff7eb5eff:	mov    rdi,QWORD PTR [rbx]
   0x7ffff7eb5f02:	xor    eax,eax
   0x7ffff7eb5f04:	call   0x7ffff7e13880
   0x7ffff7eb5f09:	test   rbp,rbp
   0x7ffff7eb5f0c:	je     0x7ffff7eb5f1f
   0x7ffff7eb5f0e:	mov    rdi,QWORD PTR [rbx]
   0x7ffff7eb5f11:	mov    ecx,r13d
   0x7ffff7eb5f14:	mov    rdx,r12
   0x7ffff7eb5f17:	mov    rsi,rbp
   0x7ffff7eb5f1a:	call   0x7ffff7e137a0
   0x7ffff7eb5f1f:	mov    rdi,QWORD PTR [rbx]
   0x7ffff7eb5f22:	add    rsp,0x8
   0x7ffff7eb5f26:	lea    rsi,[rip+0xb7602]        # 0x7ffff7f6d52f
   0x7ffff7eb5f2d:	xor    eax,eax
   0x7ffff7eb5f2f:	pop    rbx
   0x7ffff7eb5f30:	pop    rbp
   0x7ffff7eb5f31:	pop    r12
   0x7ffff7eb5f33:	pop    r13
   0x7ffff7eb5f35:	jmp    0x7ffff7e13880
   0x7ffff7eb5f3a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5f40:	endbr64
   0x7ffff7eb5f44:	push   r15
   0x7ffff7eb5f46:	push   r14
   0x7ffff7eb5f48:	push   r13
   0x7ffff7eb5f4a:	push   r12
   0x7ffff7eb5f4c:	mov    r12d,edx
   0x7ffff7eb5f4f:	push   rbp
   0x7ffff7eb5f50:	mov    rbp,rdi
   0x7ffff7eb5f53:	push   rbx
   0x7ffff7eb5f54:	sub    rsp,0x8
   0x7ffff7eb5f58:	mov    rbx,QWORD PTR [rip+0xf7eb1]        # 0x7ffff7fade10
   0x7ffff7eb5f5f:	mov    rax,QWORD PTR [rip+0xf8042]        # 0x7ffff7fadfa8
   0x7ffff7eb5f66:	mov    r13,QWORD PTR [rip+0xf7f3b]        # 0x7ffff7fadea8
   0x7ffff7eb5f6d:	mov    r15d,DWORD PTR fs:[rbx]
   0x7ffff7eb5f71:	mov    rdx,QWORD PTR [rax]
   0x7ffff7eb5f74:	mov    rdi,QWORD PTR [r13+0x0]
   0x7ffff7eb5f78:	test   rbp,rbp
   0x7ffff7eb5f7b:	je     0x7ffff7eb5fc8
   0x7ffff7eb5f7d:	mov    r14,rsi
   0x7ffff7eb5f80:	xor    eax,eax
   0x7ffff7eb5f82:	lea    rsi,[rip+0xbac4a]        # 0x7ffff7f70bd3
   0x7ffff7eb5f89:	call   0x7ffff7e13880
   0x7ffff7eb5f8e:	mov    rdi,QWORD PTR [r13+0x0]
   0x7ffff7eb5f92:	mov    rsi,rbp
   0x7ffff7eb5f95:	mov    ecx,r12d
   0x7ffff7eb5f98:	mov    rdx,r14
   0x7ffff7eb5f9b:	call   0x7ffff7e137a0
   0x7ffff7eb5fa0:	mov    DWORD PTR fs:[rbx],r15d
   0x7ffff7eb5fa4:	mov    rdi,QWORD PTR [r13+0x0]
   0x7ffff7eb5fa8:	add    rsp,0x8
   0x7ffff7eb5fac:	pop    rbx
   0x7ffff7eb5fad:	lea    rsi,[rip+0xbac61]        # 0x7ffff7f70c15
   0x7ffff7eb5fb4:	pop    rbp
   0x7ffff7eb5fb5:	xor    eax,eax
   0x7ffff7eb5fb7:	pop    r12
   0x7ffff7eb5fb9:	pop    r13
   0x7ffff7eb5fbb:	pop    r14
   0x7ffff7eb5fbd:	pop    r15
   0x7ffff7eb5fbf:	jmp    0x7ffff7e13880
   0x7ffff7eb5fc4:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb5fc8:	add    rsp,0x8
   0x7ffff7eb5fcc:	lea    rsi,[rip+0xbac40]        # 0x7ffff7f70c13
   0x7ffff7eb5fd3:	xor    eax,eax
   0x7ffff7eb5fd5:	pop    rbx
   0x7ffff7eb5fd6:	pop    rbp
   0x7ffff7eb5fd7:	pop    r12
   0x7ffff7eb5fd9:	pop    r13
   0x7ffff7eb5fdb:	pop    r14
   0x7ffff7eb5fdd:	pop    r15
   0x7ffff7eb5fdf:	jmp    0x7ffff7e13880
   0x7ffff7eb5fe4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb5fef:	nop
   0x7ffff7eb5ff0 <vwarn>:	endbr64
   0x7ffff7eb5ff4 <vwarn+4>:	xor    edx,edx
   0x7ffff7eb5ff6 <vwarn+6>:	jmp    0x7ffff7eb5f40
   0x7ffff7eb5ffb:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6000 <vwarnx>:	endbr64
   0x7ffff7eb6004 <vwarnx+4>:	xor    edx,edx
   0x7ffff7eb6006 <vwarnx+6>:	jmp    0x7ffff7eb5ed0
   0x7ffff7eb600b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6010 <warn>:	endbr64
   0x7ffff7eb6014 <warn+4>:	sub    rsp,0xd8
   0x7ffff7eb601b <warn+11>:	mov    QWORD PTR [rsp+0x28],rsi
   0x7ffff7eb6020 <warn+16>:	mov    QWORD PTR [rsp+0x30],rdx
   0x7ffff7eb6025 <warn+21>:	mov    QWORD PTR [rsp+0x38],rcx
   0x7ffff7eb602a <warn+26>:	mov    QWORD PTR [rsp+0x40],r8
   0x7ffff7eb602f <warn+31>:	mov    QWORD PTR [rsp+0x48],r9
   0x7ffff7eb6034 <warn+36>:	test   al,al
   0x7ffff7eb6036 <warn+38>:	je     0x7ffff7eb606f <warn+95>
   0x7ffff7eb6038 <warn+40>:	movaps XMMWORD PTR [rsp+0x50],xmm0
   0x7ffff7eb603d <warn+45>:	movaps XMMWORD PTR [rsp+0x60],xmm1
   0x7ffff7eb6042 <warn+50>:	movaps XMMWORD PTR [rsp+0x70],xmm2
   0x7ffff7eb6047 <warn+55>:	movaps XMMWORD PTR [rsp+0x80],xmm3
   0x7ffff7eb604f <warn+63>:	movaps XMMWORD PTR [rsp+0x90],xmm4
   0x7ffff7eb6057 <warn+71>:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   0x7ffff7eb605f <warn+79>:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   0x7ffff7eb6067 <warn+87>:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   0x7ffff7eb606f <warn+95>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb6078 <warn+104>:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7eb607d <warn+109>:	xor    eax,eax
   0x7ffff7eb607f <warn+111>:	lea    rax,[rsp+0xe0]
   0x7ffff7eb6087 <warn+119>:	xor    edx,edx
   0x7ffff7eb6089 <warn+121>:	mov    rsi,rsp
   0x7ffff7eb608c <warn+124>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7eb6091 <warn+129>:	lea    rax,[rsp+0x20]
   0x7ffff7eb6096 <warn+134>:	mov    QWORD PTR [rsp+0x10],rax
   0x7ffff7eb609b <warn+139>:	mov    DWORD PTR [rsp],0x8
   0x7ffff7eb60a2 <warn+146>:	mov    DWORD PTR [rsp+0x4],0x30
   0x7ffff7eb60aa <warn+154>:	call   0x7ffff7eb5f40
   0x7ffff7eb60af <warn+159>:	mov    rax,QWORD PTR [rsp+0x18]
   0x7ffff7eb60b4 <warn+164>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb60bd <warn+173>:	jne    0x7ffff7eb60c7 <warn+183>
   0x7ffff7eb60bf <warn+175>:	add    rsp,0xd8
   0x7ffff7eb60c6 <warn+182>:	ret
   0x7ffff7eb60c7 <warn+183>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb60cc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb60d0 <warnx>:	endbr64
   0x7ffff7eb60d4 <warnx+4>:	sub    rsp,0xd8
   0x7ffff7eb60db <warnx+11>:	mov    QWORD PTR [rsp+0x28],rsi
   0x7ffff7eb60e0 <warnx+16>:	mov    QWORD PTR [rsp+0x30],rdx
   0x7ffff7eb60e5 <warnx+21>:	mov    QWORD PTR [rsp+0x38],rcx
   0x7ffff7eb60ea <warnx+26>:	mov    QWORD PTR [rsp+0x40],r8
   0x7ffff7eb60ef <warnx+31>:	mov    QWORD PTR [rsp+0x48],r9
   0x7ffff7eb60f4 <warnx+36>:	test   al,al
   0x7ffff7eb60f6 <warnx+38>:	je     0x7ffff7eb612f <warnx+95>
   0x7ffff7eb60f8 <warnx+40>:	movaps XMMWORD PTR [rsp+0x50],xmm0
   0x7ffff7eb60fd <warnx+45>:	movaps XMMWORD PTR [rsp+0x60],xmm1
   0x7ffff7eb6102 <warnx+50>:	movaps XMMWORD PTR [rsp+0x70],xmm2
   0x7ffff7eb6107 <warnx+55>:	movaps XMMWORD PTR [rsp+0x80],xmm3
   0x7ffff7eb610f <warnx+63>:	movaps XMMWORD PTR [rsp+0x90],xmm4
   0x7ffff7eb6117 <warnx+71>:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   0x7ffff7eb611f <warnx+79>:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   0x7ffff7eb6127 <warnx+87>:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   0x7ffff7eb612f <warnx+95>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb6138 <warnx+104>:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7eb613d <warnx+109>:	xor    eax,eax
   0x7ffff7eb613f <warnx+111>:	lea    rax,[rsp+0xe0]
   0x7ffff7eb6147 <warnx+119>:	xor    edx,edx
   0x7ffff7eb6149 <warnx+121>:	mov    rsi,rsp
   0x7ffff7eb614c <warnx+124>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7eb6151 <warnx+129>:	lea    rax,[rsp+0x20]
   0x7ffff7eb6156 <warnx+134>:	mov    QWORD PTR [rsp+0x10],rax
   0x7ffff7eb615b <warnx+139>:	mov    DWORD PTR [rsp],0x8
   0x7ffff7eb6162 <warnx+146>:	mov    DWORD PTR [rsp+0x4],0x30
   0x7ffff7eb616a <warnx+154>:	call   0x7ffff7eb5ed0
   0x7ffff7eb616f <warnx+159>:	mov    rax,QWORD PTR [rsp+0x18]
   0x7ffff7eb6174 <warnx+164>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb617d <warnx+173>:	jne    0x7ffff7eb6187 <warnx+183>
   0x7ffff7eb617f <warnx+175>:	add    rsp,0xd8
   0x7ffff7eb6186 <warnx+182>:	ret
   0x7ffff7eb6187 <warnx+183>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb618c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb6190 <verr>:	endbr64
   0x7ffff7eb6194 <verr+4>:	push   rbp
   0x7ffff7eb6195 <verr+5>:	mov    ebp,edi
   0x7ffff7eb6197 <verr+7>:	mov    rdi,rsi
   0x7ffff7eb619a <verr+10>:	mov    rsi,rdx
   0x7ffff7eb619d <verr+13>:	xor    edx,edx
   0x7ffff7eb619f <verr+15>:	call   0x7ffff7eb5f40
   0x7ffff7eb61a4 <verr+20>:	mov    edi,ebp
   0x7ffff7eb61a6 <verr+22>:	call   0x7ffff7dda5f0 <exit>
   0x7ffff7eb61ab:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb61b0 <verrx>:	endbr64
   0x7ffff7eb61b4 <verrx+4>:	push   rbp
   0x7ffff7eb61b5 <verrx+5>:	mov    ebp,edi
   0x7ffff7eb61b7 <verrx+7>:	mov    rdi,rsi
   0x7ffff7eb61ba <verrx+10>:	mov    rsi,rdx
   0x7ffff7eb61bd <verrx+13>:	xor    edx,edx
   0x7ffff7eb61bf <verrx+15>:	call   0x7ffff7eb5ed0
   0x7ffff7eb61c4 <verrx+20>:	mov    edi,ebp
   0x7ffff7eb61c6 <verrx+22>:	call   0x7ffff7dda5f0 <exit>
   0x7ffff7eb61cb:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb61d0 <err>:	endbr64
   0x7ffff7eb61d4 <err+4>:	push   rax
   0x7ffff7eb61d5 <err+5>:	pop    rax
   0x7ffff7eb61d6 <err+6>:	sub    rsp,0xd8
   0x7ffff7eb61dd <err+13>:	mov    QWORD PTR [rsp+0x30],rdx
   0x7ffff7eb61e2 <err+18>:	mov    QWORD PTR [rsp+0x38],rcx
   0x7ffff7eb61e7 <err+23>:	mov    QWORD PTR [rsp+0x40],r8
   0x7ffff7eb61ec <err+28>:	mov    QWORD PTR [rsp+0x48],r9
   0x7ffff7eb61f1 <err+33>:	test   al,al
   0x7ffff7eb61f3 <err+35>:	je     0x7ffff7eb622c <err+92>
   0x7ffff7eb61f5 <err+37>:	movaps XMMWORD PTR [rsp+0x50],xmm0
   0x7ffff7eb61fa <err+42>:	movaps XMMWORD PTR [rsp+0x60],xmm1
   0x7ffff7eb61ff <err+47>:	movaps XMMWORD PTR [rsp+0x70],xmm2
   0x7ffff7eb6204 <err+52>:	movaps XMMWORD PTR [rsp+0x80],xmm3
   0x7ffff7eb620c <err+60>:	movaps XMMWORD PTR [rsp+0x90],xmm4
   0x7ffff7eb6214 <err+68>:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   0x7ffff7eb621c <err+76>:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   0x7ffff7eb6224 <err+84>:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   0x7ffff7eb622c <err+92>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb6235 <err+101>:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7eb623a <err+106>:	xor    eax,eax
   0x7ffff7eb623c <err+108>:	lea    rax,[rsp+0xe0]
   0x7ffff7eb6244 <err+116>:	mov    rdx,rsp
   0x7ffff7eb6247 <err+119>:	mov    DWORD PTR [rsp],0x10
   0x7ffff7eb624e <err+126>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7eb6253 <err+131>:	lea    rax,[rsp+0x20]
   0x7ffff7eb6258 <err+136>:	mov    DWORD PTR [rsp+0x4],0x30
   0x7ffff7eb6260 <err+144>:	mov    QWORD PTR [rsp+0x10],rax
   0x7ffff7eb6265 <err+149>:	call   0x7ffff7eb6190 <verr>
   0x7ffff7eb626a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6270 <errx>:	endbr64
   0x7ffff7eb6274 <errx+4>:	push   rax
   0x7ffff7eb6275 <errx+5>:	pop    rax
   0x7ffff7eb6276 <errx+6>:	sub    rsp,0xd8
   0x7ffff7eb627d <errx+13>:	mov    QWORD PTR [rsp+0x30],rdx
   0x7ffff7eb6282 <errx+18>:	mov    QWORD PTR [rsp+0x38],rcx
   0x7ffff7eb6287 <errx+23>:	mov    QWORD PTR [rsp+0x40],r8
   0x7ffff7eb628c <errx+28>:	mov    QWORD PTR [rsp+0x48],r9
   0x7ffff7eb6291 <errx+33>:	test   al,al
   0x7ffff7eb6293 <errx+35>:	je     0x7ffff7eb62cc <errx+92>
   0x7ffff7eb6295 <errx+37>:	movaps XMMWORD PTR [rsp+0x50],xmm0
   0x7ffff7eb629a <errx+42>:	movaps XMMWORD PTR [rsp+0x60],xmm1
   0x7ffff7eb629f <errx+47>:	movaps XMMWORD PTR [rsp+0x70],xmm2
   0x7ffff7eb62a4 <errx+52>:	movaps XMMWORD PTR [rsp+0x80],xmm3
   0x7ffff7eb62ac <errx+60>:	movaps XMMWORD PTR [rsp+0x90],xmm4
   0x7ffff7eb62b4 <errx+68>:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   0x7ffff7eb62bc <errx+76>:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   0x7ffff7eb62c4 <errx+84>:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   0x7ffff7eb62cc <errx+92>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb62d5 <errx+101>:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7eb62da <errx+106>:	xor    eax,eax
   0x7ffff7eb62dc <errx+108>:	lea    rax,[rsp+0xe0]
   0x7ffff7eb62e4 <errx+116>:	mov    rdx,rsp
   0x7ffff7eb62e7 <errx+119>:	mov    DWORD PTR [rsp],0x10
   0x7ffff7eb62ee <errx+126>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7eb62f3 <errx+131>:	lea    rax,[rsp+0x20]
   0x7ffff7eb62f8 <errx+136>:	mov    DWORD PTR [rsp+0x4],0x30
   0x7ffff7eb6300 <errx+144>:	mov    QWORD PTR [rsp+0x10],rax
   0x7ffff7eb6305 <errx+149>:	call   0x7ffff7eb61b0 <verrx>
   0x7ffff7eb630a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6310:	sub    rsp,0x418
   0x7ffff7eb6317:	mov    edx,0x400
   0x7ffff7eb631c:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb6325:	mov    QWORD PTR [rsp+0x408],rax
   0x7ffff7eb632d:	xor    eax,eax
   0x7ffff7eb632f:	mov    rsi,rsp
   0x7ffff7eb6332:	call   0x7ffff7e3d6a0 <strerror_r>
   0x7ffff7eb6337:	xor    edi,edi
   0x7ffff7eb6339:	lea    rsi,[rip+0xba46f]        # 0x7ffff7f707af
   0x7ffff7eb6340:	mov    rdx,rax
   0x7ffff7eb6343:	xor    eax,eax
   0x7ffff7eb6345:	call   0x7ffff7e13880
   0x7ffff7eb634a:	mov    rax,QWORD PTR [rsp+0x408]
   0x7ffff7eb6352:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb635b:	jne    0x7ffff7eb6365
   0x7ffff7eb635d:	add    rsp,0x418
   0x7ffff7eb6364:	ret
   0x7ffff7eb6365:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb636a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6370:	push   r12
   0x7ffff7eb6372:	mov    r12d,edi
   0x7ffff7eb6375:	push   rbp
   0x7ffff7eb6376:	mov    ebp,esi
   0x7ffff7eb6378:	mov    rsi,rdx
   0x7ffff7eb637b:	mov    rdx,rcx
   0x7ffff7eb637e:	push   rbx
   0x7ffff7eb637f:	mov    rbx,QWORD PTR [rip+0xf7b22]        # 0x7ffff7fadea8
   0x7ffff7eb6386:	mov    ecx,r8d
   0x7ffff7eb6389:	mov    rdi,QWORD PTR [rbx]
   0x7ffff7eb638c:	call   0x7ffff7e137a0
   0x7ffff7eb6391:	test   eax,eax
   0x7ffff7eb6393:	js     0x7ffff7eb63c8
   0x7ffff7eb6395:	mov    rax,QWORD PTR [rip+0xf7b6c]        # 0x7ffff7fadf08
   0x7ffff7eb639c:	add    DWORD PTR [rax],0x1
   0x7ffff7eb639f:	test   ebp,ebp
   0x7ffff7eb63a1:	jne    0x7ffff7eb63f0
   0x7ffff7eb63a3:	xor    edi,edi
   0x7ffff7eb63a5:	xor    eax,eax
   0x7ffff7eb63a7:	lea    rsi,[rip+0xb7181]        # 0x7ffff7f6d52f
   0x7ffff7eb63ae:	call   0x7ffff7e13880
   0x7ffff7eb63b3:	mov    rdi,QWORD PTR [rbx]
   0x7ffff7eb63b6:	call   0x7ffff7e141b0 <fflush>
   0x7ffff7eb63bb:	test   r12d,r12d
   0x7ffff7eb63be:	jne    0x7ffff7eb63f9
   0x7ffff7eb63c0:	pop    rbx
   0x7ffff7eb63c1:	pop    rbp
   0x7ffff7eb63c2:	pop    r12
   0x7ffff7eb63c4:	ret
   0x7ffff7eb63c5:	nop    DWORD PTR [rax]
   0x7ffff7eb63c8:	mov    rax,QWORD PTR [rip+0xf7a41]        # 0x7ffff7fade10
   0x7ffff7eb63cf:	cmp    DWORD PTR fs:[rax],0xc
   0x7ffff7eb63d3:	jne    0x7ffff7eb6395
   0x7ffff7eb63d5:	mov    rsi,QWORD PTR [rbx]
   0x7ffff7eb63d8:	mov    eax,DWORD PTR [rsi+0xc0]
   0x7ffff7eb63de:	test   eax,eax
   0x7ffff7eb63e0:	jle    0x7ffff7eb6395
   0x7ffff7eb63e2:	lea    rdi,[rip+0xc1997]        # 0x7ffff7f77d80
   0x7ffff7eb63e9:	call   0x7ffff7e172e0 <fputws_unlocked>
   0x7ffff7eb63ee:	jmp    0x7ffff7eb6395
   0x7ffff7eb63f0:	mov    edi,ebp
   0x7ffff7eb63f2:	call   0x7ffff7eb6310
   0x7ffff7eb63f7:	jmp    0x7ffff7eb63a3
   0x7ffff7eb63f9:	mov    edi,r12d
   0x7ffff7eb63fc:	call   0x7ffff7dda5f0 <exit>
   0x7ffff7eb6401:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb640c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb6410:	endbr64
   0x7ffff7eb6414:	push   r14
   0x7ffff7eb6416:	mov    r14,rcx
   0x7ffff7eb6419:	push   r13
   0x7ffff7eb641b:	mov    r13,rdx
   0x7ffff7eb641e:	push   r12
   0x7ffff7eb6420:	mov    r12d,esi
   0x7ffff7eb6423:	push   rbp
   0x7ffff7eb6424:	mov    ebp,edi
   0x7ffff7eb6426:	mov    edi,0x1
   0x7ffff7eb642b:	push   rbx
   0x7ffff7eb642c:	mov    ebx,r8d
   0x7ffff7eb642f:	sub    rsp,0x10
   0x7ffff7eb6433:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb643c:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7eb6441:	xor    eax,eax
   0x7ffff7eb6443:	lea    rsi,[rsp+0x4]
   0x7ffff7eb6448:	mov    DWORD PTR [rsp+0x4],0x0
   0x7ffff7eb6450:	call   0x7ffff7e30760 <pthread_setcancelstate>
   0x7ffff7eb6455:	mov    rax,QWORD PTR [rip+0xf79dc]        # 0x7ffff7fade38
   0x7ffff7eb645c:	mov    rdi,QWORD PTR [rax]
   0x7ffff7eb645f:	call   0x7ffff7e141b0 <fflush>
   0x7ffff7eb6464:	mov    rax,QWORD PTR [rip+0xf7a35]        # 0x7ffff7fadea0
   0x7ffff7eb646b:	mov    rax,QWORD PTR [rax]
   0x7ffff7eb646e:	test   rax,rax
   0x7ffff7eb6471:	je     0x7ffff7eb64b0
   0x7ffff7eb6473:	call   rax
   0x7ffff7eb6475:	mov    esi,r12d
   0x7ffff7eb6478:	mov    edi,ebp
   0x7ffff7eb647a:	mov    r8d,ebx
   0x7ffff7eb647d:	mov    rcx,r14
   0x7ffff7eb6480:	mov    rdx,r13
   0x7ffff7eb6483:	call   0x7ffff7eb6370
   0x7ffff7eb6488:	mov    edi,DWORD PTR [rsp+0x4]
   0x7ffff7eb648c:	xor    esi,esi
   0x7ffff7eb648e:	call   0x7ffff7e30760 <pthread_setcancelstate>
   0x7ffff7eb6493:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7eb6498:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb64a1:	jne    0x7ffff7eb64cc
   0x7ffff7eb64a3:	add    rsp,0x10
   0x7ffff7eb64a7:	pop    rbx
   0x7ffff7eb64a8:	pop    rbp
   0x7ffff7eb64a9:	pop    r12
   0x7ffff7eb64ab:	pop    r13
   0x7ffff7eb64ad:	pop    r14
   0x7ffff7eb64af:	ret
   0x7ffff7eb64b0:	mov    rax,QWORD PTR [rip+0xf79b9]        # 0x7ffff7fade70
   0x7ffff7eb64b7:	lea    rsi,[rip+0xba715]        # 0x7ffff7f70bd3
   0x7ffff7eb64be:	xor    edi,edi
   0x7ffff7eb64c0:	mov    rdx,QWORD PTR [rax]
   0x7ffff7eb64c3:	xor    eax,eax
   0x7ffff7eb64c5:	call   0x7ffff7e13880
   0x7ffff7eb64ca:	jmp    0x7ffff7eb6475
   0x7ffff7eb64cc:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb64d1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb64dc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb64e0 <error>:	endbr64
   0x7ffff7eb64e4 <error+4>:	sub    rsp,0xd8
   0x7ffff7eb64eb <error+11>:	mov    QWORD PTR [rsp+0x38],rcx
   0x7ffff7eb64f0 <error+16>:	mov    QWORD PTR [rsp+0x40],r8
   0x7ffff7eb64f5 <error+21>:	mov    QWORD PTR [rsp+0x48],r9
   0x7ffff7eb64fa <error+26>:	test   al,al
   0x7ffff7eb64fc <error+28>:	je     0x7ffff7eb6535 <error+85>
   0x7ffff7eb64fe <error+30>:	movaps XMMWORD PTR [rsp+0x50],xmm0
   0x7ffff7eb6503 <error+35>:	movaps XMMWORD PTR [rsp+0x60],xmm1
   0x7ffff7eb6508 <error+40>:	movaps XMMWORD PTR [rsp+0x70],xmm2
   0x7ffff7eb650d <error+45>:	movaps XMMWORD PTR [rsp+0x80],xmm3
   0x7ffff7eb6515 <error+53>:	movaps XMMWORD PTR [rsp+0x90],xmm4
   0x7ffff7eb651d <error+61>:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   0x7ffff7eb6525 <error+69>:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   0x7ffff7eb652d <error+77>:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   0x7ffff7eb6535 <error+85>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb653e <error+94>:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7eb6543 <error+99>:	xor    eax,eax
   0x7ffff7eb6545 <error+101>:	lea    rax,[rsp+0xe0]
   0x7ffff7eb654d <error+109>:	xor    r8d,r8d
   0x7ffff7eb6550 <error+112>:	mov    rcx,rsp
   0x7ffff7eb6553 <error+115>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7eb6558 <error+120>:	lea    rax,[rsp+0x20]
   0x7ffff7eb655d <error+125>:	mov    QWORD PTR [rsp+0x10],rax
   0x7ffff7eb6562 <error+130>:	mov    DWORD PTR [rsp],0x18
   0x7ffff7eb6569 <error+137>:	mov    DWORD PTR [rsp+0x4],0x30
   0x7ffff7eb6571 <error+145>:	call   0x7ffff7eb6410
   0x7ffff7eb6576 <error+150>:	mov    rax,QWORD PTR [rsp+0x18]
   0x7ffff7eb657b <error+155>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb6584 <error+164>:	jne    0x7ffff7eb658e <error+174>
   0x7ffff7eb6586 <error+166>:	add    rsp,0xd8
   0x7ffff7eb658d <error+173>:	ret
   0x7ffff7eb658e <error+174>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb6593:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb659e:	xchg   ax,ax
   0x7ffff7eb65a0:	endbr64
   0x7ffff7eb65a4:	push   r15
   0x7ffff7eb65a6:	mov    r15,r8
   0x7ffff7eb65a9:	push   r14
   0x7ffff7eb65ab:	mov    r14d,esi
   0x7ffff7eb65ae:	push   r13
   0x7ffff7eb65b0:	mov    r13d,ecx
   0x7ffff7eb65b3:	push   r12
   0x7ffff7eb65b5:	mov    r12,rdx
   0x7ffff7eb65b8:	push   rbp
   0x7ffff7eb65b9:	mov    ebp,edi
   0x7ffff7eb65bb:	push   rbx
   0x7ffff7eb65bc:	mov    rbx,r9
   0x7ffff7eb65bf:	sub    rsp,0x18
   0x7ffff7eb65c3:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb65cc:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7eb65d1:	mov    rax,QWORD PTR [rip+0xf79b0]        # 0x7ffff7fadf88
   0x7ffff7eb65d8:	mov    eax,DWORD PTR [rax]
   0x7ffff7eb65da:	test   eax,eax
   0x7ffff7eb65dc:	je     0x7ffff7eb65f8
   0x7ffff7eb65de:	cmp    DWORD PTR [rip+0xffeb4],ecx        # 0x7ffff7fb6498
   0x7ffff7eb65e4:	je     0x7ffff7eb66a0
   0x7ffff7eb65ea:	mov    QWORD PTR [rip+0xffe9f],r12        # 0x7ffff7fb6490
   0x7ffff7eb65f1:	mov    DWORD PTR [rip+0xffea0],r13d        # 0x7ffff7fb6498
   0x7ffff7eb65f8:	lea    rsi,[rsp+0x4]
   0x7ffff7eb65fd:	mov    edi,0x1
   0x7ffff7eb6602:	mov    DWORD PTR [rsp+0x4],0x0
   0x7ffff7eb660a:	call   0x7ffff7e30760 <pthread_setcancelstate>
   0x7ffff7eb660f:	mov    rax,QWORD PTR [rip+0xf7822]        # 0x7ffff7fade38
   0x7ffff7eb6616:	mov    rdi,QWORD PTR [rax]
   0x7ffff7eb6619:	call   0x7ffff7e141b0 <fflush>
   0x7ffff7eb661e:	mov    rax,QWORD PTR [rip+0xf787b]        # 0x7ffff7fadea0
   0x7ffff7eb6625:	mov    rax,QWORD PTR [rax]
   0x7ffff7eb6628:	test   rax,rax
   0x7ffff7eb662b:	je     0x7ffff7eb66d0
   0x7ffff7eb6631:	call   rax
   0x7ffff7eb6633:	test   r12,r12
   0x7ffff7eb6636:	lea    rax,[rip+0xb707d]        # 0x7ffff7f6d6ba
   0x7ffff7eb663d:	mov    ecx,r13d
   0x7ffff7eb6640:	mov    rdx,r12
   0x7ffff7eb6643:	lea    rsi,[rip+0xb8b48]        # 0x7ffff7f6f192
   0x7ffff7eb664a:	cmove  rsi,rax
   0x7ffff7eb664e:	xor    edi,edi
   0x7ffff7eb6650:	xor    eax,eax
   0x7ffff7eb6652:	call   0x7ffff7e13880
   0x7ffff7eb6657:	mov    r8d,DWORD PTR [rsp+0x50]
   0x7ffff7eb665c:	mov    esi,r14d
   0x7ffff7eb665f:	mov    edi,ebp
   0x7ffff7eb6661:	mov    rcx,rbx
   0x7ffff7eb6664:	mov    rdx,r15
   0x7ffff7eb6667:	call   0x7ffff7eb6370
   0x7ffff7eb666c:	mov    edi,DWORD PTR [rsp+0x4]
   0x7ffff7eb6670:	xor    esi,esi
   0x7ffff7eb6672:	call   0x7ffff7e30760 <pthread_setcancelstate>
   0x7ffff7eb6677:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7eb667c:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb6685:	jne    0x7ffff7eb66ef
   0x7ffff7eb6687:	add    rsp,0x18
   0x7ffff7eb668b:	pop    rbx
   0x7ffff7eb668c:	pop    rbp
   0x7ffff7eb668d:	pop    r12
   0x7ffff7eb668f:	pop    r13
   0x7ffff7eb6691:	pop    r14
   0x7ffff7eb6693:	pop    r15
   0x7ffff7eb6695:	ret
   0x7ffff7eb6696:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb66a0:	mov    rdi,QWORD PTR [rip+0xffde9]        # 0x7ffff7fb6490
   0x7ffff7eb66a7:	cmp    rdi,rdx
   0x7ffff7eb66aa:	je     0x7ffff7eb6677
   0x7ffff7eb66ac:	test   rdx,rdx
   0x7ffff7eb66af:	je     0x7ffff7eb65ea
   0x7ffff7eb66b5:	test   rdi,rdi
   0x7ffff7eb66b8:	je     0x7ffff7eb65ea
   0x7ffff7eb66be:	mov    rsi,rdx
   0x7ffff7eb66c1:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb66c6:	test   eax,eax
   0x7ffff7eb66c8:	jne    0x7ffff7eb65ea
   0x7ffff7eb66ce:	jmp    0x7ffff7eb6677
   0x7ffff7eb66d0:	mov    rax,QWORD PTR [rip+0xf7799]        # 0x7ffff7fade70
   0x7ffff7eb66d7:	lea    rsi,[rip+0xb9fc0]        # 0x7ffff7f7069e
   0x7ffff7eb66de:	xor    edi,edi
   0x7ffff7eb66e0:	mov    rdx,QWORD PTR [rax]
   0x7ffff7eb66e3:	xor    eax,eax
   0x7ffff7eb66e5:	call   0x7ffff7e13880
   0x7ffff7eb66ea:	jmp    0x7ffff7eb6633
   0x7ffff7eb66ef:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb66f4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb66ff:	nop
   0x7ffff7eb6700 <error_at_line>:	endbr64
   0x7ffff7eb6704 <error_at_line+4>:	sub    rsp,0xd8
   0x7ffff7eb670b <error_at_line+11>:	mov    QWORD PTR [rsp+0x48],r9
   0x7ffff7eb6710 <error_at_line+16>:	test   al,al
   0x7ffff7eb6712 <error_at_line+18>:	je     0x7ffff7eb674b <error_at_line+75>
   0x7ffff7eb6714 <error_at_line+20>:	movaps XMMWORD PTR [rsp+0x50],xmm0
   0x7ffff7eb6719 <error_at_line+25>:	movaps XMMWORD PTR [rsp+0x60],xmm1
   0x7ffff7eb671e <error_at_line+30>:	movaps XMMWORD PTR [rsp+0x70],xmm2
   0x7ffff7eb6723 <error_at_line+35>:	movaps XMMWORD PTR [rsp+0x80],xmm3
   0x7ffff7eb672b <error_at_line+43>:	movaps XMMWORD PTR [rsp+0x90],xmm4
   0x7ffff7eb6733 <error_at_line+51>:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   0x7ffff7eb673b <error_at_line+59>:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   0x7ffff7eb6743 <error_at_line+67>:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   0x7ffff7eb674b <error_at_line+75>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb6754 <error_at_line+84>:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7eb6759 <error_at_line+89>:	xor    eax,eax
   0x7ffff7eb675b <error_at_line+91>:	lea    rax,[rsp+0xe0]
   0x7ffff7eb6763 <error_at_line+99>:	mov    DWORD PTR [rsp],0x28
   0x7ffff7eb676a <error_at_line+106>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7eb676f <error_at_line+111>:	lea    rax,[rsp+0x20]
   0x7ffff7eb6774 <error_at_line+116>:	sub    rsp,0x8
   0x7ffff7eb6778 <error_at_line+120>:	mov    DWORD PTR [rsp+0xc],0x30
   0x7ffff7eb6780 <error_at_line+128>:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7eb6785 <error_at_line+133>:	push   0x0
   0x7ffff7eb6787 <error_at_line+135>:	lea    r9,[rsp+0x10]
   0x7ffff7eb678c <error_at_line+140>:	call   0x7ffff7eb65a0
   0x7ffff7eb6791 <error_at_line+145>:	pop    rax
   0x7ffff7eb6792 <error_at_line+146>:	pop    rdx
   0x7ffff7eb6793 <error_at_line+147>:	mov    rax,QWORD PTR [rsp+0x18]
   0x7ffff7eb6798 <error_at_line+152>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb67a1 <error_at_line+161>:	jne    0x7ffff7eb67ab <error_at_line+171>
   0x7ffff7eb67a3 <error_at_line+163>:	add    rsp,0xd8
   0x7ffff7eb67aa <error_at_line+170>:	ret
   0x7ffff7eb67ab <error_at_line+171>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb67b0 <ustat>:	endbr64
   0x7ffff7eb67b4 <ustat+4>:	mov    eax,edi
   0x7ffff7eb67b6 <ustat+6>:	cmp    rdi,rax
   0x7ffff7eb67b9 <ustat+9>:	jne    0x7ffff7eb67e8 <ustat+56>
   0x7ffff7eb67bb <ustat+11>:	mov    eax,0x88
   0x7ffff7eb67c0 <ustat+16>:	syscall
   0x7ffff7eb67c2 <ustat+18>:	cmp    rax,0xfffffffffffff000
   0x7ffff7eb67c8 <ustat+24>:	ja     0x7ffff7eb67d0 <ustat+32>
   0x7ffff7eb67ca <ustat+26>:	ret
   0x7ffff7eb67cb <ustat+27>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb67d0 <ustat+32>:	mov    rdx,QWORD PTR [rip+0xf7639]        # 0x7ffff7fade10
   0x7ffff7eb67d7 <ustat+39>:	neg    eax
   0x7ffff7eb67d9 <ustat+41>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7eb67dc <ustat+44>:	mov    eax,0xffffffff
   0x7ffff7eb67e1 <ustat+49>:	ret
   0x7ffff7eb67e2 <ustat+50>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb67e8 <ustat+56>:	mov    rax,QWORD PTR [rip+0xf7621]        # 0x7ffff7fade10
   0x7ffff7eb67ef <ustat+63>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7eb67f6 <ustat+70>:	mov    eax,0xffffffff
   0x7ffff7eb67fb <ustat+75>:	ret
   0x7ffff7eb67fc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb6800:	push   r15
   0x7ffff7eb6802:	mov    esi,0x80000
   0x7ffff7eb6807:	lea    rdi,[rip+0xbe5d2]        # 0x7ffff7f74de0
   0x7ffff7eb680e:	push   r14
   0x7ffff7eb6810:	push   r13
   0x7ffff7eb6812:	push   r12
   0x7ffff7eb6814:	xor    r12d,r12d
   0x7ffff7eb6817:	push   rbp
   0x7ffff7eb6818:	push   rbx
   0x7ffff7eb6819:	sub    rsp,0x428
   0x7ffff7eb6820:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb6829:	mov    QWORD PTR [rsp+0x418],rax
   0x7ffff7eb6831:	xor    eax,eax
   0x7ffff7eb6833:	call   0x7ffff7eaeb80 <__open_nocancel>
   0x7ffff7eb6838:	cmp    eax,0xffffffff
   0x7ffff7eb683b:	jne    0x7ffff7eb6870
   0x7ffff7eb683d:	mov    rax,QWORD PTR [rsp+0x418]
   0x7ffff7eb6845:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb684e:	jne    0x7ffff7eb69dc
   0x7ffff7eb6854:	add    rsp,0x428
   0x7ffff7eb685b:	mov    eax,r12d
   0x7ffff7eb685e:	pop    rbx
   0x7ffff7eb685f:	pop    rbp
   0x7ffff7eb6860:	pop    r12
   0x7ffff7eb6862:	pop    r13
   0x7ffff7eb6864:	pop    r14
   0x7ffff7eb6866:	pop    r15
   0x7ffff7eb6868:	ret
   0x7ffff7eb6869:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb6870:	lea    rbx,[rsp+0x10]
   0x7ffff7eb6875:	mov    edx,0x400
   0x7ffff7eb687a:	mov    edi,eax
   0x7ffff7eb687c:	mov    r13d,eax
   0x7ffff7eb687f:	mov    rsi,rbx
   0x7ffff7eb6882:	call   0x7ffff7eaecd0 <__read_nocancel>
   0x7ffff7eb6887:	mov    rdx,rax
   0x7ffff7eb688a:	test   rax,rax
   0x7ffff7eb688d:	js     0x7ffff7eb6908
   0x7ffff7eb688f:	mov    esi,0xa
   0x7ffff7eb6894:	mov    rdi,rbx
   0x7ffff7eb6897:	lea    rbp,[rbx+rax*1]
   0x7ffff7eb689b:	call   0x7ffff7dbd420 <*ABS*+0xa9470@plt>
   0x7ffff7eb68a0:	test   rax,rax
   0x7ffff7eb68a3:	jne    0x7ffff7eb69b0
   0x7ffff7eb68a9:	lea    r12,[rsp+0x410]
   0x7ffff7eb68b1:	cmp    rbp,r12
   0x7ffff7eb68b4:	jne    0x7ffff7eb691d
   0x7ffff7eb68b6:	lea    r14,[rsp+0x310]
   0x7ffff7eb68be:	jmp    0x7ffff7eb68e9
   0x7ffff7eb68c0:	mov    rdx,rax
   0x7ffff7eb68c3:	mov    esi,0xa
   0x7ffff7eb68c8:	mov    rdi,r14
   0x7ffff7eb68cb:	add    rbp,r14
   0x7ffff7eb68ce:	call   0x7ffff7dbd420 <*ABS*+0xa9470@plt>
   0x7ffff7eb68d3:	mov    BYTE PTR [rsp+0x310],0xa
   0x7ffff7eb68db:	test   rax,rax
   0x7ffff7eb68de:	jne    0x7ffff7eb69b0
   0x7ffff7eb68e4:	cmp    rbp,r12
   0x7ffff7eb68e7:	jne    0x7ffff7eb691d
   0x7ffff7eb68e9:	mov    edx,0x100
   0x7ffff7eb68ee:	mov    rsi,r14
   0x7ffff7eb68f1:	mov    edi,r13d
   0x7ffff7eb68f4:	call   0x7ffff7eaecd0 <__read_nocancel>
   0x7ffff7eb68f9:	mov    rbp,rax
   0x7ffff7eb68fc:	test   rax,rax
   0x7ffff7eb68ff:	jns    0x7ffff7eb68c0
   0x7ffff7eb6901:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb6908:	xor    r12d,r12d
   0x7ffff7eb690b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6910:	mov    edi,r13d
   0x7ffff7eb6913:	call   0x7ffff7eaea10 <__close_nocancel>
   0x7ffff7eb6918:	jmp    0x7ffff7eb683d
   0x7ffff7eb691d:	cmp    rbp,rbx
   0x7ffff7eb6920:	je     0x7ffff7eb6908
   0x7ffff7eb6922:	xor    r12d,r12d
   0x7ffff7eb6925:	lea    r14,[rsp+0x8]
   0x7ffff7eb692a:	jmp    0x7ffff7eb694c
   0x7ffff7eb692c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb6930:	add    r12d,0x1
   0x7ffff7eb6934:	sub    r12d,r15d
   0x7ffff7eb6937:	add    r12d,eax
   0x7ffff7eb693a:	cmp    rbp,rdx
   0x7ffff7eb693d:	jbe    0x7ffff7eb6910
   0x7ffff7eb693f:	cmp    BYTE PTR [rdx],0x2c
   0x7ffff7eb6942:	mov    rbx,rdx
   0x7ffff7eb6945:	je     0x7ffff7eb69a0
   0x7ffff7eb6947:	cmp    BYTE PTR [rbx],0xa
   0x7ffff7eb694a:	je     0x7ffff7eb6910
   0x7ffff7eb694c:	mov    edx,0xa
   0x7ffff7eb6951:	mov    rsi,r14
   0x7ffff7eb6954:	mov    rdi,rbx
   0x7ffff7eb6957:	call   0x7ffff7ddc520 <strtouq>
   0x7ffff7eb695c:	mov    rdx,QWORD PTR [rsp+0x8]
   0x7ffff7eb6961:	mov    r15,rax
   0x7ffff7eb6964:	cmp    rdx,rbx
   0x7ffff7eb6967:	je     0x7ffff7eb6908
   0x7ffff7eb6969:	cmp    BYTE PTR [rdx],0x2d
   0x7ffff7eb696c:	jne    0x7ffff7eb6930
   0x7ffff7eb696e:	lea    rbx,[rdx+0x1]
   0x7ffff7eb6972:	mov    rsi,r14
   0x7ffff7eb6975:	mov    edx,0xa
   0x7ffff7eb697a:	mov    rdi,rbx
   0x7ffff7eb697d:	call   0x7ffff7ddc520 <strtouq>
   0x7ffff7eb6982:	mov    rdx,QWORD PTR [rsp+0x8]
   0x7ffff7eb6987:	cmp    rdx,rbx
   0x7ffff7eb698a:	je     0x7ffff7eb6908
   0x7ffff7eb6990:	cmp    r15,rax
   0x7ffff7eb6993:	ja     0x7ffff7eb693a
   0x7ffff7eb6995:	jmp    0x7ffff7eb6930
   0x7ffff7eb6997:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb69a0:	add    rbx,0x1
   0x7ffff7eb69a4:	cmp    rbx,rbp
   0x7ffff7eb69a7:	jb     0x7ffff7eb6947
   0x7ffff7eb69a9:	jmp    0x7ffff7eb6910
   0x7ffff7eb69ae:	xchg   ax,ax
   0x7ffff7eb69b0:	add    rax,0x1
   0x7ffff7eb69b4:	cmp    rbp,rax
   0x7ffff7eb69b7:	jae    0x7ffff7eb691d
   0x7ffff7eb69bd:	lea    rcx,[rip+0xbe46c]        # 0x7ffff7f74e30
   0x7ffff7eb69c4:	mov    edx,0x68
   0x7ffff7eb69c9:	lea    rsi,[rip+0xbe430]        # 0x7ffff7f74e00
   0x7ffff7eb69d0:	lea    rdi,[rip+0xb87c3]        # 0x7ffff7f6f19a
   0x7ffff7eb69d7:	call   0x7ffff7dcee50 <__assert_fail>
   0x7ffff7eb69dc:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb69e1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb69ec:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb69f0:	push   r15
   0x7ffff7eb69f2:	mov    esi,0x80000
   0x7ffff7eb69f7:	lea    rdi,[rip+0xb87a7]        # 0x7ffff7f6f1a5
   0x7ffff7eb69fe:	push   r14
   0x7ffff7eb6a00:	push   r13
   0x7ffff7eb6a02:	push   r12
   0x7ffff7eb6a04:	xor    r12d,r12d
   0x7ffff7eb6a07:	push   rbp
   0x7ffff7eb6a08:	push   rbx
   0x7ffff7eb6a09:	sub    rsp,0x428
   0x7ffff7eb6a10:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb6a19:	mov    QWORD PTR [rsp+0x418],rax
   0x7ffff7eb6a21:	xor    eax,eax
   0x7ffff7eb6a23:	call   0x7ffff7eaeb80 <__open_nocancel>
   0x7ffff7eb6a28:	cmp    eax,0xffffffff
   0x7ffff7eb6a2b:	je     0x7ffff7eb6a8d
   0x7ffff7eb6a2d:	lea    r15,[rsp+0x410]
   0x7ffff7eb6a35:	mov    r13d,eax
   0x7ffff7eb6a38:	lea    r14,[rsp+0x10]
   0x7ffff7eb6a3d:	xor    r12d,r12d
   0x7ffff7eb6a40:	mov    QWORD PTR [rsp+0x8],r15
   0x7ffff7eb6a45:	mov    rbp,r15
   0x7ffff7eb6a48:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6a50:	mov    rbx,r15
   0x7ffff7eb6a53:	mov    esi,0xa
   0x7ffff7eb6a58:	mov    rdi,rbp
   0x7ffff7eb6a5b:	sub    rbx,rbp
   0x7ffff7eb6a5e:	mov    rdx,rbx
   0x7ffff7eb6a61:	call   0x7ffff7dbd420 <*ABS*+0xa9470@plt>
   0x7ffff7eb6a66:	test   rax,rax
   0x7ffff7eb6a69:	je     0x7ffff7eb6ae0
   0x7ffff7eb6a6b:	mov    rdx,rbp
   0x7ffff7eb6a6e:	lea    rbp,[rax+0x1]
   0x7ffff7eb6a72:	cmp    rbp,r15
   0x7ffff7eb6a75:	ja     0x7ffff7eb6bb8
   0x7ffff7eb6a7b:	cmp    r15,rdx
   0x7ffff7eb6a7e:	je     0x7ffff7eb6a85
   0x7ffff7eb6a80:	cmp    BYTE PTR [rdx],0x63
   0x7ffff7eb6a83:	je     0x7ffff7eb6ac0
   0x7ffff7eb6a85:	mov    edi,r13d
   0x7ffff7eb6a88:	call   0x7ffff7eaea10 <__close_nocancel>
   0x7ffff7eb6a8d:	mov    rax,QWORD PTR [rsp+0x418]
   0x7ffff7eb6a95:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb6a9e:	jne    0x7ffff7eb6bd7
   0x7ffff7eb6aa4:	add    rsp,0x428
   0x7ffff7eb6aab:	mov    eax,r12d
   0x7ffff7eb6aae:	pop    rbx
   0x7ffff7eb6aaf:	pop    rbp
   0x7ffff7eb6ab0:	pop    r12
   0x7ffff7eb6ab2:	pop    r13
   0x7ffff7eb6ab4:	pop    r14
   0x7ffff7eb6ab6:	pop    r15
   0x7ffff7eb6ab8:	ret
   0x7ffff7eb6ab9:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb6ac0:	cmp    BYTE PTR [rdx+0x1],0x70
   0x7ffff7eb6ac4:	jne    0x7ffff7eb6a85
   0x7ffff7eb6ac6:	cmp    BYTE PTR [rdx+0x2],0x75
   0x7ffff7eb6aca:	jne    0x7ffff7eb6a85
   0x7ffff7eb6acc:	movsx  eax,BYTE PTR [rdx+0x3]
   0x7ffff7eb6ad0:	sub    eax,0x30
   0x7ffff7eb6ad3:	cmp    eax,0xa
   0x7ffff7eb6ad6:	adc    r12d,0x0
   0x7ffff7eb6ada:	jmp    0x7ffff7eb6a50
   0x7ffff7eb6adf:	nop
   0x7ffff7eb6ae0:	cmp    rbp,r14
   0x7ffff7eb6ae3:	je     0x7ffff7eb6aec
   0x7ffff7eb6ae5:	cmp    r15,QWORD PTR [rsp+0x8]
   0x7ffff7eb6aea:	je     0x7ffff7eb6af8
   0x7ffff7eb6aec:	mov    rdx,rbp
   0x7ffff7eb6aef:	mov    rbp,r15
   0x7ffff7eb6af2:	jmp    0x7ffff7eb6a7b
   0x7ffff7eb6af4:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb6af8:	mov    rsi,rbp
   0x7ffff7eb6afb:	mov    rdx,rbx
   0x7ffff7eb6afe:	lea    rbp,[r14+rbx*1]
   0x7ffff7eb6b02:	mov    rdi,r14
   0x7ffff7eb6b05:	call   0x7ffff7dbd430 <*ABS*+0xa9620@plt>
   0x7ffff7eb6b0a:	mov    rdx,r15
   0x7ffff7eb6b0d:	mov    rsi,rbp
   0x7ffff7eb6b10:	mov    edi,r13d
   0x7ffff7eb6b13:	sub    rdx,rbp
   0x7ffff7eb6b16:	call   0x7ffff7eaecd0 <__read_nocancel>
   0x7ffff7eb6b1b:	test   rax,rax
   0x7ffff7eb6b1e:	js     0x7ffff7eb6a85
   0x7ffff7eb6b24:	lea    r15,[rbp+rax*1+0x0]
   0x7ffff7eb6b29:	mov    esi,0xa
   0x7ffff7eb6b2e:	mov    rdi,r14
   0x7ffff7eb6b31:	mov    rdx,r15
   0x7ffff7eb6b34:	sub    rdx,r14
   0x7ffff7eb6b37:	call   0x7ffff7dbd420 <*ABS*+0xa9470@plt>
   0x7ffff7eb6b3c:	test   rax,rax
   0x7ffff7eb6b3f:	jne    0x7ffff7eb6b9b
   0x7ffff7eb6b41:	cmp    r15,QWORD PTR [rsp+0x8]
   0x7ffff7eb6b46:	jne    0x7ffff7eb6bb0
   0x7ffff7eb6b48:	lea    rbp,[rsp+0x310]
   0x7ffff7eb6b50:	jmp    0x7ffff7eb6b5f
   0x7ffff7eb6b52:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6b58:	cmp    r15,QWORD PTR [rsp+0x8]
   0x7ffff7eb6b5d:	jne    0x7ffff7eb6bb0
   0x7ffff7eb6b5f:	mov    edx,0x100
   0x7ffff7eb6b64:	mov    rsi,rbp
   0x7ffff7eb6b67:	mov    edi,r13d
   0x7ffff7eb6b6a:	call   0x7ffff7eaecd0 <__read_nocancel>
   0x7ffff7eb6b6f:	mov    r15,rax
   0x7ffff7eb6b72:	test   rax,rax
   0x7ffff7eb6b75:	js     0x7ffff7eb6a85
   0x7ffff7eb6b7b:	mov    rdx,rax
   0x7ffff7eb6b7e:	mov    esi,0xa
   0x7ffff7eb6b83:	mov    rdi,rbp
   0x7ffff7eb6b86:	add    r15,rbp
   0x7ffff7eb6b89:	call   0x7ffff7dbd420 <*ABS*+0xa9470@plt>
   0x7ffff7eb6b8e:	mov    BYTE PTR [rsp+0x310],0xa
   0x7ffff7eb6b96:	test   rax,rax
   0x7ffff7eb6b99:	je     0x7ffff7eb6b58
   0x7ffff7eb6b9b:	lea    rbp,[rax+0x1]
   0x7ffff7eb6b9f:	mov    rdx,r14
   0x7ffff7eb6ba2:	jmp    0x7ffff7eb6a72
   0x7ffff7eb6ba7:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6bb0:	mov    rbp,r14
   0x7ffff7eb6bb3:	jmp    0x7ffff7eb6aec
   0x7ffff7eb6bb8:	lea    rcx,[rip+0xbe271]        # 0x7ffff7f74e30
   0x7ffff7eb6bbf:	mov    edx,0x68
   0x7ffff7eb6bc4:	lea    rsi,[rip+0xbe235]        # 0x7ffff7f74e00
   0x7ffff7eb6bcb:	lea    rdi,[rip+0xb85c8]        # 0x7ffff7f6f19a
   0x7ffff7eb6bd2:	call   0x7ffff7dcee50 <__assert_fail>
   0x7ffff7eb6bd7:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb6bdc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb6be0:	endbr64
   0x7ffff7eb6be4:	sub    rsp,0x1000
   0x7ffff7eb6beb:	or     QWORD PTR [rsp],0x0
   0x7ffff7eb6bf0:	sub    rsp,0x18
   0x7ffff7eb6bf4:	mov    esi,0x1000
   0x7ffff7eb6bf9:	xor    edi,edi
   0x7ffff7eb6bfb:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb6c04:	mov    QWORD PTR [rsp+0x1008],rax
   0x7ffff7eb6c0c:	xor    eax,eax
   0x7ffff7eb6c0e:	mov    rdx,rsp
   0x7ffff7eb6c11:	mov    eax,0xcc
   0x7ffff7eb6c16:	syscall
   0x7ffff7eb6c18:	test   eax,eax
   0x7ffff7eb6c1a:	jg     0x7ffff7eb6c48
   0x7ffff7eb6c1c:	cmp    eax,0xffffffea
   0x7ffff7eb6c1f:	sete   al
   0x7ffff7eb6c22:	movzx  eax,al
   0x7ffff7eb6c25:	shl    eax,0xf
   0x7ffff7eb6c28:	mov    rdx,QWORD PTR [rsp+0x1008]
   0x7ffff7eb6c30:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb6c39:	jne    0x7ffff7eb6c55
   0x7ffff7eb6c3b:	add    rsp,0x1018
   0x7ffff7eb6c42:	ret
   0x7ffff7eb6c43:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6c48:	mov    rsi,rsp
   0x7ffff7eb6c4b:	movsxd rdi,eax
   0x7ffff7eb6c4e:	call   0x7ffff7ea8ac0 <__sched_cpucount>
   0x7ffff7eb6c53:	jmp    0x7ffff7eb6c28
   0x7ffff7eb6c55:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb6c5a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6c60 <get_nprocs>:	endbr64
   0x7ffff7eb6c64 <get_nprocs+4>:	sub    rsp,0x8
   0x7ffff7eb6c68 <get_nprocs+8>:	call   0x7ffff7eb6800
   0x7ffff7eb6c6d <get_nprocs+13>:	test   eax,eax
   0x7ffff7eb6c6f <get_nprocs+15>:	je     0x7ffff7eb6c80 <get_nprocs+32>
   0x7ffff7eb6c71 <get_nprocs+17>:	add    rsp,0x8
   0x7ffff7eb6c75 <get_nprocs+21>:	ret
   0x7ffff7eb6c76 <get_nprocs+22>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6c80 <get_nprocs+32>:	call   0x7ffff7eb69f0
   0x7ffff7eb6c85 <get_nprocs+37>:	test   eax,eax
   0x7ffff7eb6c87 <get_nprocs+39>:	jne    0x7ffff7eb6c71 <get_nprocs+17>
   0x7ffff7eb6c89 <get_nprocs+41>:	call   0x7ffff7eb6be0
   0x7ffff7eb6c8e <get_nprocs+46>:	mov    edx,0x2
   0x7ffff7eb6c93 <get_nprocs+51>:	test   eax,eax
   0x7ffff7eb6c95 <get_nprocs+53>:	cmove  eax,edx
   0x7ffff7eb6c98 <get_nprocs+56>:	add    rsp,0x8
   0x7ffff7eb6c9c <get_nprocs+60>:	ret
   0x7ffff7eb6c9d:	nop    DWORD PTR [rax]
   0x7ffff7eb6ca0 <get_nprocs_conf>:	endbr64
   0x7ffff7eb6ca4 <get_nprocs_conf+4>:	push   r13
   0x7ffff7eb6ca6 <get_nprocs_conf+6>:	lea    rdi,[rip+0xb8503]        # 0x7ffff7f6f1b0
   0x7ffff7eb6cad <get_nprocs_conf+13>:	push   r12
   0x7ffff7eb6caf <get_nprocs_conf+15>:	xor    r12d,r12d
   0x7ffff7eb6cb2 <get_nprocs_conf+18>:	push   rbp
   0x7ffff7eb6cb3 <get_nprocs_conf+19>:	push   rbx
   0x7ffff7eb6cb4 <get_nprocs_conf+20>:	sub    rsp,0x18
   0x7ffff7eb6cb8 <get_nprocs_conf+24>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb6cc1 <get_nprocs_conf+33>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7eb6cc6 <get_nprocs_conf+38>:	xor    eax,eax
   0x7ffff7eb6cc8 <get_nprocs_conf+40>:	mov    r13,rsp
   0x7ffff7eb6ccb <get_nprocs_conf+43>:	call   0x7ffff7e7b2f0 <opendir>
   0x7ffff7eb6cd0 <get_nprocs_conf+48>:	mov    rbp,rax
   0x7ffff7eb6cd3 <get_nprocs_conf+51>:	test   rax,rax
   0x7ffff7eb6cd6 <get_nprocs_conf+54>:	je     0x7ffff7eb6d70 <get_nprocs_conf+208>
   0x7ffff7eb6cdc <get_nprocs_conf+60>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb6ce0 <get_nprocs_conf+64>:	mov    rdi,rbp
   0x7ffff7eb6ce3 <get_nprocs_conf+67>:	call   0x7ffff7e7b6f0 <readdir64>
   0x7ffff7eb6ce8 <get_nprocs_conf+72>:	test   rax,rax
   0x7ffff7eb6ceb <get_nprocs_conf+75>:	je     0x7ffff7eb6d40 <get_nprocs_conf+160>
   0x7ffff7eb6ced <get_nprocs_conf+77>:	cmp    BYTE PTR [rax+0x12],0x4
   0x7ffff7eb6cf1 <get_nprocs_conf+81>:	jne    0x7ffff7eb6ce0 <get_nprocs_conf+64>
   0x7ffff7eb6cf3 <get_nprocs_conf+83>:	cmp    BYTE PTR [rax+0x13],0x63
   0x7ffff7eb6cf7 <get_nprocs_conf+87>:	jne    0x7ffff7eb6ce0 <get_nprocs_conf+64>
   0x7ffff7eb6cf9 <get_nprocs_conf+89>:	cmp    BYTE PTR [rax+0x14],0x70
   0x7ffff7eb6cfd <get_nprocs_conf+93>:	jne    0x7ffff7eb6ce0 <get_nprocs_conf+64>
   0x7ffff7eb6cff <get_nprocs_conf+95>:	cmp    BYTE PTR [rax+0x15],0x75
   0x7ffff7eb6d03 <get_nprocs_conf+99>:	jne    0x7ffff7eb6ce0 <get_nprocs_conf+64>
   0x7ffff7eb6d05 <get_nprocs_conf+101>:	lea    rbx,[rax+0x16]
   0x7ffff7eb6d09 <get_nprocs_conf+105>:	mov    edx,0xa
   0x7ffff7eb6d0e <get_nprocs_conf+110>:	mov    rsi,r13
   0x7ffff7eb6d11 <get_nprocs_conf+113>:	mov    rdi,rbx
   0x7ffff7eb6d14 <get_nprocs_conf+116>:	call   0x7ffff7ddc520 <strtouq>
   0x7ffff7eb6d19 <get_nprocs_conf+121>:	cmp    rax,0xffffffffffffffff
   0x7ffff7eb6d1d <get_nprocs_conf+125>:	je     0x7ffff7eb6ce0 <get_nprocs_conf+64>
   0x7ffff7eb6d1f <get_nprocs_conf+127>:	mov    rax,QWORD PTR [rsp]
   0x7ffff7eb6d23 <get_nprocs_conf+131>:	cmp    rbx,rax
   0x7ffff7eb6d26 <get_nprocs_conf+134>:	je     0x7ffff7eb6ce0 <get_nprocs_conf+64>
   0x7ffff7eb6d28 <get_nprocs_conf+136>:	cmp    BYTE PTR [rax],0x1
   0x7ffff7eb6d2b <get_nprocs_conf+139>:	mov    rdi,rbp
   0x7ffff7eb6d2e <get_nprocs_conf+142>:	adc    r12d,0x0
   0x7ffff7eb6d32 <get_nprocs_conf+146>:	call   0x7ffff7e7b6f0 <readdir64>
   0x7ffff7eb6d37 <get_nprocs_conf+151>:	test   rax,rax
   0x7ffff7eb6d3a <get_nprocs_conf+154>:	jne    0x7ffff7eb6ced <get_nprocs_conf+77>
   0x7ffff7eb6d3c <get_nprocs_conf+156>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb6d40 <get_nprocs_conf+160>:	mov    rdi,rbp
   0x7ffff7eb6d43 <get_nprocs_conf+163>:	call   0x7ffff7e7b520 <closedir>
   0x7ffff7eb6d48 <get_nprocs_conf+168>:	test   r12d,r12d
   0x7ffff7eb6d4b <get_nprocs_conf+171>:	je     0x7ffff7eb6d70 <get_nprocs_conf+208>
   0x7ffff7eb6d4d <get_nprocs_conf+173>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7eb6d52 <get_nprocs_conf+178>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7eb6d5b <get_nprocs_conf+187>:	jne    0x7ffff7eb6d91 <get_nprocs_conf+241>
   0x7ffff7eb6d5d <get_nprocs_conf+189>:	add    rsp,0x18
   0x7ffff7eb6d61 <get_nprocs_conf+193>:	mov    eax,r12d
   0x7ffff7eb6d64 <get_nprocs_conf+196>:	pop    rbx
   0x7ffff7eb6d65 <get_nprocs_conf+197>:	pop    rbp
   0x7ffff7eb6d66 <get_nprocs_conf+198>:	pop    r12
   0x7ffff7eb6d68 <get_nprocs_conf+200>:	pop    r13
   0x7ffff7eb6d6a <get_nprocs_conf+202>:	ret
   0x7ffff7eb6d6b <get_nprocs_conf+203>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6d70 <get_nprocs_conf+208>:	call   0x7ffff7eb69f0
   0x7ffff7eb6d75 <get_nprocs_conf+213>:	mov    r12d,eax
   0x7ffff7eb6d78 <get_nprocs_conf+216>:	test   eax,eax
   0x7ffff7eb6d7a <get_nprocs_conf+218>:	jne    0x7ffff7eb6d4d <get_nprocs_conf+173>
   0x7ffff7eb6d7c <get_nprocs_conf+220>:	call   0x7ffff7eb6be0
   0x7ffff7eb6d81 <get_nprocs_conf+225>:	mov    r12d,eax
   0x7ffff7eb6d84 <get_nprocs_conf+228>:	test   eax,eax
   0x7ffff7eb6d86 <get_nprocs_conf+230>:	mov    eax,0x2
   0x7ffff7eb6d8b <get_nprocs_conf+235>:	cmove  r12d,eax
   0x7ffff7eb6d8f <get_nprocs_conf+239>:	jmp    0x7ffff7eb6d4d <get_nprocs_conf+173>
   0x7ffff7eb6d91 <get_nprocs_conf+241>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb6d96:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6da0 <get_phys_pages>:	endbr64
   0x7ffff7eb6da4 <get_phys_pages+4>:	push   rbp
   0x7ffff7eb6da5 <get_phys_pages+5>:	push   rbx
   0x7ffff7eb6da6 <get_phys_pages+6>:	sub    rsp,0x88
   0x7ffff7eb6dad <get_phys_pages+13>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb6db6 <get_phys_pages+22>:	mov    QWORD PTR [rsp+0x78],rax
   0x7ffff7eb6dbb <get_phys_pages+27>:	xor    eax,eax
   0x7ffff7eb6dbd <get_phys_pages+29>:	mov    rdi,rsp
   0x7ffff7eb6dc0 <get_phys_pages+32>:	call   0x7ffff7ebbf90 <sysinfo>
   0x7ffff7eb6dc5 <get_phys_pages+37>:	mov    ebx,DWORD PTR [rsp+0x68]
   0x7ffff7eb6dc9 <get_phys_pages+41>:	mov    rbp,QWORD PTR [rsp+0x20]
   0x7ffff7eb6dce <get_phys_pages+46>:	call   0x7ffff7eb0370 <getpagesize>
   0x7ffff7eb6dd3 <get_phys_pages+51>:	movsxd rdx,eax
   0x7ffff7eb6dd6 <get_phys_pages+54>:	cmp    ebx,0x1
   0x7ffff7eb6dd9 <get_phys_pages+57>:	ja     0x7ffff7eb6dea <get_phys_pages+74>
   0x7ffff7eb6ddb <get_phys_pages+59>:	jmp    0x7ffff7eb6df0 <get_phys_pages+80>
   0x7ffff7eb6ddd <get_phys_pages+61>:	nop    DWORD PTR [rax]
   0x7ffff7eb6de0 <get_phys_pages+64>:	shr    ebx,1
   0x7ffff7eb6de2 <get_phys_pages+66>:	shr    rdx,1
   0x7ffff7eb6de5 <get_phys_pages+69>:	cmp    ebx,0x1
   0x7ffff7eb6de8 <get_phys_pages+72>:	jbe    0x7ffff7eb6df0 <get_phys_pages+80>
   0x7ffff7eb6dea <get_phys_pages+74>:	cmp    rdx,0x1
   0x7ffff7eb6dee <get_phys_pages+78>:	ja     0x7ffff7eb6de0 <get_phys_pages+64>
   0x7ffff7eb6df0 <get_phys_pages+80>:	mov    eax,ebx
   0x7ffff7eb6df2 <get_phys_pages+82>:	imul   rax,rbp
   0x7ffff7eb6df6 <get_phys_pages+86>:	cmp    rdx,0x1
   0x7ffff7eb6dfa <get_phys_pages+90>:	jbe    0x7ffff7eb6e0c <get_phys_pages+108>
   0x7ffff7eb6dfc <get_phys_pages+92>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb6e00 <get_phys_pages+96>:	shr    rdx,1
   0x7ffff7eb6e03 <get_phys_pages+99>:	shr    rax,1
   0x7ffff7eb6e06 <get_phys_pages+102>:	cmp    rdx,0x1
   0x7ffff7eb6e0a <get_phys_pages+106>:	jne    0x7ffff7eb6e00 <get_phys_pages+96>
   0x7ffff7eb6e0c <get_phys_pages+108>:	mov    rdx,QWORD PTR [rsp+0x78]
   0x7ffff7eb6e11 <get_phys_pages+113>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb6e1a <get_phys_pages+122>:	jne    0x7ffff7eb6e26 <get_phys_pages+134>
   0x7ffff7eb6e1c <get_phys_pages+124>:	add    rsp,0x88
   0x7ffff7eb6e23 <get_phys_pages+131>:	pop    rbx
   0x7ffff7eb6e24 <get_phys_pages+132>:	pop    rbp
   0x7ffff7eb6e25 <get_phys_pages+133>:	ret
   0x7ffff7eb6e26 <get_phys_pages+134>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb6e2b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6e30 <get_avphys_pages>:	endbr64
   0x7ffff7eb6e34 <get_avphys_pages+4>:	push   rbp
   0x7ffff7eb6e35 <get_avphys_pages+5>:	push   rbx
   0x7ffff7eb6e36 <get_avphys_pages+6>:	sub    rsp,0x88
   0x7ffff7eb6e3d <get_avphys_pages+13>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb6e46 <get_avphys_pages+22>:	mov    QWORD PTR [rsp+0x78],rax
   0x7ffff7eb6e4b <get_avphys_pages+27>:	xor    eax,eax
   0x7ffff7eb6e4d <get_avphys_pages+29>:	mov    rdi,rsp
   0x7ffff7eb6e50 <get_avphys_pages+32>:	call   0x7ffff7ebbf90 <sysinfo>
   0x7ffff7eb6e55 <get_avphys_pages+37>:	mov    ebx,DWORD PTR [rsp+0x68]
   0x7ffff7eb6e59 <get_avphys_pages+41>:	mov    rbp,QWORD PTR [rsp+0x28]
   0x7ffff7eb6e5e <get_avphys_pages+46>:	call   0x7ffff7eb0370 <getpagesize>
   0x7ffff7eb6e63 <get_avphys_pages+51>:	movsxd rdx,eax
   0x7ffff7eb6e66 <get_avphys_pages+54>:	cmp    ebx,0x1
   0x7ffff7eb6e69 <get_avphys_pages+57>:	ja     0x7ffff7eb6e7a <get_avphys_pages+74>
   0x7ffff7eb6e6b <get_avphys_pages+59>:	jmp    0x7ffff7eb6e80 <get_avphys_pages+80>
   0x7ffff7eb6e6d <get_avphys_pages+61>:	nop    DWORD PTR [rax]
   0x7ffff7eb6e70 <get_avphys_pages+64>:	shr    ebx,1
   0x7ffff7eb6e72 <get_avphys_pages+66>:	shr    rdx,1
   0x7ffff7eb6e75 <get_avphys_pages+69>:	cmp    ebx,0x1
   0x7ffff7eb6e78 <get_avphys_pages+72>:	jbe    0x7ffff7eb6e80 <get_avphys_pages+80>
   0x7ffff7eb6e7a <get_avphys_pages+74>:	cmp    rdx,0x1
   0x7ffff7eb6e7e <get_avphys_pages+78>:	ja     0x7ffff7eb6e70 <get_avphys_pages+64>
   0x7ffff7eb6e80 <get_avphys_pages+80>:	mov    eax,ebx
   0x7ffff7eb6e82 <get_avphys_pages+82>:	imul   rax,rbp
   0x7ffff7eb6e86 <get_avphys_pages+86>:	cmp    rdx,0x1
   0x7ffff7eb6e8a <get_avphys_pages+90>:	jbe    0x7ffff7eb6e9c <get_avphys_pages+108>
   0x7ffff7eb6e8c <get_avphys_pages+92>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb6e90 <get_avphys_pages+96>:	shr    rdx,1
   0x7ffff7eb6e93 <get_avphys_pages+99>:	shr    rax,1
   0x7ffff7eb6e96 <get_avphys_pages+102>:	cmp    rdx,0x1
   0x7ffff7eb6e9a <get_avphys_pages+106>:	jne    0x7ffff7eb6e90 <get_avphys_pages+96>
   0x7ffff7eb6e9c <get_avphys_pages+108>:	mov    rdx,QWORD PTR [rsp+0x78]
   0x7ffff7eb6ea1 <get_avphys_pages+113>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb6eaa <get_avphys_pages+122>:	jne    0x7ffff7eb6eb6 <get_avphys_pages+134>
   0x7ffff7eb6eac <get_avphys_pages+124>:	add    rsp,0x88
   0x7ffff7eb6eb3 <get_avphys_pages+131>:	pop    rbx
   0x7ffff7eb6eb4 <get_avphys_pages+132>:	pop    rbp
   0x7ffff7eb6eb5 <get_avphys_pages+133>:	ret
   0x7ffff7eb6eb6 <get_avphys_pages+134>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb6ebb:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6ec0 <dirname>:	endbr64
   0x7ffff7eb6ec4 <dirname+4>:	lea    r8,[rip+0xb81a7]        # 0x7ffff7f6f072
   0x7ffff7eb6ecb <dirname+11>:	test   rdi,rdi
   0x7ffff7eb6ece <dirname+14>:	je     0x7ffff7eb6f58 <dirname+152>
   0x7ffff7eb6ed4 <dirname+20>:	push   rbx
   0x7ffff7eb6ed5 <dirname+21>:	mov    esi,0x2f
   0x7ffff7eb6eda <dirname+26>:	mov    rbx,rdi
   0x7ffff7eb6edd <dirname+29>:	call   0x7ffff7dbd5f0 <*ABS*+0xa89e0@plt>
   0x7ffff7eb6ee2 <dirname+34>:	test   rax,rax
   0x7ffff7eb6ee5 <dirname+37>:	je     0x7ffff7eb6f1f <dirname+95>
   0x7ffff7eb6ee7 <dirname+39>:	cmp    rbx,rax
   0x7ffff7eb6eea <dirname+42>:	je     0x7ffff7eb6f1f <dirname+95>
   0x7ffff7eb6eec <dirname+44>:	cmp    BYTE PTR [rax+0x1],0x0
   0x7ffff7eb6ef0 <dirname+48>:	jne    0x7ffff7eb6f30 <dirname+112>
   0x7ffff7eb6ef2 <dirname+50>:	mov    rdx,rax
   0x7ffff7eb6ef5 <dirname+53>:	jmp    0x7ffff7eb6f09 <dirname+73>
   0x7ffff7eb6ef7 <dirname+55>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6f00 <dirname+64>:	sub    rdx,0x1
   0x7ffff7eb6f04 <dirname+68>:	cmp    rbx,rdx
   0x7ffff7eb6f07 <dirname+71>:	je     0x7ffff7eb6f2b <dirname+107>
   0x7ffff7eb6f09 <dirname+73>:	cmp    BYTE PTR [rdx-0x1],0x2f
   0x7ffff7eb6f0d <dirname+77>:	je     0x7ffff7eb6f00 <dirname+64>
   0x7ffff7eb6f0f <dirname+79>:	sub    rdx,rbx
   0x7ffff7eb6f12 <dirname+82>:	mov    esi,0x2f
   0x7ffff7eb6f17 <dirname+87>:	mov    rdi,rbx
   0x7ffff7eb6f1a <dirname+90>:	call   0x7ffff7dbd4e0 <*ABS*+0xb15f0@plt>
   0x7ffff7eb6f1f <dirname+95>:	lea    r8,[rip+0xb814c]        # 0x7ffff7f6f072
   0x7ffff7eb6f26 <dirname+102>:	test   rax,rax
   0x7ffff7eb6f29 <dirname+105>:	je     0x7ffff7eb6f4d <dirname+141>
   0x7ffff7eb6f2b <dirname+107>:	cmp    rbx,rax
   0x7ffff7eb6f2e <dirname+110>:	je     0x7ffff7eb6f60 <dirname+160>
   0x7ffff7eb6f30 <dirname+112>:	mov    rdx,rax
   0x7ffff7eb6f33 <dirname+115>:	jmp    0x7ffff7eb6f41 <dirname+129>
   0x7ffff7eb6f35 <dirname+117>:	nop    DWORD PTR [rax]
   0x7ffff7eb6f38 <dirname+120>:	sub    rdx,0x1
   0x7ffff7eb6f3c <dirname+124>:	cmp    rbx,rdx
   0x7ffff7eb6f3f <dirname+127>:	je     0x7ffff7eb6f60 <dirname+160>
   0x7ffff7eb6f41 <dirname+129>:	cmp    BYTE PTR [rdx-0x1],0x2f
   0x7ffff7eb6f45 <dirname+133>:	je     0x7ffff7eb6f38 <dirname+120>
   0x7ffff7eb6f47 <dirname+135>:	mov    BYTE PTR [rdx],0x0
   0x7ffff7eb6f4a <dirname+138>:	mov    r8,rbx
   0x7ffff7eb6f4d <dirname+141>:	mov    rax,r8
   0x7ffff7eb6f50 <dirname+144>:	pop    rbx
   0x7ffff7eb6f51 <dirname+145>:	ret
   0x7ffff7eb6f52 <dirname+146>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6f58 <dirname+152>:	mov    rax,r8
   0x7ffff7eb6f5b <dirname+155>:	ret
   0x7ffff7eb6f5c <dirname+156>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb6f60 <dirname+160>:	lea    rdx,[rbx+0x1]
   0x7ffff7eb6f64 <dirname+164>:	lea    rcx,[rbx+0x2]
   0x7ffff7eb6f68 <dirname+168>:	cmp    rdx,rax
   0x7ffff7eb6f6b <dirname+171>:	cmove  rdx,rcx
   0x7ffff7eb6f6f <dirname+175>:	jmp    0x7ffff7eb6f47 <dirname+135>
   0x7ffff7eb6f71:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6f7b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb6f80 <getloadavg>:	endbr64
   0x7ffff7eb6f84 <getloadavg+4>:	push   rbp
   0x7ffff7eb6f85 <getloadavg+5>:	mov    rbp,rdi
   0x7ffff7eb6f88 <getloadavg+8>:	push   rbx
   0x7ffff7eb6f89 <getloadavg+9>:	mov    ebx,esi
   0x7ffff7eb6f8b <getloadavg+11>:	sub    rsp,0x88
   0x7ffff7eb6f92 <getloadavg+18>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7eb6f9b <getloadavg+27>:	mov    QWORD PTR [rsp+0x78],rax
   0x7ffff7eb6fa0 <getloadavg+32>:	xor    eax,eax
   0x7ffff7eb6fa2 <getloadavg+34>:	mov    rdi,rsp
   0x7ffff7eb6fa5 <getloadavg+37>:	call   0x7ffff7ebbf90 <sysinfo>
   0x7ffff7eb6faa <getloadavg+42>:	test   eax,eax
   0x7ffff7eb6fac <getloadavg+44>:	jne    0x7ffff7eb714e <getloadavg+462>
   0x7ffff7eb6fb2 <getloadavg+50>:	cmp    ebx,0x2
   0x7ffff7eb6fb5 <getloadavg+53>:	jle    0x7ffff7eb7050 <getloadavg+208>
   0x7ffff7eb6fbb <getloadavg+59>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7eb6fc0 <getloadavg+64>:	test   rax,rax
   0x7ffff7eb6fc3 <getloadavg+67>:	js     0x7ffff7eb70f0 <getloadavg+368>
   0x7ffff7eb6fc9 <getloadavg+73>:	pxor   xmm0,xmm0
   0x7ffff7eb6fcd <getloadavg+77>:	cvtsi2sd xmm0,rax
   0x7ffff7eb6fd2 <getloadavg+82>:	movsd  xmm1,QWORD PTR [rip+0xc0796]        # 0x7ffff7f77770
   0x7ffff7eb6fda <getloadavg+90>:	mov    rax,QWORD PTR [rsp+0x10]
   0x7ffff7eb6fdf <getloadavg+95>:	mulsd  xmm0,xmm1
   0x7ffff7eb6fe3 <getloadavg+99>:	movsd  QWORD PTR [rbp+0x0],xmm0
   0x7ffff7eb6fe8 <getloadavg+104>:	test   rax,rax
   0x7ffff7eb6feb <getloadavg+107>:	js     0x7ffff7eb70d0 <getloadavg+336>
   0x7ffff7eb6ff1 <getloadavg+113>:	pxor   xmm0,xmm0
   0x7ffff7eb6ff5 <getloadavg+117>:	cvtsi2sd xmm0,rax
   0x7ffff7eb6ffa <getloadavg+122>:	mulsd  xmm0,xmm1
   0x7ffff7eb6ffe <getloadavg+126>:	mov    rax,QWORD PTR [rsp+0x18]
   0x7ffff7eb7003 <getloadavg+131>:	movsd  QWORD PTR [rbp+0x8],xmm0
   0x7ffff7eb7008 <getloadavg+136>:	test   rax,rax
   0x7ffff7eb700b <getloadavg+139>:	js     0x7ffff7eb70b0 <getloadavg+304>
   0x7ffff7eb7011 <getloadavg+145>:	pxor   xmm0,xmm0
   0x7ffff7eb7015 <getloadavg+149>:	cvtsi2sd xmm0,rax
   0x7ffff7eb701a <getloadavg+154>:	mulsd  xmm0,xmm1
   0x7ffff7eb701e <getloadavg+158>:	mov    eax,0x3
   0x7ffff7eb7023 <getloadavg+163>:	movsd  QWORD PTR [rbp+0x10],xmm0
   0x7ffff7eb7028 <getloadavg+168>:	mov    rdx,QWORD PTR [rsp+0x78]
   0x7ffff7eb702d <getloadavg+173>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7eb7036 <getloadavg+182>:	jne    0x7ffff7eb7158 <getloadavg+472>
   0x7ffff7eb703c <getloadavg+188>:	add    rsp,0x88
   0x7ffff7eb7043 <getloadavg+195>:	pop    rbx
   0x7ffff7eb7044 <getloadavg+196>:	pop    rbp
   0x7ffff7eb7045 <getloadavg+197>:	ret
   0x7ffff7eb7046 <getloadavg+198>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb7050 <getloadavg+208>:	xor    eax,eax
   0x7ffff7eb7052 <getloadavg+210>:	test   ebx,ebx
   0x7ffff7eb7054 <getloadavg+212>:	cmovns eax,ebx
   0x7ffff7eb7057 <getloadavg+215>:	jle    0x7ffff7eb7028 <getloadavg+168>
   0x7ffff7eb7059 <getloadavg+217>:	mov    rdx,QWORD PTR [rsp+0x8]
   0x7ffff7eb705e <getloadavg+222>:	test   rdx,rdx
   0x7ffff7eb7061 <getloadavg+225>:	js     0x7ffff7eb7110 <getloadavg+400>
   0x7ffff7eb7067 <getloadavg+231>:	pxor   xmm0,xmm0
   0x7ffff7eb706b <getloadavg+235>:	cvtsi2sd xmm0,rdx
   0x7ffff7eb7070 <getloadavg+240>:	movsd  xmm1,QWORD PTR [rip+0xc06f8]        # 0x7ffff7f77770
   0x7ffff7eb7078 <getloadavg+248>:	mulsd  xmm0,xmm1
   0x7ffff7eb707c <getloadavg+252>:	movsd  QWORD PTR [rbp+0x0],xmm0
   0x7ffff7eb7081 <getloadavg+257>:	cmp    ebx,0x2
   0x7ffff7eb7084 <getloadavg+260>:	jne    0x7ffff7eb7028 <getloadavg+168>
   0x7ffff7eb7086 <getloadavg+262>:	mov    rax,QWORD PTR [rsp+0x10]
   0x7ffff7eb708b <getloadavg+267>:	test   rax,rax
   0x7ffff7eb708e <getloadavg+270>:	js     0x7ffff7eb7130 <getloadavg+432>
   0x7ffff7eb7094 <getloadavg+276>:	pxor   xmm0,xmm0
   0x7ffff7eb7098 <getloadavg+280>:	cvtsi2sd xmm0,rax
   0x7ffff7eb709d <getloadavg+285>:	mulsd  xmm0,xmm1
   0x7ffff7eb70a1 <getloadavg+289>:	mov    eax,0x2
   0x7ffff7eb70a6 <getloadavg+294>:	movsd  QWORD PTR [rbp+0x8],xmm0
   0x7ffff7eb70ab <getloadavg+299>:	jmp    0x7ffff7eb7028 <getloadavg+168>
   0x7ffff7eb70b0 <getloadavg+304>:	mov    rdx,rax
   0x7ffff7eb70b3 <getloadavg+307>:	and    eax,0x1
   0x7ffff7eb70b6 <getloadavg+310>:	pxor   xmm0,xmm0
   0x7ffff7eb70ba <getloadavg+314>:	shr    rdx,1
   0x7ffff7eb70bd <getloadavg+317>:	or     rdx,rax
   0x7ffff7eb70c0 <getloadavg+320>:	cvtsi2sd xmm0,rdx
   0x7ffff7eb70c5 <getloadavg+325>:	addsd  xmm0,xmm0
   0x7ffff7eb70c9 <getloadavg+329>:	jmp    0x7ffff7eb701a <getloadavg+154>
   0x7ffff7eb70ce <getloadavg+334>:	xchg   ax,ax
   0x7ffff7eb70d0 <getloadavg+336>:	mov    rdx,rax
   0x7ffff7eb70d3 <getloadavg+339>:	and    eax,0x1
   0x7ffff7eb70d6 <getloadavg+342>:	pxor   xmm0,xmm0
   0x7ffff7eb70da <getloadavg+346>:	shr    rdx,1
   0x7ffff7eb70dd <getloadavg+349>:	or     rdx,rax
   0x7ffff7eb70e0 <getloadavg+352>:	cvtsi2sd xmm0,rdx
   0x7ffff7eb70e5 <getloadavg+357>:	addsd  xmm0,xmm0
   0x7ffff7eb70e9 <getloadavg+361>:	jmp    0x7ffff7eb6ffa <getloadavg+122>
   0x7ffff7eb70ee <getloadavg+366>:	xchg   ax,ax
   0x7ffff7eb70f0 <getloadavg+368>:	mov    rdx,rax
   0x7ffff7eb70f3 <getloadavg+371>:	and    eax,0x1
   0x7ffff7eb70f6 <getloadavg+374>:	pxor   xmm0,xmm0
   0x7ffff7eb70fa <getloadavg+378>:	shr    rdx,1
   0x7ffff7eb70fd <getloadavg+381>:	or     rdx,rax
   0x7ffff7eb7100 <getloadavg+384>:	cvtsi2sd xmm0,rdx
   0x7ffff7eb7105 <getloadavg+389>:	addsd  xmm0,xmm0
   0x7ffff7eb7109 <getloadavg+393>:	jmp    0x7ffff7eb6fd2 <getloadavg+82>
   0x7ffff7eb710e <getloadavg+398>:	xchg   ax,ax
   0x7ffff7eb7110 <getloadavg+400>:	mov    rcx,rdx
   0x7ffff7eb7113 <getloadavg+403>:	and    edx,0x1
   0x7ffff7eb7116 <getloadavg+406>:	pxor   xmm0,xmm0
   0x7ffff7eb711a <getloadavg+410>:	shr    rcx,1
   0x7ffff7eb711d <getloadavg+413>:	or     rcx,rdx
   0x7ffff7eb7120 <getloadavg+416>:	cvtsi2sd xmm0,rcx
   0x7ffff7eb7125 <getloadavg+421>:	addsd  xmm0,xmm0
   0x7ffff7eb7129 <getloadavg+425>:	jmp    0x7ffff7eb7070 <getloadavg+240>
   0x7ffff7eb712e <getloadavg+430>:	xchg   ax,ax
   0x7ffff7eb7130 <getloadavg+432>:	mov    rdx,rax
   0x7ffff7eb7133 <getloadavg+435>:	and    eax,0x1
   0x7ffff7eb7136 <getloadavg+438>:	pxor   xmm0,xmm0
   0x7ffff7eb713a <getloadavg+442>:	shr    rdx,1
   0x7ffff7eb713d <getloadavg+445>:	or     rdx,rax
   0x7ffff7eb7140 <getloadavg+448>:	cvtsi2sd xmm0,rdx
   0x7ffff7eb7145 <getloadavg+453>:	addsd  xmm0,xmm0
   0x7ffff7eb7149 <getloadavg+457>:	jmp    0x7ffff7eb709d <getloadavg+285>
   0x7ffff7eb714e <getloadavg+462>:	mov    eax,0xffffffff
   0x7ffff7eb7153 <getloadavg+467>:	jmp    0x7ffff7eb7028 <getloadavg+168>
   0x7ffff7eb7158 <getloadavg+472>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7eb715d:	nop    DWORD PTR [rax]
   0x7ffff7eb7160:	endbr64
   0x7ffff7eb7164:	mov    rax,QWORD PTR [rip+0xf6d5d]        # 0x7ffff7fadec8
   0x7ffff7eb716b:	mov    edx,0x64
   0x7ffff7eb7170:	mov    eax,DWORD PTR [rax+0x40]
   0x7ffff7eb7173:	test   eax,eax
   0x7ffff7eb7175:	cmove  eax,edx
   0x7ffff7eb7178:	ret
   0x7ffff7eb7179:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb7180 <fgetxattr>:	endbr64
   0x7ffff7eb7184 <fgetxattr+4>:	mov    r10,rcx
   0x7ffff7eb7187 <fgetxattr+7>:	mov    eax,0xc1
   0x7ffff7eb718c <fgetxattr+12>:	syscall
   0x7ffff7eb718e <fgetxattr+14>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb7194 <fgetxattr+20>:	jae    0x7ffff7eb7197 <fgetxattr+23>
   0x7ffff7eb7196 <fgetxattr+22>:	ret
   0x7ffff7eb7197 <fgetxattr+23>:	mov    rcx,QWORD PTR [rip+0xf6c72]        # 0x7ffff7fade10
   0x7ffff7eb719e <fgetxattr+30>:	neg    eax
   0x7ffff7eb71a0 <fgetxattr+32>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb71a3 <fgetxattr+35>:	or     rax,0xffffffffffffffff
   0x7ffff7eb71a7 <fgetxattr+39>:	ret
   0x7ffff7eb71a8:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb71b0 <flistxattr>:	endbr64
   0x7ffff7eb71b4 <flistxattr+4>:	mov    eax,0xc4
   0x7ffff7eb71b9 <flistxattr+9>:	syscall
   0x7ffff7eb71bb <flistxattr+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb71c1 <flistxattr+17>:	jae    0x7ffff7eb71c4 <flistxattr+20>
   0x7ffff7eb71c3 <flistxattr+19>:	ret
   0x7ffff7eb71c4 <flistxattr+20>:	mov    rcx,QWORD PTR [rip+0xf6c45]        # 0x7ffff7fade10
   0x7ffff7eb71cb <flistxattr+27>:	neg    eax
   0x7ffff7eb71cd <flistxattr+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb71d0 <flistxattr+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb71d4 <flistxattr+36>:	ret
   0x7ffff7eb71d5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb71df:	nop
   0x7ffff7eb71e0 <fremovexattr>:	endbr64
   0x7ffff7eb71e4 <fremovexattr+4>:	mov    eax,0xc7
   0x7ffff7eb71e9 <fremovexattr+9>:	syscall
   0x7ffff7eb71eb <fremovexattr+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb71f1 <fremovexattr+17>:	jae    0x7ffff7eb71f4 <fremovexattr+20>
   0x7ffff7eb71f3 <fremovexattr+19>:	ret
   0x7ffff7eb71f4 <fremovexattr+20>:	mov    rcx,QWORD PTR [rip+0xf6c15]        # 0x7ffff7fade10
   0x7ffff7eb71fb <fremovexattr+27>:	neg    eax
   0x7ffff7eb71fd <fremovexattr+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb7200 <fremovexattr+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb7204 <fremovexattr+36>:	ret
   0x7ffff7eb7205:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb720f:	nop
   0x7ffff7eb7210 <fsetxattr>:	endbr64
   0x7ffff7eb7214 <fsetxattr+4>:	mov    r10,rcx
   0x7ffff7eb7217 <fsetxattr+7>:	mov    eax,0xbe
   0x7ffff7eb721c <fsetxattr+12>:	syscall
   0x7ffff7eb721e <fsetxattr+14>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb7224 <fsetxattr+20>:	jae    0x7ffff7eb7227 <fsetxattr+23>
   0x7ffff7eb7226 <fsetxattr+22>:	ret
   0x7ffff7eb7227 <fsetxattr+23>:	mov    rcx,QWORD PTR [rip+0xf6be2]        # 0x7ffff7fade10
   0x7ffff7eb722e <fsetxattr+30>:	neg    eax
   0x7ffff7eb7230 <fsetxattr+32>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb7233 <fsetxattr+35>:	or     rax,0xffffffffffffffff
   0x7ffff7eb7237 <fsetxattr+39>:	ret
   0x7ffff7eb7238:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb7240 <getxattr>:	endbr64
   0x7ffff7eb7244 <getxattr+4>:	mov    r10,rcx
   0x7ffff7eb7247 <getxattr+7>:	mov    eax,0xbf
   0x7ffff7eb724c <getxattr+12>:	syscall
   0x7ffff7eb724e <getxattr+14>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb7254 <getxattr+20>:	jae    0x7ffff7eb7257 <getxattr+23>
   0x7ffff7eb7256 <getxattr+22>:	ret
   0x7ffff7eb7257 <getxattr+23>:	mov    rcx,QWORD PTR [rip+0xf6bb2]        # 0x7ffff7fade10
   0x7ffff7eb725e <getxattr+30>:	neg    eax
   0x7ffff7eb7260 <getxattr+32>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb7263 <getxattr+35>:	or     rax,0xffffffffffffffff
   0x7ffff7eb7267 <getxattr+39>:	ret
   0x7ffff7eb7268:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb7270 <listxattr>:	endbr64
   0x7ffff7eb7274 <listxattr+4>:	mov    eax,0xc2
   0x7ffff7eb7279 <listxattr+9>:	syscall
   0x7ffff7eb727b <listxattr+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb7281 <listxattr+17>:	jae    0x7ffff7eb7284 <listxattr+20>
   0x7ffff7eb7283 <listxattr+19>:	ret
   0x7ffff7eb7284 <listxattr+20>:	mov    rcx,QWORD PTR [rip+0xf6b85]        # 0x7ffff7fade10
   0x7ffff7eb728b <listxattr+27>:	neg    eax
   0x7ffff7eb728d <listxattr+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb7290 <listxattr+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb7294 <listxattr+36>:	ret
   0x7ffff7eb7295:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb729f:	nop
   0x7ffff7eb72a0 <lgetxattr>:	endbr64
   0x7ffff7eb72a4 <lgetxattr+4>:	mov    r10,rcx
   0x7ffff7eb72a7 <lgetxattr+7>:	mov    eax,0xc0
   0x7ffff7eb72ac <lgetxattr+12>:	syscall
   0x7ffff7eb72ae <lgetxattr+14>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb72b4 <lgetxattr+20>:	jae    0x7ffff7eb72b7 <lgetxattr+23>
   0x7ffff7eb72b6 <lgetxattr+22>:	ret
   0x7ffff7eb72b7 <lgetxattr+23>:	mov    rcx,QWORD PTR [rip+0xf6b52]        # 0x7ffff7fade10
   0x7ffff7eb72be <lgetxattr+30>:	neg    eax
   0x7ffff7eb72c0 <lgetxattr+32>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb72c3 <lgetxattr+35>:	or     rax,0xffffffffffffffff
   0x7ffff7eb72c7 <lgetxattr+39>:	ret
   0x7ffff7eb72c8:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb72d0 <llistxattr>:	endbr64
   0x7ffff7eb72d4 <llistxattr+4>:	mov    eax,0xc3
   0x7ffff7eb72d9 <llistxattr+9>:	syscall
   0x7ffff7eb72db <llistxattr+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb72e1 <llistxattr+17>:	jae    0x7ffff7eb72e4 <llistxattr+20>
   0x7ffff7eb72e3 <llistxattr+19>:	ret
   0x7ffff7eb72e4 <llistxattr+20>:	mov    rcx,QWORD PTR [rip+0xf6b25]        # 0x7ffff7fade10
   0x7ffff7eb72eb <llistxattr+27>:	neg    eax
   0x7ffff7eb72ed <llistxattr+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb72f0 <llistxattr+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb72f4 <llistxattr+36>:	ret
   0x7ffff7eb72f5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb72ff:	nop
   0x7ffff7eb7300 <lremovexattr>:	endbr64
   0x7ffff7eb7304 <lremovexattr+4>:	mov    eax,0xc6
   0x7ffff7eb7309 <lremovexattr+9>:	syscall
   0x7ffff7eb730b <lremovexattr+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb7311 <lremovexattr+17>:	jae    0x7ffff7eb7314 <lremovexattr+20>
   0x7ffff7eb7313 <lremovexattr+19>:	ret
   0x7ffff7eb7314 <lremovexattr+20>:	mov    rcx,QWORD PTR [rip+0xf6af5]        # 0x7ffff7fade10
   0x7ffff7eb731b <lremovexattr+27>:	neg    eax
   0x7ffff7eb731d <lremovexattr+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb7320 <lremovexattr+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb7324 <lremovexattr+36>:	ret
   0x7ffff7eb7325:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb732f:	nop
   0x7ffff7eb7330 <lsetxattr>:	endbr64
   0x7ffff7eb7334 <lsetxattr+4>:	mov    r10,rcx
   0x7ffff7eb7337 <lsetxattr+7>:	mov    eax,0xbd
   0x7ffff7eb733c <lsetxattr+12>:	syscall
   0x7ffff7eb733e <lsetxattr+14>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb7344 <lsetxattr+20>:	jae    0x7ffff7eb7347 <lsetxattr+23>
   0x7ffff7eb7346 <lsetxattr+22>:	ret
   0x7ffff7eb7347 <lsetxattr+23>:	mov    rcx,QWORD PTR [rip+0xf6ac2]        # 0x7ffff7fade10
   0x7ffff7eb734e <lsetxattr+30>:	neg    eax
   0x7ffff7eb7350 <lsetxattr+32>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb7353 <lsetxattr+35>:	or     rax,0xffffffffffffffff
   0x7ffff7eb7357 <lsetxattr+39>:	ret
   0x7ffff7eb7358:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb7360 <removexattr>:	endbr64
   0x7ffff7eb7364 <removexattr+4>:	mov    eax,0xc5
   0x7ffff7eb7369 <removexattr+9>:	syscall
   0x7ffff7eb736b <removexattr+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb7371 <removexattr+17>:	jae    0x7ffff7eb7374 <removexattr+20>
   0x7ffff7eb7373 <removexattr+19>:	ret
   0x7ffff7eb7374 <removexattr+20>:	mov    rcx,QWORD PTR [rip+0xf6a95]        # 0x7ffff7fade10
   0x7ffff7eb737b <removexattr+27>:	neg    eax
   0x7ffff7eb737d <removexattr+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb7380 <removexattr+32>:	or     rax,0xffffffffffffffff
   0x7ffff7eb7384 <removexattr+36>:	ret
   0x7ffff7eb7385:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb738f:	nop
   0x7ffff7eb7390 <setxattr>:	endbr64
   0x7ffff7eb7394 <setxattr+4>:	mov    r10,rcx
   0x7ffff7eb7397 <setxattr+7>:	mov    eax,0xbc
   0x7ffff7eb739c <setxattr+12>:	syscall
   0x7ffff7eb739e <setxattr+14>:	cmp    rax,0xfffffffffffff001
   0x7ffff7eb73a4 <setxattr+20>:	jae    0x7ffff7eb73a7 <setxattr+23>
   0x7ffff7eb73a6 <setxattr+22>:	ret
   0x7ffff7eb73a7 <setxattr+23>:	mov    rcx,QWORD PTR [rip+0xf6a62]        # 0x7ffff7fade10
   0x7ffff7eb73ae <setxattr+30>:	neg    eax
   0x7ffff7eb73b0 <setxattr+32>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7eb73b3 <setxattr+35>:	or     rax,0xffffffffffffffff
   0x7ffff7eb73b7 <setxattr+39>:	ret
   0x7ffff7eb73b8:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb73c0:	endbr64
   0x7ffff7eb73c4:	mov    rax,QWORD PTR [rip+0xf6afd]        # 0x7ffff7fadec8
   0x7ffff7eb73cb:	cmp    rdi,0x10
   0x7ffff7eb73cf:	je     0x7ffff7eb7418
   0x7ffff7eb73d1:	cmp    rdi,0x1a
   0x7ffff7eb73d5:	je     0x7ffff7eb7428
   0x7ffff7eb73d7:	mov    rax,QWORD PTR [rax+0x68]
   0x7ffff7eb73db:	mov    rdx,QWORD PTR [rax]
   0x7ffff7eb73de:	test   rdx,rdx
   0x7ffff7eb73e1:	jne    0x7ffff7eb73f5
   0x7ffff7eb73e3:	jmp    0x7ffff7eb7410
   0x7ffff7eb73e5:	nop    DWORD PTR [rax]
   0x7ffff7eb73e8:	mov    rdx,QWORD PTR [rax+0x10]
   0x7ffff7eb73ec:	add    rax,0x10
   0x7ffff7eb73f0:	test   rdx,rdx
   0x7ffff7eb73f3:	je     0x7ffff7eb7410
   0x7ffff7eb73f5:	cmp    rdi,rdx
   0x7ffff7eb73f8:	jne    0x7ffff7eb73e8
   0x7ffff7eb73fa:	mov    rax,QWORD PTR [rax+0x8]
   0x7ffff7eb73fe:	mov    QWORD PTR [rsi],rax
   0x7ffff7eb7401:	mov    eax,0x1
   0x7ffff7eb7406:	ret
   0x7ffff7eb7407:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb7410:	xor    eax,eax
   0x7ffff7eb7412:	ret
   0x7ffff7eb7413:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb7418:	mov    rax,QWORD PTR [rax+0x60]
   0x7ffff7eb741c:	mov    QWORD PTR [rsi],rax
   0x7ffff7eb741f:	mov    eax,0x1
   0x7ffff7eb7424:	ret
   0x7ffff7eb7425:	nop    DWORD PTR [rax]
   0x7ffff7eb7428:	mov    rax,QWORD PTR [rax+0x320]
   0x7ffff7eb742f:	mov    QWORD PTR [rsi],rax
   0x7ffff7eb7432:	mov    eax,0x1
   0x7ffff7eb7437:	ret
   0x7ffff7eb7438:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb7440 <getauxval>:	endbr64
   0x7ffff7eb7444 <getauxval+4>:	mov    rax,QWORD PTR [rip+0xf6a7d]        # 0x7ffff7fadec8
   0x7ffff7eb744b <getauxval+11>:	cmp    rdi,0x10
   0x7ffff7eb744f <getauxval+15>:	je     0x7ffff7eb7498 <getauxval+88>
   0x7ffff7eb7451 <getauxval+17>:	cmp    rdi,0x1a
   0x7ffff7eb7455 <getauxval+21>:	je     0x7ffff7eb74a0 <getauxval+96>
   0x7ffff7eb7457 <getauxval+23>:	mov    rax,QWORD PTR [rax+0x68]
   0x7ffff7eb745b <getauxval+27>:	mov    rdx,QWORD PTR [rax]
   0x7ffff7eb745e <getauxval+30>:	test   rdx,rdx
   0x7ffff7eb7461 <getauxval+33>:	jne    0x7ffff7eb7475 <getauxval+53>
   0x7ffff7eb7463 <getauxval+35>:	jmp    0x7ffff7eb7480 <getauxval+64>
   0x7ffff7eb7465 <getauxval+37>:	nop    DWORD PTR [rax]
   0x7ffff7eb7468 <getauxval+40>:	mov    rdx,QWORD PTR [rax+0x10]
   0x7ffff7eb746c <getauxval+44>:	add    rax,0x10
   0x7ffff7eb7470 <getauxval+48>:	test   rdx,rdx
   0x7ffff7eb7473 <getauxval+51>:	je     0x7ffff7eb7480 <getauxval+64>
   0x7ffff7eb7475 <getauxval+53>:	cmp    rdi,rdx
   0x7ffff7eb7478 <getauxval+56>:	jne    0x7ffff7eb7468 <getauxval+40>
   0x7ffff7eb747a <getauxval+58>:	mov    rax,QWORD PTR [rax+0x8]
   0x7ffff7eb747e <getauxval+62>:	ret
   0x7ffff7eb747f <getauxval+63>:	nop
   0x7ffff7eb7480 <getauxval+64>:	mov    rax,QWORD PTR [rip+0xf6989]        # 0x7ffff7fade10
   0x7ffff7eb7487 <getauxval+71>:	mov    DWORD PTR fs:[rax],0x2
   0x7ffff7eb748e <getauxval+78>:	xor    eax,eax
   0x7ffff7eb7490 <getauxval+80>:	ret
   0x7ffff7eb7491 <getauxval+81>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb7498 <getauxval+88>:	mov    rax,QWORD PTR [rax+0x60]
   0x7ffff7eb749c <getauxval+92>:	ret
   0x7ffff7eb749d <getauxval+93>:	nop    DWORD PTR [rax]
   0x7ffff7eb74a0 <getauxval+96>:	mov    rax,QWORD PTR [rax+0x320]
   0x7ffff7eb74a7 <getauxval+103>:	ret
   0x7ffff7eb74a8:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb74b0 <__libc_ifunc_impl_list>:	endbr64
   0x7ffff7eb74b4 <__libc_ifunc_impl_list+4>:	push   rbp
   0x7ffff7eb74b5 <__libc_ifunc_impl_list+5>:	push   rbx
   0x7ffff7eb74b6 <__libc_ifunc_impl_list+6>:	sub    rsp,0x8
   0x7ffff7eb74ba <__libc_ifunc_impl_list+10>:	cmp    rdx,0x4
   0x7ffff7eb74be <__libc_ifunc_impl_list+14>:	jbe    0x7ffff7eb93a4 <__libc_ifunc_impl_list+7924>
   0x7ffff7eb74c4 <__libc_ifunc_impl_list+20>:	mov    rbx,rsi
   0x7ffff7eb74c7 <__libc_ifunc_impl_list+23>:	lea    rsi,[rip+0xb7d0b]        # 0x7ffff7f6f1d9
   0x7ffff7eb74ce <__libc_ifunc_impl_list+30>:	mov    rbp,rdi
   0x7ffff7eb74d1 <__libc_ifunc_impl_list+33>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb74d6 <__libc_ifunc_impl_list+38>:	test   eax,eax
   0x7ffff7eb74d8 <__libc_ifunc_impl_list+40>:	je     0x7ffff7eb7980 <__libc_ifunc_impl_list+1232>
   0x7ffff7eb74de <__libc_ifunc_impl_list+46>:	lea    rsi,[rip+0xb8144]        # 0x7ffff7f6f629
   0x7ffff7eb74e5 <__libc_ifunc_impl_list+53>:	mov    rdi,rbp
   0x7ffff7eb74e8 <__libc_ifunc_impl_list+56>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb74ed <__libc_ifunc_impl_list+61>:	test   eax,eax
   0x7ffff7eb74ef <__libc_ifunc_impl_list+63>:	je     0x7ffff7eb7b48 <__libc_ifunc_impl_list+1688>
   0x7ffff7eb74f5 <__libc_ifunc_impl_list+69>:	lea    rsi,[rip+0xb8a5f]        # 0x7ffff7f6ff5b
   0x7ffff7eb74fc <__libc_ifunc_impl_list+76>:	mov    rdi,rbp
   0x7ffff7eb74ff <__libc_ifunc_impl_list+79>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb7504 <__libc_ifunc_impl_list+84>:	test   eax,eax
   0x7ffff7eb7506 <__libc_ifunc_impl_list+86>:	je     0x7ffff7eb7a28 <__libc_ifunc_impl_list+1400>
   0x7ffff7eb750c <__libc_ifunc_impl_list+92>:	lea    rsi,[rip+0xb7dd0]        # 0x7ffff7f6f2e3
   0x7ffff7eb7513 <__libc_ifunc_impl_list+99>:	mov    rdi,rbp
   0x7ffff7eb7516 <__libc_ifunc_impl_list+102>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb751b <__libc_ifunc_impl_list+107>:	test   eax,eax
   0x7ffff7eb751d <__libc_ifunc_impl_list+109>:	je     0x7ffff7eb7c00 <__libc_ifunc_impl_list+1872>
   0x7ffff7eb7523 <__libc_ifunc_impl_list+115>:	lea    rsi,[rip+0xb7e5d]        # 0x7ffff7f6f387
   0x7ffff7eb752a <__libc_ifunc_impl_list+122>:	mov    rdi,rbp
   0x7ffff7eb752d <__libc_ifunc_impl_list+125>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb7532 <__libc_ifunc_impl_list+130>:	test   eax,eax
   0x7ffff7eb7534 <__libc_ifunc_impl_list+132>:	je     0x7ffff7eb7e00 <__libc_ifunc_impl_list+2384>
   0x7ffff7eb753a <__libc_ifunc_impl_list+138>:	lea    rsi,[rip+0xb7f5c]        # 0x7ffff7f6f49d
   0x7ffff7eb7541 <__libc_ifunc_impl_list+145>:	mov    rdi,rbp
   0x7ffff7eb7544 <__libc_ifunc_impl_list+148>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb7549 <__libc_ifunc_impl_list+153>:	test   eax,eax
   0x7ffff7eb754b <__libc_ifunc_impl_list+155>:	je     0x7ffff7eb8020 <__libc_ifunc_impl_list+2928>
   0x7ffff7eb7551 <__libc_ifunc_impl_list+161>:	lea    rsi,[rip+0xb7f8d]        # 0x7ffff7f6f4e5
   0x7ffff7eb7558 <__libc_ifunc_impl_list+168>:	mov    rdi,rbp
   0x7ffff7eb755b <__libc_ifunc_impl_list+171>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb7560 <__libc_ifunc_impl_list+176>:	test   eax,eax
   0x7ffff7eb7562 <__libc_ifunc_impl_list+178>:	je     0x7ffff7eb80f0 <__libc_ifunc_impl_list+3136>
   0x7ffff7eb7568 <__libc_ifunc_impl_list+184>:	lea    rsi,[rip+0xb8a67]        # 0x7ffff7f6ffd6
   0x7ffff7eb756f <__libc_ifunc_impl_list+191>:	mov    rdi,rbp
   0x7ffff7eb7572 <__libc_ifunc_impl_list+194>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb7577 <__libc_ifunc_impl_list+199>:	test   eax,eax
   0x7ffff7eb7579 <__libc_ifunc_impl_list+201>:	je     0x7ffff7eb83c0 <__libc_ifunc_impl_list+3856>
   0x7ffff7eb757f <__libc_ifunc_impl_list+207>:	lea    rsi,[rip+0xb80a0]        # 0x7ffff7f6f626
   0x7ffff7eb7586 <__libc_ifunc_impl_list+214>:	mov    rdi,rbp
   0x7ffff7eb7589 <__libc_ifunc_impl_list+217>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb758e <__libc_ifunc_impl_list+222>:	test   eax,eax
   0x7ffff7eb7590 <__libc_ifunc_impl_list+224>:	je     0x7ffff7eb8558 <__libc_ifunc_impl_list+4264>
   0x7ffff7eb7596 <__libc_ifunc_impl_list+230>:	lea    rsi,[rip+0xb80f0]        # 0x7ffff7f6f68d
   0x7ffff7eb759d <__libc_ifunc_impl_list+237>:	mov    rdi,rbp
   0x7ffff7eb75a0 <__libc_ifunc_impl_list+240>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb75a5 <__libc_ifunc_impl_list+245>:	test   eax,eax
   0x7ffff7eb75a7 <__libc_ifunc_impl_list+247>:	je     0x7ffff7eb8610 <__libc_ifunc_impl_list+4448>
   0x7ffff7eb75ad <__libc_ifunc_impl_list+253>:	lea    rsi,[rip+0xb811c]        # 0x7ffff7f6f6d0
   0x7ffff7eb75b4 <__libc_ifunc_impl_list+260>:	mov    rdi,rbp
   0x7ffff7eb75b7 <__libc_ifunc_impl_list+263>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb75bc <__libc_ifunc_impl_list+268>:	test   eax,eax
   0x7ffff7eb75be <__libc_ifunc_impl_list+270>:	je     0x7ffff7eb8750 <__libc_ifunc_impl_list+4768>
   0x7ffff7eb75c4 <__libc_ifunc_impl_list+276>:	lea    rsi,[rip+0xb814d]        # 0x7ffff7f6f718
   0x7ffff7eb75cb <__libc_ifunc_impl_list+283>:	mov    rdi,rbp
   0x7ffff7eb75ce <__libc_ifunc_impl_list+286>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb75d3 <__libc_ifunc_impl_list+291>:	test   eax,eax
   0x7ffff7eb75d5 <__libc_ifunc_impl_list+293>:	je     0x7ffff7eb8890 <__libc_ifunc_impl_list+5088>
   0x7ffff7eb75db <__libc_ifunc_impl_list+299>:	lea    rsi,[rip+0xb81a7]        # 0x7ffff7f6f789
   0x7ffff7eb75e2 <__libc_ifunc_impl_list+306>:	mov    rdi,rbp
   0x7ffff7eb75e5 <__libc_ifunc_impl_list+309>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb75ea <__libc_ifunc_impl_list+314>:	test   eax,eax
   0x7ffff7eb75ec <__libc_ifunc_impl_list+316>:	je     0x7ffff7eb82b0 <__libc_ifunc_impl_list+3584>
   0x7ffff7eb75f2 <__libc_ifunc_impl_list+322>:	lea    rsi,[rip+0xb81fa]        # 0x7ffff7f6f7f3
   0x7ffff7eb75f9 <__libc_ifunc_impl_list+329>:	mov    rdi,rbp
   0x7ffff7eb75fc <__libc_ifunc_impl_list+332>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb7601 <__libc_ifunc_impl_list+337>:	test   eax,eax
   0x7ffff7eb7603 <__libc_ifunc_impl_list+339>:	je     0x7ffff7eb89ab <__libc_ifunc_impl_list+5371>
   0x7ffff7eb7609 <__libc_ifunc_impl_list+345>:	lea    rsi,[rip+0xb8237]        # 0x7ffff7f6f847
   0x7ffff7eb7610 <__libc_ifunc_impl_list+352>:	mov    rdi,rbp
   0x7ffff7eb7613 <__libc_ifunc_impl_list+355>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb7618 <__libc_ifunc_impl_list+360>:	test   eax,eax
   0x7ffff7eb761a <__libc_ifunc_impl_list+362>:	je     0x7ffff7eb8a8c <__libc_ifunc_impl_list+5596>
   0x7ffff7eb7620 <__libc_ifunc_impl_list+368>:	lea    rsi,[rip+0xb827e]        # 0x7ffff7f6f8a5
   0x7ffff7eb7627 <__libc_ifunc_impl_list+375>:	mov    rdi,rbp
   0x7ffff7eb762a <__libc_ifunc_impl_list+378>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb762f <__libc_ifunc_impl_list+383>:	test   eax,eax
   0x7ffff7eb7631 <__libc_ifunc_impl_list+385>:	je     0x7ffff7eb8b6d <__libc_ifunc_impl_list+5821>
   0x7ffff7eb7637 <__libc_ifunc_impl_list+391>:	lea    rsi,[rip+0xb82d1]        # 0x7ffff7f6f90f
   0x7ffff7eb763e <__libc_ifunc_impl_list+398>:	mov    rdi,rbp
   0x7ffff7eb7641 <__libc_ifunc_impl_list+401>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb7646 <__libc_ifunc_impl_list+406>:	test   eax,eax
   0x7ffff7eb7648 <__libc_ifunc_impl_list+408>:	je     0x7ffff7eb8c54 <__libc_ifunc_impl_list+6052>
   0x7ffff7eb764e <__libc_ifunc_impl_list+414>:	lea    rsi,[rip+0xb8312]        # 0x7ffff7f6f967
   0x7ffff7eb7655 <__libc_ifunc_impl_list+421>:	mov    rdi,rbp
   0x7ffff7eb7658 <__libc_ifunc_impl_list+424>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb765d <__libc_ifunc_impl_list+429>:	test   eax,eax
   0x7ffff7eb765f <__libc_ifunc_impl_list+431>:	je     0x7ffff7eb8d1a <__libc_ifunc_impl_list+6250>
   0x7ffff7eb7665 <__libc_ifunc_impl_list+437>:	lea    rsi,[rip+0xb834d]        # 0x7ffff7f6f9b9
   0x7ffff7eb766c <__libc_ifunc_impl_list+444>:	mov    rdi,rbp
   0x7ffff7eb766f <__libc_ifunc_impl_list+447>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb7674 <__libc_ifunc_impl_list+452>:	test   eax,eax
   0x7ffff7eb7676 <__libc_ifunc_impl_list+454>:	je     0x7ffff7eb8dc6 <__libc_ifunc_impl_list+6422>
   0x7ffff7eb767c <__libc_ifunc_impl_list+460>:	lea    rsi,[rip+0xb837e]        # 0x7ffff7f6fa01
   0x7ffff7eb7683 <__libc_ifunc_impl_list+467>:	mov    rdi,rbp
   0x7ffff7eb7686 <__libc_ifunc_impl_list+470>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb768b <__libc_ifunc_impl_list+475>:	test   eax,eax
   0x7ffff7eb768d <__libc_ifunc_impl_list+477>:	je     0x7ffff7eb8e68 <__libc_ifunc_impl_list+6584>
   0x7ffff7eb7693 <__libc_ifunc_impl_list+483>:	lea    rsi,[rip+0xb83e0]        # 0x7ffff7f6fa7a
   0x7ffff7eb769a <__libc_ifunc_impl_list+490>:	mov    rdi,rbp
   0x7ffff7eb769d <__libc_ifunc_impl_list+493>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb76a2 <__libc_ifunc_impl_list+498>:	test   eax,eax
   0x7ffff7eb76a4 <__libc_ifunc_impl_list+500>:	je     0x7ffff7eb8f7c <__libc_ifunc_impl_list+6860>
   0x7ffff7eb76aa <__libc_ifunc_impl_list+506>:	lea    rsi,[rip+0xb8433]        # 0x7ffff7f6fae4
   0x7ffff7eb76b1 <__libc_ifunc_impl_list+513>:	mov    rdi,rbp
   0x7ffff7eb76b4 <__libc_ifunc_impl_list+516>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb76b9 <__libc_ifunc_impl_list+521>:	test   eax,eax
   0x7ffff7eb76bb <__libc_ifunc_impl_list+523>:	je     0x7ffff7eb9063 <__libc_ifunc_impl_list+7091>
   0x7ffff7eb76c1 <__libc_ifunc_impl_list+529>:	lea    rsi,[rip+0xb8443]        # 0x7ffff7f6fb0b
   0x7ffff7eb76c8 <__libc_ifunc_impl_list+536>:	mov    rdi,rbp
   0x7ffff7eb76cb <__libc_ifunc_impl_list+539>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb76d0 <__libc_ifunc_impl_list+544>:	test   eax,eax
   0x7ffff7eb76d2 <__libc_ifunc_impl_list+546>:	je     0x7ffff7eb90b2 <__libc_ifunc_impl_list+7170>
   0x7ffff7eb76d8 <__libc_ifunc_impl_list+552>:	lea    rsi,[rip+0xb8485]        # 0x7ffff7f6fb64
   0x7ffff7eb76df <__libc_ifunc_impl_list+559>:	mov    rdi,rbp
   0x7ffff7eb76e2 <__libc_ifunc_impl_list+562>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb76e7 <__libc_ifunc_impl_list+567>:	test   eax,eax
   0x7ffff7eb76e9 <__libc_ifunc_impl_list+569>:	je     0x7ffff7eb9143 <__libc_ifunc_impl_list+7315>
   0x7ffff7eb76ef <__libc_ifunc_impl_list+575>:	lea    rsi,[rip+0xb84d1]        # 0x7ffff7f6fbc7
   0x7ffff7eb76f6 <__libc_ifunc_impl_list+582>:	mov    rdi,rbp
   0x7ffff7eb76f9 <__libc_ifunc_impl_list+585>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb76fe <__libc_ifunc_impl_list+590>:	test   eax,eax
   0x7ffff7eb7700 <__libc_ifunc_impl_list+592>:	je     0x7ffff7eb91d4 <__libc_ifunc_impl_list+7460>
   0x7ffff7eb7706 <__libc_ifunc_impl_list+598>:	lea    rsi,[rip+0xb852b]        # 0x7ffff7f6fc38
   0x7ffff7eb770d <__libc_ifunc_impl_list+605>:	mov    rdi,rbp
   0x7ffff7eb7710 <__libc_ifunc_impl_list+608>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb7715 <__libc_ifunc_impl_list+613>:	test   eax,eax
   0x7ffff7eb7717 <__libc_ifunc_impl_list+615>:	je     0x7ffff7eb92bc <__libc_ifunc_impl_list+7692>
   0x7ffff7eb771d <__libc_ifunc_impl_list+621>:	lea    rsi,[rip+0xb8585]        # 0x7ffff7f6fca9
   0x7ffff7eb7724 <__libc_ifunc_impl_list+628>:	mov    rdi,rbp
   0x7ffff7eb7727 <__libc_ifunc_impl_list+631>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb772c <__libc_ifunc_impl_list+636>:	test   eax,eax
   0x7ffff7eb772e <__libc_ifunc_impl_list+638>:	je     0x7ffff7eb93c3 <__libc_ifunc_impl_list+7955>
   0x7ffff7eb7734 <__libc_ifunc_impl_list+644>:	lea    rsi,[rip+0xb8595]        # 0x7ffff7f6fcd0
   0x7ffff7eb773b <__libc_ifunc_impl_list+651>:	mov    rdi,rbp
   0x7ffff7eb773e <__libc_ifunc_impl_list+654>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb7743 <__libc_ifunc_impl_list+659>:	test   eax,eax
   0x7ffff7eb7745 <__libc_ifunc_impl_list+661>:	je     0x7ffff7eb9412 <__libc_ifunc_impl_list+8034>
   0x7ffff7eb774b <__libc_ifunc_impl_list+667>:	lea    rsi,[rip+0xb85a2]        # 0x7ffff7f6fcf4
   0x7ffff7eb7752 <__libc_ifunc_impl_list+674>:	mov    rdi,rbp
   0x7ffff7eb7755 <__libc_ifunc_impl_list+677>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb775a <__libc_ifunc_impl_list+682>:	test   eax,eax
   0x7ffff7eb775c <__libc_ifunc_impl_list+684>:	je     0x7ffff7eb9461 <__libc_ifunc_impl_list+8113>
   0x7ffff7eb7762 <__libc_ifunc_impl_list+690>:	lea    rsi,[rip+0xb85b8]        # 0x7ffff7f6fd21
   0x7ffff7eb7769 <__libc_ifunc_impl_list+697>:	mov    rdi,rbp
   0x7ffff7eb776c <__libc_ifunc_impl_list+700>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb7771 <__libc_ifunc_impl_list+705>:	mov    edx,eax
   0x7ffff7eb7773 <__libc_ifunc_impl_list+707>:	test   eax,eax
   0x7ffff7eb7775 <__libc_ifunc_impl_list+709>:	je     0x7ffff7eb949e <__libc_ifunc_impl_list+8174>
   0x7ffff7eb777b <__libc_ifunc_impl_list+715>:	lea    rsi,[rip+0xb85e2]        # 0x7ffff7f6fd64
   0x7ffff7eb7782 <__libc_ifunc_impl_list+722>:	mov    rdi,rbp
   0x7ffff7eb7785 <__libc_ifunc_impl_list+725>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb778a <__libc_ifunc_impl_list+730>:	mov    edx,eax
   0x7ffff7eb778c <__libc_ifunc_impl_list+732>:	test   eax,eax
   0x7ffff7eb778e <__libc_ifunc_impl_list+734>:	je     0x7ffff7eb954e <__libc_ifunc_impl_list+8350>
   0x7ffff7eb7794 <__libc_ifunc_impl_list+740>:	lea    rsi,[rip+0xb8611]        # 0x7ffff7f6fdac
   0x7ffff7eb779b <__libc_ifunc_impl_list+747>:	mov    rdi,rbp
   0x7ffff7eb779e <__libc_ifunc_impl_list+750>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb77a3 <__libc_ifunc_impl_list+755>:	mov    edx,eax
   0x7ffff7eb77a5 <__libc_ifunc_impl_list+757>:	test   eax,eax
   0x7ffff7eb77a7 <__libc_ifunc_impl_list+759>:	je     0x7ffff7eb96a0 <__libc_ifunc_impl_list+8688>
   0x7ffff7eb77ad <__libc_ifunc_impl_list+765>:	lea    rsi,[rip+0xb863b]        # 0x7ffff7f6fdef
   0x7ffff7eb77b4 <__libc_ifunc_impl_list+772>:	mov    rdi,rbp
   0x7ffff7eb77b7 <__libc_ifunc_impl_list+775>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb77bc <__libc_ifunc_impl_list+780>:	mov    edx,eax
   0x7ffff7eb77be <__libc_ifunc_impl_list+782>:	test   eax,eax
   0x7ffff7eb77c0 <__libc_ifunc_impl_list+784>:	je     0x7ffff7eb95f7 <__libc_ifunc_impl_list+8519>
   0x7ffff7eb77c6 <__libc_ifunc_impl_list+790>:	lea    rsi,[rip+0xb866a]        # 0x7ffff7f6fe37
   0x7ffff7eb77cd <__libc_ifunc_impl_list+797>:	mov    rdi,rbp
   0x7ffff7eb77d0 <__libc_ifunc_impl_list+800>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb77d5 <__libc_ifunc_impl_list+805>:	test   eax,eax
   0x7ffff7eb77d7 <__libc_ifunc_impl_list+807>:	je     0x7ffff7eb981e <__libc_ifunc_impl_list+9070>
   0x7ffff7eb77dd <__libc_ifunc_impl_list+813>:	lea    rsi,[rip+0xb8677]        # 0x7ffff7f6fe5b
   0x7ffff7eb77e4 <__libc_ifunc_impl_list+820>:	mov    rdi,rbp
   0x7ffff7eb77e7 <__libc_ifunc_impl_list+823>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb77ec <__libc_ifunc_impl_list+828>:	mov    ecx,eax
   0x7ffff7eb77ee <__libc_ifunc_impl_list+830>:	test   eax,eax
   0x7ffff7eb77f0 <__libc_ifunc_impl_list+832>:	je     0x7ffff7eb9749 <__libc_ifunc_impl_list+8857>
   0x7ffff7eb77f6 <__libc_ifunc_impl_list+838>:	lea    rsi,[rip+0xb86b1]        # 0x7ffff7f6feae
   0x7ffff7eb77fd <__libc_ifunc_impl_list+845>:	mov    rdi,rbp
   0x7ffff7eb7800 <__libc_ifunc_impl_list+848>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb7805 <__libc_ifunc_impl_list+853>:	mov    ecx,eax
   0x7ffff7eb7807 <__libc_ifunc_impl_list+855>:	test   eax,eax
   0x7ffff7eb7809 <__libc_ifunc_impl_list+857>:	je     0x7ffff7eb9925 <__libc_ifunc_impl_list+9333>
   0x7ffff7eb780f <__libc_ifunc_impl_list+863>:	lea    rsi,[rip+0xb7e12]        # 0x7ffff7f6f628
   0x7ffff7eb7816 <__libc_ifunc_impl_list+870>:	mov    rdi,rbp
   0x7ffff7eb7819 <__libc_ifunc_impl_list+873>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb781e <__libc_ifunc_impl_list+878>:	test   eax,eax
   0x7ffff7eb7820 <__libc_ifunc_impl_list+880>:	je     0x7ffff7eb986d <__libc_ifunc_impl_list+9149>
   0x7ffff7eb7826 <__libc_ifunc_impl_list+886>:	lea    rsi,[rip+0xb872d]        # 0x7ffff7f6ff5a
   0x7ffff7eb782d <__libc_ifunc_impl_list+893>:	mov    rdi,rbp
   0x7ffff7eb7830 <__libc_ifunc_impl_list+896>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb7835 <__libc_ifunc_impl_list+901>:	mov    edx,eax
   0x7ffff7eb7837 <__libc_ifunc_impl_list+903>:	test   eax,eax
   0x7ffff7eb7839 <__libc_ifunc_impl_list+905>:	je     0x7ffff7eba49f <__libc_ifunc_impl_list+12271>
   0x7ffff7eb783f <__libc_ifunc_impl_list+911>:	lea    rsi,[rip+0xb878f]        # 0x7ffff7f6ffd5
   0x7ffff7eb7846 <__libc_ifunc_impl_list+918>:	mov    rdi,rbp
   0x7ffff7eb7849 <__libc_ifunc_impl_list+921>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb784e <__libc_ifunc_impl_list+926>:	test   eax,eax
   0x7ffff7eb7850 <__libc_ifunc_impl_list+928>:	je     0x7ffff7eba3e7 <__libc_ifunc_impl_list+12087>
   0x7ffff7eb7856 <__libc_ifunc_impl_list+934>:	lea    rsi,[rip+0xb8803]        # 0x7ffff7f70060
   0x7ffff7eb785d <__libc_ifunc_impl_list+941>:	mov    rdi,rbp
   0x7ffff7eb7860 <__libc_ifunc_impl_list+944>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb7865 <__libc_ifunc_impl_list+949>:	test   eax,eax
   0x7ffff7eb7867 <__libc_ifunc_impl_list+951>:	je     0x7ffff7eba19e <__libc_ifunc_impl_list+11502>
   0x7ffff7eb786d <__libc_ifunc_impl_list+957>:	lea    rsi,[rip+0xb88a7]        # 0x7ffff7f7011b
   0x7ffff7eb7874 <__libc_ifunc_impl_list+964>:	mov    rdi,rbp
   0x7ffff7eb7877 <__libc_ifunc_impl_list+967>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb787c <__libc_ifunc_impl_list+972>:	test   eax,eax
   0x7ffff7eb787e <__libc_ifunc_impl_list+974>:	je     0x7ffff7eb9f9b <__libc_ifunc_impl_list+10987>
   0x7ffff7eb7884 <__libc_ifunc_impl_list+980>:	lea    rsi,[rip+0xb89b8]        # 0x7ffff7f70243
   0x7ffff7eb788b <__libc_ifunc_impl_list+987>:	mov    rdi,rbp
   0x7ffff7eb788e <__libc_ifunc_impl_list+990>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb7893 <__libc_ifunc_impl_list+995>:	test   eax,eax
   0x7ffff7eb7895 <__libc_ifunc_impl_list+997>:	je     0x7ffff7eb9d4c <__libc_ifunc_impl_list+10396>
   0x7ffff7eb789b <__libc_ifunc_impl_list+1003>:	lea    rsi,[rip+0xb8a45]        # 0x7ffff7f702e7
   0x7ffff7eb78a2 <__libc_ifunc_impl_list+1010>:	mov    rdi,rbp
   0x7ffff7eb78a5 <__libc_ifunc_impl_list+1013>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb78aa <__libc_ifunc_impl_list+1018>:	test   eax,eax
   0x7ffff7eb78ac <__libc_ifunc_impl_list+1020>:	je     0x7ffff7eb9b47 <__libc_ifunc_impl_list+9879>
   0x7ffff7eb78b2 <__libc_ifunc_impl_list+1026>:	lea    rsi,[rip+0xb8b44]        # 0x7ffff7f703fd
   0x7ffff7eb78b9 <__libc_ifunc_impl_list+1033>:	mov    rdi,rbp
   0x7ffff7eb78bc <__libc_ifunc_impl_list+1036>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb78c1 <__libc_ifunc_impl_list+1041>:	mov    ecx,eax
   0x7ffff7eb78c3 <__libc_ifunc_impl_list+1043>:	test   eax,eax
   0x7ffff7eb78c5 <__libc_ifunc_impl_list+1045>:	je     0x7ffff7eb9a58 <__libc_ifunc_impl_list+9640>
   0x7ffff7eb78cb <__libc_ifunc_impl_list+1051>:	lea    rsi,[rip+0xb8b93]        # 0x7ffff7f70465
   0x7ffff7eb78d2 <__libc_ifunc_impl_list+1058>:	mov    rdi,rbp
   0x7ffff7eb78d5 <__libc_ifunc_impl_list+1061>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7eb78da <__libc_ifunc_impl_list+1066>:	mov    edx,eax
   0x7ffff7eb78dc <__libc_ifunc_impl_list+1068>:	xor    eax,eax
   0x7ffff7eb78de <__libc_ifunc_impl_list+1070>:	test   edx,edx
   0x7ffff7eb78e0 <__libc_ifunc_impl_list+1072>:	jne    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb78e6 <__libc_ifunc_impl_list+1078>:	lea    rax,[rip+0xb8b86]        # 0x7ffff7f70473
   0x7ffff7eb78ed <__libc_ifunc_impl_list+1085>:	lea    rcx,[rip+0xb8b9c]        # 0x7ffff7f70490
   0x7ffff7eb78f4 <__libc_ifunc_impl_list+1092>:	mov    BYTE PTR [rbx+0x10],0x1
   0x7ffff7eb78f8 <__libc_ifunc_impl_list+1096>:	mov    QWORD PTR [rbx],rax
   0x7ffff7eb78fb <__libc_ifunc_impl_list+1099>:	lea    rax,[rip+0xfffffffffffa269e]        # 0x7ffff7e59fa0
   0x7ffff7eb7902 <__libc_ifunc_impl_list+1106>:	lea    rdi,[rip+0x7e737]        # 0x7ffff7f36040
   0x7ffff7eb7909 <__libc_ifunc_impl_list+1113>:	mov    QWORD PTR [rbx+0x8],rax
   0x7ffff7eb790d <__libc_ifunc_impl_list+1117>:	mov    rax,QWORD PTR [rip+0xf65b4]        # 0x7ffff7fadec8
   0x7ffff7eb7914 <__libc_ifunc_impl_list+1124>:	mov    QWORD PTR [rbx+0x18],rcx
   0x7ffff7eb7918 <__libc_ifunc_impl_list+1128>:	mov    eax,DWORD PTR [rax+0xb8]
   0x7ffff7eb791e <__libc_ifunc_impl_list+1134>:	mov    QWORD PTR [rbx+0x20],rdi
   0x7ffff7eb7922 <__libc_ifunc_impl_list+1138>:	mov    ecx,eax
   0x7ffff7eb7924 <__libc_ifunc_impl_list+1140>:	shr    ecx,0x5
   0x7ffff7eb7927 <__libc_ifunc_impl_list+1143>:	and    ecx,0x1
   0x7ffff7eb792a <__libc_ifunc_impl_list+1146>:	mov    BYTE PTR [rbx+0x28],cl
   0x7ffff7eb792d <__libc_ifunc_impl_list+1149>:	test   eax,eax
   0x7ffff7eb792f <__libc_ifunc_impl_list+1151>:	js     0x7ffff7eb9a2a <__libc_ifunc_impl_list+9594>
   0x7ffff7eb7935 <__libc_ifunc_impl_list+1157>:	lea    rax,[rip+0xb8b71]        # 0x7ffff7f704ad
   0x7ffff7eb793c <__libc_ifunc_impl_list+1164>:	mov    BYTE PTR [rbx+0x40],0x0
   0x7ffff7eb7940 <__libc_ifunc_impl_list+1168>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb7944 <__libc_ifunc_impl_list+1172>:	lea    rax,[rip+0x8d135]        # 0x7ffff7f44a80
   0x7ffff7eb794b <__libc_ifunc_impl_list+1179>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb794f <__libc_ifunc_impl_list+1183>:	lea    rax,[rip+0xbdac2]        # 0x7ffff7f75418
   0x7ffff7eb7956 <__libc_ifunc_impl_list+1190>:	mov    BYTE PTR [rbx+0x58],dl
   0x7ffff7eb7959 <__libc_ifunc_impl_list+1193>:	mov    QWORD PTR [rbx+0x48],rax
   0x7ffff7eb795d <__libc_ifunc_impl_list+1197>:	lea    rax,[rip+0x8479c]        # 0x7ffff7f3c100
   0x7ffff7eb7964 <__libc_ifunc_impl_list+1204>:	mov    QWORD PTR [rbx+0x50],rax
   0x7ffff7eb7968 <__libc_ifunc_impl_list+1208>:	mov    eax,0x4
   0x7ffff7eb796d <__libc_ifunc_impl_list+1213>:	and    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eb7971 <__libc_ifunc_impl_list+1217>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb7976 <__libc_ifunc_impl_list+1222>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb7980 <__libc_ifunc_impl_list+1232>:	mov    rax,QWORD PTR [rip+0xf6541]        # 0x7ffff7fadec8
   0x7ffff7eb7987 <__libc_ifunc_impl_list+1239>:	lea    rcx,[rip+0xb7856]        # 0x7ffff7f6f1e4
   0x7ffff7eb798e <__libc_ifunc_impl_list+1246>:	mov    QWORD PTR [rbx],rcx
   0x7ffff7eb7991 <__libc_ifunc_impl_list+1249>:	lea    rcx,[rip+0x776a8]        # 0x7ffff7f2f040
   0x7ffff7eb7998 <__libc_ifunc_impl_list+1256>:	mov    eax,DWORD PTR [rax+0xb8]
   0x7ffff7eb799e <__libc_ifunc_impl_list+1262>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eb79a2 <__libc_ifunc_impl_list+1266>:	lea    rcx,[rip+0xb784b]        # 0x7ffff7f6f1f4
   0x7ffff7eb79a9 <__libc_ifunc_impl_list+1273>:	mov    QWORD PTR [rbx+0x18],rcx
   0x7ffff7eb79ad <__libc_ifunc_impl_list+1277>:	lea    rcx,[rip+0x8508c]        # 0x7ffff7f3ca40
   0x7ffff7eb79b4 <__libc_ifunc_impl_list+1284>:	mov    edx,eax
   0x7ffff7eb79b6 <__libc_ifunc_impl_list+1286>:	mov    QWORD PTR [rbx+0x20],rcx
   0x7ffff7eb79ba <__libc_ifunc_impl_list+1290>:	and    edx,0x120
   0x7ffff7eb79c0 <__libc_ifunc_impl_list+1296>:	cmp    edx,0x120
   0x7ffff7eb79c6 <__libc_ifunc_impl_list+1302>:	mov    edx,eax
   0x7ffff7eb79c8 <__libc_ifunc_impl_list+1304>:	sete   BYTE PTR [rbx+0x10]
   0x7ffff7eb79cc <__libc_ifunc_impl_list+1308>:	and    edx,0x920
   0x7ffff7eb79d2 <__libc_ifunc_impl_list+1314>:	cmp    edx,0x920
   0x7ffff7eb79d8 <__libc_ifunc_impl_list+1320>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb79dc <__libc_ifunc_impl_list+1324>:	xor    edx,edx
   0x7ffff7eb79de <__libc_ifunc_impl_list+1326>:	test   eax,eax
   0x7ffff7eb79e0 <__libc_ifunc_impl_list+1328>:	js     0x7ffff7eb7b30 <__libc_ifunc_impl_list+1664>
   0x7ffff7eb79e6 <__libc_ifunc_impl_list+1334>:	lea    rax,[rip+0xb781b]        # 0x7ffff7f6f208
   0x7ffff7eb79ed <__libc_ifunc_impl_list+1341>:	mov    BYTE PTR [rbx+0x40],dl
   0x7ffff7eb79f0 <__libc_ifunc_impl_list+1344>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb79f4 <__libc_ifunc_impl_list+1348>:	lea    rax,[rip+0x8c285]        # 0x7ffff7f43c80
   0x7ffff7eb79fb <__libc_ifunc_impl_list+1355>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb79ff <__libc_ifunc_impl_list+1359>:	lea    rax,[rip+0xb7812]        # 0x7ffff7f6f218
   0x7ffff7eb7a06 <__libc_ifunc_impl_list+1366>:	mov    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eb7a0a <__libc_ifunc_impl_list+1370>:	mov    QWORD PTR [rbx+0x48],rax
   0x7ffff7eb7a0e <__libc_ifunc_impl_list+1374>:	lea    rax,[rip+0xfffffffffff92bfb]        # 0x7ffff7e4a610
   0x7ffff7eb7a15 <__libc_ifunc_impl_list+1381>:	mov    QWORD PTR [rbx+0x50],rax
   0x7ffff7eb7a19 <__libc_ifunc_impl_list+1385>:	mov    eax,0x4
   0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>:	add    rsp,0x8
   0x7ffff7eb7a22 <__libc_ifunc_impl_list+1394>:	pop    rbx
   0x7ffff7eb7a23 <__libc_ifunc_impl_list+1395>:	pop    rbp
   0x7ffff7eb7a24 <__libc_ifunc_impl_list+1396>:	ret
   0x7ffff7eb7a25 <__libc_ifunc_impl_list+1397>:	nop    DWORD PTR [rax]
   0x7ffff7eb7a28 <__libc_ifunc_impl_list+1400>:	mov    rax,QWORD PTR [rip+0xf6499]        # 0x7ffff7fadec8
   0x7ffff7eb7a2f <__libc_ifunc_impl_list+1407>:	xor    esi,esi
   0x7ffff7eb7a31 <__libc_ifunc_impl_list+1409>:	xor    ecx,ecx
   0x7ffff7eb7a33 <__libc_ifunc_impl_list+1411>:	mov    edx,DWORD PTR [rax+0xb8]
   0x7ffff7eb7a39 <__libc_ifunc_impl_list+1417>:	mov    eax,DWORD PTR [rax+0x9c]
   0x7ffff7eb7a3f <__libc_ifunc_impl_list+1423>:	mov    edi,edx
   0x7ffff7eb7a41 <__libc_ifunc_impl_list+1425>:	and    edi,0x120
   0x7ffff7eb7a47 <__libc_ifunc_impl_list+1431>:	cmp    edi,0x120
   0x7ffff7eb7a4d <__libc_ifunc_impl_list+1437>:	je     0x7ffff7eb83a0 <__libc_ifunc_impl_list+3824>
   0x7ffff7eb7a53 <__libc_ifunc_impl_list+1443>:	lea    rdi,[rip+0xb781c]        # 0x7ffff7f6f276
   0x7ffff7eb7a5a <__libc_ifunc_impl_list+1450>:	mov    BYTE PTR [rbx+0x28],cl
   0x7ffff7eb7a5d <__libc_ifunc_impl_list+1453>:	xor    ecx,ecx
   0x7ffff7eb7a5f <__libc_ifunc_impl_list+1455>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb7a62 <__libc_ifunc_impl_list+1458>:	lea    rdi,[rip+0x77197]        # 0x7ffff7f2ec00
   0x7ffff7eb7a69 <__libc_ifunc_impl_list+1465>:	mov    QWORD PTR [rbx+0x8],rdi
   0x7ffff7eb7a6d <__libc_ifunc_impl_list+1469>:	lea    rdi,[rip+0xb7816]        # 0x7ffff7f6f28a
   0x7ffff7eb7a74 <__libc_ifunc_impl_list+1476>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb7a78 <__libc_ifunc_impl_list+1480>:	lea    rdi,[rip+0x84b81]        # 0x7ffff7f3c600
   0x7ffff7eb7a7f <__libc_ifunc_impl_list+1487>:	mov    BYTE PTR [rbx+0x10],sil
   0x7ffff7eb7a83 <__libc_ifunc_impl_list+1491>:	mov    QWORD PTR [rbx+0x20],rdi
   0x7ffff7eb7a87 <__libc_ifunc_impl_list+1495>:	test   edx,edx
   0x7ffff7eb7a89 <__libc_ifunc_impl_list+1497>:	jns    0x7ffff7eb7aa2 <__libc_ifunc_impl_list+1522>
   0x7ffff7eb7a8b <__libc_ifunc_impl_list+1499>:	mov    esi,eax
   0x7ffff7eb7a8d <__libc_ifunc_impl_list+1501>:	and    edx,0x40000100
   0x7ffff7eb7a93 <__libc_ifunc_impl_list+1507>:	shr    esi,0x16
   0x7ffff7eb7a96 <__libc_ifunc_impl_list+1510>:	and    esi,0x1
   0x7ffff7eb7a99 <__libc_ifunc_impl_list+1513>:	cmp    edx,0x40000100
   0x7ffff7eb7a9f <__libc_ifunc_impl_list+1519>:	cmove  ecx,esi
   0x7ffff7eb7aa2 <__libc_ifunc_impl_list+1522>:	mov    BYTE PTR [rbx+0x40],cl
   0x7ffff7eb7aa5 <__libc_ifunc_impl_list+1525>:	mov    edx,eax
   0x7ffff7eb7aa7 <__libc_ifunc_impl_list+1527>:	lea    rcx,[rip+0xb7808]        # 0x7ffff7f6f2b6
   0x7ffff7eb7aae <__libc_ifunc_impl_list+1534>:	shr    eax,0x9
   0x7ffff7eb7ab1 <__libc_ifunc_impl_list+1537>:	mov    QWORD PTR [rbx+0x48],rcx
   0x7ffff7eb7ab5 <__libc_ifunc_impl_list+1541>:	and    eax,0x1
   0x7ffff7eb7ab8 <__libc_ifunc_impl_list+1544>:	lea    rcx,[rip+0x801f1]        # 0x7ffff7f37cb0
   0x7ffff7eb7abf <__libc_ifunc_impl_list+1551>:	shr    edx,0x13
   0x7ffff7eb7ac2 <__libc_ifunc_impl_list+1554>:	mov    QWORD PTR [rbx+0x50],rcx
   0x7ffff7eb7ac6 <__libc_ifunc_impl_list+1558>:	lea    rdi,[rip+0xb77d5]        # 0x7ffff7f6f2a2
   0x7ffff7eb7acd <__libc_ifunc_impl_list+1565>:	lea    rcx,[rip+0xb77f2]        # 0x7ffff7f6f2c6
   0x7ffff7eb7ad4 <__libc_ifunc_impl_list+1572>:	and    edx,0x1
   0x7ffff7eb7ad7 <__libc_ifunc_impl_list+1575>:	mov    BYTE PTR [rbx+0x70],al
   0x7ffff7eb7ada <__libc_ifunc_impl_list+1578>:	lea    rax,[rip+0xb77f4]        # 0x7ffff7f6f2d5
   0x7ffff7eb7ae1 <__libc_ifunc_impl_list+1585>:	mov    QWORD PTR [rbx+0x30],rdi
   0x7ffff7eb7ae5 <__libc_ifunc_impl_list+1589>:	lea    rdi,[rip+0x8be94]        # 0x7ffff7f43980
   0x7ffff7eb7aec <__libc_ifunc_impl_list+1596>:	mov    QWORD PTR [rbx+0x60],rcx
   0x7ffff7eb7af0 <__libc_ifunc_impl_list+1600>:	lea    rcx,[rip+0x81fe9]        # 0x7ffff7f39ae0
   0x7ffff7eb7af7 <__libc_ifunc_impl_list+1607>:	mov    QWORD PTR [rbx+0x78],rax
   0x7ffff7eb7afb <__libc_ifunc_impl_list+1611>:	lea    rax,[rip+0xfffffffffff9270e]        # 0x7ffff7e4a210
   0x7ffff7eb7b02 <__libc_ifunc_impl_list+1618>:	mov    QWORD PTR [rbx+0x80],rax
   0x7ffff7eb7b09 <__libc_ifunc_impl_list+1625>:	mov    eax,0x6
   0x7ffff7eb7b0e <__libc_ifunc_impl_list+1630>:	mov    QWORD PTR [rbx+0x38],rdi
   0x7ffff7eb7b12 <__libc_ifunc_impl_list+1634>:	mov    BYTE PTR [rbx+0x58],dl
   0x7ffff7eb7b15 <__libc_ifunc_impl_list+1637>:	mov    QWORD PTR [rbx+0x68],rcx
   0x7ffff7eb7b19 <__libc_ifunc_impl_list+1641>:	mov    BYTE PTR [rbx+0x88],0x1
   0x7ffff7eb7b20 <__libc_ifunc_impl_list+1648>:	add    rsp,0x8
   0x7ffff7eb7b24 <__libc_ifunc_impl_list+1652>:	pop    rbx
   0x7ffff7eb7b25 <__libc_ifunc_impl_list+1653>:	pop    rbp
   0x7ffff7eb7b26 <__libc_ifunc_impl_list+1654>:	ret
   0x7ffff7eb7b27 <__libc_ifunc_impl_list+1655>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb7b30 <__libc_ifunc_impl_list+1664>:	and    eax,0x40000100
   0x7ffff7eb7b35 <__libc_ifunc_impl_list+1669>:	cmp    eax,0x40000100
   0x7ffff7eb7b3a <__libc_ifunc_impl_list+1674>:	sete   dl
   0x7ffff7eb7b3d <__libc_ifunc_impl_list+1677>:	jmp    0x7ffff7eb79e6 <__libc_ifunc_impl_list+1334>
   0x7ffff7eb7b42 <__libc_ifunc_impl_list+1682>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb7b48 <__libc_ifunc_impl_list+1688>:	mov    rax,QWORD PTR [rip+0xf6379]        # 0x7ffff7fadec8
   0x7ffff7eb7b4f <__libc_ifunc_impl_list+1695>:	lea    rcx,[rip+0xb76d2]        # 0x7ffff7f6f228
   0x7ffff7eb7b56 <__libc_ifunc_impl_list+1702>:	mov    QWORD PTR [rbx],rcx
   0x7ffff7eb7b59 <__libc_ifunc_impl_list+1705>:	lea    rcx,[rip+0x768e0]        # 0x7ffff7f2e440
   0x7ffff7eb7b60 <__libc_ifunc_impl_list+1712>:	mov    eax,DWORD PTR [rax+0xb8]
   0x7ffff7eb7b66 <__libc_ifunc_impl_list+1718>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eb7b6a <__libc_ifunc_impl_list+1722>:	lea    rcx,[rip+0xb76c5]        # 0x7ffff7f6f236
   0x7ffff7eb7b71 <__libc_ifunc_impl_list+1729>:	mov    QWORD PTR [rbx+0x18],rcx
   0x7ffff7eb7b75 <__libc_ifunc_impl_list+1733>:	lea    rcx,[rip+0x847c4]        # 0x7ffff7f3c340
   0x7ffff7eb7b7c <__libc_ifunc_impl_list+1740>:	mov    edx,eax
   0x7ffff7eb7b7e <__libc_ifunc_impl_list+1742>:	mov    QWORD PTR [rbx+0x20],rcx
   0x7ffff7eb7b82 <__libc_ifunc_impl_list+1746>:	shr    edx,0x5
   0x7ffff7eb7b85 <__libc_ifunc_impl_list+1749>:	and    edx,0x1
   0x7ffff7eb7b88 <__libc_ifunc_impl_list+1752>:	mov    BYTE PTR [rbx+0x10],dl
   0x7ffff7eb7b8b <__libc_ifunc_impl_list+1755>:	mov    edx,eax
   0x7ffff7eb7b8d <__libc_ifunc_impl_list+1757>:	and    edx,0x820
   0x7ffff7eb7b93 <__libc_ifunc_impl_list+1763>:	cmp    edx,0x820
   0x7ffff7eb7b99 <__libc_ifunc_impl_list+1769>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb7b9d <__libc_ifunc_impl_list+1773>:	test   eax,eax
   0x7ffff7eb7b9f <__libc_ifunc_impl_list+1775>:	js     0x7ffff7eb7ff0 <__libc_ifunc_impl_list+2880>
   0x7ffff7eb7ba5 <__libc_ifunc_impl_list+1781>:	lea    rax,[rip+0xb769c]        # 0x7ffff7f6f248
   0x7ffff7eb7bac <__libc_ifunc_impl_list+1788>:	mov    BYTE PTR [rbx+0x40],0x0
   0x7ffff7eb7bb0 <__libc_ifunc_impl_list+1792>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb7bb4 <__libc_ifunc_impl_list+1796>:	lea    rax,[rip+0x8bac5]        # 0x7ffff7f43680
   0x7ffff7eb7bbb <__libc_ifunc_impl_list+1803>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb7bbf <__libc_ifunc_impl_list+1807>:	xor    eax,eax
   0x7ffff7eb7bc1 <__libc_ifunc_impl_list+1809>:	mov    BYTE PTR [rbx+0x58],al
   0x7ffff7eb7bc4 <__libc_ifunc_impl_list+1812>:	lea    rcx,[rip+0xb768b]        # 0x7ffff7f6f256
   0x7ffff7eb7bcb <__libc_ifunc_impl_list+1819>:	lea    rax,[rip+0xb7696]        # 0x7ffff7f6f268
   0x7ffff7eb7bd2 <__libc_ifunc_impl_list+1826>:	mov    QWORD PTR [rbx+0x48],rcx
   0x7ffff7eb7bd6 <__libc_ifunc_impl_list+1830>:	lea    rcx,[rip+0x93163]        # 0x7ffff7f4ad40
   0x7ffff7eb7bdd <__libc_ifunc_impl_list+1837>:	mov    QWORD PTR [rbx+0x60],rax
   0x7ffff7eb7be1 <__libc_ifunc_impl_list+1841>:	lea    rax,[rip+0xfffffffffff91d18]        # 0x7ffff7e49900
   0x7ffff7eb7be8 <__libc_ifunc_impl_list+1848>:	mov    QWORD PTR [rbx+0x68],rax
   0x7ffff7eb7bec <__libc_ifunc_impl_list+1852>:	mov    eax,0x5
   0x7ffff7eb7bf1 <__libc_ifunc_impl_list+1857>:	mov    QWORD PTR [rbx+0x50],rcx
   0x7ffff7eb7bf5 <__libc_ifunc_impl_list+1861>:	mov    BYTE PTR [rbx+0x70],0x1
   0x7ffff7eb7bf9 <__libc_ifunc_impl_list+1865>:	add    rsp,0x8
   0x7ffff7eb7bfd <__libc_ifunc_impl_list+1869>:	pop    rbx
   0x7ffff7eb7bfe <__libc_ifunc_impl_list+1870>:	pop    rbp
   0x7ffff7eb7bff <__libc_ifunc_impl_list+1871>:	ret
   0x7ffff7eb7c00 <__libc_ifunc_impl_list+1872>:	mov    rsi,QWORD PTR [rip+0xf62c1]        # 0x7ffff7fadec8
   0x7ffff7eb7c07 <__libc_ifunc_impl_list+1879>:	lea    rax,[rip+0xbd262]        # 0x7ffff7f74e70
   0x7ffff7eb7c0e <__libc_ifunc_impl_list+1886>:	lea    rdi,[rip+0xb76dc]        # 0x7ffff7f6f2f1
   0x7ffff7eb7c15 <__libc_ifunc_impl_list+1893>:	mov    QWORD PTR [rbx],rax
   0x7ffff7eb7c18 <__libc_ifunc_impl_list+1896>:	lea    rax,[rip+0x811c1]        # 0x7ffff7f38de0
   0x7ffff7eb7c1f <__libc_ifunc_impl_list+1903>:	mov    ecx,DWORD PTR [rsi+0xb8]
   0x7ffff7eb7c25 <__libc_ifunc_impl_list+1909>:	mov    QWORD PTR [rbx+0x8],rax
   0x7ffff7eb7c29 <__libc_ifunc_impl_list+1913>:	mov    QWORD PTR [rbx+0x48],rdi
   0x7ffff7eb7c2d <__libc_ifunc_impl_list+1917>:	lea    rdi,[rip+0x7dc6c]        # 0x7ffff7f358a0
   0x7ffff7eb7c34 <__libc_ifunc_impl_list+1924>:	mov    eax,ecx
   0x7ffff7eb7c36 <__libc_ifunc_impl_list+1926>:	mov    edx,ecx
   0x7ffff7eb7c38 <__libc_ifunc_impl_list+1928>:	mov    QWORD PTR [rbx+0x50],rdi
   0x7ffff7eb7c3c <__libc_ifunc_impl_list+1932>:	lea    rdi,[rip+0xbd29d]        # 0x7ffff7f74ee0
   0x7ffff7eb7c43 <__libc_ifunc_impl_list+1939>:	shr    eax,0x10
   0x7ffff7eb7c46 <__libc_ifunc_impl_list+1942>:	shr    edx,0x1f
   0x7ffff7eb7c49 <__libc_ifunc_impl_list+1945>:	mov    QWORD PTR [rbx+0x60],rdi
   0x7ffff7eb7c4d <__libc_ifunc_impl_list+1949>:	lea    rdi,[rip+0x7dcbc]        # 0x7ffff7f35910
   0x7ffff7eb7c54 <__libc_ifunc_impl_list+1956>:	and    eax,0x1
   0x7ffff7eb7c57 <__libc_ifunc_impl_list+1959>:	mov    BYTE PTR [rbx+0x28],dl
   0x7ffff7eb7c5a <__libc_ifunc_impl_list+1962>:	mov    BYTE PTR [rbx+0x10],al
   0x7ffff7eb7c5d <__libc_ifunc_impl_list+1965>:	lea    rax,[rip+0xbd234]        # 0x7ffff7f74e98
   0x7ffff7eb7c64 <__libc_ifunc_impl_list+1972>:	mov    QWORD PTR [rbx+0x18],rax
   0x7ffff7eb7c68 <__libc_ifunc_impl_list+1976>:	lea    rax,[rip+0x83c31]        # 0x7ffff7f3b8a0
   0x7ffff7eb7c6f <__libc_ifunc_impl_list+1983>:	mov    QWORD PTR [rbx+0x20],rax
   0x7ffff7eb7c73 <__libc_ifunc_impl_list+1987>:	lea    rax,[rip+0xbd23e]        # 0x7ffff7f74eb8
   0x7ffff7eb7c7a <__libc_ifunc_impl_list+1994>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb7c7e <__libc_ifunc_impl_list+1998>:	lea    rax,[rip+0x83c8b]        # 0x7ffff7f3b910
   0x7ffff7eb7c85 <__libc_ifunc_impl_list+2005>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb7c89 <__libc_ifunc_impl_list+2009>:	mov    eax,DWORD PTR [rsi+0x9c]
   0x7ffff7eb7c8f <__libc_ifunc_impl_list+2015>:	mov    BYTE PTR [rbx+0x40],dl
   0x7ffff7eb7c92 <__libc_ifunc_impl_list+2018>:	test   eax,0x10000000
   0x7ffff7eb7c97 <__libc_ifunc_impl_list+2023>:	mov    QWORD PTR [rbx+0x68],rdi
   0x7ffff7eb7c9b <__libc_ifunc_impl_list+2027>:	setne  sil
   0x7ffff7eb7c9f <__libc_ifunc_impl_list+2031>:	mov    BYTE PTR [rbx+0x58],sil
   0x7ffff7eb7ca3 <__libc_ifunc_impl_list+2035>:	mov    BYTE PTR [rbx+0x70],sil
   0x7ffff7eb7ca7 <__libc_ifunc_impl_list+2039>:	je     0x7ffff7eb80c8 <__libc_ifunc_impl_list+3096>
   0x7ffff7eb7cad <__libc_ifunc_impl_list+2045>:	lea    rdi,[rip+0xbd254]        # 0x7ffff7f74f08
   0x7ffff7eb7cb4 <__libc_ifunc_impl_list+2052>:	and    ch,0x8
   0x7ffff7eb7cb7 <__libc_ifunc_impl_list+2055>:	mov    QWORD PTR [rbx+0x78],rdi
   0x7ffff7eb7cbb <__libc_ifunc_impl_list+2059>:	setne  cl
   0x7ffff7eb7cbe <__libc_ifunc_impl_list+2062>:	lea    rdi,[rip+0x8505b]        # 0x7ffff7f3cd20
   0x7ffff7eb7cc5 <__libc_ifunc_impl_list+2069>:	mov    QWORD PTR [rbx+0x80],rdi
   0x7ffff7eb7ccc <__libc_ifunc_impl_list+2076>:	mov    BYTE PTR [rbx+0x88],cl
   0x7ffff7eb7cd2 <__libc_ifunc_impl_list+2082>:	mov    BYTE PTR [rbx+0xa0],cl
   0x7ffff7eb7cd8 <__libc_ifunc_impl_list+2088>:	shr    eax,0x9
   0x7ffff7eb7cdb <__libc_ifunc_impl_list+2091>:	lea    rcx,[rip+0xb762b]        # 0x7ffff7f6f30d
   0x7ffff7eb7ce2 <__libc_ifunc_impl_list+2098>:	lea    rdi,[rip+0xbd23f]        # 0x7ffff7f74f28
   0x7ffff7eb7ce9 <__libc_ifunc_impl_list+2105>:	mov    QWORD PTR [rbx+0xa8],rcx
   0x7ffff7eb7cf0 <__libc_ifunc_impl_list+2112>:	and    eax,0x1
   0x7ffff7eb7cf3 <__libc_ifunc_impl_list+2115>:	lea    rcx,[rip+0x8c1a6]        # 0x7ffff7f43ea0
   0x7ffff7eb7cfa <__libc_ifunc_impl_list+2122>:	mov    QWORD PTR [rbx+0xb0],rcx
   0x7ffff7eb7d01 <__libc_ifunc_impl_list+2129>:	lea    rcx,[rip+0xbd248]        # 0x7ffff7f74f50
   0x7ffff7eb7d08 <__libc_ifunc_impl_list+2136>:	mov    BYTE PTR [rbx+0xe8],al
   0x7ffff7eb7d0e <__libc_ifunc_impl_list+2142>:	mov    BYTE PTR [rbx+0x100],al
   0x7ffff7eb7d14 <__libc_ifunc_impl_list+2148>:	lea    rax,[rip+0xb763c]        # 0x7ffff7f6f357
   0x7ffff7eb7d1b <__libc_ifunc_impl_list+2155>:	mov    QWORD PTR [rbx+0xc0],rcx
   0x7ffff7eb7d22 <__libc_ifunc_impl_list+2162>:	lea    rcx,[rip+0x8c1e7]        # 0x7ffff7f43f10
   0x7ffff7eb7d29 <__libc_ifunc_impl_list+2169>:	mov    QWORD PTR [rbx+0x108],rax
   0x7ffff7eb7d30 <__libc_ifunc_impl_list+2176>:	lea    rax,[rip+0xfffffffffffa1ba9]        # 0x7ffff7e598e0
   0x7ffff7eb7d37 <__libc_ifunc_impl_list+2183>:	mov    QWORD PTR [rbx+0xc8],rcx
   0x7ffff7eb7d3e <__libc_ifunc_impl_list+2190>:	lea    rcx,[rip+0xb75e5]        # 0x7ffff7f6f32a
   0x7ffff7eb7d45 <__libc_ifunc_impl_list+2197>:	mov    QWORD PTR [rbx+0x110],rax
   0x7ffff7eb7d4c <__libc_ifunc_impl_list+2204>:	lea    rax,[rip+0xbd225]        # 0x7ffff7f74f78
   0x7ffff7eb7d53 <__libc_ifunc_impl_list+2211>:	mov    QWORD PTR [rbx+0xd8],rcx
   0x7ffff7eb7d5a <__libc_ifunc_impl_list+2218>:	lea    rcx,[rip+0x600af]        # 0x7ffff7f17e10
   0x7ffff7eb7d61 <__libc_ifunc_impl_list+2225>:	mov    QWORD PTR [rbx+0x120],rax
   0x7ffff7eb7d68 <__libc_ifunc_impl_list+2232>:	lea    rax,[rip+0xfffffffffffa1c51]        # 0x7ffff7e599c0
   0x7ffff7eb7d6f <__libc_ifunc_impl_list+2239>:	mov    QWORD PTR [rbx+0xe0],rcx
   0x7ffff7eb7d76 <__libc_ifunc_impl_list+2246>:	lea    rcx,[rip+0xb75c6]        # 0x7ffff7f6f343
   0x7ffff7eb7d7d <__libc_ifunc_impl_list+2253>:	mov    QWORD PTR [rbx+0x128],rax
   0x7ffff7eb7d84 <__libc_ifunc_impl_list+2260>:	lea    rax,[rip+0xb75e9]        # 0x7ffff7f6f374
   0x7ffff7eb7d8b <__libc_ifunc_impl_list+2267>:	mov    QWORD PTR [rbx+0x90],rdi
   0x7ffff7eb7d92 <__libc_ifunc_impl_list+2274>:	lea    rdi,[rip+0x84ff7]        # 0x7ffff7f3cd90
   0x7ffff7eb7d99 <__libc_ifunc_impl_list+2281>:	mov    QWORD PTR [rbx+0xf0],rcx
   0x7ffff7eb7da0 <__libc_ifunc_impl_list+2288>:	lea    rcx,[rip+0x5a9c9]        # 0x7ffff7f12770
   0x7ffff7eb7da7 <__libc_ifunc_impl_list+2295>:	mov    QWORD PTR [rbx+0x138],rax
   0x7ffff7eb7dae <__libc_ifunc_impl_list+2302>:	lea    rax,[rip+0xfffffffffffa1b9b]        # 0x7ffff7e59950
   0x7ffff7eb7db5 <__libc_ifunc_impl_list+2309>:	mov    QWORD PTR [rbx+0x140],rax
   0x7ffff7eb7dbc <__libc_ifunc_impl_list+2316>:	mov    eax,0xe
   0x7ffff7eb7dc1 <__libc_ifunc_impl_list+2321>:	mov    QWORD PTR [rbx+0x98],rdi
   0x7ffff7eb7dc8 <__libc_ifunc_impl_list+2328>:	mov    BYTE PTR [rbx+0xb8],dl
   0x7ffff7eb7dce <__libc_ifunc_impl_list+2334>:	mov    BYTE PTR [rbx+0xd0],dl
   0x7ffff7eb7dd4 <__libc_ifunc_impl_list+2340>:	mov    QWORD PTR [rbx+0xf8],rcx
   0x7ffff7eb7ddb <__libc_ifunc_impl_list+2347>:	mov    BYTE PTR [rbx+0x118],0x1
   0x7ffff7eb7de2 <__libc_ifunc_impl_list+2354>:	mov    BYTE PTR [rbx+0x130],0x1
   0x7ffff7eb7de9 <__libc_ifunc_impl_list+2361>:	mov    BYTE PTR [rbx+0x148],0x1
   0x7ffff7eb7df0 <__libc_ifunc_impl_list+2368>:	add    rsp,0x8
   0x7ffff7eb7df4 <__libc_ifunc_impl_list+2372>:	pop    rbx
   0x7ffff7eb7df5 <__libc_ifunc_impl_list+2373>:	pop    rbp
   0x7ffff7eb7df6 <__libc_ifunc_impl_list+2374>:	ret
   0x7ffff7eb7df7 <__libc_ifunc_impl_list+2375>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb7e00 <__libc_ifunc_impl_list+2384>:	mov    rdx,QWORD PTR [rip+0xf60c1]        # 0x7ffff7fadec8
   0x7ffff7eb7e07 <__libc_ifunc_impl_list+2391>:	lea    rdi,[rip+0xb7581]        # 0x7ffff7f6f38f
   0x7ffff7eb7e0e <__libc_ifunc_impl_list+2398>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb7e11 <__libc_ifunc_impl_list+2401>:	lea    rdi,[rip+0x7da98]        # 0x7ffff7f358b0
   0x7ffff7eb7e18 <__libc_ifunc_impl_list+2408>:	mov    eax,DWORD PTR [rdx+0x9c]
   0x7ffff7eb7e1e <__libc_ifunc_impl_list+2414>:	mov    edx,DWORD PTR [rdx+0xb8]
   0x7ffff7eb7e24 <__libc_ifunc_impl_list+2420>:	mov    QWORD PTR [rbx+0x8],rdi
   0x7ffff7eb7e28 <__libc_ifunc_impl_list+2424>:	lea    rdi,[rip+0xb7578]        # 0x7ffff7f6f3a7
   0x7ffff7eb7e2f <__libc_ifunc_impl_list+2431>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb7e33 <__libc_ifunc_impl_list+2435>:	lea    rdi,[rip+0x7db06]        # 0x7ffff7f35940
   0x7ffff7eb7e3a <__libc_ifunc_impl_list+2442>:	test   eax,0x10000000
   0x7ffff7eb7e3f <__libc_ifunc_impl_list+2447>:	mov    QWORD PTR [rbx+0x20],rdi
   0x7ffff7eb7e43 <__libc_ifunc_impl_list+2451>:	setne  cl
   0x7ffff7eb7e46 <__libc_ifunc_impl_list+2454>:	mov    BYTE PTR [rbx+0x10],cl
   0x7ffff7eb7e49 <__libc_ifunc_impl_list+2457>:	mov    BYTE PTR [rbx+0x28],cl
   0x7ffff7eb7e4c <__libc_ifunc_impl_list+2460>:	lea    rcx,[rip+0xb7571]        # 0x7ffff7f6f3c4
   0x7ffff7eb7e53 <__libc_ifunc_impl_list+2467>:	mov    QWORD PTR [rbx+0x30],rcx
   0x7ffff7eb7e57 <__libc_ifunc_impl_list+2471>:	lea    rcx,[rip+0x84ed2]        # 0x7ffff7f3cd30
   0x7ffff7eb7e5e <__libc_ifunc_impl_list+2478>:	mov    QWORD PTR [rbx+0x38],rcx
   0x7ffff7eb7e62 <__libc_ifunc_impl_list+2482>:	jne    0x7ffff7eb82a0 <__libc_ifunc_impl_list+3568>
   0x7ffff7eb7e68 <__libc_ifunc_impl_list+2488>:	mov    BYTE PTR [rbx+0x40],0x0
   0x7ffff7eb7e6c <__libc_ifunc_impl_list+2492>:	xor    ecx,ecx
   0x7ffff7eb7e6e <__libc_ifunc_impl_list+2494>:	lea    rdi,[rip+0xbd12b]        # 0x7ffff7f74fa0
   0x7ffff7eb7e75 <__libc_ifunc_impl_list+2501>:	shr    eax,0x9
   0x7ffff7eb7e78 <__libc_ifunc_impl_list+2504>:	mov    BYTE PTR [rbx+0x58],cl
   0x7ffff7eb7e7b <__libc_ifunc_impl_list+2507>:	mov    ecx,edx
   0x7ffff7eb7e7d <__libc_ifunc_impl_list+2509>:	mov    QWORD PTR [rbx+0x48],rdi
   0x7ffff7eb7e81 <__libc_ifunc_impl_list+2513>:	shr    ecx,0x1f
   0x7ffff7eb7e84 <__libc_ifunc_impl_list+2516>:	and    eax,0x1
   0x7ffff7eb7e87 <__libc_ifunc_impl_list+2519>:	shr    edx,0x10
   0x7ffff7eb7e8a <__libc_ifunc_impl_list+2522>:	lea    rdi,[rip+0x84f2f]        # 0x7ffff7f3cdc0
   0x7ffff7eb7e91 <__libc_ifunc_impl_list+2529>:	mov    BYTE PTR [rbx+0xe8],al
   0x7ffff7eb7e97 <__libc_ifunc_impl_list+2535>:	and    edx,0x1
   0x7ffff7eb7e9a <__libc_ifunc_impl_list+2538>:	mov    QWORD PTR [rbx+0x50],rdi
   0x7ffff7eb7e9e <__libc_ifunc_impl_list+2542>:	lea    rdi,[rip+0xb753b]        # 0x7ffff7f6f3e0
   0x7ffff7eb7ea5 <__libc_ifunc_impl_list+2549>:	mov    QWORD PTR [rbx+0x60],rdi
   0x7ffff7eb7ea9 <__libc_ifunc_impl_list+2553>:	lea    rdi,[rip+0x8c000]        # 0x7ffff7f43eb0
   0x7ffff7eb7eb0 <__libc_ifunc_impl_list+2560>:	mov    QWORD PTR [rbx+0x68],rdi
   0x7ffff7eb7eb4 <__libc_ifunc_impl_list+2564>:	lea    rdi,[rip+0xb753e]        # 0x7ffff7f6f3f9
   0x7ffff7eb7ebb <__libc_ifunc_impl_list+2571>:	mov    QWORD PTR [rbx+0x78],rdi
   0x7ffff7eb7ebf <__libc_ifunc_impl_list+2575>:	lea    rdi,[rip+0x8c07a]        # 0x7ffff7f43f40
   0x7ffff7eb7ec6 <__libc_ifunc_impl_list+2582>:	mov    QWORD PTR [rbx+0x80],rdi
   0x7ffff7eb7ecd <__libc_ifunc_impl_list+2589>:	lea    rdi,[rip+0xbd0f4]        # 0x7ffff7f74fc8
   0x7ffff7eb7ed4 <__libc_ifunc_impl_list+2596>:	mov    BYTE PTR [rbx+0x100],al
   0x7ffff7eb7eda <__libc_ifunc_impl_list+2602>:	lea    rax,[rip+0xb7576]        # 0x7ffff7f6f457
   0x7ffff7eb7ee1 <__libc_ifunc_impl_list+2609>:	mov    QWORD PTR [rbx+0x90],rdi
   0x7ffff7eb7ee8 <__libc_ifunc_impl_list+2616>:	lea    rdi,[rip+0x80f01]        # 0x7ffff7f38df0
   0x7ffff7eb7eef <__libc_ifunc_impl_list+2623>:	mov    QWORD PTR [rbx+0x108],rax
   0x7ffff7eb7ef6 <__libc_ifunc_impl_list+2630>:	lea    rax,[rip+0xfffffffffffa1a63]        # 0x7ffff7e59960
   0x7ffff7eb7efd <__libc_ifunc_impl_list+2637>:	mov    BYTE PTR [rbx+0x70],cl
   0x7ffff7eb7f00 <__libc_ifunc_impl_list+2640>:	mov    BYTE PTR [rbx+0x88],cl
   0x7ffff7eb7f06 <__libc_ifunc_impl_list+2646>:	mov    QWORD PTR [rbx+0x98],rdi
   0x7ffff7eb7f0d <__libc_ifunc_impl_list+2653>:	lea    rdi,[rip+0xb7503]        # 0x7ffff7f6f417
   0x7ffff7eb7f14 <__libc_ifunc_impl_list+2660>:	mov    BYTE PTR [rbx+0xb8],cl
   0x7ffff7eb7f1a <__libc_ifunc_impl_list+2666>:	mov    BYTE PTR [rbx+0xd0],cl
   0x7ffff7eb7f20 <__libc_ifunc_impl_list+2672>:	lea    rcx,[rip+0xb750b]        # 0x7ffff7f6f432
   0x7ffff7eb7f27 <__libc_ifunc_impl_list+2679>:	mov    QWORD PTR [rbx+0x110],rax
   0x7ffff7eb7f2e <__libc_ifunc_impl_list+2686>:	lea    rax,[rip+0xb7531]        # 0x7ffff7f6f466
   0x7ffff7eb7f35 <__libc_ifunc_impl_list+2693>:	mov    QWORD PTR [rbx+0xa8],rdi
   0x7ffff7eb7f3c <__libc_ifunc_impl_list+2700>:	lea    rdi,[rip+0x8396d]        # 0x7ffff7f3b8b0
   0x7ffff7eb7f43 <__libc_ifunc_impl_list+2707>:	mov    QWORD PTR [rbx+0xd8],rcx
   0x7ffff7eb7f4a <__libc_ifunc_impl_list+2714>:	lea    rcx,[rip+0x5fecf]        # 0x7ffff7f17e20
   0x7ffff7eb7f51 <__libc_ifunc_impl_list+2721>:	mov    QWORD PTR [rbx+0x120],rax
   0x7ffff7eb7f58 <__libc_ifunc_impl_list+2728>:	lea    rax,[rip+0xfffffffffffa1991]        # 0x7ffff7e598f0 <memcpy>
   0x7ffff7eb7f5f <__libc_ifunc_impl_list+2735>:	mov    QWORD PTR [rbx+0xb0],rdi
   0x7ffff7eb7f66 <__libc_ifunc_impl_list+2742>:	lea    rdi,[rip+0xbd07b]        # 0x7ffff7f74fe8
   0x7ffff7eb7f6d <__libc_ifunc_impl_list+2749>:	mov    QWORD PTR [rbx+0xe0],rcx
   0x7ffff7eb7f74 <__libc_ifunc_impl_list+2756>:	lea    rcx,[rip+0xb74cc]        # 0x7ffff7f6f447
   0x7ffff7eb7f7b <__libc_ifunc_impl_list+2763>:	mov    QWORD PTR [rbx+0x128],rax
   0x7ffff7eb7f82 <__libc_ifunc_impl_list+2770>:	lea    rax,[rip+0xb74f6]        # 0x7ffff7f6f47f
   0x7ffff7eb7f89 <__libc_ifunc_impl_list+2777>:	mov    QWORD PTR [rbx+0xc0],rdi
   0x7ffff7eb7f90 <__libc_ifunc_impl_list+2784>:	lea    rdi,[rip+0x839a9]        # 0x7ffff7f3b940
   0x7ffff7eb7f97 <__libc_ifunc_impl_list+2791>:	mov    QWORD PTR [rbx+0xf0],rcx
   0x7ffff7eb7f9e <__libc_ifunc_impl_list+2798>:	lea    rcx,[rip+0x5a7db]        # 0x7ffff7f12780
   0x7ffff7eb7fa5 <__libc_ifunc_impl_list+2805>:	mov    QWORD PTR [rbx+0x138],rax
   0x7ffff7eb7fac <__libc_ifunc_impl_list+2812>:	lea    rax,[rip+0xfffffffffffa1a4d]        # 0x7ffff7e59a00
   0x7ffff7eb7fb3 <__libc_ifunc_impl_list+2819>:	mov    QWORD PTR [rbx+0x140],rax
   0x7ffff7eb7fba <__libc_ifunc_impl_list+2826>:	mov    eax,0xe
   0x7ffff7eb7fbf <__libc_ifunc_impl_list+2831>:	mov    BYTE PTR [rbx+0xa0],dl
   0x7ffff7eb7fc5 <__libc_ifunc_impl_list+2837>:	mov    QWORD PTR [rbx+0xc8],rdi
   0x7ffff7eb7fcc <__libc_ifunc_impl_list+2844>:	mov    QWORD PTR [rbx+0xf8],rcx
   0x7ffff7eb7fd3 <__libc_ifunc_impl_list+2851>:	mov    BYTE PTR [rbx+0x118],0x1
   0x7ffff7eb7fda <__libc_ifunc_impl_list+2858>:	mov    BYTE PTR [rbx+0x130],0x1
   0x7ffff7eb7fe1 <__libc_ifunc_impl_list+2865>:	mov    BYTE PTR [rbx+0x148],0x1
   0x7ffff7eb7fe8 <__libc_ifunc_impl_list+2872>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb7fed <__libc_ifunc_impl_list+2877>:	nop    DWORD PTR [rax]
   0x7ffff7eb7ff0 <__libc_ifunc_impl_list+2880>:	and    eax,0x40000100
   0x7ffff7eb7ff5 <__libc_ifunc_impl_list+2885>:	lea    rcx,[rip+0xb724c]        # 0x7ffff7f6f248
   0x7ffff7eb7ffc <__libc_ifunc_impl_list+2892>:	cmp    eax,0x40000100
   0x7ffff7eb8001 <__libc_ifunc_impl_list+2897>:	mov    QWORD PTR [rbx+0x30],rcx
   0x7ffff7eb8005 <__libc_ifunc_impl_list+2901>:	lea    rcx,[rip+0x8b674]        # 0x7ffff7f43680
   0x7ffff7eb800c <__libc_ifunc_impl_list+2908>:	sete   al
   0x7ffff7eb800f <__libc_ifunc_impl_list+2911>:	mov    QWORD PTR [rbx+0x38],rcx
   0x7ffff7eb8013 <__libc_ifunc_impl_list+2915>:	mov    BYTE PTR [rbx+0x40],al
   0x7ffff7eb8016 <__libc_ifunc_impl_list+2918>:	jmp    0x7ffff7eb7bc1 <__libc_ifunc_impl_list+1809>
   0x7ffff7eb801b <__libc_ifunc_impl_list+2923>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eb8020 <__libc_ifunc_impl_list+2928>:	mov    rax,QWORD PTR [rip+0xf5ea1]        # 0x7ffff7fadec8
   0x7ffff7eb8027 <__libc_ifunc_impl_list+2935>:	lea    rcx,[rip+0xb7499]        # 0x7ffff7f6f4c7
   0x7ffff7eb802e <__libc_ifunc_impl_list+2942>:	mov    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eb8032 <__libc_ifunc_impl_list+2946>:	mov    QWORD PTR [rbx+0x30],rcx
   0x7ffff7eb8036 <__libc_ifunc_impl_list+2950>:	lea    rcx,[rip+0x8c6c3]        # 0x7ffff7f44700
   0x7ffff7eb803d <__libc_ifunc_impl_list+2957>:	mov    edx,DWORD PTR [rax+0xb8]
   0x7ffff7eb8043 <__libc_ifunc_impl_list+2963>:	lea    rax,[rip+0xb745b]        # 0x7ffff7f6f4a5
   0x7ffff7eb804a <__libc_ifunc_impl_list+2970>:	mov    QWORD PTR [rbx+0x38],rcx
   0x7ffff7eb804e <__libc_ifunc_impl_list+2974>:	mov    QWORD PTR [rbx],rax
   0x7ffff7eb8051 <__libc_ifunc_impl_list+2977>:	lea    rax,[rip+0x76828]        # 0x7ffff7f2e880
   0x7ffff7eb8058 <__libc_ifunc_impl_list+2984>:	mov    QWORD PTR [rbx+0x8],rax
   0x7ffff7eb805c <__libc_ifunc_impl_list+2988>:	mov    eax,edx
   0x7ffff7eb805e <__libc_ifunc_impl_list+2990>:	shr    eax,0x5
   0x7ffff7eb8061 <__libc_ifunc_impl_list+2993>:	and    eax,0x1
   0x7ffff7eb8064 <__libc_ifunc_impl_list+2996>:	mov    BYTE PTR [rbx+0x10],al
   0x7ffff7eb8067 <__libc_ifunc_impl_list+2999>:	lea    rax,[rip+0xb7446]        # 0x7ffff7f6f4b4
   0x7ffff7eb806e <__libc_ifunc_impl_list+3006>:	mov    QWORD PTR [rbx+0x18],rax
   0x7ffff7eb8072 <__libc_ifunc_impl_list+3010>:	lea    rax,[rip+0x85427]        # 0x7ffff7f3d4a0
   0x7ffff7eb8079 <__libc_ifunc_impl_list+3017>:	mov    QWORD PTR [rbx+0x20],rax
   0x7ffff7eb807d <__libc_ifunc_impl_list+3021>:	mov    eax,edx
   0x7ffff7eb807f <__libc_ifunc_impl_list+3023>:	and    eax,0x820
   0x7ffff7eb8084 <__libc_ifunc_impl_list+3028>:	cmp    eax,0x820
   0x7ffff7eb8089 <__libc_ifunc_impl_list+3033>:	mov    eax,edx
   0x7ffff7eb808b <__libc_ifunc_impl_list+3035>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb808f <__libc_ifunc_impl_list+3039>:	shr    eax,0x1e
   0x7ffff7eb8092 <__libc_ifunc_impl_list+3042>:	and    eax,0x1
   0x7ffff7eb8095 <__libc_ifunc_impl_list+3045>:	test   edx,edx
   0x7ffff7eb8097 <__libc_ifunc_impl_list+3047>:	mov    edx,0x0
   0x7ffff7eb809c <__libc_ifunc_impl_list+3052>:	cmovns eax,edx
   0x7ffff7eb809f <__libc_ifunc_impl_list+3055>:	mov    BYTE PTR [rbx+0x40],al
   0x7ffff7eb80a2 <__libc_ifunc_impl_list+3058>:	lea    rax,[rip+0xb742d]        # 0x7ffff7f6f4d6
   0x7ffff7eb80a9 <__libc_ifunc_impl_list+3065>:	mov    QWORD PTR [rbx+0x48],rax
   0x7ffff7eb80ad <__libc_ifunc_impl_list+3069>:	lea    rax,[rip+0xfffffffffff91d8c]        # 0x7ffff7e49e40
   0x7ffff7eb80b4 <__libc_ifunc_impl_list+3076>:	mov    QWORD PTR [rbx+0x50],rax
   0x7ffff7eb80b8 <__libc_ifunc_impl_list+3080>:	mov    eax,0x4
   0x7ffff7eb80bd <__libc_ifunc_impl_list+3085>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb80c2 <__libc_ifunc_impl_list+3090>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb80c8 <__libc_ifunc_impl_list+3096>:	lea    rcx,[rip+0xbce39]        # 0x7ffff7f74f08
   0x7ffff7eb80cf <__libc_ifunc_impl_list+3103>:	mov    BYTE PTR [rbx+0x88],0x0
   0x7ffff7eb80d6 <__libc_ifunc_impl_list+3110>:	mov    QWORD PTR [rbx+0x78],rcx
   0x7ffff7eb80da <__libc_ifunc_impl_list+3114>:	lea    rcx,[rip+0x84c3f]        # 0x7ffff7f3cd20
   0x7ffff7eb80e1 <__libc_ifunc_impl_list+3121>:	mov    QWORD PTR [rbx+0x80],rcx
   0x7ffff7eb80e8 <__libc_ifunc_impl_list+3128>:	xor    ecx,ecx
   0x7ffff7eb80ea <__libc_ifunc_impl_list+3130>:	jmp    0x7ffff7eb7cd2 <__libc_ifunc_impl_list+2082>
   0x7ffff7eb80ef <__libc_ifunc_impl_list+3135>:	nop
   0x7ffff7eb80f0 <__libc_ifunc_impl_list+3136>:	lea    rax,[rip+0xb73fb]        # 0x7ffff7f6f4f2
   0x7ffff7eb80f7 <__libc_ifunc_impl_list+3143>:	lea    rcx,[rip+0xb7422]        # 0x7ffff7f6f520
   0x7ffff7eb80fe <__libc_ifunc_impl_list+3150>:	mov    BYTE PTR [rbx+0x10],0x1
   0x7ffff7eb8102 <__libc_ifunc_impl_list+3154>:	mov    QWORD PTR [rbx],rax
   0x7ffff7eb8105 <__libc_ifunc_impl_list+3157>:	lea    rax,[rip+0xfffffffffffa1f14]        # 0x7ffff7e5a020
   0x7ffff7eb810c <__libc_ifunc_impl_list+3164>:	mov    QWORD PTR [rbx+0x8],rax
   0x7ffff7eb8110 <__libc_ifunc_impl_list+3168>:	lea    rax,[rip+0xb73ed]        # 0x7ffff7f6f504
   0x7ffff7eb8117 <__libc_ifunc_impl_list+3175>:	mov    QWORD PTR [rbx+0x18],rax
   0x7ffff7eb811b <__libc_ifunc_impl_list+3179>:	lea    rax,[rip+0xfffffffffffa1eae]        # 0x7ffff7e59fd0
   0x7ffff7eb8122 <__libc_ifunc_impl_list+3186>:	mov    QWORD PTR [rbx+0x20],rax
   0x7ffff7eb8126 <__libc_ifunc_impl_list+3190>:	lea    rax,[rip+0xbcedb]        # 0x7ffff7f75008
   0x7ffff7eb812d <__libc_ifunc_impl_list+3197>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb8131 <__libc_ifunc_impl_list+3201>:	lea    rax,[rip+0xfffffffffffa1f18]        # 0x7ffff7e5a050
   0x7ffff7eb8138 <__libc_ifunc_impl_list+3208>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb813c <__libc_ifunc_impl_list+3212>:	mov    rax,QWORD PTR [rip+0xf5d85]        # 0x7ffff7fadec8
   0x7ffff7eb8143 <__libc_ifunc_impl_list+3219>:	mov    QWORD PTR [rbx+0x48],rcx
   0x7ffff7eb8147 <__libc_ifunc_impl_list+3223>:	lea    rcx,[rip+0x7df22]        # 0x7ffff7f36070
   0x7ffff7eb814e <__libc_ifunc_impl_list+3230>:	mov    eax,DWORD PTR [rax+0xb8]
   0x7ffff7eb8154 <__libc_ifunc_impl_list+3236>:	mov    QWORD PTR [rbx+0x50],rcx
   0x7ffff7eb8158 <__libc_ifunc_impl_list+3240>:	lea    rcx,[rip+0xbced1]        # 0x7ffff7f75030
   0x7ffff7eb815f <__libc_ifunc_impl_list+3247>:	mov    QWORD PTR [rbx+0x60],rcx
   0x7ffff7eb8163 <__libc_ifunc_impl_list+3251>:	lea    rcx,[rip+0x7df76]        # 0x7ffff7f360e0
   0x7ffff7eb816a <__libc_ifunc_impl_list+3258>:	mov    edx,eax
   0x7ffff7eb816c <__libc_ifunc_impl_list+3260>:	mov    QWORD PTR [rbx+0x68],rcx
   0x7ffff7eb8170 <__libc_ifunc_impl_list+3264>:	lea    rcx,[rip+0xbcee1]        # 0x7ffff7f75058
   0x7ffff7eb8177 <__libc_ifunc_impl_list+3271>:	shr    edx,0x5
   0x7ffff7eb817a <__libc_ifunc_impl_list+3274>:	mov    QWORD PTR [rbx+0x78],rcx
   0x7ffff7eb817e <__libc_ifunc_impl_list+3278>:	lea    rcx,[rip+0x856eb]        # 0x7ffff7f3d870
   0x7ffff7eb8185 <__libc_ifunc_impl_list+3285>:	and    edx,0x1
   0x7ffff7eb8188 <__libc_ifunc_impl_list+3288>:	mov    QWORD PTR [rbx+0x80],rcx
   0x7ffff7eb818f <__libc_ifunc_impl_list+3295>:	lea    rcx,[rip+0xbcee2]        # 0x7ffff7f75078
   0x7ffff7eb8196 <__libc_ifunc_impl_list+3302>:	mov    BYTE PTR [rbx+0x58],dl
   0x7ffff7eb8199 <__libc_ifunc_impl_list+3305>:	mov    BYTE PTR [rbx+0x70],dl
   0x7ffff7eb819c <__libc_ifunc_impl_list+3308>:	mov    edx,eax
   0x7ffff7eb819e <__libc_ifunc_impl_list+3310>:	and    edx,0x820
   0x7ffff7eb81a4 <__libc_ifunc_impl_list+3316>:	mov    QWORD PTR [rbx+0x90],rcx
   0x7ffff7eb81ab <__libc_ifunc_impl_list+3323>:	lea    rcx,[rip+0x8572e]        # 0x7ffff7f3d8e0
   0x7ffff7eb81b2 <__libc_ifunc_impl_list+3330>:	cmp    edx,0x820
   0x7ffff7eb81b8 <__libc_ifunc_impl_list+3336>:	mov    BYTE PTR [rbx+0x28],0x1
   0x7ffff7eb81bc <__libc_ifunc_impl_list+3340>:	sete   dl
   0x7ffff7eb81bf <__libc_ifunc_impl_list+3343>:	mov    BYTE PTR [rbx+0x40],0x1
   0x7ffff7eb81c3 <__libc_ifunc_impl_list+3347>:	mov    BYTE PTR [rbx+0x88],dl
   0x7ffff7eb81c9 <__libc_ifunc_impl_list+3353>:	mov    QWORD PTR [rbx+0x98],rcx
   0x7ffff7eb81d0 <__libc_ifunc_impl_list+3360>:	mov    BYTE PTR [rbx+0xa0],dl
   0x7ffff7eb81d6 <__libc_ifunc_impl_list+3366>:	test   eax,eax
   0x7ffff7eb81d8 <__libc_ifunc_impl_list+3368>:	js     0x7ffff7eb86c0 <__libc_ifunc_impl_list+4624>
   0x7ffff7eb81de <__libc_ifunc_impl_list+3374>:	lea    rcx,[rip+0xb82e5]        # 0x7ffff7f704ca
   0x7ffff7eb81e5 <__libc_ifunc_impl_list+3381>:	mov    BYTE PTR [rbx+0xb8],0x0
   0x7ffff7eb81ec <__libc_ifunc_impl_list+3388>:	xor    edx,edx
   0x7ffff7eb81ee <__libc_ifunc_impl_list+3390>:	mov    QWORD PTR [rbx+0xa8],rcx
   0x7ffff7eb81f5 <__libc_ifunc_impl_list+3397>:	lea    rcx,[rip+0x8c8b4]        # 0x7ffff7f44ab0
   0x7ffff7eb81fc <__libc_ifunc_impl_list+3404>:	mov    QWORD PTR [rbx+0xb0],rcx
   0x7ffff7eb8203 <__libc_ifunc_impl_list+3411>:	lea    rcx,[rip+0xbd22e]        # 0x7ffff7f75438
   0x7ffff7eb820a <__libc_ifunc_impl_list+3418>:	mov    QWORD PTR [rbx+0xc0],rcx
   0x7ffff7eb8211 <__libc_ifunc_impl_list+3425>:	lea    rcx,[rip+0x8c8f8]        # 0x7ffff7f44b10
   0x7ffff7eb8218 <__libc_ifunc_impl_list+3432>:	mov    QWORD PTR [rbx+0xc8],rcx
   0x7ffff7eb821f <__libc_ifunc_impl_list+3439>:	lea    rcx,[rip+0xbce7a]        # 0x7ffff7f750a0
   0x7ffff7eb8226 <__libc_ifunc_impl_list+3446>:	mov    QWORD PTR [rbx+0xd8],rcx
   0x7ffff7eb822d <__libc_ifunc_impl_list+3453>:	lea    rcx,[rip+0x83f6c]        # 0x7ffff7f3c1a0
   0x7ffff7eb8234 <__libc_ifunc_impl_list+3460>:	mov    BYTE PTR [rbx+0xd0],0x0
   0x7ffff7eb823b <__libc_ifunc_impl_list+3467>:	mov    QWORD PTR [rbx+0xe0],rcx
   0x7ffff7eb8242 <__libc_ifunc_impl_list+3474>:	mov    BYTE PTR [rbx+0xe8],0x0
   0x7ffff7eb8249 <__libc_ifunc_impl_list+3481>:	lea    rcx,[rip+0xb72ec]        # 0x7ffff7f6f53c
   0x7ffff7eb8250 <__libc_ifunc_impl_list+3488>:	mov    BYTE PTR [rbx+0x100],dl
   0x7ffff7eb8256 <__libc_ifunc_impl_list+3494>:	mov    QWORD PTR [rbx+0xf0],rcx
   0x7ffff7eb825d <__libc_ifunc_impl_list+3501>:	lea    rcx,[rip+0x83ecc]        # 0x7ffff7f3c130
   0x7ffff7eb8264 <__libc_ifunc_impl_list+3508>:	mov    QWORD PTR [rbx+0xf8],rcx
   0x7ffff7eb826b <__libc_ifunc_impl_list+3515>:	lea    rcx,[rip+0xbce56]        # 0x7ffff7f750c8
   0x7ffff7eb8272 <__libc_ifunc_impl_list+3522>:	mov    QWORD PTR [rbx+0x108],rcx
   0x7ffff7eb8279 <__libc_ifunc_impl_list+3529>:	lea    rcx,[rip+0x812b0]        # 0x7ffff7f39530
   0x7ffff7eb8280 <__libc_ifunc_impl_list+3536>:	shr    eax,0x10
   0x7ffff7eb8283 <__libc_ifunc_impl_list+3539>:	mov    QWORD PTR [rbx+0x110],rcx
   0x7ffff7eb828a <__libc_ifunc_impl_list+3546>:	and    eax,0x1
   0x7ffff7eb828d <__libc_ifunc_impl_list+3549>:	mov    BYTE PTR [rbx+0x118],al
   0x7ffff7eb8293 <__libc_ifunc_impl_list+3555>:	mov    eax,0xc
   0x7ffff7eb8298 <__libc_ifunc_impl_list+3560>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb829d <__libc_ifunc_impl_list+3565>:	nop    DWORD PTR [rax]
   0x7ffff7eb82a0 <__libc_ifunc_impl_list+3568>:	test   dh,0x8
   0x7ffff7eb82a3 <__libc_ifunc_impl_list+3571>:	setne  cl
   0x7ffff7eb82a6 <__libc_ifunc_impl_list+3574>:	mov    BYTE PTR [rbx+0x40],cl
   0x7ffff7eb82a9 <__libc_ifunc_impl_list+3577>:	jmp    0x7ffff7eb7e6e <__libc_ifunc_impl_list+2494>
   0x7ffff7eb82ae <__libc_ifunc_impl_list+3582>:	xchg   ax,ax
   0x7ffff7eb82b0 <__libc_ifunc_impl_list+3584>:	mov    rdx,QWORD PTR [rip+0xf5c11]        # 0x7ffff7fadec8
   0x7ffff7eb82b7 <__libc_ifunc_impl_list+3591>:	lea    rdi,[rip+0xb74d2]        # 0x7ffff7f6f790
   0x7ffff7eb82be <__libc_ifunc_impl_list+3598>:	mov    BYTE PTR [rbx+0x70],0x1
   0x7ffff7eb82c2 <__libc_ifunc_impl_list+3602>:	lea    rcx,[rip+0x6b077]        # 0x7ffff7f23340
   0x7ffff7eb82c9 <__libc_ifunc_impl_list+3609>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb82cc <__libc_ifunc_impl_list+3612>:	lea    rdi,[rip+0xb74ec]        # 0x7ffff7f6f7bf
   0x7ffff7eb82d3 <__libc_ifunc_impl_list+3619>:	mov    eax,DWORD PTR [rdx+0x9c]
   0x7ffff7eb82d9 <__libc_ifunc_impl_list+3625>:	mov    edx,DWORD PTR [rdx+0xb8]
   0x7ffff7eb82df <__libc_ifunc_impl_list+3631>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eb82e3 <__libc_ifunc_impl_list+3635>:	lea    rcx,[rip+0x8cb36]        # 0x7ffff7f44e20
   0x7ffff7eb82ea <__libc_ifunc_impl_list+3642>:	mov    QWORD PTR [rbx+0x48],rdi
   0x7ffff7eb82ee <__libc_ifunc_impl_list+3646>:	shr    eax,0x9
   0x7ffff7eb82f1 <__libc_ifunc_impl_list+3649>:	mov    QWORD PTR [rbx+0x50],rcx
   0x7ffff7eb82f5 <__libc_ifunc_impl_list+3653>:	and    eax,0x1
   0x7ffff7eb82f8 <__libc_ifunc_impl_list+3656>:	mov    BYTE PTR [rbx+0x88],0x1
   0x7ffff7eb82ff <__libc_ifunc_impl_list+3663>:	mov    BYTE PTR [rbx+0x10],al
   0x7ffff7eb8302 <__libc_ifunc_impl_list+3666>:	lea    rax,[rip+0xb7496]        # 0x7ffff7f6f79f
   0x7ffff7eb8309 <__libc_ifunc_impl_list+3673>:	mov    QWORD PTR [rbx+0x18],rax
   0x7ffff7eb830d <__libc_ifunc_impl_list+3677>:	lea    rax,[rip+0x7c80c]        # 0x7ffff7f34b20
   0x7ffff7eb8314 <__libc_ifunc_impl_list+3684>:	mov    QWORD PTR [rbx+0x20],rax
   0x7ffff7eb8318 <__libc_ifunc_impl_list+3688>:	mov    eax,edx
   0x7ffff7eb831a <__libc_ifunc_impl_list+3690>:	shr    eax,0x5
   0x7ffff7eb831d <__libc_ifunc_impl_list+3693>:	and    eax,0x1
   0x7ffff7eb8320 <__libc_ifunc_impl_list+3696>:	mov    BYTE PTR [rbx+0x28],al
   0x7ffff7eb8323 <__libc_ifunc_impl_list+3699>:	lea    rax,[rip+0xb7483]        # 0x7ffff7f6f7ad
   0x7ffff7eb832a <__libc_ifunc_impl_list+3706>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb832e <__libc_ifunc_impl_list+3710>:	lea    rax,[rip+0x8617b]        # 0x7ffff7f3e4b0
   0x7ffff7eb8335 <__libc_ifunc_impl_list+3717>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb8339 <__libc_ifunc_impl_list+3721>:	mov    eax,edx
   0x7ffff7eb833b <__libc_ifunc_impl_list+3723>:	and    eax,0x820
   0x7ffff7eb8340 <__libc_ifunc_impl_list+3728>:	cmp    eax,0x820
   0x7ffff7eb8345 <__libc_ifunc_impl_list+3733>:	mov    eax,edx
   0x7ffff7eb8347 <__libc_ifunc_impl_list+3735>:	sete   BYTE PTR [rbx+0x40]
   0x7ffff7eb834b <__libc_ifunc_impl_list+3739>:	shr    eax,0x1e
   0x7ffff7eb834e <__libc_ifunc_impl_list+3742>:	and    eax,0x1
   0x7ffff7eb8351 <__libc_ifunc_impl_list+3745>:	test   edx,edx
   0x7ffff7eb8353 <__libc_ifunc_impl_list+3747>:	mov    edx,0x0
   0x7ffff7eb8358 <__libc_ifunc_impl_list+3752>:	cmovns eax,edx
   0x7ffff7eb835b <__libc_ifunc_impl_list+3755>:	mov    BYTE PTR [rbx+0x58],al
   0x7ffff7eb835e <__libc_ifunc_impl_list+3758>:	lea    rax,[rip+0xb7468]        # 0x7ffff7f6f7cd
   0x7ffff7eb8365 <__libc_ifunc_impl_list+3765>:	mov    QWORD PTR [rbx+0x60],rax
   0x7ffff7eb8369 <__libc_ifunc_impl_list+3769>:	lea    rax,[rip+0xfffffffffff9dbe0]        # 0x7ffff7e55f50
   0x7ffff7eb8370 <__libc_ifunc_impl_list+3776>:	mov    QWORD PTR [rbx+0x68],rax
   0x7ffff7eb8374 <__libc_ifunc_impl_list+3780>:	lea    rax,[rip+0xb746a]        # 0x7ffff7f6f7e5
   0x7ffff7eb837b <__libc_ifunc_impl_list+3787>:	mov    QWORD PTR [rbx+0x78],rax
   0x7ffff7eb837f <__libc_ifunc_impl_list+3791>:	lea    rax,[rip+0xfffffffffff9c49a]        # 0x7ffff7e54820
   0x7ffff7eb8386 <__libc_ifunc_impl_list+3798>:	mov    QWORD PTR [rbx+0x80],rax
   0x7ffff7eb838d <__libc_ifunc_impl_list+3805>:	mov    eax,0x6
   0x7ffff7eb8392 <__libc_ifunc_impl_list+3810>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb8397 <__libc_ifunc_impl_list+3815>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb83a0 <__libc_ifunc_impl_list+3824>:	test   eax,0x400000
   0x7ffff7eb83a5 <__libc_ifunc_impl_list+3829>:	je     0x7ffff7eb7a53 <__libc_ifunc_impl_list+1443>
   0x7ffff7eb83ab <__libc_ifunc_impl_list+3835>:	mov    ecx,edx
   0x7ffff7eb83ad <__libc_ifunc_impl_list+3837>:	mov    esi,0x1
   0x7ffff7eb83b2 <__libc_ifunc_impl_list+3842>:	shr    ecx,0xb
   0x7ffff7eb83b5 <__libc_ifunc_impl_list+3845>:	and    ecx,0x1
   0x7ffff7eb83b8 <__libc_ifunc_impl_list+3848>:	jmp    0x7ffff7eb7a53 <__libc_ifunc_impl_list+1443>
   0x7ffff7eb83bd <__libc_ifunc_impl_list+3853>:	nop    DWORD PTR [rax]
   0x7ffff7eb83c0 <__libc_ifunc_impl_list+3856>:	lea    rax,[rip+0xb7193]        # 0x7ffff7f6f55a
   0x7ffff7eb83c7 <__libc_ifunc_impl_list+3863>:	lea    rcx,[rip+0xb71cf]        # 0x7ffff7f6f59d
   0x7ffff7eb83ce <__libc_ifunc_impl_list+3870>:	mov    BYTE PTR [rbx+0x10],0x1
   0x7ffff7eb83d2 <__libc_ifunc_impl_list+3874>:	mov    QWORD PTR [rbx],rax
   0x7ffff7eb83d5 <__libc_ifunc_impl_list+3877>:	lea    rax,[rip+0xfffffffffffa1c04]        # 0x7ffff7e59fe0
   0x7ffff7eb83dc <__libc_ifunc_impl_list+3884>:	mov    QWORD PTR [rbx+0x8],rax
   0x7ffff7eb83e0 <__libc_ifunc_impl_list+3888>:	lea    rax,[rip+0xb718b]        # 0x7ffff7f6f572
   0x7ffff7eb83e7 <__libc_ifunc_impl_list+3895>:	mov    QWORD PTR [rbx+0x18],rax
   0x7ffff7eb83eb <__libc_ifunc_impl_list+3899>:	lea    rax,[rip+0xfffffffffffa1c8e]        # 0x7ffff7e5a080
   0x7ffff7eb83f2 <__libc_ifunc_impl_list+3906>:	mov    QWORD PTR [rbx+0x20],rax
   0x7ffff7eb83f6 <__libc_ifunc_impl_list+3910>:	lea    rax,[rip+0xb7192]        # 0x7ffff7f6f58f
   0x7ffff7eb83fd <__libc_ifunc_impl_list+3917>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb8401 <__libc_ifunc_impl_list+3921>:	lea    rax,[rip+0xfffffffffffa1c28]        # 0x7ffff7e5a030
   0x7ffff7eb8408 <__libc_ifunc_impl_list+3928>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb840c <__libc_ifunc_impl_list+3932>:	mov    rax,QWORD PTR [rip+0xf5ab5]        # 0x7ffff7fadec8
   0x7ffff7eb8413 <__libc_ifunc_impl_list+3939>:	mov    QWORD PTR [rbx+0x48],rcx
   0x7ffff7eb8417 <__libc_ifunc_impl_list+3943>:	lea    rcx,[rip+0x7dc62]        # 0x7ffff7f36080
   0x7ffff7eb841e <__libc_ifunc_impl_list+3950>:	mov    eax,DWORD PTR [rax+0xb8]
   0x7ffff7eb8424 <__libc_ifunc_impl_list+3956>:	mov    QWORD PTR [rbx+0x50],rcx
   0x7ffff7eb8428 <__libc_ifunc_impl_list+3960>:	lea    rcx,[rip+0xb7186]        # 0x7ffff7f6f5b5
   0x7ffff7eb842f <__libc_ifunc_impl_list+3967>:	mov    QWORD PTR [rbx+0x60],rcx
   0x7ffff7eb8433 <__libc_ifunc_impl_list+3971>:	lea    rcx,[rip+0x7dcc6]        # 0x7ffff7f36100
   0x7ffff7eb843a <__libc_ifunc_impl_list+3978>:	mov    edx,eax
   0x7ffff7eb843c <__libc_ifunc_impl_list+3980>:	mov    QWORD PTR [rbx+0x68],rcx
   0x7ffff7eb8440 <__libc_ifunc_impl_list+3984>:	lea    rcx,[rip+0xb718b]        # 0x7ffff7f6f5d2
   0x7ffff7eb8447 <__libc_ifunc_impl_list+3991>:	shr    edx,0x5
   0x7ffff7eb844a <__libc_ifunc_impl_list+3994>:	mov    QWORD PTR [rbx+0x78],rcx
   0x7ffff7eb844e <__libc_ifunc_impl_list+3998>:	lea    rcx,[rip+0x8542b]        # 0x7ffff7f3d880
   0x7ffff7eb8455 <__libc_ifunc_impl_list+4005>:	and    edx,0x1
   0x7ffff7eb8458 <__libc_ifunc_impl_list+4008>:	mov    QWORD PTR [rbx+0x80],rcx
   0x7ffff7eb845f <__libc_ifunc_impl_list+4015>:	lea    rcx,[rip+0xbcc8a]        # 0x7ffff7f750f0
   0x7ffff7eb8466 <__libc_ifunc_impl_list+4022>:	mov    BYTE PTR [rbx+0x58],dl
   0x7ffff7eb8469 <__libc_ifunc_impl_list+4025>:	mov    BYTE PTR [rbx+0x70],dl
   0x7ffff7eb846c <__libc_ifunc_impl_list+4028>:	mov    edx,eax
   0x7ffff7eb846e <__libc_ifunc_impl_list+4030>:	and    edx,0x820
   0x7ffff7eb8474 <__libc_ifunc_impl_list+4036>:	mov    QWORD PTR [rbx+0x90],rcx
   0x7ffff7eb847b <__libc_ifunc_impl_list+4043>:	lea    rcx,[rip+0x8547e]        # 0x7ffff7f3d900
   0x7ffff7eb8482 <__libc_ifunc_impl_list+4050>:	cmp    edx,0x820
   0x7ffff7eb8488 <__libc_ifunc_impl_list+4056>:	mov    BYTE PTR [rbx+0x28],0x1
   0x7ffff7eb848c <__libc_ifunc_impl_list+4060>:	sete   dl
   0x7ffff7eb848f <__libc_ifunc_impl_list+4063>:	mov    BYTE PTR [rbx+0x40],0x1
   0x7ffff7eb8493 <__libc_ifunc_impl_list+4067>:	mov    BYTE PTR [rbx+0x88],dl
   0x7ffff7eb8499 <__libc_ifunc_impl_list+4073>:	mov    QWORD PTR [rbx+0x98],rcx
   0x7ffff7eb84a0 <__libc_ifunc_impl_list+4080>:	mov    BYTE PTR [rbx+0xa0],dl
   0x7ffff7eb84a6 <__libc_ifunc_impl_list+4086>:	test   eax,eax
   0x7ffff7eb84a8 <__libc_ifunc_impl_list+4088>:	js     0x7ffff7eb8800 <__libc_ifunc_impl_list+4944>
   0x7ffff7eb84ae <__libc_ifunc_impl_list+4094>:	lea    rcx,[rip+0xb8031]        # 0x7ffff7f704e6
   0x7ffff7eb84b5 <__libc_ifunc_impl_list+4101>:	lea    rdi,[rip+0x8c604]        # 0x7ffff7f44ac0
   0x7ffff7eb84bc <__libc_ifunc_impl_list+4108>:	xor    edx,edx
   0x7ffff7eb84be <__libc_ifunc_impl_list+4110>:	mov    BYTE PTR [rbx+0xb8],0x0
   0x7ffff7eb84c5 <__libc_ifunc_impl_list+4117>:	mov    QWORD PTR [rbx+0xa8],rcx
   0x7ffff7eb84cc <__libc_ifunc_impl_list+4124>:	lea    rcx,[rip+0xb802b]        # 0x7ffff7f704fe
   0x7ffff7eb84d3 <__libc_ifunc_impl_list+4131>:	mov    QWORD PTR [rbx+0xb0],rdi
   0x7ffff7eb84da <__libc_ifunc_impl_list+4138>:	lea    rdi,[rip+0x8c65f]        # 0x7ffff7f44b40
   0x7ffff7eb84e1 <__libc_ifunc_impl_list+4145>:	mov    QWORD PTR [rbx+0xc0],rcx
   0x7ffff7eb84e8 <__libc_ifunc_impl_list+4152>:	lea    rcx,[rip+0xbcc29]        # 0x7ffff7f75118
   0x7ffff7eb84ef <__libc_ifunc_impl_list+4159>:	mov    QWORD PTR [rbx+0xc8],rdi
   0x7ffff7eb84f6 <__libc_ifunc_impl_list+4166>:	lea    rdi,[rip+0x83cc3]        # 0x7ffff7f3c1c0
   0x7ffff7eb84fd <__libc_ifunc_impl_list+4173>:	mov    BYTE PTR [rbx+0xd0],0x0
   0x7ffff7eb8504 <__libc_ifunc_impl_list+4180>:	mov    QWORD PTR [rbx+0xd8],rcx
   0x7ffff7eb850b <__libc_ifunc_impl_list+4187>:	mov    QWORD PTR [rbx+0xe0],rdi
   0x7ffff7eb8512 <__libc_ifunc_impl_list+4194>:	mov    BYTE PTR [rbx+0xe8],0x0
   0x7ffff7eb8519 <__libc_ifunc_impl_list+4201>:	lea    rcx,[rip+0xb70ce]        # 0x7ffff7f6f5ee
   0x7ffff7eb8520 <__libc_ifunc_impl_list+4208>:	mov    BYTE PTR [rbx+0x100],dl
   0x7ffff7eb8526 <__libc_ifunc_impl_list+4214>:	mov    QWORD PTR [rbx+0xf0],rcx
   0x7ffff7eb852d <__libc_ifunc_impl_list+4221>:	lea    rcx,[rip+0x83c0c]        # 0x7ffff7f3c140
   0x7ffff7eb8534 <__libc_ifunc_impl_list+4228>:	mov    QWORD PTR [rbx+0xf8],rcx
   0x7ffff7eb853b <__libc_ifunc_impl_list+4235>:	lea    rcx,[rip+0xb70c6]        # 0x7ffff7f6f608
   0x7ffff7eb8542 <__libc_ifunc_impl_list+4242>:	mov    QWORD PTR [rbx+0x108],rcx
   0x7ffff7eb8549 <__libc_ifunc_impl_list+4249>:	lea    rcx,[rip+0x80ff0]        # 0x7ffff7f39540
   0x7ffff7eb8550 <__libc_ifunc_impl_list+4256>:	jmp    0x7ffff7eb8280 <__libc_ifunc_impl_list+3536>
   0x7ffff7eb8555 <__libc_ifunc_impl_list+4261>:	nop    DWORD PTR [rax]
   0x7ffff7eb8558 <__libc_ifunc_impl_list+4264>:	mov    rax,QWORD PTR [rip+0xf5969]        # 0x7ffff7fadec8
   0x7ffff7eb855f <__libc_ifunc_impl_list+4271>:	lea    rcx,[rip+0xb70ca]        # 0x7ffff7f6f630
   0x7ffff7eb8566 <__libc_ifunc_impl_list+4278>:	mov    QWORD PTR [rbx],rcx
   0x7ffff7eb8569 <__libc_ifunc_impl_list+4281>:	lea    rcx,[rip+0x761a0]        # 0x7ffff7f2e710
   0x7ffff7eb8570 <__libc_ifunc_impl_list+4288>:	mov    eax,DWORD PTR [rax+0xb8]
   0x7ffff7eb8576 <__libc_ifunc_impl_list+4294>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eb857a <__libc_ifunc_impl_list+4298>:	lea    rcx,[rip+0xb70c0]        # 0x7ffff7f6f641
   0x7ffff7eb8581 <__libc_ifunc_impl_list+4305>:	mov    QWORD PTR [rbx+0x18],rcx
   0x7ffff7eb8585 <__libc_ifunc_impl_list+4309>:	lea    rcx,[rip+0x854b4]        # 0x7ffff7f3da40
   0x7ffff7eb858c <__libc_ifunc_impl_list+4316>:	mov    edx,eax
   0x7ffff7eb858e <__libc_ifunc_impl_list+4318>:	mov    QWORD PTR [rbx+0x20],rcx
   0x7ffff7eb8592 <__libc_ifunc_impl_list+4322>:	shr    edx,0x5
   0x7ffff7eb8595 <__libc_ifunc_impl_list+4325>:	and    edx,0x1
   0x7ffff7eb8598 <__libc_ifunc_impl_list+4328>:	mov    BYTE PTR [rbx+0x10],dl
   0x7ffff7eb859b <__libc_ifunc_impl_list+4331>:	mov    edx,eax
   0x7ffff7eb859d <__libc_ifunc_impl_list+4333>:	and    edx,0x820
   0x7ffff7eb85a3 <__libc_ifunc_impl_list+4339>:	cmp    edx,0x820
   0x7ffff7eb85a9 <__libc_ifunc_impl_list+4345>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb85ad <__libc_ifunc_impl_list+4349>:	test   eax,eax
   0x7ffff7eb85af <__libc_ifunc_impl_list+4351>:	js     0x7ffff7eb8980 <__libc_ifunc_impl_list+5328>
   0x7ffff7eb85b5 <__libc_ifunc_impl_list+4357>:	lea    rax,[rip+0xb709a]        # 0x7ffff7f6f656
   0x7ffff7eb85bc <__libc_ifunc_impl_list+4364>:	mov    BYTE PTR [rbx+0x40],0x0
   0x7ffff7eb85c0 <__libc_ifunc_impl_list+4368>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb85c4 <__libc_ifunc_impl_list+4372>:	lea    rax,[rip+0x8c6d5]        # 0x7ffff7f44ca0
   0x7ffff7eb85cb <__libc_ifunc_impl_list+4379>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb85cf <__libc_ifunc_impl_list+4383>:	xor    eax,eax
   0x7ffff7eb85d1 <__libc_ifunc_impl_list+4385>:	lea    rcx,[rip+0xb708f]        # 0x7ffff7f6f667
   0x7ffff7eb85d8 <__libc_ifunc_impl_list+4392>:	mov    BYTE PTR [rbx+0x58],al
   0x7ffff7eb85db <__libc_ifunc_impl_list+4395>:	lea    rax,[rip+0xb709a]        # 0x7ffff7f6f67c
   0x7ffff7eb85e2 <__libc_ifunc_impl_list+4402>:	mov    QWORD PTR [rbx+0x48],rcx
   0x7ffff7eb85e6 <__libc_ifunc_impl_list+4406>:	lea    rcx,[rip+0x92a53]        # 0x7ffff7f4b040
   0x7ffff7eb85ed <__libc_ifunc_impl_list+4413>:	mov    QWORD PTR [rbx+0x60],rax
   0x7ffff7eb85f1 <__libc_ifunc_impl_list+4417>:	lea    rax,[rip+0xfffffffffff91638]        # 0x7ffff7e49c30
   0x7ffff7eb85f8 <__libc_ifunc_impl_list+4424>:	mov    QWORD PTR [rbx+0x68],rax
   0x7ffff7eb85fc <__libc_ifunc_impl_list+4428>:	mov    eax,0x5
   0x7ffff7eb8601 <__libc_ifunc_impl_list+4433>:	mov    QWORD PTR [rbx+0x50],rcx
   0x7ffff7eb8605 <__libc_ifunc_impl_list+4437>:	mov    BYTE PTR [rbx+0x70],0x1
   0x7ffff7eb8609 <__libc_ifunc_impl_list+4441>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb860e <__libc_ifunc_impl_list+4446>:	xchg   ax,ax
   0x7ffff7eb8610 <__libc_ifunc_impl_list+4448>:	mov    rax,QWORD PTR [rip+0xf58b1]        # 0x7ffff7fadec8
   0x7ffff7eb8617 <__libc_ifunc_impl_list+4455>:	lea    rcx,[rip+0xb7076]        # 0x7ffff7f6f694
   0x7ffff7eb861e <__libc_ifunc_impl_list+4462>:	lea    rdi,[rip+0x7a33b]        # 0x7ffff7f32960
   0x7ffff7eb8625 <__libc_ifunc_impl_list+4469>:	mov    QWORD PTR [rbx],rcx
   0x7ffff7eb8628 <__libc_ifunc_impl_list+4472>:	lea    rcx,[rip+0xb7073]        # 0x7ffff7f6f6a2
   0x7ffff7eb862f <__libc_ifunc_impl_list+4479>:	mov    eax,DWORD PTR [rax+0xb8]
   0x7ffff7eb8635 <__libc_ifunc_impl_list+4485>:	mov    QWORD PTR [rbx+0x8],rdi
   0x7ffff7eb8639 <__libc_ifunc_impl_list+4489>:	lea    rdi,[rip+0x87640]        # 0x7ffff7f3fc80
   0x7ffff7eb8640 <__libc_ifunc_impl_list+4496>:	mov    QWORD PTR [rbx+0x18],rcx
   0x7ffff7eb8644 <__libc_ifunc_impl_list+4500>:	mov    edx,eax
   0x7ffff7eb8646 <__libc_ifunc_impl_list+4502>:	mov    QWORD PTR [rbx+0x20],rdi
   0x7ffff7eb864a <__libc_ifunc_impl_list+4506>:	and    edx,0x120
   0x7ffff7eb8650 <__libc_ifunc_impl_list+4512>:	cmp    edx,0x120
   0x7ffff7eb8656 <__libc_ifunc_impl_list+4518>:	mov    edx,eax
   0x7ffff7eb8658 <__libc_ifunc_impl_list+4520>:	sete   BYTE PTR [rbx+0x10]
   0x7ffff7eb865c <__libc_ifunc_impl_list+4524>:	and    edx,0x920
   0x7ffff7eb8662 <__libc_ifunc_impl_list+4530>:	cmp    edx,0x920
   0x7ffff7eb8668 <__libc_ifunc_impl_list+4536>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb866c <__libc_ifunc_impl_list+4540>:	xor    edx,edx
   0x7ffff7eb866e <__libc_ifunc_impl_list+4542>:	test   eax,eax
   0x7ffff7eb8670 <__libc_ifunc_impl_list+4544>:	jns    0x7ffff7eb867f <__libc_ifunc_impl_list+4559>
   0x7ffff7eb8672 <__libc_ifunc_impl_list+4546>:	and    eax,0x40000100
   0x7ffff7eb8677 <__libc_ifunc_impl_list+4551>:	cmp    eax,0x40000100
   0x7ffff7eb867c <__libc_ifunc_impl_list+4556>:	sete   dl
   0x7ffff7eb867f <__libc_ifunc_impl_list+4559>:	lea    rax,[rip+0xb702e]        # 0x7ffff7f6f6b4
   0x7ffff7eb8686 <__libc_ifunc_impl_list+4566>:	mov    BYTE PTR [rbx+0x40],dl
   0x7ffff7eb8689 <__libc_ifunc_impl_list+4569>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb868d <__libc_ifunc_impl_list+4573>:	lea    rax,[rip+0x8eb8c]        # 0x7ffff7f47220
   0x7ffff7eb8694 <__libc_ifunc_impl_list+4580>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb8698 <__libc_ifunc_impl_list+4584>:	lea    rax,[rip+0xb7023]        # 0x7ffff7f6f6c2
   0x7ffff7eb869f <__libc_ifunc_impl_list+4591>:	mov    QWORD PTR [rbx+0x48],rax
   0x7ffff7eb86a3 <__libc_ifunc_impl_list+4595>:	lea    rax,[rip+0xfffffffffff97326]        # 0x7ffff7e4f9d0
   0x7ffff7eb86aa <__libc_ifunc_impl_list+4602>:	mov    QWORD PTR [rbx+0x50],rax
   0x7ffff7eb86ae <__libc_ifunc_impl_list+4606>:	mov    eax,0x4
   0x7ffff7eb86b3 <__libc_ifunc_impl_list+4611>:	mov    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eb86b7 <__libc_ifunc_impl_list+4615>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb86bc <__libc_ifunc_impl_list+4620>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb86c0 <__libc_ifunc_impl_list+4624>:	mov    edx,eax
   0x7ffff7eb86c2 <__libc_ifunc_impl_list+4626>:	and    edx,0x40000100
   0x7ffff7eb86c8 <__libc_ifunc_impl_list+4632>:	cmp    edx,0x40000100
   0x7ffff7eb86ce <__libc_ifunc_impl_list+4638>:	je     0x7ffff7eb8a3c <__libc_ifunc_impl_list+5516>
   0x7ffff7eb86d4 <__libc_ifunc_impl_list+4644>:	lea    rdi,[rip+0xb7def]        # 0x7ffff7f704ca
   0x7ffff7eb86db <__libc_ifunc_impl_list+4651>:	lea    rcx,[rip+0x8c3ce]        # 0x7ffff7f44ab0
   0x7ffff7eb86e2 <__libc_ifunc_impl_list+4658>:	mov    BYTE PTR [rbx+0xb8],0x0
   0x7ffff7eb86e9 <__libc_ifunc_impl_list+4665>:	mov    QWORD PTR [rbx+0xa8],rdi
   0x7ffff7eb86f0 <__libc_ifunc_impl_list+4672>:	lea    rdi,[rip+0xbcd41]        # 0x7ffff7f75438
   0x7ffff7eb86f7 <__libc_ifunc_impl_list+4679>:	mov    QWORD PTR [rbx+0xc0],rdi
   0x7ffff7eb86fe <__libc_ifunc_impl_list+4686>:	mov    BYTE PTR [rbx+0xd0],0x0
   0x7ffff7eb8705 <__libc_ifunc_impl_list+4693>:	mov    QWORD PTR [rbx+0xb0],rcx
   0x7ffff7eb870c <__libc_ifunc_impl_list+4700>:	lea    rcx,[rip+0x8c3fd]        # 0x7ffff7f44b10
   0x7ffff7eb8713 <__libc_ifunc_impl_list+4707>:	mov    QWORD PTR [rbx+0xc8],rcx
   0x7ffff7eb871a <__libc_ifunc_impl_list+4714>:	xor    ecx,ecx
   0x7ffff7eb871c <__libc_ifunc_impl_list+4716>:	lea    rdi,[rip+0xbc97d]        # 0x7ffff7f750a0
   0x7ffff7eb8723 <__libc_ifunc_impl_list+4723>:	cmp    edx,0x40000100
   0x7ffff7eb8729 <__libc_ifunc_impl_list+4729>:	mov    BYTE PTR [rbx+0xe8],cl
   0x7ffff7eb872f <__libc_ifunc_impl_list+4735>:	mov    QWORD PTR [rbx+0xd8],rdi
   0x7ffff7eb8736 <__libc_ifunc_impl_list+4742>:	lea    rdi,[rip+0x83a63]        # 0x7ffff7f3c1a0
   0x7ffff7eb873d <__libc_ifunc_impl_list+4749>:	sete   dl
   0x7ffff7eb8740 <__libc_ifunc_impl_list+4752>:	mov    QWORD PTR [rbx+0xe0],rdi
   0x7ffff7eb8747 <__libc_ifunc_impl_list+4759>:	jmp    0x7ffff7eb8249 <__libc_ifunc_impl_list+3481>
   0x7ffff7eb874c <__libc_ifunc_impl_list+4764>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb8750 <__libc_ifunc_impl_list+4768>:	mov    rax,QWORD PTR [rip+0xf5771]        # 0x7ffff7fadec8
   0x7ffff7eb8757 <__libc_ifunc_impl_list+4775>:	lea    rcx,[rip+0xb6f7a]        # 0x7ffff7f6f6d8
   0x7ffff7eb875e <__libc_ifunc_impl_list+4782>:	mov    QWORD PTR [rbx],rcx
   0x7ffff7eb8761 <__libc_ifunc_impl_list+4785>:	lea    rcx,[rip+0x7a378]        # 0x7ffff7f32ae0
   0x7ffff7eb8768 <__libc_ifunc_impl_list+4792>:	mov    eax,DWORD PTR [rax+0xb8]
   0x7ffff7eb876e <__libc_ifunc_impl_list+4798>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eb8772 <__libc_ifunc_impl_list+4802>:	lea    rcx,[rip+0xb6f6e]        # 0x7ffff7f6f6e7
   0x7ffff7eb8779 <__libc_ifunc_impl_list+4809>:	mov    QWORD PTR [rbx+0x18],rcx
   0x7ffff7eb877d <__libc_ifunc_impl_list+4813>:	lea    rcx,[rip+0x88f7c]        # 0x7ffff7f41700
   0x7ffff7eb8784 <__libc_ifunc_impl_list+4820>:	mov    edx,eax
   0x7ffff7eb8786 <__libc_ifunc_impl_list+4822>:	mov    QWORD PTR [rbx+0x20],rcx
   0x7ffff7eb878a <__libc_ifunc_impl_list+4826>:	and    edx,0x120
   0x7ffff7eb8790 <__libc_ifunc_impl_list+4832>:	cmp    edx,0x120
   0x7ffff7eb8796 <__libc_ifunc_impl_list+4838>:	mov    edx,eax
   0x7ffff7eb8798 <__libc_ifunc_impl_list+4840>:	sete   BYTE PTR [rbx+0x10]
   0x7ffff7eb879c <__libc_ifunc_impl_list+4844>:	and    edx,0x920
   0x7ffff7eb87a2 <__libc_ifunc_impl_list+4850>:	cmp    edx,0x920
   0x7ffff7eb87a8 <__libc_ifunc_impl_list+4856>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb87ac <__libc_ifunc_impl_list+4860>:	xor    edx,edx
   0x7ffff7eb87ae <__libc_ifunc_impl_list+4862>:	test   eax,eax
   0x7ffff7eb87b0 <__libc_ifunc_impl_list+4864>:	jns    0x7ffff7eb87bf <__libc_ifunc_impl_list+4879>
   0x7ffff7eb87b2 <__libc_ifunc_impl_list+4866>:	and    eax,0x40000100
   0x7ffff7eb87b7 <__libc_ifunc_impl_list+4871>:	cmp    eax,0x40000100
   0x7ffff7eb87bc <__libc_ifunc_impl_list+4876>:	sete   dl
   0x7ffff7eb87bf <__libc_ifunc_impl_list+4879>:	lea    rax,[rip+0xb6f34]        # 0x7ffff7f6f6fa
   0x7ffff7eb87c6 <__libc_ifunc_impl_list+4886>:	mov    BYTE PTR [rbx+0x40],dl
   0x7ffff7eb87c9 <__libc_ifunc_impl_list+4889>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb87cd <__libc_ifunc_impl_list+4893>:	lea    rax,[rip+0x906ac]        # 0x7ffff7f48e80
   0x7ffff7eb87d4 <__libc_ifunc_impl_list+4900>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb87d8 <__libc_ifunc_impl_list+4904>:	lea    rax,[rip+0xb6f2a]        # 0x7ffff7f6f709
   0x7ffff7eb87df <__libc_ifunc_impl_list+4911>:	mov    QWORD PTR [rbx+0x48],rax
   0x7ffff7eb87e3 <__libc_ifunc_impl_list+4915>:	lea    rax,[rip+0xfffffffffff97386]        # 0x7ffff7e4fb70
   0x7ffff7eb87ea <__libc_ifunc_impl_list+4922>:	mov    QWORD PTR [rbx+0x50],rax
   0x7ffff7eb87ee <__libc_ifunc_impl_list+4926>:	mov    eax,0x4
   0x7ffff7eb87f3 <__libc_ifunc_impl_list+4931>:	mov    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eb87f7 <__libc_ifunc_impl_list+4935>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb87fc <__libc_ifunc_impl_list+4940>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb8800 <__libc_ifunc_impl_list+4944>:	mov    edx,eax
   0x7ffff7eb8802 <__libc_ifunc_impl_list+4946>:	and    edx,0x40000100
   0x7ffff7eb8808 <__libc_ifunc_impl_list+4952>:	cmp    edx,0x40000100
   0x7ffff7eb880e <__libc_ifunc_impl_list+4958>:	je     0x7ffff7eb8b1d <__libc_ifunc_impl_list+5741>
   0x7ffff7eb8814 <__libc_ifunc_impl_list+4964>:	lea    rdi,[rip+0xb7ccb]        # 0x7ffff7f704e6
   0x7ffff7eb881b <__libc_ifunc_impl_list+4971>:	lea    rcx,[rip+0x8c29e]        # 0x7ffff7f44ac0
   0x7ffff7eb8822 <__libc_ifunc_impl_list+4978>:	mov    BYTE PTR [rbx+0xb8],0x0
   0x7ffff7eb8829 <__libc_ifunc_impl_list+4985>:	mov    QWORD PTR [rbx+0xa8],rdi
   0x7ffff7eb8830 <__libc_ifunc_impl_list+4992>:	lea    rdi,[rip+0xb7cc7]        # 0x7ffff7f704fe
   0x7ffff7eb8837 <__libc_ifunc_impl_list+4999>:	mov    QWORD PTR [rbx+0xc0],rdi
   0x7ffff7eb883e <__libc_ifunc_impl_list+5006>:	mov    BYTE PTR [rbx+0xd0],0x0
   0x7ffff7eb8845 <__libc_ifunc_impl_list+5013>:	mov    QWORD PTR [rbx+0xb0],rcx
   0x7ffff7eb884c <__libc_ifunc_impl_list+5020>:	lea    rcx,[rip+0x8c2ed]        # 0x7ffff7f44b40
   0x7ffff7eb8853 <__libc_ifunc_impl_list+5027>:	mov    QWORD PTR [rbx+0xc8],rcx
   0x7ffff7eb885a <__libc_ifunc_impl_list+5034>:	xor    ecx,ecx
   0x7ffff7eb885c <__libc_ifunc_impl_list+5036>:	lea    rdi,[rip+0xbc8b5]        # 0x7ffff7f75118
   0x7ffff7eb8863 <__libc_ifunc_impl_list+5043>:	cmp    edx,0x40000100
   0x7ffff7eb8869 <__libc_ifunc_impl_list+5049>:	mov    BYTE PTR [rbx+0xe8],cl
   0x7ffff7eb886f <__libc_ifunc_impl_list+5055>:	mov    QWORD PTR [rbx+0xd8],rdi
   0x7ffff7eb8876 <__libc_ifunc_impl_list+5062>:	lea    rdi,[rip+0x83943]        # 0x7ffff7f3c1c0
   0x7ffff7eb887d <__libc_ifunc_impl_list+5069>:	sete   dl
   0x7ffff7eb8880 <__libc_ifunc_impl_list+5072>:	mov    QWORD PTR [rbx+0xe0],rdi
   0x7ffff7eb8887 <__libc_ifunc_impl_list+5079>:	jmp    0x7ffff7eb8519 <__libc_ifunc_impl_list+4201>
   0x7ffff7eb888c <__libc_ifunc_impl_list+5084>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eb8890 <__libc_ifunc_impl_list+5088>:	mov    rdx,QWORD PTR [rip+0xf5631]        # 0x7ffff7fadec8
   0x7ffff7eb8897 <__libc_ifunc_impl_list+5095>:	lea    rcx,[rip+0xb6e82]        # 0x7ffff7f6f720
   0x7ffff7eb889e <__libc_ifunc_impl_list+5102>:	mov    BYTE PTR [rbx+0x70],0x1
   0x7ffff7eb88a2 <__libc_ifunc_impl_list+5106>:	lea    rdi,[rip+0xb6ea9]        # 0x7ffff7f6f752
   0x7ffff7eb88a9 <__libc_ifunc_impl_list+5113>:	mov    QWORD PTR [rbx],rcx
   0x7ffff7eb88ac <__libc_ifunc_impl_list+5116>:	lea    rcx,[rip+0x6c29d]        # 0x7ffff7f24b50
   0x7ffff7eb88b3 <__libc_ifunc_impl_list+5123>:	mov    eax,DWORD PTR [rdx+0x9c]
   0x7ffff7eb88b9 <__libc_ifunc_impl_list+5129>:	mov    edx,DWORD PTR [rdx+0xb8]
   0x7ffff7eb88bf <__libc_ifunc_impl_list+5135>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eb88c3 <__libc_ifunc_impl_list+5139>:	lea    rcx,[rip+0x8c9a6]        # 0x7ffff7f45270
   0x7ffff7eb88ca <__libc_ifunc_impl_list+5146>:	mov    QWORD PTR [rbx+0x48],rdi
   0x7ffff7eb88ce <__libc_ifunc_impl_list+5150>:	shr    eax,0x9
   0x7ffff7eb88d1 <__libc_ifunc_impl_list+5153>:	mov    QWORD PTR [rbx+0x50],rcx
   0x7ffff7eb88d5 <__libc_ifunc_impl_list+5157>:	and    eax,0x1
   0x7ffff7eb88d8 <__libc_ifunc_impl_list+5160>:	mov    BYTE PTR [rbx+0x88],0x1
   0x7ffff7eb88df <__libc_ifunc_impl_list+5167>:	mov    BYTE PTR [rbx+0x10],al
   0x7ffff7eb88e2 <__libc_ifunc_impl_list+5170>:	lea    rax,[rip+0xb6e47]        # 0x7ffff7f6f730
   0x7ffff7eb88e9 <__libc_ifunc_impl_list+5177>:	mov    QWORD PTR [rbx+0x18],rax
   0x7ffff7eb88ed <__libc_ifunc_impl_list+5181>:	lea    rax,[rip+0x7c5dc]        # 0x7ffff7f34ed0
   0x7ffff7eb88f4 <__libc_ifunc_impl_list+5188>:	mov    QWORD PTR [rbx+0x20],rax
   0x7ffff7eb88f8 <__libc_ifunc_impl_list+5192>:	mov    eax,edx
   0x7ffff7eb88fa <__libc_ifunc_impl_list+5194>:	shr    eax,0x5
   0x7ffff7eb88fd <__libc_ifunc_impl_list+5197>:	and    eax,0x1
   0x7ffff7eb8900 <__libc_ifunc_impl_list+5200>:	mov    BYTE PTR [rbx+0x28],al
   0x7ffff7eb8903 <__libc_ifunc_impl_list+5203>:	lea    rax,[rip+0xb6e35]        # 0x7ffff7f6f73f
   0x7ffff7eb890a <__libc_ifunc_impl_list+5210>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb890e <__libc_ifunc_impl_list+5214>:	lea    rax,[rip+0x85f5b]        # 0x7ffff7f3e870
   0x7ffff7eb8915 <__libc_ifunc_impl_list+5221>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb8919 <__libc_ifunc_impl_list+5225>:	mov    eax,edx
   0x7ffff7eb891b <__libc_ifunc_impl_list+5227>:	and    eax,0x820
   0x7ffff7eb8920 <__libc_ifunc_impl_list+5232>:	cmp    eax,0x820
   0x7ffff7eb8925 <__libc_ifunc_impl_list+5237>:	mov    eax,edx
   0x7ffff7eb8927 <__libc_ifunc_impl_list+5239>:	sete   BYTE PTR [rbx+0x40]
   0x7ffff7eb892b <__libc_ifunc_impl_list+5243>:	shr    eax,0x1e
   0x7ffff7eb892e <__libc_ifunc_impl_list+5246>:	and    eax,0x1
   0x7ffff7eb8931 <__libc_ifunc_impl_list+5249>:	test   edx,edx
   0x7ffff7eb8933 <__libc_ifunc_impl_list+5251>:	mov    edx,0x0
   0x7ffff7eb8938 <__libc_ifunc_impl_list+5256>:	cmovns eax,edx
   0x7ffff7eb893b <__libc_ifunc_impl_list+5259>:	mov    BYTE PTR [rbx+0x58],al
   0x7ffff7eb893e <__libc_ifunc_impl_list+5262>:	lea    rax,[rip+0xb6e1c]        # 0x7ffff7f6f761
   0x7ffff7eb8945 <__libc_ifunc_impl_list+5269>:	mov    QWORD PTR [rbx+0x60],rax
   0x7ffff7eb8949 <__libc_ifunc_impl_list+5273>:	lea    rax,[rip+0xfffffffffff9dcc0]        # 0x7ffff7e56610
   0x7ffff7eb8950 <__libc_ifunc_impl_list+5280>:	mov    QWORD PTR [rbx+0x68],rax
   0x7ffff7eb8954 <__libc_ifunc_impl_list+5284>:	lea    rax,[rip+0xb6e1f]        # 0x7ffff7f6f77a
   0x7ffff7eb895b <__libc_ifunc_impl_list+5291>:	mov    QWORD PTR [rbx+0x78],rax
   0x7ffff7eb895f <__libc_ifunc_impl_list+5295>:	lea    rax,[rip+0xfffffffffff8df6a]        # 0x7ffff7e468d0
   0x7ffff7eb8966 <__libc_ifunc_impl_list+5302>:	mov    QWORD PTR [rbx+0x80],rax
   0x7ffff7eb896d <__libc_ifunc_impl_list+5309>:	mov    eax,0x6
   0x7ffff7eb8972 <__libc_ifunc_impl_list+5314>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb8977 <__libc_ifunc_impl_list+5319>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eb8980 <__libc_ifunc_impl_list+5328>:	and    eax,0x40000100
   0x7ffff7eb8985 <__libc_ifunc_impl_list+5333>:	lea    rdi,[rip+0xb6cca]        # 0x7ffff7f6f656
   0x7ffff7eb898c <__libc_ifunc_impl_list+5340>:	lea    rcx,[rip+0x8c30d]        # 0x7ffff7f44ca0
   0x7ffff7eb8993 <__libc_ifunc_impl_list+5347>:	cmp    eax,0x40000100
   0x7ffff7eb8998 <__libc_ifunc_impl_list+5352>:	mov    QWORD PTR [rbx+0x30],rdi
   0x7ffff7eb899c <__libc_ifunc_impl_list+5356>:	sete   al
   0x7ffff7eb899f <__libc_ifunc_impl_list+5359>:	mov    QWORD PTR [rbx+0x38],rcx
   0x7ffff7eb89a3 <__libc_ifunc_impl_list+5363>:	mov    BYTE PTR [rbx+0x40],al
   0x7ffff7eb89a6 <__libc_ifunc_impl_list+5366>:	jmp    0x7ffff7eb85d1 <__libc_ifunc_impl_list+4385>
   0x7ffff7eb89ab <__libc_ifunc_impl_list+5371>:	mov    rax,QWORD PTR [rip+0xf5516]        # 0x7ffff7fadec8
   0x7ffff7eb89b2 <__libc_ifunc_impl_list+5378>:	lea    rdi,[rip+0xb6e45]        # 0x7ffff7f6f7fe
   0x7ffff7eb89b9 <__libc_ifunc_impl_list+5385>:	lea    rcx,[rip+0x768f0]        # 0x7ffff7f2f2b0
   0x7ffff7eb89c0 <__libc_ifunc_impl_list+5392>:	mov    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eb89c4 <__libc_ifunc_impl_list+5396>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb89c7 <__libc_ifunc_impl_list+5399>:	lea    rdi,[rip+0xb6e41]        # 0x7ffff7f6f80f
   0x7ffff7eb89ce <__libc_ifunc_impl_list+5406>:	mov    eax,DWORD PTR [rax+0x9c]
   0x7ffff7eb89d4 <__libc_ifunc_impl_list+5412>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eb89d8 <__libc_ifunc_impl_list+5416>:	lea    rcx,[rip+0x711d1]        # 0x7ffff7f29bb0
   0x7ffff7eb89df <__libc_ifunc_impl_list+5423>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb89e3 <__libc_ifunc_impl_list+5427>:	lea    rdi,[rip+0xb6e38]        # 0x7ffff7f6f822
   0x7ffff7eb89ea <__libc_ifunc_impl_list+5434>:	mov    edx,eax
   0x7ffff7eb89ec <__libc_ifunc_impl_list+5436>:	mov    QWORD PTR [rbx+0x20],rcx
   0x7ffff7eb89f0 <__libc_ifunc_impl_list+5440>:	lea    rcx,[rip+0x61f49]        # 0x7ffff7f1a940
   0x7ffff7eb89f7 <__libc_ifunc_impl_list+5447>:	shr    edx,0x1c
   0x7ffff7eb89fa <__libc_ifunc_impl_list+5450>:	mov    QWORD PTR [rbx+0x30],rdi
   0x7ffff7eb89fe <__libc_ifunc_impl_list+5454>:	and    edx,0x1
   0x7ffff7eb8a01 <__libc_ifunc_impl_list+5457>:	mov    QWORD PTR [rbx+0x38],rcx
   0x7ffff7eb8a05 <__libc_ifunc_impl_list+5461>:	mov    BYTE PTR [rbx+0x10],dl
   0x7ffff7eb8a08 <__libc_ifunc_impl_list+5464>:	mov    edx,eax
   0x7ffff7eb8a0a <__libc_ifunc_impl_list+5466>:	shr    eax,0x9
   0x7ffff7eb8a0d <__libc_ifunc_impl_list+5469>:	and    eax,0x1
   0x7ffff7eb8a10 <__libc_ifunc_impl_list+5472>:	shr    edx,0x14
   0x7ffff7eb8a13 <__libc_ifunc_impl_list+5475>:	mov    BYTE PTR [rbx+0x40],al
   0x7ffff7eb8a16 <__libc_ifunc_impl_list+5478>:	lea    rax,[rip+0xb6e18]        # 0x7ffff7f6f835
   0x7ffff7eb8a1d <__libc_ifunc_impl_list+5485>:	and    edx,0x1
   0x7ffff7eb8a20 <__libc_ifunc_impl_list+5488>:	mov    QWORD PTR [rbx+0x48],rax
   0x7ffff7eb8a24 <__libc_ifunc_impl_list+5492>:	lea    rax,[rip+0xfffffffffff91fb5]        # 0x7ffff7e4a9e0
   0x7ffff7eb8a2b <__libc_ifunc_impl_list+5499>:	mov    QWORD PTR [rbx+0x50],rax
   0x7ffff7eb8a2f <__libc_ifunc_impl_list+5503>:	mov    eax,0x4
   0x7ffff7eb8a34 <__libc_ifunc_impl_list+5508>:	mov    BYTE PTR [rbx+0x28],dl
   0x7ffff7eb8a37 <__libc_ifunc_impl_list+5511>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb8a3c <__libc_ifunc_impl_list+5516>:	lea    rdi,[rip+0xb7a87]        # 0x7ffff7f704ca
   0x7ffff7eb8a43 <__libc_ifunc_impl_list+5523>:	lea    rcx,[rip+0x8c066]        # 0x7ffff7f44ab0
   0x7ffff7eb8a4a <__libc_ifunc_impl_list+5530>:	mov    BYTE PTR [rbx+0xb8],0x1
   0x7ffff7eb8a51 <__libc_ifunc_impl_list+5537>:	mov    QWORD PTR [rbx+0xa8],rdi
   0x7ffff7eb8a58 <__libc_ifunc_impl_list+5544>:	lea    rdi,[rip+0xbc9d9]        # 0x7ffff7f75438
   0x7ffff7eb8a5f <__libc_ifunc_impl_list+5551>:	mov    QWORD PTR [rbx+0xb0],rcx
   0x7ffff7eb8a66 <__libc_ifunc_impl_list+5558>:	lea    rcx,[rip+0x8c0a3]        # 0x7ffff7f44b10
   0x7ffff7eb8a6d <__libc_ifunc_impl_list+5565>:	mov    QWORD PTR [rbx+0xc8],rcx
   0x7ffff7eb8a74 <__libc_ifunc_impl_list+5572>:	mov    ecx,0x1
   0x7ffff7eb8a79 <__libc_ifunc_impl_list+5577>:	mov    QWORD PTR [rbx+0xc0],rdi
   0x7ffff7eb8a80 <__libc_ifunc_impl_list+5584>:	mov    BYTE PTR [rbx+0xd0],0x1
   0x7ffff7eb8a87 <__libc_ifunc_impl_list+5591>:	jmp    0x7ffff7eb871c <__libc_ifunc_impl_list+4716>
   0x7ffff7eb8a8c <__libc_ifunc_impl_list+5596>:	mov    rax,QWORD PTR [rip+0xf5435]        # 0x7ffff7fadec8
   0x7ffff7eb8a93 <__libc_ifunc_impl_list+5603>:	lea    rdi,[rip+0xb6dba]        # 0x7ffff7f6f854
   0x7ffff7eb8a9a <__libc_ifunc_impl_list+5610>:	lea    rcx,[rip+0x76823]        # 0x7ffff7f2f2c4
   0x7ffff7eb8aa1 <__libc_ifunc_impl_list+5617>:	mov    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eb8aa5 <__libc_ifunc_impl_list+5621>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb8aa8 <__libc_ifunc_impl_list+5624>:	lea    rdi,[rip+0xb6db8]        # 0x7ffff7f6f867
   0x7ffff7eb8aaf <__libc_ifunc_impl_list+5631>:	mov    eax,DWORD PTR [rax+0x9c]
   0x7ffff7eb8ab5 <__libc_ifunc_impl_list+5637>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eb8ab9 <__libc_ifunc_impl_list+5641>:	lea    rcx,[rip+0x71104]        # 0x7ffff7f29bc4
   0x7ffff7eb8ac0 <__libc_ifunc_impl_list+5648>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb8ac4 <__libc_ifunc_impl_list+5652>:	lea    rdi,[rip+0xb6db1]        # 0x7ffff7f6f87c
   0x7ffff7eb8acb <__libc_ifunc_impl_list+5659>:	mov    edx,eax
   0x7ffff7eb8acd <__libc_ifunc_impl_list+5661>:	mov    QWORD PTR [rbx+0x20],rcx
   0x7ffff7eb8ad1 <__libc_ifunc_impl_list+5665>:	lea    rcx,[rip+0x61e88]        # 0x7ffff7f1a960
   0x7ffff7eb8ad8 <__libc_ifunc_impl_list+5672>:	shr    edx,0x1c
   0x7ffff7eb8adb <__libc_ifunc_impl_list+5675>:	mov    QWORD PTR [rbx+0x30],rdi
   0x7ffff7eb8adf <__libc_ifunc_impl_list+5679>:	and    edx,0x1
   0x7ffff7eb8ae2 <__libc_ifunc_impl_list+5682>:	mov    QWORD PTR [rbx+0x38],rcx
   0x7ffff7eb8ae6 <__libc_ifunc_impl_list+5686>:	mov    BYTE PTR [rbx+0x10],dl
   0x7ffff7eb8ae9 <__libc_ifunc_impl_list+5689>:	mov    edx,eax
   0x7ffff7eb8aeb <__libc_ifunc_impl_list+5691>:	shr    eax,0x9
   0x7ffff7eb8aee <__libc_ifunc_impl_list+5694>:	and    eax,0x1
   0x7ffff7eb8af1 <__libc_ifunc_impl_list+5697>:	shr    edx,0x14
   0x7ffff7eb8af4 <__libc_ifunc_impl_list+5700>:	mov    BYTE PTR [rbx+0x40],al
   0x7ffff7eb8af7 <__libc_ifunc_impl_list+5703>:	lea    rax,[rip+0xb6d93]        # 0x7ffff7f6f891
   0x7ffff7eb8afe <__libc_ifunc_impl_list+5710>:	and    edx,0x1
   0x7ffff7eb8b01 <__libc_ifunc_impl_list+5713>:	mov    QWORD PTR [rbx+0x48],rax
   0x7ffff7eb8b05 <__libc_ifunc_impl_list+5717>:	lea    rax,[rip+0xfffffffffff91ef4]        # 0x7ffff7e4aa00
   0x7ffff7eb8b0c <__libc_ifunc_impl_list+5724>:	mov    QWORD PTR [rbx+0x50],rax
   0x7ffff7eb8b10 <__libc_ifunc_impl_list+5728>:	mov    eax,0x4
   0x7ffff7eb8b15 <__libc_ifunc_impl_list+5733>:	mov    BYTE PTR [rbx+0x28],dl
   0x7ffff7eb8b18 <__libc_ifunc_impl_list+5736>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb8b1d <__libc_ifunc_impl_list+5741>:	lea    rcx,[rip+0xb79c2]        # 0x7ffff7f704e6
   0x7ffff7eb8b24 <__libc_ifunc_impl_list+5748>:	lea    rdi,[rip+0x8bf95]        # 0x7ffff7f44ac0
   0x7ffff7eb8b2b <__libc_ifunc_impl_list+5755>:	mov    BYTE PTR [rbx+0xb8],0x1
   0x7ffff7eb8b32 <__libc_ifunc_impl_list+5762>:	mov    QWORD PTR [rbx+0xa8],rcx
   0x7ffff7eb8b39 <__libc_ifunc_impl_list+5769>:	lea    rcx,[rip+0xb79be]        # 0x7ffff7f704fe
   0x7ffff7eb8b40 <__libc_ifunc_impl_list+5776>:	mov    QWORD PTR [rbx+0xb0],rdi
   0x7ffff7eb8b47 <__libc_ifunc_impl_list+5783>:	lea    rdi,[rip+0x8bff2]        # 0x7ffff7f44b40
   0x7ffff7eb8b4e <__libc_ifunc_impl_list+5790>:	mov    QWORD PTR [rbx+0xc0],rcx
   0x7ffff7eb8b55 <__libc_ifunc_impl_list+5797>:	mov    ecx,0x1
   0x7ffff7eb8b5a <__libc_ifunc_impl_list+5802>:	mov    QWORD PTR [rbx+0xc8],rdi
   0x7ffff7eb8b61 <__libc_ifunc_impl_list+5809>:	mov    BYTE PTR [rbx+0xd0],0x1
   0x7ffff7eb8b68 <__libc_ifunc_impl_list+5816>:	jmp    0x7ffff7eb885c <__libc_ifunc_impl_list+5036>
   0x7ffff7eb8b6d <__libc_ifunc_impl_list+5821>:	mov    rdx,QWORD PTR [rip+0xf5354]        # 0x7ffff7fadec8
   0x7ffff7eb8b74 <__libc_ifunc_impl_list+5828>:	lea    rax,[rip+0xb6d31]        # 0x7ffff7f6f8ac
   0x7ffff7eb8b7b <__libc_ifunc_impl_list+5835>:	mov    BYTE PTR [rbx+0x70],0x1
   0x7ffff7eb8b7f <__libc_ifunc_impl_list+5839>:	lea    rdi,[rip+0xb6d46]        # 0x7ffff7f6f8cc
   0x7ffff7eb8b86 <__libc_ifunc_impl_list+5846>:	mov    QWORD PTR [rbx],rax
   0x7ffff7eb8b89 <__libc_ifunc_impl_list+5849>:	lea    rax,[rip+0x7a220]        # 0x7ffff7f32db0
   0x7ffff7eb8b90 <__libc_ifunc_impl_list+5856>:	mov    ecx,DWORD PTR [rdx+0xb8]
   0x7ffff7eb8b96 <__libc_ifunc_impl_list+5862>:	mov    QWORD PTR [rbx+0x8],rax
   0x7ffff7eb8b9a <__libc_ifunc_impl_list+5866>:	mov    QWORD PTR [rbx+0x30],rdi
   0x7ffff7eb8b9e <__libc_ifunc_impl_list+5870>:	lea    rdi,[rip+0x8d15b]        # 0x7ffff7f45d00
   0x7ffff7eb8ba5 <__libc_ifunc_impl_list+5877>:	mov    eax,ecx
   0x7ffff7eb8ba7 <__libc_ifunc_impl_list+5879>:	mov    QWORD PTR [rbx+0x38],rdi
   0x7ffff7eb8bab <__libc_ifunc_impl_list+5883>:	lea    rdi,[rip+0xfffffffffff971de]        # 0x7ffff7e4fd90
   0x7ffff7eb8bb2 <__libc_ifunc_impl_list+5890>:	shr    eax,0x5
   0x7ffff7eb8bb5 <__libc_ifunc_impl_list+5893>:	mov    QWORD PTR [rbx+0x50],rdi
   0x7ffff7eb8bb9 <__libc_ifunc_impl_list+5897>:	and    eax,0x1
   0x7ffff7eb8bbc <__libc_ifunc_impl_list+5900>:	mov    BYTE PTR [rbx+0x88],0x1
   0x7ffff7eb8bc3 <__libc_ifunc_impl_list+5907>:	mov    BYTE PTR [rbx+0x10],al
   0x7ffff7eb8bc6 <__libc_ifunc_impl_list+5910>:	lea    rax,[rip+0xb6ced]        # 0x7ffff7f6f8ba
   0x7ffff7eb8bcd <__libc_ifunc_impl_list+5917>:	mov    QWORD PTR [rbx+0x18],rax
   0x7ffff7eb8bd1 <__libc_ifunc_impl_list+5921>:	lea    rax,[rip+0x86658]        # 0x7ffff7f3f230
   0x7ffff7eb8bd8 <__libc_ifunc_impl_list+5928>:	mov    QWORD PTR [rbx+0x20],rax
   0x7ffff7eb8bdc <__libc_ifunc_impl_list+5932>:	mov    eax,ecx
   0x7ffff7eb8bde <__libc_ifunc_impl_list+5934>:	and    eax,0x820
   0x7ffff7eb8be3 <__libc_ifunc_impl_list+5939>:	cmp    eax,0x820
   0x7ffff7eb8be8 <__libc_ifunc_impl_list+5944>:	mov    eax,ecx
   0x7ffff7eb8bea <__libc_ifunc_impl_list+5946>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb8bee <__libc_ifunc_impl_list+5950>:	shr    eax,0x1e
   0x7ffff7eb8bf1 <__libc_ifunc_impl_list+5953>:	and    eax,0x1
   0x7ffff7eb8bf4 <__libc_ifunc_impl_list+5956>:	test   ecx,ecx
   0x7ffff7eb8bf6 <__libc_ifunc_impl_list+5958>:	mov    ecx,0x0
   0x7ffff7eb8bfb <__libc_ifunc_impl_list+5963>:	cmovns eax,ecx
   0x7ffff7eb8bfe <__libc_ifunc_impl_list+5966>:	lea    rcx,[rip+0xb6cd5]        # 0x7ffff7f6f8da
   0x7ffff7eb8c05 <__libc_ifunc_impl_list+5973>:	mov    QWORD PTR [rbx+0x48],rcx
   0x7ffff7eb8c09 <__libc_ifunc_impl_list+5977>:	mov    BYTE PTR [rbx+0x40],al
   0x7ffff7eb8c0c <__libc_ifunc_impl_list+5980>:	mov    eax,DWORD PTR [rdx+0x9c]
   0x7ffff7eb8c12 <__libc_ifunc_impl_list+5986>:	shr    eax,0x9
   0x7ffff7eb8c15 <__libc_ifunc_impl_list+5989>:	and    eax,0x1
   0x7ffff7eb8c18 <__libc_ifunc_impl_list+5992>:	mov    BYTE PTR [rbx+0x58],al
   0x7ffff7eb8c1b <__libc_ifunc_impl_list+5995>:	lea    rax,[rip+0xb6cc7]        # 0x7ffff7f6f8e9
   0x7ffff7eb8c22 <__libc_ifunc_impl_list+6002>:	mov    QWORD PTR [rbx+0x60],rax
   0x7ffff7eb8c26 <__libc_ifunc_impl_list+6006>:	lea    rax,[rip+0xfffffffffff9ed33]        # 0x7ffff7e57960
   0x7ffff7eb8c2d <__libc_ifunc_impl_list+6013>:	mov    QWORD PTR [rbx+0x68],rax
   0x7ffff7eb8c31 <__libc_ifunc_impl_list+6017>:	lea    rax,[rip+0xb6cc9]        # 0x7ffff7f6f901
   0x7ffff7eb8c38 <__libc_ifunc_impl_list+6024>:	mov    QWORD PTR [rbx+0x78],rax
   0x7ffff7eb8c3c <__libc_ifunc_impl_list+6028>:	lea    rax,[rip+0xfffffffffff9eb5d]        # 0x7ffff7e577a0
   0x7ffff7eb8c43 <__libc_ifunc_impl_list+6035>:	mov    QWORD PTR [rbx+0x80],rax
   0x7ffff7eb8c4a <__libc_ifunc_impl_list+6042>:	mov    eax,0x6
   0x7ffff7eb8c4f <__libc_ifunc_impl_list+6047>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb8c54 <__libc_ifunc_impl_list+6052>:	mov    rax,QWORD PTR [rip+0xf526d]        # 0x7ffff7fadec8
   0x7ffff7eb8c5b <__libc_ifunc_impl_list+6059>:	lea    rcx,[rip+0xb6cb4]        # 0x7ffff7f6f916
   0x7ffff7eb8c62 <__libc_ifunc_impl_list+6066>:	lea    rdi,[rip+0x79697]        # 0x7ffff7f32300
   0x7ffff7eb8c69 <__libc_ifunc_impl_list+6073>:	mov    QWORD PTR [rbx],rcx
   0x7ffff7eb8c6c <__libc_ifunc_impl_list+6076>:	lea    rcx,[rip+0xb6cb1]        # 0x7ffff7f6f924
   0x7ffff7eb8c73 <__libc_ifunc_impl_list+6083>:	mov    eax,DWORD PTR [rax+0xb8]
   0x7ffff7eb8c79 <__libc_ifunc_impl_list+6089>:	mov    QWORD PTR [rbx+0x8],rdi
   0x7ffff7eb8c7d <__libc_ifunc_impl_list+6093>:	lea    rdi,[rip+0x84f1c]        # 0x7ffff7f3dba0
   0x7ffff7eb8c84 <__libc_ifunc_impl_list+6100>:	mov    QWORD PTR [rbx+0x18],rcx
   0x7ffff7eb8c88 <__libc_ifunc_impl_list+6104>:	mov    edx,eax
   0x7ffff7eb8c8a <__libc_ifunc_impl_list+6106>:	mov    QWORD PTR [rbx+0x20],rdi
   0x7ffff7eb8c8e <__libc_ifunc_impl_list+6110>:	and    edx,0x120
   0x7ffff7eb8c94 <__libc_ifunc_impl_list+6116>:	cmp    edx,0x120
   0x7ffff7eb8c9a <__libc_ifunc_impl_list+6122>:	mov    edx,eax
   0x7ffff7eb8c9c <__libc_ifunc_impl_list+6124>:	sete   BYTE PTR [rbx+0x10]
   0x7ffff7eb8ca0 <__libc_ifunc_impl_list+6128>:	and    edx,0x920
   0x7ffff7eb8ca6 <__libc_ifunc_impl_list+6134>:	cmp    edx,0x920
   0x7ffff7eb8cac <__libc_ifunc_impl_list+6140>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb8cb0 <__libc_ifunc_impl_list+6144>:	xor    edx,edx
   0x7ffff7eb8cb2 <__libc_ifunc_impl_list+6146>:	test   eax,eax
   0x7ffff7eb8cb4 <__libc_ifunc_impl_list+6148>:	jns    0x7ffff7eb8cc3 <__libc_ifunc_impl_list+6163>
   0x7ffff7eb8cb6 <__libc_ifunc_impl_list+6150>:	and    eax,0x40000100
   0x7ffff7eb8cbb <__libc_ifunc_impl_list+6155>:	cmp    eax,0x40000100
   0x7ffff7eb8cc0 <__libc_ifunc_impl_list+6160>:	sete   dl
   0x7ffff7eb8cc3 <__libc_ifunc_impl_list+6163>:	lea    rax,[rip+0xb6c6c]        # 0x7ffff7f6f936
   0x7ffff7eb8cca <__libc_ifunc_impl_list+6170>:	mov    BYTE PTR [rbx+0x40],dl
   0x7ffff7eb8ccd <__libc_ifunc_impl_list+6173>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb8cd1 <__libc_ifunc_impl_list+6177>:	lea    rax,[rip+0x8d788]        # 0x7ffff7f46460
   0x7ffff7eb8cd8 <__libc_ifunc_impl_list+6184>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb8cdc <__libc_ifunc_impl_list+6188>:	lea    rax,[rip+0xb6c61]        # 0x7ffff7f6f944
   0x7ffff7eb8ce3 <__libc_ifunc_impl_list+6195>:	mov    QWORD PTR [rbx+0x48],rax
   0x7ffff7eb8ce7 <__libc_ifunc_impl_list+6199>:	lea    rax,[rip+0x80ad2]        # 0x7ffff7f397c0
   0x7ffff7eb8cee <__libc_ifunc_impl_list+6206>:	mov    QWORD PTR [rbx+0x50],rax
   0x7ffff7eb8cf2 <__libc_ifunc_impl_list+6210>:	lea    rax,[rip+0xb6c60]        # 0x7ffff7f6f959
   0x7ffff7eb8cf9 <__libc_ifunc_impl_list+6217>:	mov    QWORD PTR [rbx+0x60],rax
   0x7ffff7eb8cfd <__libc_ifunc_impl_list+6221>:	lea    rax,[rip+0xfffffffffff9658c]        # 0x7ffff7e4f290
   0x7ffff7eb8d04 <__libc_ifunc_impl_list+6228>:	mov    QWORD PTR [rbx+0x68],rax
   0x7ffff7eb8d08 <__libc_ifunc_impl_list+6232>:	mov    eax,0x5
   0x7ffff7eb8d0d <__libc_ifunc_impl_list+6237>:	mov    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eb8d11 <__libc_ifunc_impl_list+6241>:	mov    BYTE PTR [rbx+0x70],0x1
   0x7ffff7eb8d15 <__libc_ifunc_impl_list+6245>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb8d1a <__libc_ifunc_impl_list+6250>:	mov    rax,QWORD PTR [rip+0xf51a7]        # 0x7ffff7fadec8
   0x7ffff7eb8d21 <__libc_ifunc_impl_list+6257>:	lea    rcx,[rip+0xb6c49]        # 0x7ffff7f6f971
   0x7ffff7eb8d28 <__libc_ifunc_impl_list+6264>:	lea    rdi,[rip+0xb6c53]        # 0x7ffff7f6f982
   0x7ffff7eb8d2f <__libc_ifunc_impl_list+6271>:	mov    QWORD PTR [rbx],rcx
   0x7ffff7eb8d32 <__libc_ifunc_impl_list+6274>:	lea    rcx,[rip+0x79847]        # 0x7ffff7f32580
   0x7ffff7eb8d39 <__libc_ifunc_impl_list+6281>:	mov    eax,DWORD PTR [rax+0xb8]
   0x7ffff7eb8d3f <__libc_ifunc_impl_list+6287>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eb8d43 <__libc_ifunc_impl_list+6291>:	lea    rcx,[rip+0x85556]        # 0x7ffff7f3e2a0
   0x7ffff7eb8d4a <__libc_ifunc_impl_list+6298>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb8d4e <__libc_ifunc_impl_list+6302>:	mov    edx,eax
   0x7ffff7eb8d50 <__libc_ifunc_impl_list+6304>:	mov    QWORD PTR [rbx+0x20],rcx
   0x7ffff7eb8d54 <__libc_ifunc_impl_list+6308>:	and    edx,0x120
   0x7ffff7eb8d5a <__libc_ifunc_impl_list+6314>:	cmp    edx,0x120
   0x7ffff7eb8d60 <__libc_ifunc_impl_list+6320>:	mov    edx,eax
   0x7ffff7eb8d62 <__libc_ifunc_impl_list+6322>:	sete   BYTE PTR [rbx+0x10]
   0x7ffff7eb8d66 <__libc_ifunc_impl_list+6326>:	and    edx,0x920
   0x7ffff7eb8d6c <__libc_ifunc_impl_list+6332>:	cmp    edx,0x920
   0x7ffff7eb8d72 <__libc_ifunc_impl_list+6338>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb8d76 <__libc_ifunc_impl_list+6342>:	xor    edx,edx
   0x7ffff7eb8d78 <__libc_ifunc_impl_list+6344>:	test   eax,eax
   0x7ffff7eb8d7a <__libc_ifunc_impl_list+6346>:	jns    0x7ffff7eb8d89 <__libc_ifunc_impl_list+6361>
   0x7ffff7eb8d7c <__libc_ifunc_impl_list+6348>:	and    eax,0x40000100
   0x7ffff7eb8d81 <__libc_ifunc_impl_list+6353>:	cmp    eax,0x40000100
   0x7ffff7eb8d86 <__libc_ifunc_impl_list+6358>:	sete   dl
   0x7ffff7eb8d89 <__libc_ifunc_impl_list+6361>:	lea    rax,[rip+0xb6c07]        # 0x7ffff7f6f997
   0x7ffff7eb8d90 <__libc_ifunc_impl_list+6368>:	mov    BYTE PTR [rbx+0x40],dl
   0x7ffff7eb8d93 <__libc_ifunc_impl_list+6371>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb8d97 <__libc_ifunc_impl_list+6375>:	lea    rax,[rip+0x8d962]        # 0x7ffff7f46700
   0x7ffff7eb8d9e <__libc_ifunc_impl_list+6382>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb8da2 <__libc_ifunc_impl_list+6386>:	lea    rax,[rip+0xb6bff]        # 0x7ffff7f6f9a8
   0x7ffff7eb8da9 <__libc_ifunc_impl_list+6393>:	mov    QWORD PTR [rbx+0x48],rax
   0x7ffff7eb8dad <__libc_ifunc_impl_list+6397>:	lea    rax,[rip+0xfffffffffff9670c]        # 0x7ffff7e4f4c0
   0x7ffff7eb8db4 <__libc_ifunc_impl_list+6404>:	mov    QWORD PTR [rbx+0x50],rax
   0x7ffff7eb8db8 <__libc_ifunc_impl_list+6408>:	mov    eax,0x4
   0x7ffff7eb8dbd <__libc_ifunc_impl_list+6413>:	mov    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eb8dc1 <__libc_ifunc_impl_list+6417>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb8dc6 <__libc_ifunc_impl_list+6422>:	mov    rax,QWORD PTR [rip+0xf50fb]        # 0x7ffff7fadec8
   0x7ffff7eb8dcd <__libc_ifunc_impl_list+6429>:	lea    rdi,[rip+0xb6c0f]        # 0x7ffff7f6f9e3
   0x7ffff7eb8dd4 <__libc_ifunc_impl_list+6436>:	mov    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eb8dd8 <__libc_ifunc_impl_list+6440>:	mov    QWORD PTR [rbx+0x30],rdi
   0x7ffff7eb8ddc <__libc_ifunc_impl_list+6444>:	lea    rdi,[rip+0x9035d]        # 0x7ffff7f49140
   0x7ffff7eb8de3 <__libc_ifunc_impl_list+6451>:	mov    edx,DWORD PTR [rax+0xb8]
   0x7ffff7eb8de9 <__libc_ifunc_impl_list+6457>:	lea    rax,[rip+0xb6bd1]        # 0x7ffff7f6f9c1
   0x7ffff7eb8df0 <__libc_ifunc_impl_list+6464>:	mov    QWORD PTR [rbx+0x38],rdi
   0x7ffff7eb8df4 <__libc_ifunc_impl_list+6468>:	mov    QWORD PTR [rbx],rax
   0x7ffff7eb8df7 <__libc_ifunc_impl_list+6471>:	lea    rax,[rip+0x79992]        # 0x7ffff7f32790
   0x7ffff7eb8dfe <__libc_ifunc_impl_list+6478>:	mov    QWORD PTR [rbx+0x8],rax
   0x7ffff7eb8e02 <__libc_ifunc_impl_list+6482>:	mov    eax,edx
   0x7ffff7eb8e04 <__libc_ifunc_impl_list+6484>:	shr    eax,0x5
   0x7ffff7eb8e07 <__libc_ifunc_impl_list+6487>:	and    eax,0x1
   0x7ffff7eb8e0a <__libc_ifunc_impl_list+6490>:	mov    BYTE PTR [rbx+0x10],al
   0x7ffff7eb8e0d <__libc_ifunc_impl_list+6493>:	lea    rax,[rip+0xb6bbc]        # 0x7ffff7f6f9d0
   0x7ffff7eb8e14 <__libc_ifunc_impl_list+6500>:	mov    QWORD PTR [rbx+0x18],rax
   0x7ffff7eb8e18 <__libc_ifunc_impl_list+6504>:	lea    rax,[rip+0x88be1]        # 0x7ffff7f41a00
   0x7ffff7eb8e1f <__libc_ifunc_impl_list+6511>:	mov    QWORD PTR [rbx+0x20],rax
   0x7ffff7eb8e23 <__libc_ifunc_impl_list+6515>:	mov    eax,edx
   0x7ffff7eb8e25 <__libc_ifunc_impl_list+6517>:	and    eax,0x820
   0x7ffff7eb8e2a <__libc_ifunc_impl_list+6522>:	cmp    eax,0x820
   0x7ffff7eb8e2f <__libc_ifunc_impl_list+6527>:	mov    eax,edx
   0x7ffff7eb8e31 <__libc_ifunc_impl_list+6529>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb8e35 <__libc_ifunc_impl_list+6533>:	shr    eax,0x1e
   0x7ffff7eb8e38 <__libc_ifunc_impl_list+6536>:	and    eax,0x1
   0x7ffff7eb8e3b <__libc_ifunc_impl_list+6539>:	test   edx,edx
   0x7ffff7eb8e3d <__libc_ifunc_impl_list+6541>:	mov    edx,0x0
   0x7ffff7eb8e42 <__libc_ifunc_impl_list+6546>:	cmovns eax,edx
   0x7ffff7eb8e45 <__libc_ifunc_impl_list+6549>:	mov    BYTE PTR [rbx+0x40],al
   0x7ffff7eb8e48 <__libc_ifunc_impl_list+6552>:	lea    rax,[rip+0xb6ba3]        # 0x7ffff7f6f9f2
   0x7ffff7eb8e4f <__libc_ifunc_impl_list+6559>:	mov    QWORD PTR [rbx+0x48],rax
   0x7ffff7eb8e53 <__libc_ifunc_impl_list+6563>:	lea    rax,[rip+0xfffffffffff96876]        # 0x7ffff7e4f6d0
   0x7ffff7eb8e5a <__libc_ifunc_impl_list+6570>:	mov    QWORD PTR [rbx+0x50],rax
   0x7ffff7eb8e5e <__libc_ifunc_impl_list+6574>:	mov    eax,0x4
   0x7ffff7eb8e63 <__libc_ifunc_impl_list+6579>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb8e68 <__libc_ifunc_impl_list+6584>:	mov    rdx,QWORD PTR [rip+0xf5059]        # 0x7ffff7fadec8
   0x7ffff7eb8e6f <__libc_ifunc_impl_list+6591>:	lea    rdi,[rip+0xb6b92]        # 0x7ffff7f6fa08
   0x7ffff7eb8e76 <__libc_ifunc_impl_list+6598>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb8e79 <__libc_ifunc_impl_list+6601>:	lea    rdi,[rip+0x74c40]        # 0x7ffff7f2dac0
   0x7ffff7eb8e80 <__libc_ifunc_impl_list+6608>:	mov    eax,DWORD PTR [rdx+0xb8]
   0x7ffff7eb8e86 <__libc_ifunc_impl_list+6614>:	mov    QWORD PTR [rbx+0x8],rdi
   0x7ffff7eb8e8a <__libc_ifunc_impl_list+6618>:	lea    rdi,[rip+0xb6b85]        # 0x7ffff7f6fa16
   0x7ffff7eb8e91 <__libc_ifunc_impl_list+6625>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb8e95 <__libc_ifunc_impl_list+6629>:	mov    ecx,eax
   0x7ffff7eb8e97 <__libc_ifunc_impl_list+6631>:	shr    ecx,0x5
   0x7ffff7eb8e9a <__libc_ifunc_impl_list+6634>:	and    ecx,0x1
   0x7ffff7eb8e9d <__libc_ifunc_impl_list+6637>:	mov    BYTE PTR [rbx+0x10],cl
   0x7ffff7eb8ea0 <__libc_ifunc_impl_list+6640>:	lea    rcx,[rip+0x84f79]        # 0x7ffff7f3de20
   0x7ffff7eb8ea7 <__libc_ifunc_impl_list+6647>:	mov    QWORD PTR [rbx+0x20],rcx
   0x7ffff7eb8eab <__libc_ifunc_impl_list+6651>:	mov    ecx,eax
   0x7ffff7eb8ead <__libc_ifunc_impl_list+6653>:	and    ecx,0x820
   0x7ffff7eb8eb3 <__libc_ifunc_impl_list+6659>:	cmp    ecx,0x820
   0x7ffff7eb8eb9 <__libc_ifunc_impl_list+6665>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb8ebd <__libc_ifunc_impl_list+6669>:	xor    ecx,ecx
   0x7ffff7eb8ebf <__libc_ifunc_impl_list+6671>:	test   eax,eax
   0x7ffff7eb8ec1 <__libc_ifunc_impl_list+6673>:	jns    0x7ffff7eb8ed0 <__libc_ifunc_impl_list+6688>
   0x7ffff7eb8ec3 <__libc_ifunc_impl_list+6675>:	and    eax,0x40000100
   0x7ffff7eb8ec8 <__libc_ifunc_impl_list+6680>:	cmp    eax,0x40000100
   0x7ffff7eb8ecd <__libc_ifunc_impl_list+6685>:	sete   cl
   0x7ffff7eb8ed0 <__libc_ifunc_impl_list+6688>:	lea    rax,[rip+0xb6b51]        # 0x7ffff7f6fa28
   0x7ffff7eb8ed7 <__libc_ifunc_impl_list+6695>:	lea    rdi,[rip+0xb6b58]        # 0x7ffff7f6fa36
   0x7ffff7eb8ede <__libc_ifunc_impl_list+6702>:	mov    BYTE PTR [rbx+0x40],cl
   0x7ffff7eb8ee1 <__libc_ifunc_impl_list+6705>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb8ee5 <__libc_ifunc_impl_list+6709>:	lea    rax,[rip+0x8da74]        # 0x7ffff7f46960
   0x7ffff7eb8eec <__libc_ifunc_impl_list+6716>:	lea    rcx,[rip+0x6ef2d]        # 0x7ffff7f27e20
   0x7ffff7eb8ef3 <__libc_ifunc_impl_list+6723>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb8ef7 <__libc_ifunc_impl_list+6727>:	mov    eax,DWORD PTR [rdx+0x9c]
   0x7ffff7eb8efd <__libc_ifunc_impl_list+6733>:	mov    QWORD PTR [rbx+0x48],rdi
   0x7ffff7eb8f01 <__libc_ifunc_impl_list+6737>:	lea    rdi,[rip+0xb6b3d]        # 0x7ffff7f6fa45
   0x7ffff7eb8f08 <__libc_ifunc_impl_list+6744>:	mov    edx,eax
   0x7ffff7eb8f0a <__libc_ifunc_impl_list+6746>:	shr    eax,0x9
   0x7ffff7eb8f0d <__libc_ifunc_impl_list+6749>:	mov    QWORD PTR [rbx+0x50],rcx
   0x7ffff7eb8f11 <__libc_ifunc_impl_list+6753>:	lea    rcx,[rip+0x54478]        # 0x7ffff7f0d390
   0x7ffff7eb8f18 <__libc_ifunc_impl_list+6760>:	and    eax,0x1
   0x7ffff7eb8f1b <__libc_ifunc_impl_list+6763>:	shr    edx,0x14
   0x7ffff7eb8f1e <__libc_ifunc_impl_list+6766>:	mov    QWORD PTR [rbx+0x60],rdi
   0x7ffff7eb8f22 <__libc_ifunc_impl_list+6770>:	mov    BYTE PTR [rbx+0x70],al
   0x7ffff7eb8f25 <__libc_ifunc_impl_list+6773>:	lea    rax,[rip+0xb6b28]        # 0x7ffff7f6fa54
   0x7ffff7eb8f2c <__libc_ifunc_impl_list+6780>:	and    edx,0x1
   0x7ffff7eb8f2f <__libc_ifunc_impl_list+6783>:	mov    QWORD PTR [rbx+0x78],rax
   0x7ffff7eb8f33 <__libc_ifunc_impl_list+6787>:	lea    rax,[rip+0xfffffffffff8eeb6]        # 0x7ffff7e47df0
   0x7ffff7eb8f3a <__libc_ifunc_impl_list+6794>:	mov    QWORD PTR [rbx+0x80],rax
   0x7ffff7eb8f41 <__libc_ifunc_impl_list+6801>:	lea    rax,[rip+0xb6b24]        # 0x7ffff7f6fa6c
   0x7ffff7eb8f48 <__libc_ifunc_impl_list+6808>:	mov    QWORD PTR [rbx+0x90],rax
   0x7ffff7eb8f4f <__libc_ifunc_impl_list+6815>:	lea    rax,[rip+0xfffffffffff8da4a]        # 0x7ffff7e469a0
   0x7ffff7eb8f56 <__libc_ifunc_impl_list+6822>:	mov    QWORD PTR [rbx+0x98],rax
   0x7ffff7eb8f5d <__libc_ifunc_impl_list+6829>:	mov    eax,0x7
   0x7ffff7eb8f62 <__libc_ifunc_impl_list+6834>:	mov    BYTE PTR [rbx+0x58],dl
   0x7ffff7eb8f65 <__libc_ifunc_impl_list+6837>:	mov    QWORD PTR [rbx+0x68],rcx
   0x7ffff7eb8f69 <__libc_ifunc_impl_list+6841>:	mov    BYTE PTR [rbx+0x88],0x1
   0x7ffff7eb8f70 <__libc_ifunc_impl_list+6848>:	mov    BYTE PTR [rbx+0xa0],0x1
   0x7ffff7eb8f77 <__libc_ifunc_impl_list+6855>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb8f7c <__libc_ifunc_impl_list+6860>:	mov    rdx,QWORD PTR [rip+0xf4f45]        # 0x7ffff7fadec8
   0x7ffff7eb8f83 <__libc_ifunc_impl_list+6867>:	lea    rax,[rip+0xb6af7]        # 0x7ffff7f6fa81
   0x7ffff7eb8f8a <__libc_ifunc_impl_list+6874>:	mov    BYTE PTR [rbx+0x70],0x1
   0x7ffff7eb8f8e <__libc_ifunc_impl_list+6878>:	lea    rdi,[rip+0xb6b0c]        # 0x7ffff7f6faa1
   0x7ffff7eb8f95 <__libc_ifunc_impl_list+6885>:	mov    QWORD PTR [rbx],rax
   0x7ffff7eb8f98 <__libc_ifunc_impl_list+6888>:	lea    rax,[rip+0x7ae91]        # 0x7ffff7f33e30
   0x7ffff7eb8f9f <__libc_ifunc_impl_list+6895>:	mov    ecx,DWORD PTR [rdx+0xb8]
   0x7ffff7eb8fa5 <__libc_ifunc_impl_list+6901>:	mov    QWORD PTR [rbx+0x8],rax
   0x7ffff7eb8fa9 <__libc_ifunc_impl_list+6905>:	mov    QWORD PTR [rbx+0x30],rdi
   0x7ffff7eb8fad <__libc_ifunc_impl_list+6909>:	lea    rdi,[rip+0x8de1c]        # 0x7ffff7f46dd0
   0x7ffff7eb8fb4 <__libc_ifunc_impl_list+6916>:	mov    eax,ecx
   0x7ffff7eb8fb6 <__libc_ifunc_impl_list+6918>:	mov    QWORD PTR [rbx+0x38],rdi
   0x7ffff7eb8fba <__libc_ifunc_impl_list+6922>:	lea    rdi,[rip+0xb6aee]        # 0x7ffff7f6faaf
   0x7ffff7eb8fc1 <__libc_ifunc_impl_list+6929>:	shr    eax,0x5
   0x7ffff7eb8fc4 <__libc_ifunc_impl_list+6932>:	mov    QWORD PTR [rbx+0x48],rdi
   0x7ffff7eb8fc8 <__libc_ifunc_impl_list+6936>:	lea    rdi,[rip+0x66041]        # 0x7ffff7f1f010
   0x7ffff7eb8fcf <__libc_ifunc_impl_list+6943>:	and    eax,0x1
   0x7ffff7eb8fd2 <__libc_ifunc_impl_list+6946>:	mov    QWORD PTR [rbx+0x50],rdi
   0x7ffff7eb8fd6 <__libc_ifunc_impl_list+6950>:	mov    BYTE PTR [rbx+0x10],al
   0x7ffff7eb8fd9 <__libc_ifunc_impl_list+6953>:	lea    rax,[rip+0xb6aaf]        # 0x7ffff7f6fa8f
   0x7ffff7eb8fe0 <__libc_ifunc_impl_list+6960>:	mov    QWORD PTR [rbx+0x18],rax
   0x7ffff7eb8fe4 <__libc_ifunc_impl_list+6964>:	lea    rax,[rip+0x868d5]        # 0x7ffff7f3f8c0
   0x7ffff7eb8feb <__libc_ifunc_impl_list+6971>:	mov    QWORD PTR [rbx+0x20],rax
   0x7ffff7eb8fef <__libc_ifunc_impl_list+6975>:	mov    eax,ecx
   0x7ffff7eb8ff1 <__libc_ifunc_impl_list+6977>:	and    eax,0x820
   0x7ffff7eb8ff6 <__libc_ifunc_impl_list+6982>:	mov    BYTE PTR [rbx+0x88],0x1
   0x7ffff7eb8ffd <__libc_ifunc_impl_list+6989>:	cmp    eax,0x820
   0x7ffff7eb9002 <__libc_ifunc_impl_list+6994>:	mov    eax,ecx
   0x7ffff7eb9004 <__libc_ifunc_impl_list+6996>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb9008 <__libc_ifunc_impl_list+7000>:	shr    eax,0x1e
   0x7ffff7eb900b <__libc_ifunc_impl_list+7003>:	and    eax,0x1
   0x7ffff7eb900e <__libc_ifunc_impl_list+7006>:	test   ecx,ecx
   0x7ffff7eb9010 <__libc_ifunc_impl_list+7008>:	mov    ecx,0x0
   0x7ffff7eb9015 <__libc_ifunc_impl_list+7013>:	cmovns eax,ecx
   0x7ffff7eb9018 <__libc_ifunc_impl_list+7016>:	mov    BYTE PTR [rbx+0x40],al
   0x7ffff7eb901b <__libc_ifunc_impl_list+7019>:	mov    eax,DWORD PTR [rdx+0x9c]
   0x7ffff7eb9021 <__libc_ifunc_impl_list+7025>:	shr    eax,0x9
   0x7ffff7eb9024 <__libc_ifunc_impl_list+7028>:	and    eax,0x1
   0x7ffff7eb9027 <__libc_ifunc_impl_list+7031>:	mov    BYTE PTR [rbx+0x58],al
   0x7ffff7eb902a <__libc_ifunc_impl_list+7034>:	lea    rax,[rip+0xb6a8d]        # 0x7ffff7f6fabe
   0x7ffff7eb9031 <__libc_ifunc_impl_list+7041>:	mov    QWORD PTR [rbx+0x60],rax
   0x7ffff7eb9035 <__libc_ifunc_impl_list+7045>:	lea    rax,[rip+0xfffffffffff9b8d4]        # 0x7ffff7e54910
   0x7ffff7eb903c <__libc_ifunc_impl_list+7052>:	mov    QWORD PTR [rbx+0x68],rax
   0x7ffff7eb9040 <__libc_ifunc_impl_list+7056>:	lea    rax,[rip+0xb6a8f]        # 0x7ffff7f6fad6
   0x7ffff7eb9047 <__libc_ifunc_impl_list+7063>:	mov    QWORD PTR [rbx+0x78],rax
   0x7ffff7eb904b <__libc_ifunc_impl_list+7067>:	lea    rax,[rip+0xfffffffffff9b6de]        # 0x7ffff7e54730
   0x7ffff7eb9052 <__libc_ifunc_impl_list+7074>:	mov    QWORD PTR [rbx+0x80],rax
   0x7ffff7eb9059 <__libc_ifunc_impl_list+7081>:	mov    eax,0x6
   0x7ffff7eb905e <__libc_ifunc_impl_list+7086>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb9063 <__libc_ifunc_impl_list+7091>:	mov    rax,QWORD PTR [rip+0xf4e5e]        # 0x7ffff7fadec8
   0x7ffff7eb906a <__libc_ifunc_impl_list+7098>:	lea    rdi,[rip+0xb6a7b]        # 0x7ffff7f6faec
   0x7ffff7eb9071 <__libc_ifunc_impl_list+7105>:	mov    BYTE PTR [rbx+0x28],0x1
   0x7ffff7eb9075 <__libc_ifunc_impl_list+7109>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb9078 <__libc_ifunc_impl_list+7112>:	lea    rdi,[rip+0x746b1]        # 0x7ffff7f2d730
   0x7ffff7eb907f <__libc_ifunc_impl_list+7119>:	mov    eax,DWORD PTR [rax+0x9c]
   0x7ffff7eb9085 <__libc_ifunc_impl_list+7125>:	mov    QWORD PTR [rbx+0x8],rdi
   0x7ffff7eb9089 <__libc_ifunc_impl_list+7129>:	shr    eax,0x14
   0x7ffff7eb908c <__libc_ifunc_impl_list+7132>:	and    eax,0x1
   0x7ffff7eb908f <__libc_ifunc_impl_list+7135>:	mov    BYTE PTR [rbx+0x10],al
   0x7ffff7eb9092 <__libc_ifunc_impl_list+7138>:	lea    rax,[rip+0xb6a63]        # 0x7ffff7f6fafc
   0x7ffff7eb9099 <__libc_ifunc_impl_list+7145>:	mov    QWORD PTR [rbx+0x18],rax
   0x7ffff7eb909d <__libc_ifunc_impl_list+7149>:	lea    rax,[rip+0xfffffffffffa05fc]        # 0x7ffff7e596a0
   0x7ffff7eb90a4 <__libc_ifunc_impl_list+7156>:	mov    QWORD PTR [rbx+0x20],rax
   0x7ffff7eb90a8 <__libc_ifunc_impl_list+7160>:	mov    eax,0x2
   0x7ffff7eb90ad <__libc_ifunc_impl_list+7165>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb90b2 <__libc_ifunc_impl_list+7170>:	mov    rax,QWORD PTR [rip+0xf4e0f]        # 0x7ffff7fadec8
   0x7ffff7eb90b9 <__libc_ifunc_impl_list+7177>:	lea    rdi,[rip+0xb6a57]        # 0x7ffff7f6fb17
   0x7ffff7eb90c0 <__libc_ifunc_impl_list+7184>:	mov    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eb90c4 <__libc_ifunc_impl_list+7188>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb90c7 <__libc_ifunc_impl_list+7191>:	lea    rdi,[rip+0x77862]        # 0x7ffff7f30930
   0x7ffff7eb90ce <__libc_ifunc_impl_list+7198>:	mov    eax,DWORD PTR [rax+0x9c]
   0x7ffff7eb90d4 <__libc_ifunc_impl_list+7204>:	mov    QWORD PTR [rbx+0x8],rdi
   0x7ffff7eb90d8 <__libc_ifunc_impl_list+7208>:	lea    rdi,[rip+0xb6a4a]        # 0x7ffff7f6fb29
   0x7ffff7eb90df <__libc_ifunc_impl_list+7215>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb90e3 <__libc_ifunc_impl_list+7219>:	lea    rdi,[rip+0x72676]        # 0x7ffff7f2b760
   0x7ffff7eb90ea <__libc_ifunc_impl_list+7226>:	mov    edx,eax
   0x7ffff7eb90ec <__libc_ifunc_impl_list+7228>:	mov    QWORD PTR [rbx+0x20],rdi
   0x7ffff7eb90f0 <__libc_ifunc_impl_list+7232>:	lea    rdi,[rip+0xb6a46]        # 0x7ffff7f6fb3d
   0x7ffff7eb90f7 <__libc_ifunc_impl_list+7239>:	shr    edx,0x1c
   0x7ffff7eb90fa <__libc_ifunc_impl_list+7242>:	mov    QWORD PTR [rbx+0x30],rdi
   0x7ffff7eb90fe <__libc_ifunc_impl_list+7246>:	lea    rdi,[rip+0x6399b]        # 0x7ffff7f1caa0
   0x7ffff7eb9105 <__libc_ifunc_impl_list+7253>:	and    edx,0x1
   0x7ffff7eb9108 <__libc_ifunc_impl_list+7256>:	mov    QWORD PTR [rbx+0x38],rdi
   0x7ffff7eb910c <__libc_ifunc_impl_list+7260>:	mov    BYTE PTR [rbx+0x10],dl
   0x7ffff7eb910f <__libc_ifunc_impl_list+7263>:	mov    edx,eax
   0x7ffff7eb9111 <__libc_ifunc_impl_list+7265>:	shr    eax,0x9
   0x7ffff7eb9114 <__libc_ifunc_impl_list+7268>:	and    eax,0x1
   0x7ffff7eb9117 <__libc_ifunc_impl_list+7271>:	shr    edx,0x14
   0x7ffff7eb911a <__libc_ifunc_impl_list+7274>:	mov    BYTE PTR [rbx+0x40],al
   0x7ffff7eb911d <__libc_ifunc_impl_list+7277>:	lea    rax,[rip+0xb6a2d]        # 0x7ffff7f6fb51
   0x7ffff7eb9124 <__libc_ifunc_impl_list+7284>:	and    edx,0x1
   0x7ffff7eb9127 <__libc_ifunc_impl_list+7287>:	mov    QWORD PTR [rbx+0x48],rax
   0x7ffff7eb912b <__libc_ifunc_impl_list+7291>:	lea    rax,[rip+0xfffffffffff93afe]        # 0x7ffff7e4cc30
   0x7ffff7eb9132 <__libc_ifunc_impl_list+7298>:	mov    QWORD PTR [rbx+0x50],rax
   0x7ffff7eb9136 <__libc_ifunc_impl_list+7302>:	mov    eax,0x4
   0x7ffff7eb913b <__libc_ifunc_impl_list+7307>:	mov    BYTE PTR [rbx+0x28],dl
   0x7ffff7eb913e <__libc_ifunc_impl_list+7310>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb9143 <__libc_ifunc_impl_list+7315>:	mov    rax,QWORD PTR [rip+0xf4d7e]        # 0x7ffff7fadec8
   0x7ffff7eb914a <__libc_ifunc_impl_list+7322>:	lea    rdi,[rip+0xb6a21]        # 0x7ffff7f6fb72
   0x7ffff7eb9151 <__libc_ifunc_impl_list+7329>:	mov    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eb9155 <__libc_ifunc_impl_list+7333>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb9158 <__libc_ifunc_impl_list+7336>:	lea    rdi,[rip+0x777e5]        # 0x7ffff7f30944
   0x7ffff7eb915f <__libc_ifunc_impl_list+7343>:	mov    eax,DWORD PTR [rax+0x9c]
   0x7ffff7eb9165 <__libc_ifunc_impl_list+7349>:	mov    QWORD PTR [rbx+0x8],rdi
   0x7ffff7eb9169 <__libc_ifunc_impl_list+7353>:	lea    rdi,[rip+0xb6a16]        # 0x7ffff7f6fb86
   0x7ffff7eb9170 <__libc_ifunc_impl_list+7360>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb9174 <__libc_ifunc_impl_list+7364>:	lea    rdi,[rip+0x725f9]        # 0x7ffff7f2b774
   0x7ffff7eb917b <__libc_ifunc_impl_list+7371>:	mov    edx,eax
   0x7ffff7eb917d <__libc_ifunc_impl_list+7373>:	mov    QWORD PTR [rbx+0x20],rdi
   0x7ffff7eb9181 <__libc_ifunc_impl_list+7377>:	lea    rdi,[rip+0xb6a14]        # 0x7ffff7f6fb9c
   0x7ffff7eb9188 <__libc_ifunc_impl_list+7384>:	shr    edx,0x1c
   0x7ffff7eb918b <__libc_ifunc_impl_list+7387>:	mov    QWORD PTR [rbx+0x30],rdi
   0x7ffff7eb918f <__libc_ifunc_impl_list+7391>:	lea    rdi,[rip+0x6392a]        # 0x7ffff7f1cac0
   0x7ffff7eb9196 <__libc_ifunc_impl_list+7398>:	and    edx,0x1
   0x7ffff7eb9199 <__libc_ifunc_impl_list+7401>:	mov    QWORD PTR [rbx+0x38],rdi
   0x7ffff7eb919d <__libc_ifunc_impl_list+7405>:	mov    BYTE PTR [rbx+0x10],dl
   0x7ffff7eb91a0 <__libc_ifunc_impl_list+7408>:	mov    edx,eax
   0x7ffff7eb91a2 <__libc_ifunc_impl_list+7410>:	shr    eax,0x9
   0x7ffff7eb91a5 <__libc_ifunc_impl_list+7413>:	and    eax,0x1
   0x7ffff7eb91a8 <__libc_ifunc_impl_list+7416>:	shr    edx,0x14
   0x7ffff7eb91ab <__libc_ifunc_impl_list+7419>:	mov    BYTE PTR [rbx+0x40],al
   0x7ffff7eb91ae <__libc_ifunc_impl_list+7422>:	lea    rax,[rip+0xb69fd]        # 0x7ffff7f6fbb2
   0x7ffff7eb91b5 <__libc_ifunc_impl_list+7429>:	and    edx,0x1
   0x7ffff7eb91b8 <__libc_ifunc_impl_list+7432>:	mov    QWORD PTR [rbx+0x48],rax
   0x7ffff7eb91bc <__libc_ifunc_impl_list+7436>:	lea    rax,[rip+0xfffffffffff93a8d]        # 0x7ffff7e4cc50
   0x7ffff7eb91c3 <__libc_ifunc_impl_list+7443>:	mov    QWORD PTR [rbx+0x50],rax
   0x7ffff7eb91c7 <__libc_ifunc_impl_list+7447>:	mov    eax,0x4
   0x7ffff7eb91cc <__libc_ifunc_impl_list+7452>:	mov    BYTE PTR [rbx+0x28],dl
   0x7ffff7eb91cf <__libc_ifunc_impl_list+7455>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb91d4 <__libc_ifunc_impl_list+7460>:	mov    rdx,QWORD PTR [rip+0xf4ced]        # 0x7ffff7fadec8
   0x7ffff7eb91db <__libc_ifunc_impl_list+7467>:	lea    rdi,[rip+0xb69ed]        # 0x7ffff7f6fbcf
   0x7ffff7eb91e2 <__libc_ifunc_impl_list+7474>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb91e5 <__libc_ifunc_impl_list+7477>:	lea    rdi,[rip+0x7a234]        # 0x7ffff7f33420
   0x7ffff7eb91ec <__libc_ifunc_impl_list+7484>:	mov    ecx,DWORD PTR [rdx+0xb8]
   0x7ffff7eb91f2 <__libc_ifunc_impl_list+7490>:	mov    QWORD PTR [rbx+0x8],rdi
   0x7ffff7eb91f6 <__libc_ifunc_impl_list+7494>:	lea    rdi,[rip+0xb69e1]        # 0x7ffff7f6fbde
   0x7ffff7eb91fd <__libc_ifunc_impl_list+7501>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb9201 <__libc_ifunc_impl_list+7505>:	lea    rdi,[rip+0x86be8]        # 0x7ffff7f3fdf0
   0x7ffff7eb9208 <__libc_ifunc_impl_list+7512>:	mov    esi,ecx
   0x7ffff7eb920a <__libc_ifunc_impl_list+7514>:	mov    QWORD PTR [rbx+0x20],rdi
   0x7ffff7eb920e <__libc_ifunc_impl_list+7518>:	shr    esi,0x5
   0x7ffff7eb9211 <__libc_ifunc_impl_list+7521>:	and    esi,0x1
   0x7ffff7eb9214 <__libc_ifunc_impl_list+7524>:	mov    BYTE PTR [rbx+0x10],sil
   0x7ffff7eb9218 <__libc_ifunc_impl_list+7528>:	mov    esi,ecx
   0x7ffff7eb921a <__libc_ifunc_impl_list+7530>:	and    esi,0x820
   0x7ffff7eb9220 <__libc_ifunc_impl_list+7536>:	cmp    esi,0x820
   0x7ffff7eb9226 <__libc_ifunc_impl_list+7542>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb922a <__libc_ifunc_impl_list+7546>:	test   ecx,ecx
   0x7ffff7eb922c <__libc_ifunc_impl_list+7548>:	jns    0x7ffff7eb9236 <__libc_ifunc_impl_list+7558>
   0x7ffff7eb922e <__libc_ifunc_impl_list+7550>:	shr    ecx,0x1e
   0x7ffff7eb9231 <__libc_ifunc_impl_list+7553>:	mov    eax,ecx
   0x7ffff7eb9233 <__libc_ifunc_impl_list+7555>:	and    eax,0x1
   0x7ffff7eb9236 <__libc_ifunc_impl_list+7558>:	mov    BYTE PTR [rbx+0x40],al
   0x7ffff7eb9239 <__libc_ifunc_impl_list+7561>:	mov    eax,DWORD PTR [rdx+0x9c]
   0x7ffff7eb923f <__libc_ifunc_impl_list+7567>:	lea    rdi,[rip+0xb69ab]        # 0x7ffff7f6fbf1
   0x7ffff7eb9246 <__libc_ifunc_impl_list+7574>:	lea    rcx,[rip+0xfffffffffff98763]        # 0x7ffff7e519b0
   0x7ffff7eb924d <__libc_ifunc_impl_list+7581>:	mov    QWORD PTR [rbx+0x30],rdi
   0x7ffff7eb9251 <__libc_ifunc_impl_list+7585>:	lea    rdi,[rip+0x8e148]        # 0x7ffff7f473a0
   0x7ffff7eb9258 <__libc_ifunc_impl_list+7592>:	shr    eax,0x9
   0x7ffff7eb925b <__libc_ifunc_impl_list+7595>:	mov    QWORD PTR [rbx+0x38],rdi
   0x7ffff7eb925f <__libc_ifunc_impl_list+7599>:	lea    rdi,[rip+0xb699a]        # 0x7ffff7f6fc00
   0x7ffff7eb9266 <__libc_ifunc_impl_list+7606>:	and    eax,0x1
   0x7ffff7eb9269 <__libc_ifunc_impl_list+7609>:	and    BYTE PTR [rbx+0x40],0x1
   0x7ffff7eb926d <__libc_ifunc_impl_list+7613>:	mov    BYTE PTR [rbx+0x58],al
   0x7ffff7eb9270 <__libc_ifunc_impl_list+7616>:	lea    rax,[rip+0xb6999]        # 0x7ffff7f6fc10
   0x7ffff7eb9277 <__libc_ifunc_impl_list+7623>:	mov    QWORD PTR [rbx+0x60],rax
   0x7ffff7eb927b <__libc_ifunc_impl_list+7627>:	lea    rax,[rip+0xfffffffffff9efce]        # 0x7ffff7e58250
   0x7ffff7eb9282 <__libc_ifunc_impl_list+7634>:	mov    QWORD PTR [rbx+0x68],rax
   0x7ffff7eb9286 <__libc_ifunc_impl_list+7638>:	lea    rax,[rip+0xb699c]        # 0x7ffff7f6fc29
   0x7ffff7eb928d <__libc_ifunc_impl_list+7645>:	mov    QWORD PTR [rbx+0x78],rax
   0x7ffff7eb9291 <__libc_ifunc_impl_list+7649>:	lea    rax,[rip+0xfffffffffff8d5e8]        # 0x7ffff7e46880
   0x7ffff7eb9298 <__libc_ifunc_impl_list+7656>:	mov    QWORD PTR [rbx+0x80],rax
   0x7ffff7eb929f <__libc_ifunc_impl_list+7663>:	mov    eax,0x6
   0x7ffff7eb92a4 <__libc_ifunc_impl_list+7668>:	mov    QWORD PTR [rbx+0x48],rdi
   0x7ffff7eb92a8 <__libc_ifunc_impl_list+7672>:	mov    QWORD PTR [rbx+0x50],rcx
   0x7ffff7eb92ac <__libc_ifunc_impl_list+7676>:	mov    BYTE PTR [rbx+0x70],0x1
   0x7ffff7eb92b0 <__libc_ifunc_impl_list+7680>:	mov    BYTE PTR [rbx+0x88],0x1
   0x7ffff7eb92b7 <__libc_ifunc_impl_list+7687>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb92bc <__libc_ifunc_impl_list+7692>:	mov    rdx,QWORD PTR [rip+0xf4c05]        # 0x7ffff7fadec8
   0x7ffff7eb92c3 <__libc_ifunc_impl_list+7699>:	lea    rdi,[rip+0xb6976]        # 0x7ffff7f6fc40
   0x7ffff7eb92ca <__libc_ifunc_impl_list+7706>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb92cd <__libc_ifunc_impl_list+7709>:	lea    rdi,[rip+0x7aeec]        # 0x7ffff7f341c0
   0x7ffff7eb92d4 <__libc_ifunc_impl_list+7716>:	mov    ecx,DWORD PTR [rdx+0xb8]
   0x7ffff7eb92da <__libc_ifunc_impl_list+7722>:	mov    QWORD PTR [rbx+0x8],rdi
   0x7ffff7eb92de <__libc_ifunc_impl_list+7726>:	lea    rdi,[rip+0xb696a]        # 0x7ffff7f6fc4f
   0x7ffff7eb92e5 <__libc_ifunc_impl_list+7733>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb92e9 <__libc_ifunc_impl_list+7737>:	lea    rdi,[rip+0x87a90]        # 0x7ffff7f40d80
   0x7ffff7eb92f0 <__libc_ifunc_impl_list+7744>:	mov    esi,ecx
   0x7ffff7eb92f2 <__libc_ifunc_impl_list+7746>:	mov    QWORD PTR [rbx+0x20],rdi
   0x7ffff7eb92f6 <__libc_ifunc_impl_list+7750>:	shr    esi,0x5
   0x7ffff7eb92f9 <__libc_ifunc_impl_list+7753>:	and    esi,0x1
   0x7ffff7eb92fc <__libc_ifunc_impl_list+7756>:	mov    BYTE PTR [rbx+0x10],sil
   0x7ffff7eb9300 <__libc_ifunc_impl_list+7760>:	mov    esi,ecx
   0x7ffff7eb9302 <__libc_ifunc_impl_list+7762>:	and    esi,0x820
   0x7ffff7eb9308 <__libc_ifunc_impl_list+7768>:	cmp    esi,0x820
   0x7ffff7eb930e <__libc_ifunc_impl_list+7774>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb9312 <__libc_ifunc_impl_list+7778>:	test   ecx,ecx
   0x7ffff7eb9314 <__libc_ifunc_impl_list+7780>:	jns    0x7ffff7eb931e <__libc_ifunc_impl_list+7790>
   0x7ffff7eb9316 <__libc_ifunc_impl_list+7782>:	shr    ecx,0x1e
   0x7ffff7eb9319 <__libc_ifunc_impl_list+7785>:	mov    eax,ecx
   0x7ffff7eb931b <__libc_ifunc_impl_list+7787>:	and    eax,0x1
   0x7ffff7eb931e <__libc_ifunc_impl_list+7790>:	mov    BYTE PTR [rbx+0x40],al
   0x7ffff7eb9321 <__libc_ifunc_impl_list+7793>:	mov    eax,DWORD PTR [rdx+0x9c]
   0x7ffff7eb9327 <__libc_ifunc_impl_list+7799>:	lea    rcx,[rip+0xb6934]        # 0x7ffff7f6fc62
   0x7ffff7eb932e <__libc_ifunc_impl_list+7806>:	mov    QWORD PTR [rbx+0x30],rcx
   0x7ffff7eb9332 <__libc_ifunc_impl_list+7810>:	lea    rcx,[rip+0x8f0f7]        # 0x7ffff7f48430
   0x7ffff7eb9339 <__libc_ifunc_impl_list+7817>:	shr    eax,0x9
   0x7ffff7eb933c <__libc_ifunc_impl_list+7820>:	mov    QWORD PTR [rbx+0x38],rcx
   0x7ffff7eb9340 <__libc_ifunc_impl_list+7824>:	lea    rcx,[rip+0xb692a]        # 0x7ffff7f6fc71
   0x7ffff7eb9347 <__libc_ifunc_impl_list+7831>:	and    eax,0x1
   0x7ffff7eb934a <__libc_ifunc_impl_list+7834>:	mov    QWORD PTR [rbx+0x48],rcx
   0x7ffff7eb934e <__libc_ifunc_impl_list+7838>:	lea    rcx,[rip+0x6746b]        # 0x7ffff7f207c0
   0x7ffff7eb9355 <__libc_ifunc_impl_list+7845>:	mov    BYTE PTR [rbx+0x58],al
   0x7ffff7eb9358 <__libc_ifunc_impl_list+7848>:	lea    rax,[rip+0xb6922]        # 0x7ffff7f6fc81
   0x7ffff7eb935f <__libc_ifunc_impl_list+7855>:	mov    QWORD PTR [rbx+0x60],rax
   0x7ffff7eb9363 <__libc_ifunc_impl_list+7859>:	lea    rax,[rip+0xfffffffffff9bbd6]        # 0x7ffff7e54f40
   0x7ffff7eb936a <__libc_ifunc_impl_list+7866>:	mov    QWORD PTR [rbx+0x68],rax
   0x7ffff7eb936e <__libc_ifunc_impl_list+7870>:	lea    rax,[rip+0xb6925]        # 0x7ffff7f6fc9a
   0x7ffff7eb9375 <__libc_ifunc_impl_list+7877>:	mov    QWORD PTR [rbx+0x78],rax
   0x7ffff7eb9379 <__libc_ifunc_impl_list+7881>:	lea    rax,[rip+0xfffffffffff8d5c0]        # 0x7ffff7e46940
   0x7ffff7eb9380 <__libc_ifunc_impl_list+7888>:	mov    QWORD PTR [rbx+0x80],rax
   0x7ffff7eb9387 <__libc_ifunc_impl_list+7895>:	mov    eax,0x6
   0x7ffff7eb938c <__libc_ifunc_impl_list+7900>:	and    BYTE PTR [rbx+0x40],0x1
   0x7ffff7eb9390 <__libc_ifunc_impl_list+7904>:	mov    QWORD PTR [rbx+0x50],rcx
   0x7ffff7eb9394 <__libc_ifunc_impl_list+7908>:	mov    BYTE PTR [rbx+0x70],0x1
   0x7ffff7eb9398 <__libc_ifunc_impl_list+7912>:	mov    BYTE PTR [rbx+0x88],0x1
   0x7ffff7eb939f <__libc_ifunc_impl_list+7919>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb93a4 <__libc_ifunc_impl_list+7924>:	lea    rcx,[rip+0xbd795]        # 0x7ffff7f76b40
   0x7ffff7eb93ab <__libc_ifunc_impl_list+7931>:	mov    edx,0x25
   0x7ffff7eb93b0 <__libc_ifunc_impl_list+7936>:	lea    rsi,[rip+0xbba89]        # 0x7ffff7f74e40
   0x7ffff7eb93b7 <__libc_ifunc_impl_list+7943>:	lea    rdi,[rip+0xb5e0a]        # 0x7ffff7f6f1c8
   0x7ffff7eb93be <__libc_ifunc_impl_list+7950>:	call   0x7ffff7dcee50 <__assert_fail>
   0x7ffff7eb93c3 <__libc_ifunc_impl_list+7955>:	mov    rax,QWORD PTR [rip+0xf4afe]        # 0x7ffff7fadec8
   0x7ffff7eb93ca <__libc_ifunc_impl_list+7962>:	lea    rdi,[rip+0xb68e0]        # 0x7ffff7f6fcb1
   0x7ffff7eb93d1 <__libc_ifunc_impl_list+7969>:	lea    rcx,[rip+0x74498]        # 0x7ffff7f2d870
   0x7ffff7eb93d8 <__libc_ifunc_impl_list+7976>:	mov    BYTE PTR [rbx+0x28],0x1
   0x7ffff7eb93dc <__libc_ifunc_impl_list+7980>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb93df <__libc_ifunc_impl_list+7983>:	mov    eax,DWORD PTR [rax+0x9c]
   0x7ffff7eb93e5 <__libc_ifunc_impl_list+7989>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eb93e9 <__libc_ifunc_impl_list+7993>:	shr    eax,0x14
   0x7ffff7eb93ec <__libc_ifunc_impl_list+7996>:	and    eax,0x1
   0x7ffff7eb93ef <__libc_ifunc_impl_list+7999>:	mov    BYTE PTR [rbx+0x10],al
   0x7ffff7eb93f2 <__libc_ifunc_impl_list+8002>:	lea    rax,[rip+0xb68c8]        # 0x7ffff7f6fcc1
   0x7ffff7eb93f9 <__libc_ifunc_impl_list+8009>:	mov    QWORD PTR [rbx+0x18],rax
   0x7ffff7eb93fd <__libc_ifunc_impl_list+8013>:	lea    rax,[rip+0xfffffffffffa034c]        # 0x7ffff7e59750
   0x7ffff7eb9404 <__libc_ifunc_impl_list+8020>:	mov    QWORD PTR [rbx+0x20],rax
   0x7ffff7eb9408 <__libc_ifunc_impl_list+8024>:	mov    eax,0x2
   0x7ffff7eb940d <__libc_ifunc_impl_list+8029>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb9412 <__libc_ifunc_impl_list+8034>:	mov    rax,QWORD PTR [rip+0xf4aaf]        # 0x7ffff7fadec8
   0x7ffff7eb9419 <__libc_ifunc_impl_list+8041>:	lea    rdi,[rip+0xb68b7]        # 0x7ffff7f6fcd7
   0x7ffff7eb9420 <__libc_ifunc_impl_list+8048>:	lea    rcx,[rip+0x74569]        # 0x7ffff7f2d990
   0x7ffff7eb9427 <__libc_ifunc_impl_list+8055>:	mov    BYTE PTR [rbx+0x28],0x1
   0x7ffff7eb942b <__libc_ifunc_impl_list+8059>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb942e <__libc_ifunc_impl_list+8062>:	mov    eax,DWORD PTR [rax+0x9c]
   0x7ffff7eb9434 <__libc_ifunc_impl_list+8068>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eb9438 <__libc_ifunc_impl_list+8072>:	shr    eax,0x14
   0x7ffff7eb943b <__libc_ifunc_impl_list+8075>:	and    eax,0x1
   0x7ffff7eb943e <__libc_ifunc_impl_list+8078>:	mov    BYTE PTR [rbx+0x10],al
   0x7ffff7eb9441 <__libc_ifunc_impl_list+8081>:	lea    rax,[rip+0xb689e]        # 0x7ffff7f6fce6
   0x7ffff7eb9448 <__libc_ifunc_impl_list+8088>:	mov    QWORD PTR [rbx+0x18],rax
   0x7ffff7eb944c <__libc_ifunc_impl_list+8092>:	lea    rax,[rip+0xfffffffffffa03ad]        # 0x7ffff7e59800
   0x7ffff7eb9453 <__libc_ifunc_impl_list+8099>:	mov    QWORD PTR [rbx+0x20],rax
   0x7ffff7eb9457 <__libc_ifunc_impl_list+8103>:	mov    eax,0x2
   0x7ffff7eb945c <__libc_ifunc_impl_list+8108>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb9461 <__libc_ifunc_impl_list+8113>:	lea    rax,[rip+0xb6893]        # 0x7ffff7f6fcfb
   0x7ffff7eb9468 <__libc_ifunc_impl_list+8120>:	mov    BYTE PTR [rbx+0x10],0x1
   0x7ffff7eb946c <__libc_ifunc_impl_list+8124>:	mov    QWORD PTR [rbx],rax
   0x7ffff7eb946f <__libc_ifunc_impl_list+8127>:	lea    rax,[rip+0xfffffffffff9fd8a]        # 0x7ffff7e59200
   0x7ffff7eb9476 <__libc_ifunc_impl_list+8134>:	mov    QWORD PTR [rbx+0x8],rax
   0x7ffff7eb947a <__libc_ifunc_impl_list+8138>:	lea    rax,[rip+0xb6892]        # 0x7ffff7f6fd13
   0x7ffff7eb9481 <__libc_ifunc_impl_list+8145>:	mov    QWORD PTR [rbx+0x18],rax
   0x7ffff7eb9485 <__libc_ifunc_impl_list+8149>:	lea    rax,[rip+0xfffffffffff84bb4]        # 0x7ffff7e3e040
   0x7ffff7eb948c <__libc_ifunc_impl_list+8156>:	mov    QWORD PTR [rbx+0x20],rax
   0x7ffff7eb9490 <__libc_ifunc_impl_list+8160>:	mov    eax,0x2
   0x7ffff7eb9495 <__libc_ifunc_impl_list+8165>:	mov    BYTE PTR [rbx+0x28],0x1
   0x7ffff7eb9499 <__libc_ifunc_impl_list+8169>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb949e <__libc_ifunc_impl_list+8174>:	mov    rax,QWORD PTR [rip+0xf4a23]        # 0x7ffff7fadec8
   0x7ffff7eb94a5 <__libc_ifunc_impl_list+8181>:	lea    rcx,[rip+0x7de14]        # 0x7ffff7f372c0
   0x7ffff7eb94ac <__libc_ifunc_impl_list+8188>:	lea    rdi,[rip+0xb6875]        # 0x7ffff7f6fd28
   0x7ffff7eb94b3 <__libc_ifunc_impl_list+8195>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eb94b7 <__libc_ifunc_impl_list+8199>:	mov    eax,DWORD PTR [rax+0xb8]
   0x7ffff7eb94bd <__libc_ifunc_impl_list+8205>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb94c0 <__libc_ifunc_impl_list+8208>:	lea    rdi,[rip+0xb686f]        # 0x7ffff7f6fd36
   0x7ffff7eb94c7 <__libc_ifunc_impl_list+8215>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb94cb <__libc_ifunc_impl_list+8219>:	mov    ecx,eax
   0x7ffff7eb94cd <__libc_ifunc_impl_list+8221>:	and    ecx,0x120
   0x7ffff7eb94d3 <__libc_ifunc_impl_list+8227>:	cmp    ecx,0x120
   0x7ffff7eb94d9 <__libc_ifunc_impl_list+8233>:	lea    rcx,[rip+0x88700]        # 0x7ffff7f41be0
   0x7ffff7eb94e0 <__libc_ifunc_impl_list+8240>:	mov    QWORD PTR [rbx+0x20],rcx
   0x7ffff7eb94e4 <__libc_ifunc_impl_list+8244>:	mov    ecx,eax
   0x7ffff7eb94e6 <__libc_ifunc_impl_list+8246>:	sete   BYTE PTR [rbx+0x10]
   0x7ffff7eb94ea <__libc_ifunc_impl_list+8250>:	and    ecx,0x920
   0x7ffff7eb94f0 <__libc_ifunc_impl_list+8256>:	cmp    ecx,0x920
   0x7ffff7eb94f6 <__libc_ifunc_impl_list+8262>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb94fa <__libc_ifunc_impl_list+8266>:	test   eax,eax
   0x7ffff7eb94fc <__libc_ifunc_impl_list+8268>:	jns    0x7ffff7eb950d <__libc_ifunc_impl_list+8285>
   0x7ffff7eb94fe <__libc_ifunc_impl_list+8270>:	and    eax,0x40000100
   0x7ffff7eb9503 <__libc_ifunc_impl_list+8275>:	xor    edx,edx
   0x7ffff7eb9505 <__libc_ifunc_impl_list+8277>:	cmp    eax,0x40000100
   0x7ffff7eb950a <__libc_ifunc_impl_list+8282>:	sete   dl
   0x7ffff7eb950d <__libc_ifunc_impl_list+8285>:	lea    rax,[rip+0xb6834]        # 0x7ffff7f6fd48
   0x7ffff7eb9514 <__libc_ifunc_impl_list+8292>:	mov    BYTE PTR [rbx+0x40],dl
   0x7ffff7eb9517 <__libc_ifunc_impl_list+8295>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb951b <__libc_ifunc_impl_list+8299>:	lea    rax,[rip+0x8fe1e]        # 0x7ffff7f49340
   0x7ffff7eb9522 <__libc_ifunc_impl_list+8306>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb9526 <__libc_ifunc_impl_list+8310>:	lea    rax,[rip+0xb6829]        # 0x7ffff7f6fd56
   0x7ffff7eb952d <__libc_ifunc_impl_list+8317>:	mov    QWORD PTR [rbx+0x48],rax
   0x7ffff7eb9531 <__libc_ifunc_impl_list+8321>:	lea    rax,[rip+0xfffffffffffb37c8]        # 0x7ffff7e6cd00
   0x7ffff7eb9538 <__libc_ifunc_impl_list+8328>:	mov    QWORD PTR [rbx+0x50],rax
   0x7ffff7eb953c <__libc_ifunc_impl_list+8332>:	mov    eax,0x4
   0x7ffff7eb9541 <__libc_ifunc_impl_list+8337>:	and    BYTE PTR [rbx+0x40],0x1
   0x7ffff7eb9545 <__libc_ifunc_impl_list+8341>:	mov    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eb9549 <__libc_ifunc_impl_list+8345>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb954e <__libc_ifunc_impl_list+8350>:	mov    rax,QWORD PTR [rip+0xf4973]        # 0x7ffff7fadec8
   0x7ffff7eb9555 <__libc_ifunc_impl_list+8357>:	lea    rcx,[rip+0x7dfe4]        # 0x7ffff7f37540
   0x7ffff7eb955c <__libc_ifunc_impl_list+8364>:	lea    rdi,[rip+0xb6809]        # 0x7ffff7f6fd6c
   0x7ffff7eb9563 <__libc_ifunc_impl_list+8371>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eb9567 <__libc_ifunc_impl_list+8375>:	mov    eax,DWORD PTR [rax+0xb8]
   0x7ffff7eb956d <__libc_ifunc_impl_list+8381>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb9570 <__libc_ifunc_impl_list+8384>:	lea    rdi,[rip+0xb6804]        # 0x7ffff7f6fd7b
   0x7ffff7eb9577 <__libc_ifunc_impl_list+8391>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb957b <__libc_ifunc_impl_list+8395>:	mov    ecx,eax
   0x7ffff7eb957d <__libc_ifunc_impl_list+8397>:	shr    ecx,0x5
   0x7ffff7eb9580 <__libc_ifunc_impl_list+8400>:	and    ecx,0x1
   0x7ffff7eb9583 <__libc_ifunc_impl_list+8403>:	mov    BYTE PTR [rbx+0x10],cl
   0x7ffff7eb9586 <__libc_ifunc_impl_list+8406>:	lea    rcx,[rip+0x897f3]        # 0x7ffff7f42d80
   0x7ffff7eb958d <__libc_ifunc_impl_list+8413>:	mov    QWORD PTR [rbx+0x20],rcx
   0x7ffff7eb9591 <__libc_ifunc_impl_list+8417>:	mov    ecx,eax
   0x7ffff7eb9593 <__libc_ifunc_impl_list+8419>:	and    ecx,0x820
   0x7ffff7eb9599 <__libc_ifunc_impl_list+8425>:	cmp    ecx,0x820
   0x7ffff7eb959f <__libc_ifunc_impl_list+8431>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb95a3 <__libc_ifunc_impl_list+8435>:	test   eax,eax
   0x7ffff7eb95a5 <__libc_ifunc_impl_list+8437>:	jns    0x7ffff7eb95b6 <__libc_ifunc_impl_list+8454>
   0x7ffff7eb95a7 <__libc_ifunc_impl_list+8439>:	and    eax,0x40000100
   0x7ffff7eb95ac <__libc_ifunc_impl_list+8444>:	xor    edx,edx
   0x7ffff7eb95ae <__libc_ifunc_impl_list+8446>:	cmp    eax,0x40000100
   0x7ffff7eb95b3 <__libc_ifunc_impl_list+8451>:	sete   dl
   0x7ffff7eb95b6 <__libc_ifunc_impl_list+8454>:	lea    rax,[rip+0xb67d1]        # 0x7ffff7f6fd8e
   0x7ffff7eb95bd <__libc_ifunc_impl_list+8461>:	mov    BYTE PTR [rbx+0x40],dl
   0x7ffff7eb95c0 <__libc_ifunc_impl_list+8464>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb95c4 <__libc_ifunc_impl_list+8468>:	lea    rax,[rip+0x90f25]        # 0x7ffff7f4a4f0
   0x7ffff7eb95cb <__libc_ifunc_impl_list+8475>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb95cf <__libc_ifunc_impl_list+8479>:	lea    rax,[rip+0xb67c7]        # 0x7ffff7f6fd9d
   0x7ffff7eb95d6 <__libc_ifunc_impl_list+8486>:	mov    QWORD PTR [rbx+0x48],rax
   0x7ffff7eb95da <__libc_ifunc_impl_list+8490>:	lea    rax,[rip+0xfffffffffffb38af]        # 0x7ffff7e6ce90
   0x7ffff7eb95e1 <__libc_ifunc_impl_list+8497>:	mov    QWORD PTR [rbx+0x50],rax
   0x7ffff7eb95e5 <__libc_ifunc_impl_list+8501>:	mov    eax,0x4
   0x7ffff7eb95ea <__libc_ifunc_impl_list+8506>:	and    BYTE PTR [rbx+0x40],0x1
   0x7ffff7eb95ee <__libc_ifunc_impl_list+8510>:	mov    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eb95f2 <__libc_ifunc_impl_list+8514>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb95f7 <__libc_ifunc_impl_list+8519>:	mov    rax,QWORD PTR [rip+0xf48ca]        # 0x7ffff7fadec8
   0x7ffff7eb95fe <__libc_ifunc_impl_list+8526>:	lea    rcx,[rip+0x7d77b]        # 0x7ffff7f36d80
   0x7ffff7eb9605 <__libc_ifunc_impl_list+8533>:	lea    rdi,[rip+0xb67eb]        # 0x7ffff7f6fdf7
   0x7ffff7eb960c <__libc_ifunc_impl_list+8540>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eb9610 <__libc_ifunc_impl_list+8544>:	mov    eax,DWORD PTR [rax+0xb8]
   0x7ffff7eb9616 <__libc_ifunc_impl_list+8550>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb9619 <__libc_ifunc_impl_list+8553>:	lea    rdi,[rip+0xb67e6]        # 0x7ffff7f6fe06
   0x7ffff7eb9620 <__libc_ifunc_impl_list+8560>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb9624 <__libc_ifunc_impl_list+8564>:	mov    ecx,eax
   0x7ffff7eb9626 <__libc_ifunc_impl_list+8566>:	shr    ecx,0x5
   0x7ffff7eb9629 <__libc_ifunc_impl_list+8569>:	and    ecx,0x1
   0x7ffff7eb962c <__libc_ifunc_impl_list+8572>:	mov    BYTE PTR [rbx+0x10],cl
   0x7ffff7eb962f <__libc_ifunc_impl_list+8575>:	lea    rcx,[rip+0x88e7a]        # 0x7ffff7f424b0
   0x7ffff7eb9636 <__libc_ifunc_impl_list+8582>:	mov    QWORD PTR [rbx+0x20],rcx
   0x7ffff7eb963a <__libc_ifunc_impl_list+8586>:	mov    ecx,eax
   0x7ffff7eb963c <__libc_ifunc_impl_list+8588>:	and    ecx,0x820
   0x7ffff7eb9642 <__libc_ifunc_impl_list+8594>:	cmp    ecx,0x820
   0x7ffff7eb9648 <__libc_ifunc_impl_list+8600>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb964c <__libc_ifunc_impl_list+8604>:	test   eax,eax
   0x7ffff7eb964e <__libc_ifunc_impl_list+8606>:	jns    0x7ffff7eb965f <__libc_ifunc_impl_list+8623>
   0x7ffff7eb9650 <__libc_ifunc_impl_list+8608>:	and    eax,0x40000100
   0x7ffff7eb9655 <__libc_ifunc_impl_list+8613>:	xor    edx,edx
   0x7ffff7eb9657 <__libc_ifunc_impl_list+8615>:	cmp    eax,0x40000100
   0x7ffff7eb965c <__libc_ifunc_impl_list+8620>:	sete   dl
   0x7ffff7eb965f <__libc_ifunc_impl_list+8623>:	lea    rax,[rip+0xb67b3]        # 0x7ffff7f6fe19
   0x7ffff7eb9666 <__libc_ifunc_impl_list+8630>:	mov    BYTE PTR [rbx+0x40],dl
   0x7ffff7eb9669 <__libc_ifunc_impl_list+8633>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb966d <__libc_ifunc_impl_list+8637>:	lea    rax,[rip+0x9058c]        # 0x7ffff7f49c00
   0x7ffff7eb9674 <__libc_ifunc_impl_list+8644>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb9678 <__libc_ifunc_impl_list+8648>:	lea    rax,[rip+0xb67a9]        # 0x7ffff7f6fe28
   0x7ffff7eb967f <__libc_ifunc_impl_list+8655>:	mov    QWORD PTR [rbx+0x48],rax
   0x7ffff7eb9683 <__libc_ifunc_impl_list+8659>:	lea    rax,[rip+0xfffffffffffb3546]        # 0x7ffff7e6cbd0
   0x7ffff7eb968a <__libc_ifunc_impl_list+8666>:	mov    QWORD PTR [rbx+0x50],rax
   0x7ffff7eb968e <__libc_ifunc_impl_list+8670>:	mov    eax,0x4
   0x7ffff7eb9693 <__libc_ifunc_impl_list+8675>:	and    BYTE PTR [rbx+0x40],0x1
   0x7ffff7eb9697 <__libc_ifunc_impl_list+8679>:	mov    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eb969b <__libc_ifunc_impl_list+8683>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb96a0 <__libc_ifunc_impl_list+8688>:	mov    rax,QWORD PTR [rip+0xf4821]        # 0x7ffff7fadec8
   0x7ffff7eb96a7 <__libc_ifunc_impl_list+8695>:	lea    rcx,[rip+0x7d282]        # 0x7ffff7f36930
   0x7ffff7eb96ae <__libc_ifunc_impl_list+8702>:	lea    rdi,[rip+0xb66fe]        # 0x7ffff7f6fdb3
   0x7ffff7eb96b5 <__libc_ifunc_impl_list+8709>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eb96b9 <__libc_ifunc_impl_list+8713>:	mov    eax,DWORD PTR [rax+0xb8]
   0x7ffff7eb96bf <__libc_ifunc_impl_list+8719>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb96c2 <__libc_ifunc_impl_list+8722>:	lea    rdi,[rip+0xb66f8]        # 0x7ffff7f6fdc1
   0x7ffff7eb96c9 <__libc_ifunc_impl_list+8729>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb96cd <__libc_ifunc_impl_list+8733>:	mov    ecx,eax
   0x7ffff7eb96cf <__libc_ifunc_impl_list+8735>:	shr    ecx,0x5
   0x7ffff7eb96d2 <__libc_ifunc_impl_list+8738>:	and    ecx,0x1
   0x7ffff7eb96d5 <__libc_ifunc_impl_list+8741>:	mov    BYTE PTR [rbx+0x10],cl
   0x7ffff7eb96d8 <__libc_ifunc_impl_list+8744>:	lea    rcx,[rip+0x88791]        # 0x7ffff7f41e70
   0x7ffff7eb96df <__libc_ifunc_impl_list+8751>:	mov    QWORD PTR [rbx+0x20],rcx
   0x7ffff7eb96e3 <__libc_ifunc_impl_list+8755>:	mov    ecx,eax
   0x7ffff7eb96e5 <__libc_ifunc_impl_list+8757>:	and    ecx,0x820
   0x7ffff7eb96eb <__libc_ifunc_impl_list+8763>:	cmp    ecx,0x820
   0x7ffff7eb96f1 <__libc_ifunc_impl_list+8769>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb96f5 <__libc_ifunc_impl_list+8773>:	test   eax,eax
   0x7ffff7eb96f7 <__libc_ifunc_impl_list+8775>:	jns    0x7ffff7eb9708 <__libc_ifunc_impl_list+8792>
   0x7ffff7eb96f9 <__libc_ifunc_impl_list+8777>:	and    eax,0x40000100
   0x7ffff7eb96fe <__libc_ifunc_impl_list+8782>:	xor    edx,edx
   0x7ffff7eb9700 <__libc_ifunc_impl_list+8784>:	cmp    eax,0x40000100
   0x7ffff7eb9705 <__libc_ifunc_impl_list+8789>:	sete   dl
   0x7ffff7eb9708 <__libc_ifunc_impl_list+8792>:	lea    rax,[rip+0xb66c4]        # 0x7ffff7f6fdd3
   0x7ffff7eb970f <__libc_ifunc_impl_list+8799>:	mov    BYTE PTR [rbx+0x40],dl
   0x7ffff7eb9712 <__libc_ifunc_impl_list+8802>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb9716 <__libc_ifunc_impl_list+8806>:	lea    rax,[rip+0x8fea3]        # 0x7ffff7f495c0
   0x7ffff7eb971d <__libc_ifunc_impl_list+8813>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb9721 <__libc_ifunc_impl_list+8817>:	lea    rax,[rip+0xb66b9]        # 0x7ffff7f6fde1
   0x7ffff7eb9728 <__libc_ifunc_impl_list+8824>:	mov    QWORD PTR [rbx+0x48],rax
   0x7ffff7eb972c <__libc_ifunc_impl_list+8828>:	lea    rax,[rip+0xfffffffffffb27cd]        # 0x7ffff7e6bf00
   0x7ffff7eb9733 <__libc_ifunc_impl_list+8835>:	mov    QWORD PTR [rbx+0x50],rax
   0x7ffff7eb9737 <__libc_ifunc_impl_list+8839>:	mov    eax,0x4
   0x7ffff7eb973c <__libc_ifunc_impl_list+8844>:	and    BYTE PTR [rbx+0x40],0x1
   0x7ffff7eb9740 <__libc_ifunc_impl_list+8848>:	mov    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eb9744 <__libc_ifunc_impl_list+8852>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb9749 <__libc_ifunc_impl_list+8857>:	mov    rdx,QWORD PTR [rip+0xf4778]        # 0x7ffff7fadec8
   0x7ffff7eb9750 <__libc_ifunc_impl_list+8864>:	lea    rdi,[rip+0xb670b]        # 0x7ffff7f6fe62
   0x7ffff7eb9757 <__libc_ifunc_impl_list+8871>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb975a <__libc_ifunc_impl_list+8874>:	lea    rdi,[rip+0x7dfdf]        # 0x7ffff7f37740
   0x7ffff7eb9761 <__libc_ifunc_impl_list+8881>:	mov    eax,DWORD PTR [rdx+0xb8]
   0x7ffff7eb9767 <__libc_ifunc_impl_list+8887>:	mov    QWORD PTR [rbx+0x8],rdi
   0x7ffff7eb976b <__libc_ifunc_impl_list+8891>:	lea    rdi,[rip+0xb66fe]        # 0x7ffff7f6fe70
   0x7ffff7eb9772 <__libc_ifunc_impl_list+8898>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb9776 <__libc_ifunc_impl_list+8902>:	lea    rdi,[rip+0x88b43]        # 0x7ffff7f422c0
   0x7ffff7eb977d <__libc_ifunc_impl_list+8909>:	mov    esi,eax
   0x7ffff7eb977f <__libc_ifunc_impl_list+8911>:	mov    QWORD PTR [rbx+0x20],rdi
   0x7ffff7eb9783 <__libc_ifunc_impl_list+8915>:	and    esi,0x120
   0x7ffff7eb9789 <__libc_ifunc_impl_list+8921>:	cmp    esi,0x120
   0x7ffff7eb978f <__libc_ifunc_impl_list+8927>:	mov    esi,eax
   0x7ffff7eb9791 <__libc_ifunc_impl_list+8929>:	sete   BYTE PTR [rbx+0x10]
   0x7ffff7eb9795 <__libc_ifunc_impl_list+8933>:	and    esi,0x920
   0x7ffff7eb979b <__libc_ifunc_impl_list+8939>:	cmp    esi,0x920
   0x7ffff7eb97a1 <__libc_ifunc_impl_list+8945>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb97a5 <__libc_ifunc_impl_list+8949>:	test   eax,eax
   0x7ffff7eb97a7 <__libc_ifunc_impl_list+8951>:	jns    0x7ffff7eb97b8 <__libc_ifunc_impl_list+8968>
   0x7ffff7eb97a9 <__libc_ifunc_impl_list+8953>:	and    eax,0x40000100
   0x7ffff7eb97ae <__libc_ifunc_impl_list+8958>:	xor    ecx,ecx
   0x7ffff7eb97b0 <__libc_ifunc_impl_list+8960>:	cmp    eax,0x40000100
   0x7ffff7eb97b5 <__libc_ifunc_impl_list+8965>:	sete   cl
   0x7ffff7eb97b8 <__libc_ifunc_impl_list+8968>:	lea    rax,[rip+0xb66c3]        # 0x7ffff7f6fe82
   0x7ffff7eb97bf <__libc_ifunc_impl_list+8975>:	mov    BYTE PTR [rbx+0x40],cl
   0x7ffff7eb97c2 <__libc_ifunc_impl_list+8978>:	lea    rcx,[rip+0xb66c7]        # 0x7ffff7f6fe90
   0x7ffff7eb97c9 <__libc_ifunc_impl_list+8985>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb97cd <__libc_ifunc_impl_list+8989>:	lea    rax,[rip+0x902ac]        # 0x7ffff7f49a80
   0x7ffff7eb97d4 <__libc_ifunc_impl_list+8996>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb97d8 <__libc_ifunc_impl_list+9000>:	mov    eax,DWORD PTR [rdx+0x9c]
   0x7ffff7eb97de <__libc_ifunc_impl_list+9006>:	mov    QWORD PTR [rbx+0x48],rcx
   0x7ffff7eb97e2 <__libc_ifunc_impl_list+9010>:	lea    rcx,[rip+0xfffffffffffb3c67]        # 0x7ffff7e6d450
   0x7ffff7eb97e9 <__libc_ifunc_impl_list+9017>:	shr    eax,0x13
   0x7ffff7eb97ec <__libc_ifunc_impl_list+9020>:	and    BYTE PTR [rbx+0x40],0x1
   0x7ffff7eb97f0 <__libc_ifunc_impl_list+9024>:	and    eax,0x1
   0x7ffff7eb97f3 <__libc_ifunc_impl_list+9027>:	mov    QWORD PTR [rbx+0x50],rcx
   0x7ffff7eb97f7 <__libc_ifunc_impl_list+9031>:	mov    BYTE PTR [rbx+0x58],al
   0x7ffff7eb97fa <__libc_ifunc_impl_list+9034>:	lea    rax,[rip+0xb669f]        # 0x7ffff7f6fea0
   0x7ffff7eb9801 <__libc_ifunc_impl_list+9041>:	mov    QWORD PTR [rbx+0x60],rax
   0x7ffff7eb9805 <__libc_ifunc_impl_list+9045>:	lea    rax,[rip+0xfffffffffffb39a4]        # 0x7ffff7e6d1b0
   0x7ffff7eb980c <__libc_ifunc_impl_list+9052>:	mov    QWORD PTR [rbx+0x68],rax
   0x7ffff7eb9810 <__libc_ifunc_impl_list+9056>:	mov    eax,0x5
   0x7ffff7eb9815 <__libc_ifunc_impl_list+9061>:	mov    BYTE PTR [rbx+0x70],0x1
   0x7ffff7eb9819 <__libc_ifunc_impl_list+9065>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb981e <__libc_ifunc_impl_list+9070>:	mov    rax,QWORD PTR [rip+0xf46a3]        # 0x7ffff7fadec8
   0x7ffff7eb9825 <__libc_ifunc_impl_list+9077>:	lea    rdi,[rip+0xb6612]        # 0x7ffff7f6fe3e
   0x7ffff7eb982c <__libc_ifunc_impl_list+9084>:	lea    rcx,[rip+0x6df6d]        # 0x7ffff7f277a0
   0x7ffff7eb9833 <__libc_ifunc_impl_list+9091>:	mov    BYTE PTR [rbx+0x28],0x1
   0x7ffff7eb9837 <__libc_ifunc_impl_list+9095>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb983a <__libc_ifunc_impl_list+9098>:	mov    eax,DWORD PTR [rax+0x9c]
   0x7ffff7eb9840 <__libc_ifunc_impl_list+9104>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eb9844 <__libc_ifunc_impl_list+9108>:	shr    eax,0x9
   0x7ffff7eb9847 <__libc_ifunc_impl_list+9111>:	and    eax,0x1
   0x7ffff7eb984a <__libc_ifunc_impl_list+9114>:	mov    BYTE PTR [rbx+0x10],al
   0x7ffff7eb984d <__libc_ifunc_impl_list+9117>:	lea    rax,[rip+0xb65f9]        # 0x7ffff7f6fe4d
   0x7ffff7eb9854 <__libc_ifunc_impl_list+9124>:	mov    QWORD PTR [rbx+0x18],rax
   0x7ffff7eb9858 <__libc_ifunc_impl_list+9128>:	lea    rax,[rip+0xfffffffffffb3471]        # 0x7ffff7e6ccd0
   0x7ffff7eb985f <__libc_ifunc_impl_list+9135>:	mov    QWORD PTR [rbx+0x20],rax
   0x7ffff7eb9863 <__libc_ifunc_impl_list+9139>:	mov    eax,0x2
   0x7ffff7eb9868 <__libc_ifunc_impl_list+9144>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb986d <__libc_ifunc_impl_list+9149>:	mov    rdx,QWORD PTR [rip+0xf4654]        # 0x7ffff7fadec8
   0x7ffff7eb9874 <__libc_ifunc_impl_list+9156>:	lea    rcx,[rip+0xb668c]        # 0x7ffff7f6ff07
   0x7ffff7eb987b <__libc_ifunc_impl_list+9163>:	mov    QWORD PTR [rbx],rcx
   0x7ffff7eb987e <__libc_ifunc_impl_list+9166>:	lea    rcx,[rip+0x7cdbb]        # 0x7ffff7f36640
   0x7ffff7eb9885 <__libc_ifunc_impl_list+9173>:	mov    edx,DWORD PTR [rdx+0xb8]
   0x7ffff7eb988b <__libc_ifunc_impl_list+9179>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eb988f <__libc_ifunc_impl_list+9183>:	mov    ecx,edx
   0x7ffff7eb9891 <__libc_ifunc_impl_list+9185>:	shr    ecx,0x5
   0x7ffff7eb9894 <__libc_ifunc_impl_list+9188>:	and    ecx,0x1
   0x7ffff7eb9897 <__libc_ifunc_impl_list+9191>:	mov    BYTE PTR [rbx+0x10],cl
   0x7ffff7eb989a <__libc_ifunc_impl_list+9194>:	lea    rcx,[rip+0xb6675]        # 0x7ffff7f6ff16
   0x7ffff7eb98a1 <__libc_ifunc_impl_list+9201>:	mov    QWORD PTR [rbx+0x18],rcx
   0x7ffff7eb98a5 <__libc_ifunc_impl_list+9205>:	lea    rcx,[rip+0x896d4]        # 0x7ffff7f42f80
   0x7ffff7eb98ac <__libc_ifunc_impl_list+9212>:	mov    QWORD PTR [rbx+0x20],rcx
   0x7ffff7eb98b0 <__libc_ifunc_impl_list+9216>:	mov    ecx,edx
   0x7ffff7eb98b2 <__libc_ifunc_impl_list+9218>:	and    ecx,0x820
   0x7ffff7eb98b8 <__libc_ifunc_impl_list+9224>:	cmp    ecx,0x820
   0x7ffff7eb98be <__libc_ifunc_impl_list+9230>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb98c2 <__libc_ifunc_impl_list+9234>:	test   edx,edx
   0x7ffff7eb98c4 <__libc_ifunc_impl_list+9236>:	js     0x7ffff7eb99fa <__libc_ifunc_impl_list+9546>
   0x7ffff7eb98ca <__libc_ifunc_impl_list+9242>:	lea    rcx,[rip+0xb6658]        # 0x7ffff7f6ff29
   0x7ffff7eb98d1 <__libc_ifunc_impl_list+9249>:	lea    rdi,[rip+0x90e28]        # 0x7ffff7f4a700
   0x7ffff7eb98d8 <__libc_ifunc_impl_list+9256>:	mov    BYTE PTR [rbx+0x40],0x0
   0x7ffff7eb98dc <__libc_ifunc_impl_list+9260>:	mov    QWORD PTR [rbx+0x30],rcx
   0x7ffff7eb98e0 <__libc_ifunc_impl_list+9264>:	mov    QWORD PTR [rbx+0x38],rdi
   0x7ffff7eb98e4 <__libc_ifunc_impl_list+9268>:	mov    BYTE PTR [rbx+0x58],al
   0x7ffff7eb98e7 <__libc_ifunc_impl_list+9271>:	lea    rax,[rip+0xb665d]        # 0x7ffff7f6ff4b
   0x7ffff7eb98ee <__libc_ifunc_impl_list+9278>:	lea    rdi,[rip+0xb6643]        # 0x7ffff7f6ff38
   0x7ffff7eb98f5 <__libc_ifunc_impl_list+9285>:	mov    QWORD PTR [rbx+0x60],rax
   0x7ffff7eb98f9 <__libc_ifunc_impl_list+9289>:	lea    rcx,[rip+0x918e0]        # 0x7ffff7f4b1e0
   0x7ffff7eb9900 <__libc_ifunc_impl_list+9296>:	lea    rax,[rip+0xfffffffffffb2259]        # 0x7ffff7e6bb60
   0x7ffff7eb9907 <__libc_ifunc_impl_list+9303>:	mov    QWORD PTR [rbx+0x68],rax
   0x7ffff7eb990b <__libc_ifunc_impl_list+9307>:	mov    eax,0x5
   0x7ffff7eb9910 <__libc_ifunc_impl_list+9312>:	and    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eb9914 <__libc_ifunc_impl_list+9316>:	mov    QWORD PTR [rbx+0x48],rdi
   0x7ffff7eb9918 <__libc_ifunc_impl_list+9320>:	mov    QWORD PTR [rbx+0x50],rcx
   0x7ffff7eb991c <__libc_ifunc_impl_list+9324>:	mov    BYTE PTR [rbx+0x70],0x1
   0x7ffff7eb9920 <__libc_ifunc_impl_list+9328>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb9925 <__libc_ifunc_impl_list+9333>:	mov    rdx,QWORD PTR [rip+0xf459c]        # 0x7ffff7fadec8
   0x7ffff7eb992c <__libc_ifunc_impl_list+9340>:	lea    rdi,[rip+0xb6583]        # 0x7ffff7f6feb6
   0x7ffff7eb9933 <__libc_ifunc_impl_list+9347>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb9936 <__libc_ifunc_impl_list+9350>:	lea    rdi,[rip+0x7e003]        # 0x7ffff7f37940
   0x7ffff7eb993d <__libc_ifunc_impl_list+9357>:	mov    eax,DWORD PTR [rdx+0xb8]
   0x7ffff7eb9943 <__libc_ifunc_impl_list+9363>:	mov    QWORD PTR [rbx+0x8],rdi
   0x7ffff7eb9947 <__libc_ifunc_impl_list+9367>:	lea    rdi,[rip+0xb6577]        # 0x7ffff7f6fec5
   0x7ffff7eb994e <__libc_ifunc_impl_list+9374>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb9952 <__libc_ifunc_impl_list+9378>:	lea    rdi,[rip+0x890a7]        # 0x7ffff7f42a00
   0x7ffff7eb9959 <__libc_ifunc_impl_list+9385>:	mov    esi,eax
   0x7ffff7eb995b <__libc_ifunc_impl_list+9387>:	mov    QWORD PTR [rbx+0x20],rdi
   0x7ffff7eb995f <__libc_ifunc_impl_list+9391>:	and    esi,0x120
   0x7ffff7eb9965 <__libc_ifunc_impl_list+9397>:	cmp    esi,0x120
   0x7ffff7eb996b <__libc_ifunc_impl_list+9403>:	mov    esi,eax
   0x7ffff7eb996d <__libc_ifunc_impl_list+9405>:	sete   BYTE PTR [rbx+0x10]
   0x7ffff7eb9971 <__libc_ifunc_impl_list+9409>:	and    esi,0x920
   0x7ffff7eb9977 <__libc_ifunc_impl_list+9415>:	cmp    esi,0x920
   0x7ffff7eb997d <__libc_ifunc_impl_list+9421>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb9981 <__libc_ifunc_impl_list+9425>:	test   eax,eax
   0x7ffff7eb9983 <__libc_ifunc_impl_list+9427>:	jns    0x7ffff7eb9994 <__libc_ifunc_impl_list+9444>
   0x7ffff7eb9985 <__libc_ifunc_impl_list+9429>:	and    eax,0x40000100
   0x7ffff7eb998a <__libc_ifunc_impl_list+9434>:	xor    ecx,ecx
   0x7ffff7eb998c <__libc_ifunc_impl_list+9436>:	cmp    eax,0x40000100
   0x7ffff7eb9991 <__libc_ifunc_impl_list+9441>:	sete   cl
   0x7ffff7eb9994 <__libc_ifunc_impl_list+9444>:	lea    rax,[rip+0xb653d]        # 0x7ffff7f6fed8
   0x7ffff7eb999b <__libc_ifunc_impl_list+9451>:	mov    BYTE PTR [rbx+0x40],cl
   0x7ffff7eb999e <__libc_ifunc_impl_list+9454>:	lea    rcx,[rip+0xb6542]        # 0x7ffff7f6fee7
   0x7ffff7eb99a5 <__libc_ifunc_impl_list+9461>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb99a9 <__libc_ifunc_impl_list+9465>:	lea    rax,[rip+0x90830]        # 0x7ffff7f4a1e0
   0x7ffff7eb99b0 <__libc_ifunc_impl_list+9472>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb99b4 <__libc_ifunc_impl_list+9476>:	mov    eax,DWORD PTR [rdx+0x9c]
   0x7ffff7eb99ba <__libc_ifunc_impl_list+9482>:	mov    QWORD PTR [rbx+0x48],rcx
   0x7ffff7eb99be <__libc_ifunc_impl_list+9486>:	lea    rcx,[rip+0xfffffffffffb3c6b]        # 0x7ffff7e6d630
   0x7ffff7eb99c5 <__libc_ifunc_impl_list+9493>:	shr    eax,0x13
   0x7ffff7eb99c8 <__libc_ifunc_impl_list+9496>:	and    BYTE PTR [rbx+0x40],0x1
   0x7ffff7eb99cc <__libc_ifunc_impl_list+9500>:	and    eax,0x1
   0x7ffff7eb99cf <__libc_ifunc_impl_list+9503>:	mov    QWORD PTR [rbx+0x50],rcx
   0x7ffff7eb99d3 <__libc_ifunc_impl_list+9507>:	mov    BYTE PTR [rbx+0x58],al
   0x7ffff7eb99d6 <__libc_ifunc_impl_list+9510>:	lea    rax,[rip+0xb651b]        # 0x7ffff7f6fef8
   0x7ffff7eb99dd <__libc_ifunc_impl_list+9517>:	mov    QWORD PTR [rbx+0x60],rax
   0x7ffff7eb99e1 <__libc_ifunc_impl_list+9521>:	lea    rax,[rip+0xfffffffffffb3c08]        # 0x7ffff7e6d5f0
   0x7ffff7eb99e8 <__libc_ifunc_impl_list+9528>:	mov    QWORD PTR [rbx+0x68],rax
   0x7ffff7eb99ec <__libc_ifunc_impl_list+9532>:	mov    eax,0x5
   0x7ffff7eb99f1 <__libc_ifunc_impl_list+9537>:	mov    BYTE PTR [rbx+0x70],0x1
   0x7ffff7eb99f5 <__libc_ifunc_impl_list+9541>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb99fa <__libc_ifunc_impl_list+9546>:	lea    rax,[rip+0xb6528]        # 0x7ffff7f6ff29
   0x7ffff7eb9a01 <__libc_ifunc_impl_list+9553>:	and    edx,0x40000100
   0x7ffff7eb9a07 <__libc_ifunc_impl_list+9559>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb9a0b <__libc_ifunc_impl_list+9563>:	cmp    edx,0x40000100
   0x7ffff7eb9a11 <__libc_ifunc_impl_list+9569>:	lea    rax,[rip+0x90ce8]        # 0x7ffff7f4a700
   0x7ffff7eb9a18 <__libc_ifunc_impl_list+9576>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb9a1c <__libc_ifunc_impl_list+9580>:	sete   al
   0x7ffff7eb9a1f <__libc_ifunc_impl_list+9583>:	mov    BYTE PTR [rbx+0x40],al
   0x7ffff7eb9a22 <__libc_ifunc_impl_list+9586>:	movzx  eax,al
   0x7ffff7eb9a25 <__libc_ifunc_impl_list+9589>:	jmp    0x7ffff7eb98e4 <__libc_ifunc_impl_list+9268>
   0x7ffff7eb9a2a <__libc_ifunc_impl_list+9594>:	lea    rdx,[rip+0xb6a7c]        # 0x7ffff7f704ad
   0x7ffff7eb9a31 <__libc_ifunc_impl_list+9601>:	and    eax,0x40000100
   0x7ffff7eb9a36 <__libc_ifunc_impl_list+9606>:	mov    QWORD PTR [rbx+0x30],rdx
   0x7ffff7eb9a3a <__libc_ifunc_impl_list+9610>:	cmp    eax,0x40000100
   0x7ffff7eb9a3f <__libc_ifunc_impl_list+9615>:	lea    rdx,[rip+0x8b03a]        # 0x7ffff7f44a80
   0x7ffff7eb9a46 <__libc_ifunc_impl_list+9622>:	mov    QWORD PTR [rbx+0x38],rdx
   0x7ffff7eb9a4a <__libc_ifunc_impl_list+9626>:	sete   dl
   0x7ffff7eb9a4d <__libc_ifunc_impl_list+9629>:	mov    BYTE PTR [rbx+0x40],dl
   0x7ffff7eb9a50 <__libc_ifunc_impl_list+9632>:	movzx  edx,dl
   0x7ffff7eb9a53 <__libc_ifunc_impl_list+9635>:	jmp    0x7ffff7eb794f <__libc_ifunc_impl_list+1183>
   0x7ffff7eb9a58 <__libc_ifunc_impl_list+9640>:	mov    rdx,QWORD PTR [rip+0xf4469]        # 0x7ffff7fadec8
   0x7ffff7eb9a5f <__libc_ifunc_impl_list+9647>:	lea    rdi,[rip+0xb699f]        # 0x7ffff7f70405
   0x7ffff7eb9a66 <__libc_ifunc_impl_list+9654>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb9a69 <__libc_ifunc_impl_list+9657>:	lea    rdi,[rip+0x74490]        # 0x7ffff7f2df00
   0x7ffff7eb9a70 <__libc_ifunc_impl_list+9664>:	mov    eax,DWORD PTR [rdx+0xb8]
   0x7ffff7eb9a76 <__libc_ifunc_impl_list+9670>:	mov    QWORD PTR [rbx+0x8],rdi
   0x7ffff7eb9a7a <__libc_ifunc_impl_list+9674>:	lea    rdi,[rip+0xb6993]        # 0x7ffff7f70414
   0x7ffff7eb9a81 <__libc_ifunc_impl_list+9681>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb9a85 <__libc_ifunc_impl_list+9685>:	lea    rdi,[rip+0x86da4]        # 0x7ffff7f40830
   0x7ffff7eb9a8c <__libc_ifunc_impl_list+9692>:	mov    esi,eax
   0x7ffff7eb9a8e <__libc_ifunc_impl_list+9694>:	mov    QWORD PTR [rbx+0x20],rdi
   0x7ffff7eb9a92 <__libc_ifunc_impl_list+9698>:	shr    esi,0x5
   0x7ffff7eb9a95 <__libc_ifunc_impl_list+9701>:	and    esi,0x1
   0x7ffff7eb9a98 <__libc_ifunc_impl_list+9704>:	mov    BYTE PTR [rbx+0x10],sil
   0x7ffff7eb9a9c <__libc_ifunc_impl_list+9708>:	mov    esi,eax
   0x7ffff7eb9a9e <__libc_ifunc_impl_list+9710>:	and    esi,0x820
   0x7ffff7eb9aa4 <__libc_ifunc_impl_list+9716>:	cmp    esi,0x820
   0x7ffff7eb9aaa <__libc_ifunc_impl_list+9722>:	sete   BYTE PTR [rbx+0x28]
   0x7ffff7eb9aae <__libc_ifunc_impl_list+9726>:	test   eax,eax
   0x7ffff7eb9ab0 <__libc_ifunc_impl_list+9728>:	jns    0x7ffff7eb9aba <__libc_ifunc_impl_list+9738>
   0x7ffff7eb9ab2 <__libc_ifunc_impl_list+9730>:	shr    eax,0x1e
   0x7ffff7eb9ab5 <__libc_ifunc_impl_list+9733>:	and    eax,0x1
   0x7ffff7eb9ab8 <__libc_ifunc_impl_list+9736>:	mov    ecx,eax
   0x7ffff7eb9aba <__libc_ifunc_impl_list+9738>:	lea    rax,[rip+0xb6966]        # 0x7ffff7f70427
   0x7ffff7eb9ac1 <__libc_ifunc_impl_list+9745>:	mov    BYTE PTR [rbx+0x40],cl
   0x7ffff7eb9ac4 <__libc_ifunc_impl_list+9748>:	lea    rcx,[rip+0xb696b]        # 0x7ffff7f70436
   0x7ffff7eb9acb <__libc_ifunc_impl_list+9755>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb9acf <__libc_ifunc_impl_list+9759>:	lea    rax,[rip+0x8e3ea]        # 0x7ffff7f47ec0
   0x7ffff7eb9ad6 <__libc_ifunc_impl_list+9766>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eb9ada <__libc_ifunc_impl_list+9770>:	mov    eax,DWORD PTR [rdx+0x9c]
   0x7ffff7eb9ae0 <__libc_ifunc_impl_list+9776>:	mov    QWORD PTR [rbx+0x48],rcx
   0x7ffff7eb9ae4 <__libc_ifunc_impl_list+9780>:	lea    rcx,[rip+0x6f0e5]        # 0x7ffff7f28bd0
   0x7ffff7eb9aeb <__libc_ifunc_impl_list+9787>:	mov    edx,eax
   0x7ffff7eb9aed <__libc_ifunc_impl_list+9789>:	shr    eax,0x9
   0x7ffff7eb9af0 <__libc_ifunc_impl_list+9792>:	mov    QWORD PTR [rbx+0x50],rcx
   0x7ffff7eb9af4 <__libc_ifunc_impl_list+9796>:	lea    rcx,[rip+0x54b05]        # 0x7ffff7f0e600
   0x7ffff7eb9afb <__libc_ifunc_impl_list+9803>:	and    eax,0x1
   0x7ffff7eb9afe <__libc_ifunc_impl_list+9806>:	shr    edx,0x14
   0x7ffff7eb9b01 <__libc_ifunc_impl_list+9809>:	and    BYTE PTR [rbx+0x40],0x1
   0x7ffff7eb9b05 <__libc_ifunc_impl_list+9813>:	and    edx,0x1
   0x7ffff7eb9b08 <__libc_ifunc_impl_list+9816>:	mov    BYTE PTR [rbx+0x70],al
   0x7ffff7eb9b0b <__libc_ifunc_impl_list+9819>:	lea    rax,[rip+0xb6944]        # 0x7ffff7f70456
   0x7ffff7eb9b12 <__libc_ifunc_impl_list+9826>:	mov    BYTE PTR [rbx+0x58],dl
   0x7ffff7eb9b15 <__libc_ifunc_impl_list+9829>:	lea    rdx,[rip+0xb692a]        # 0x7ffff7f70446
   0x7ffff7eb9b1c <__libc_ifunc_impl_list+9836>:	mov    QWORD PTR [rbx+0x78],rax
   0x7ffff7eb9b20 <__libc_ifunc_impl_list+9840>:	lea    rax,[rip+0xfffffffffff8e579]        # 0x7ffff7e480a0
   0x7ffff7eb9b27 <__libc_ifunc_impl_list+9847>:	mov    QWORD PTR [rbx+0x80],rax
   0x7ffff7eb9b2e <__libc_ifunc_impl_list+9854>:	mov    eax,0x6
   0x7ffff7eb9b33 <__libc_ifunc_impl_list+9859>:	mov    QWORD PTR [rbx+0x60],rdx
   0x7ffff7eb9b37 <__libc_ifunc_impl_list+9863>:	mov    QWORD PTR [rbx+0x68],rcx
   0x7ffff7eb9b3b <__libc_ifunc_impl_list+9867>:	mov    BYTE PTR [rbx+0x88],0x1
   0x7ffff7eb9b42 <__libc_ifunc_impl_list+9874>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb9b47 <__libc_ifunc_impl_list+9879>:	mov    rdi,QWORD PTR [rip+0xf437a]        # 0x7ffff7fadec8
   0x7ffff7eb9b4e <__libc_ifunc_impl_list+9886>:	lea    rdx,[rip+0x7f27b]        # 0x7ffff7f38dd0
   0x7ffff7eb9b55 <__libc_ifunc_impl_list+9893>:	lea    rcx,[rip+0xbb854]        # 0x7ffff7f753b0
   0x7ffff7eb9b5c <__libc_ifunc_impl_list+9900>:	mov    QWORD PTR [rbx+0x8],rdx
   0x7ffff7eb9b60 <__libc_ifunc_impl_list+9904>:	lea    r10,[rip+0xb67a3]        # 0x7ffff7f7030a
   0x7ffff7eb9b67 <__libc_ifunc_impl_list+9911>:	lea    r11,[rip+0x7bd22]        # 0x7ffff7f35890
   0x7ffff7eb9b6e <__libc_ifunc_impl_list+9918>:	mov    esi,DWORD PTR [rdi+0xb8]
   0x7ffff7eb9b74 <__libc_ifunc_impl_list+9924>:	mov    QWORD PTR [rbx],rcx
   0x7ffff7eb9b77 <__libc_ifunc_impl_list+9927>:	lea    r8,[rip+0xb67a4]        # 0x7ffff7f70322
   0x7ffff7eb9b7e <__libc_ifunc_impl_list+9934>:	lea    r9,[rip+0x7bd7b]        # 0x7ffff7f35900
   0x7ffff7eb9b85 <__libc_ifunc_impl_list+9941>:	mov    QWORD PTR [rbx+0x48],r10
   0x7ffff7eb9b89 <__libc_ifunc_impl_list+9945>:	mov    edx,esi
   0x7ffff7eb9b8b <__libc_ifunc_impl_list+9947>:	mov    ecx,esi
   0x7ffff7eb9b8d <__libc_ifunc_impl_list+9949>:	mov    QWORD PTR [rbx+0x50],r11
   0x7ffff7eb9b91 <__libc_ifunc_impl_list+9953>:	shr    edx,0x10
   0x7ffff7eb9b94 <__libc_ifunc_impl_list+9956>:	shr    ecx,0x1f
   0x7ffff7eb9b97 <__libc_ifunc_impl_list+9959>:	mov    QWORD PTR [rbx+0x60],r8
   0x7ffff7eb9b9b <__libc_ifunc_impl_list+9963>:	and    edx,0x1
   0x7ffff7eb9b9e <__libc_ifunc_impl_list+9966>:	mov    BYTE PTR [rbx+0x28],cl
   0x7ffff7eb9ba1 <__libc_ifunc_impl_list+9969>:	mov    BYTE PTR [rbx+0x10],dl
   0x7ffff7eb9ba4 <__libc_ifunc_impl_list+9972>:	lea    rdx,[rip+0xb6744]        # 0x7ffff7f702ef
   0x7ffff7eb9bab <__libc_ifunc_impl_list+9979>:	mov    QWORD PTR [rbx+0x18],rdx
   0x7ffff7eb9baf <__libc_ifunc_impl_list+9983>:	lea    rdx,[rip+0x81cda]        # 0x7ffff7f3b890
   0x7ffff7eb9bb6 <__libc_ifunc_impl_list+9990>:	mov    QWORD PTR [rbx+0x20],rdx
   0x7ffff7eb9bba <__libc_ifunc_impl_list+9994>:	lea    rdx,[rip+0xbb80f]        # 0x7ffff7f753d0
   0x7ffff7eb9bc1 <__libc_ifunc_impl_list+10001>:	mov    QWORD PTR [rbx+0x30],rdx
   0x7ffff7eb9bc5 <__libc_ifunc_impl_list+10005>:	lea    rdx,[rip+0x81d34]        # 0x7ffff7f3b900
   0x7ffff7eb9bcc <__libc_ifunc_impl_list+10012>:	mov    QWORD PTR [rbx+0x38],rdx
   0x7ffff7eb9bd0 <__libc_ifunc_impl_list+10016>:	mov    edx,DWORD PTR [rdi+0x9c]
   0x7ffff7eb9bd6 <__libc_ifunc_impl_list+10022>:	mov    BYTE PTR [rbx+0x40],cl
   0x7ffff7eb9bd9 <__libc_ifunc_impl_list+10025>:	test   edx,0x10000000
   0x7ffff7eb9bdf <__libc_ifunc_impl_list+10031>:	mov    QWORD PTR [rbx+0x68],r9
   0x7ffff7eb9be3 <__libc_ifunc_impl_list+10035>:	setne  dil
   0x7ffff7eb9be7 <__libc_ifunc_impl_list+10039>:	mov    BYTE PTR [rbx+0x58],dil
   0x7ffff7eb9beb <__libc_ifunc_impl_list+10043>:	mov    BYTE PTR [rbx+0x70],dil
   0x7ffff7eb9bef <__libc_ifunc_impl_list+10047>:	je     0x7ffff7eb9f51 <__libc_ifunc_impl_list+10913>
   0x7ffff7eb9bf5 <__libc_ifunc_impl_list+10053>:	lea    rax,[rip+0xb6743]        # 0x7ffff7f7033f
   0x7ffff7eb9bfc <__libc_ifunc_impl_list+10060>:	and    esi,0x800
   0x7ffff7eb9c02 <__libc_ifunc_impl_list+10066>:	mov    QWORD PTR [rbx+0x78],rax
   0x7ffff7eb9c06 <__libc_ifunc_impl_list+10070>:	lea    rax,[rip+0x83103]        # 0x7ffff7f3cd10
   0x7ffff7eb9c0d <__libc_ifunc_impl_list+10077>:	mov    QWORD PTR [rbx+0x80],rax
   0x7ffff7eb9c14 <__libc_ifunc_impl_list+10084>:	setne  al
   0x7ffff7eb9c17 <__libc_ifunc_impl_list+10087>:	mov    BYTE PTR [rbx+0x88],al
   0x7ffff7eb9c1d <__libc_ifunc_impl_list+10093>:	movzx  eax,al
   0x7ffff7eb9c20 <__libc_ifunc_impl_list+10096>:	mov    BYTE PTR [rbx+0xa0],al
   0x7ffff7eb9c26 <__libc_ifunc_impl_list+10102>:	lea    rax,[rip+0xb672e]        # 0x7ffff7f7035b
   0x7ffff7eb9c2d <__libc_ifunc_impl_list+10109>:	lea    rdi,[rip+0xbb7bc]        # 0x7ffff7f753f0
   0x7ffff7eb9c34 <__libc_ifunc_impl_list+10116>:	mov    QWORD PTR [rbx+0xa8],rax
   0x7ffff7eb9c3b <__libc_ifunc_impl_list+10123>:	lea    rax,[rip+0x8a24e]        # 0x7ffff7f43e90
   0x7ffff7eb9c42 <__libc_ifunc_impl_list+10130>:	mov    QWORD PTR [rbx+0xb0],rax
   0x7ffff7eb9c49 <__libc_ifunc_impl_list+10137>:	lea    rax,[rip+0xb6724]        # 0x7ffff7f70374
   0x7ffff7eb9c50 <__libc_ifunc_impl_list+10144>:	mov    QWORD PTR [rbx+0xc0],rax
   0x7ffff7eb9c57 <__libc_ifunc_impl_list+10151>:	lea    rax,[rip+0x8a2a2]        # 0x7ffff7f43f00
   0x7ffff7eb9c5e <__libc_ifunc_impl_list+10158>:	mov    QWORD PTR [rbx+0xc8],rax
   0x7ffff7eb9c65 <__libc_ifunc_impl_list+10165>:	mov    eax,edx
   0x7ffff7eb9c67 <__libc_ifunc_impl_list+10167>:	shr    eax,0x9
   0x7ffff7eb9c6a <__libc_ifunc_impl_list+10170>:	mov    BYTE PTR [rbx+0xb8],cl
   0x7ffff7eb9c70 <__libc_ifunc_impl_list+10176>:	and    eax,0x1
   0x7ffff7eb9c73 <__libc_ifunc_impl_list+10179>:	mov    BYTE PTR [rbx+0xd0],cl
   0x7ffff7eb9c79 <__libc_ifunc_impl_list+10185>:	lea    rcx,[rip+0xb6712]        # 0x7ffff7f70392
   0x7ffff7eb9c80 <__libc_ifunc_impl_list+10192>:	mov    BYTE PTR [rbx+0xe8],al
   0x7ffff7eb9c86 <__libc_ifunc_impl_list+10198>:	mov    BYTE PTR [rbx+0x100],al
   0x7ffff7eb9c8c <__libc_ifunc_impl_list+10204>:	lea    rax,[rip+0xb6724]        # 0x7ffff7f703b7
   0x7ffff7eb9c93 <__libc_ifunc_impl_list+10211>:	mov    QWORD PTR [rbx+0x108],rax
   0x7ffff7eb9c9a <__libc_ifunc_impl_list+10218>:	lea    rax,[rip+0xfffffffffff9fc2f]        # 0x7ffff7e598d0
   0x7ffff7eb9ca1 <__libc_ifunc_impl_list+10225>:	mov    QWORD PTR [rbx+0x110],rax
   0x7ffff7eb9ca8 <__libc_ifunc_impl_list+10232>:	lea    rax,[rip+0xb6721]        # 0x7ffff7f703d0
   0x7ffff7eb9caf <__libc_ifunc_impl_list+10239>:	mov    QWORD PTR [rbx+0x120],rax
   0x7ffff7eb9cb6 <__libc_ifunc_impl_list+10246>:	lea    rax,[rip+0xfffffffffff9fcf3]        # 0x7ffff7e599b0
   0x7ffff7eb9cbd <__libc_ifunc_impl_list+10253>:	mov    QWORD PTR [rbx+0x90],rdi
   0x7ffff7eb9cc4 <__libc_ifunc_impl_list+10260>:	lea    rdi,[rip+0x830b5]        # 0x7ffff7f3cd80
   0x7ffff7eb9ccb <__libc_ifunc_impl_list+10267>:	mov    QWORD PTR [rbx+0xd8],rcx
   0x7ffff7eb9cd2 <__libc_ifunc_impl_list+10274>:	lea    rcx,[rip+0x5b637]        # 0x7ffff7f15310
   0x7ffff7eb9cd9 <__libc_ifunc_impl_list+10281>:	mov    QWORD PTR [rbx+0x128],rax
   0x7ffff7eb9ce0 <__libc_ifunc_impl_list+10288>:	lea    rax,[rip+0xb6707]        # 0x7ffff7f703ee
   0x7ffff7eb9ce7 <__libc_ifunc_impl_list+10295>:	mov    QWORD PTR [rbx+0x98],rdi
   0x7ffff7eb9cee <__libc_ifunc_impl_list+10302>:	lea    rdi,[rip+0xb66b2]        # 0x7ffff7f703a7
   0x7ffff7eb9cf5 <__libc_ifunc_impl_list+10309>:	mov    QWORD PTR [rbx+0xe0],rcx
   0x7ffff7eb9cfc <__libc_ifunc_impl_list+10316>:	lea    rcx,[rip+0x5607d]        # 0x7ffff7f0fd80
   0x7ffff7eb9d03 <__libc_ifunc_impl_list+10323>:	mov    QWORD PTR [rbx+0x138],rax
   0x7ffff7eb9d0a <__libc_ifunc_impl_list+10330>:	lea    rax,[rip+0xfffffffffff9fc1f]        # 0x7ffff7e59930
   0x7ffff7eb9d11 <__libc_ifunc_impl_list+10337>:	mov    QWORD PTR [rbx+0x140],rax
   0x7ffff7eb9d18 <__libc_ifunc_impl_list+10344>:	mov    eax,0xe
   0x7ffff7eb9d1d <__libc_ifunc_impl_list+10349>:	and    BYTE PTR [rbx+0xa0],0x1
   0x7ffff7eb9d24 <__libc_ifunc_impl_list+10356>:	mov    QWORD PTR [rbx+0xf0],rdi
   0x7ffff7eb9d2b <__libc_ifunc_impl_list+10363>:	mov    QWORD PTR [rbx+0xf8],rcx
   0x7ffff7eb9d32 <__libc_ifunc_impl_list+10370>:	mov    BYTE PTR [rbx+0x118],0x1
   0x7ffff7eb9d39 <__libc_ifunc_impl_list+10377>:	mov    BYTE PTR [rbx+0x130],0x1
   0x7ffff7eb9d40 <__libc_ifunc_impl_list+10384>:	mov    BYTE PTR [rbx+0x148],0x1
   0x7ffff7eb9d47 <__libc_ifunc_impl_list+10391>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb9d4c <__libc_ifunc_impl_list+10396>:	mov    rdi,QWORD PTR [rip+0xf4175]        # 0x7ffff7fadec8
   0x7ffff7eb9d53 <__libc_ifunc_impl_list+10403>:	lea    rdx,[rip+0xbb526]        # 0x7ffff7f75280
   0x7ffff7eb9d5a <__libc_ifunc_impl_list+10410>:	lea    r10,[rip+0xb64f0]        # 0x7ffff7f70251
   0x7ffff7eb9d61 <__libc_ifunc_impl_list+10417>:	mov    QWORD PTR [rbx],rdx
   0x7ffff7eb9d64 <__libc_ifunc_impl_list+10420>:	lea    rdx,[rip+0x7f055]        # 0x7ffff7f38dc0
   0x7ffff7eb9d6b <__libc_ifunc_impl_list+10427>:	lea    r11,[rip+0x7bb0e]        # 0x7ffff7f35880
   0x7ffff7eb9d72 <__libc_ifunc_impl_list+10434>:	mov    esi,DWORD PTR [rdi+0xb8]
   0x7ffff7eb9d78 <__libc_ifunc_impl_list+10440>:	mov    QWORD PTR [rbx+0x8],rdx
   0x7ffff7eb9d7c <__libc_ifunc_impl_list+10444>:	lea    r8,[rip+0xbb56d]        # 0x7ffff7f752f0
   0x7ffff7eb9d83 <__libc_ifunc_impl_list+10451>:	lea    r9,[rip+0x7bb66]        # 0x7ffff7f358f0
   0x7ffff7eb9d8a <__libc_ifunc_impl_list+10458>:	mov    QWORD PTR [rbx+0x48],r10
   0x7ffff7eb9d8e <__libc_ifunc_impl_list+10462>:	mov    edx,esi
   0x7ffff7eb9d90 <__libc_ifunc_impl_list+10464>:	mov    ecx,esi
   0x7ffff7eb9d92 <__libc_ifunc_impl_list+10466>:	mov    QWORD PTR [rbx+0x50],r11
   0x7ffff7eb9d96 <__libc_ifunc_impl_list+10470>:	shr    edx,0x10
   0x7ffff7eb9d99 <__libc_ifunc_impl_list+10473>:	shr    ecx,0x1f
   0x7ffff7eb9d9c <__libc_ifunc_impl_list+10476>:	mov    QWORD PTR [rbx+0x60],r8
   0x7ffff7eb9da0 <__libc_ifunc_impl_list+10480>:	and    edx,0x1
   0x7ffff7eb9da3 <__libc_ifunc_impl_list+10483>:	mov    BYTE PTR [rbx+0x28],cl
   0x7ffff7eb9da6 <__libc_ifunc_impl_list+10486>:	mov    BYTE PTR [rbx+0x10],dl
   0x7ffff7eb9da9 <__libc_ifunc_impl_list+10489>:	lea    rdx,[rip+0xbb4f8]        # 0x7ffff7f752a8
   0x7ffff7eb9db0 <__libc_ifunc_impl_list+10496>:	mov    QWORD PTR [rbx+0x18],rdx
   0x7ffff7eb9db4 <__libc_ifunc_impl_list+10500>:	lea    rdx,[rip+0x81ac5]        # 0x7ffff7f3b880
   0x7ffff7eb9dbb <__libc_ifunc_impl_list+10507>:	mov    QWORD PTR [rbx+0x20],rdx
   0x7ffff7eb9dbf <__libc_ifunc_impl_list+10511>:	lea    rdx,[rip+0xbb502]        # 0x7ffff7f752c8
   0x7ffff7eb9dc6 <__libc_ifunc_impl_list+10518>:	mov    QWORD PTR [rbx+0x30],rdx
   0x7ffff7eb9dca <__libc_ifunc_impl_list+10522>:	lea    rdx,[rip+0x81b1f]        # 0x7ffff7f3b8f0
   0x7ffff7eb9dd1 <__libc_ifunc_impl_list+10529>:	mov    QWORD PTR [rbx+0x38],rdx
   0x7ffff7eb9dd5 <__libc_ifunc_impl_list+10533>:	mov    edx,DWORD PTR [rdi+0x9c]
   0x7ffff7eb9ddb <__libc_ifunc_impl_list+10539>:	mov    BYTE PTR [rbx+0x40],cl
   0x7ffff7eb9dde <__libc_ifunc_impl_list+10542>:	test   edx,0x10000000
   0x7ffff7eb9de4 <__libc_ifunc_impl_list+10548>:	mov    QWORD PTR [rbx+0x68],r9
   0x7ffff7eb9de8 <__libc_ifunc_impl_list+10552>:	setne  dil
   0x7ffff7eb9dec <__libc_ifunc_impl_list+10556>:	mov    BYTE PTR [rbx+0x58],dil
   0x7ffff7eb9df0 <__libc_ifunc_impl_list+10560>:	mov    BYTE PTR [rbx+0x70],dil
   0x7ffff7eb9df4 <__libc_ifunc_impl_list+10564>:	je     0x7ffff7eb9f76 <__libc_ifunc_impl_list+10950>
   0x7ffff7eb9dfa <__libc_ifunc_impl_list+10570>:	lea    rax,[rip+0xbb517]        # 0x7ffff7f75318
   0x7ffff7eb9e01 <__libc_ifunc_impl_list+10577>:	and    esi,0x800
   0x7ffff7eb9e07 <__libc_ifunc_impl_list+10583>:	mov    QWORD PTR [rbx+0x78],rax
   0x7ffff7eb9e0b <__libc_ifunc_impl_list+10587>:	lea    rax,[rip+0x82eee]        # 0x7ffff7f3cd00
   0x7ffff7eb9e12 <__libc_ifunc_impl_list+10594>:	mov    QWORD PTR [rbx+0x80],rax
   0x7ffff7eb9e19 <__libc_ifunc_impl_list+10601>:	setne  al
   0x7ffff7eb9e1c <__libc_ifunc_impl_list+10604>:	mov    BYTE PTR [rbx+0x88],al
   0x7ffff7eb9e22 <__libc_ifunc_impl_list+10610>:	movzx  eax,al
   0x7ffff7eb9e25 <__libc_ifunc_impl_list+10613>:	mov    BYTE PTR [rbx+0xa0],al
   0x7ffff7eb9e2b <__libc_ifunc_impl_list+10619>:	lea    rax,[rip+0xb643b]        # 0x7ffff7f7026d
   0x7ffff7eb9e32 <__libc_ifunc_impl_list+10626>:	lea    rdi,[rip+0xbb4ff]        # 0x7ffff7f75338
   0x7ffff7eb9e39 <__libc_ifunc_impl_list+10633>:	mov    QWORD PTR [rbx+0xa8],rax
   0x7ffff7eb9e40 <__libc_ifunc_impl_list+10640>:	lea    rax,[rip+0x8a039]        # 0x7ffff7f43e80
   0x7ffff7eb9e47 <__libc_ifunc_impl_list+10647>:	mov    QWORD PTR [rbx+0xb0],rax
   0x7ffff7eb9e4e <__libc_ifunc_impl_list+10654>:	lea    rax,[rip+0xbb50b]        # 0x7ffff7f75360
   0x7ffff7eb9e55 <__libc_ifunc_impl_list+10661>:	mov    QWORD PTR [rbx+0xc0],rax
   0x7ffff7eb9e5c <__libc_ifunc_impl_list+10668>:	lea    rax,[rip+0x8a08d]        # 0x7ffff7f43ef0
   0x7ffff7eb9e63 <__libc_ifunc_impl_list+10675>:	mov    QWORD PTR [rbx+0xc8],rax
   0x7ffff7eb9e6a <__libc_ifunc_impl_list+10682>:	mov    eax,edx
   0x7ffff7eb9e6c <__libc_ifunc_impl_list+10684>:	lea    rdx,[rip+0x55efd]        # 0x7ffff7f0fd70
   0x7ffff7eb9e73 <__libc_ifunc_impl_list+10691>:	shr    eax,0x9
   0x7ffff7eb9e76 <__libc_ifunc_impl_list+10694>:	mov    BYTE PTR [rbx+0xb8],cl
   0x7ffff7eb9e7c <__libc_ifunc_impl_list+10700>:	and    eax,0x1
   0x7ffff7eb9e7f <__libc_ifunc_impl_list+10703>:	mov    BYTE PTR [rbx+0xd0],cl
   0x7ffff7eb9e85 <__libc_ifunc_impl_list+10709>:	lea    rcx,[rip+0xb63fe]        # 0x7ffff7f7028a
   0x7ffff7eb9e8c <__libc_ifunc_impl_list+10716>:	mov    BYTE PTR [rbx+0xe8],al
   0x7ffff7eb9e92 <__libc_ifunc_impl_list+10722>:	mov    BYTE PTR [rbx+0x100],al
   0x7ffff7eb9e98 <__libc_ifunc_impl_list+10728>:	lea    rax,[rip+0xb6418]        # 0x7ffff7f702b7
   0x7ffff7eb9e9f <__libc_ifunc_impl_list+10735>:	mov    QWORD PTR [rbx+0x108],rax
   0x7ffff7eb9ea6 <__libc_ifunc_impl_list+10742>:	lea    rax,[rip+0xfffffffffff9fa13]        # 0x7ffff7e598c0
   0x7ffff7eb9ead <__libc_ifunc_impl_list+10749>:	mov    QWORD PTR [rbx+0x110],rax
   0x7ffff7eb9eb4 <__libc_ifunc_impl_list+10756>:	lea    rax,[rip+0xbb4cd]        # 0x7ffff7f75388
   0x7ffff7eb9ebb <__libc_ifunc_impl_list+10763>:	mov    QWORD PTR [rbx+0x120],rax
   0x7ffff7eb9ec2 <__libc_ifunc_impl_list+10770>:	lea    rax,[rip+0xfffffffffff9fad7]        # 0x7ffff7e599a0
   0x7ffff7eb9ec9 <__libc_ifunc_impl_list+10777>:	mov    QWORD PTR [rbx+0xd8],rcx
   0x7ffff7eb9ed0 <__libc_ifunc_impl_list+10784>:	lea    rcx,[rip+0x5b429]        # 0x7ffff7f15300
   0x7ffff7eb9ed7 <__libc_ifunc_impl_list+10791>:	mov    QWORD PTR [rbx+0x128],rax
   0x7ffff7eb9ede <__libc_ifunc_impl_list+10798>:	lea    rax,[rip+0xb63ef]        # 0x7ffff7f702d4
   0x7ffff7eb9ee5 <__libc_ifunc_impl_list+10805>:	mov    QWORD PTR [rbx+0x90],rdi
   0x7ffff7eb9eec <__libc_ifunc_impl_list+10812>:	lea    rdi,[rip+0x82e7d]        # 0x7ffff7f3cd70
   0x7ffff7eb9ef3 <__libc_ifunc_impl_list+10819>:	mov    QWORD PTR [rbx+0xe0],rcx
   0x7ffff7eb9efa <__libc_ifunc_impl_list+10826>:	lea    rcx,[rip+0xb63a2]        # 0x7ffff7f702a3
   0x7ffff7eb9f01 <__libc_ifunc_impl_list+10833>:	mov    QWORD PTR [rbx+0x138],rax
   0x7ffff7eb9f08 <__libc_ifunc_impl_list+10840>:	lea    rax,[rip+0xfffffffffff9fa11]        # 0x7ffff7e59920
   0x7ffff7eb9f0f <__libc_ifunc_impl_list+10847>:	mov    QWORD PTR [rbx+0x140],rax
   0x7ffff7eb9f16 <__libc_ifunc_impl_list+10854>:	mov    eax,0xe
   0x7ffff7eb9f1b <__libc_ifunc_impl_list+10859>:	and    BYTE PTR [rbx+0xa0],0x1
   0x7ffff7eb9f22 <__libc_ifunc_impl_list+10866>:	mov    QWORD PTR [rbx+0x98],rdi
   0x7ffff7eb9f29 <__libc_ifunc_impl_list+10873>:	mov    QWORD PTR [rbx+0xf0],rcx
   0x7ffff7eb9f30 <__libc_ifunc_impl_list+10880>:	mov    QWORD PTR [rbx+0xf8],rdx
   0x7ffff7eb9f37 <__libc_ifunc_impl_list+10887>:	mov    BYTE PTR [rbx+0x118],0x1
   0x7ffff7eb9f3e <__libc_ifunc_impl_list+10894>:	mov    BYTE PTR [rbx+0x130],0x1
   0x7ffff7eb9f45 <__libc_ifunc_impl_list+10901>:	mov    BYTE PTR [rbx+0x148],0x1
   0x7ffff7eb9f4c <__libc_ifunc_impl_list+10908>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eb9f51 <__libc_ifunc_impl_list+10913>:	lea    rdi,[rip+0xb63e7]        # 0x7ffff7f7033f
   0x7ffff7eb9f58 <__libc_ifunc_impl_list+10920>:	mov    BYTE PTR [rbx+0x88],0x0
   0x7ffff7eb9f5f <__libc_ifunc_impl_list+10927>:	mov    QWORD PTR [rbx+0x78],rdi
   0x7ffff7eb9f63 <__libc_ifunc_impl_list+10931>:	lea    rdi,[rip+0x82da6]        # 0x7ffff7f3cd10
   0x7ffff7eb9f6a <__libc_ifunc_impl_list+10938>:	mov    QWORD PTR [rbx+0x80],rdi
   0x7ffff7eb9f71 <__libc_ifunc_impl_list+10945>:	jmp    0x7ffff7eb9c20 <__libc_ifunc_impl_list+10096>
   0x7ffff7eb9f76 <__libc_ifunc_impl_list+10950>:	lea    rdi,[rip+0xbb39b]        # 0x7ffff7f75318
   0x7ffff7eb9f7d <__libc_ifunc_impl_list+10957>:	mov    BYTE PTR [rbx+0x88],0x0
   0x7ffff7eb9f84 <__libc_ifunc_impl_list+10964>:	mov    QWORD PTR [rbx+0x78],rdi
   0x7ffff7eb9f88 <__libc_ifunc_impl_list+10968>:	lea    rdi,[rip+0x82d71]        # 0x7ffff7f3cd00
   0x7ffff7eb9f8f <__libc_ifunc_impl_list+10975>:	mov    QWORD PTR [rbx+0x80],rdi
   0x7ffff7eb9f96 <__libc_ifunc_impl_list+10982>:	jmp    0x7ffff7eb9e25 <__libc_ifunc_impl_list+10613>
   0x7ffff7eb9f9b <__libc_ifunc_impl_list+10987>:	mov    rdx,QWORD PTR [rip+0xf3f26]        # 0x7ffff7fadec8
   0x7ffff7eb9fa2 <__libc_ifunc_impl_list+10994>:	lea    rdi,[rip+0xb6179]        # 0x7ffff7f70122
   0x7ffff7eb9fa9 <__libc_ifunc_impl_list+11001>:	mov    QWORD PTR [rbx],rdi
   0x7ffff7eb9fac <__libc_ifunc_impl_list+11004>:	lea    rdi,[rip+0x7b8fd]        # 0x7ffff7f358b0
   0x7ffff7eb9fb3 <__libc_ifunc_impl_list+11011>:	mov    ecx,DWORD PTR [rdx+0x9c]
   0x7ffff7eb9fb9 <__libc_ifunc_impl_list+11017>:	mov    edx,DWORD PTR [rdx+0xb8]
   0x7ffff7eb9fbf <__libc_ifunc_impl_list+11023>:	mov    QWORD PTR [rbx+0x8],rdi
   0x7ffff7eb9fc3 <__libc_ifunc_impl_list+11027>:	lea    rdi,[rip+0xb616f]        # 0x7ffff7f70139
   0x7ffff7eb9fca <__libc_ifunc_impl_list+11034>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eb9fce <__libc_ifunc_impl_list+11038>:	lea    rdi,[rip+0x7b96b]        # 0x7ffff7f35940
   0x7ffff7eb9fd5 <__libc_ifunc_impl_list+11045>:	test   ecx,0x10000000
   0x7ffff7eb9fdb <__libc_ifunc_impl_list+11051>:	mov    QWORD PTR [rbx+0x20],rdi
   0x7ffff7eb9fdf <__libc_ifunc_impl_list+11055>:	setne  sil
   0x7ffff7eb9fe3 <__libc_ifunc_impl_list+11059>:	mov    BYTE PTR [rbx+0x10],sil
   0x7ffff7eb9fe7 <__libc_ifunc_impl_list+11063>:	mov    BYTE PTR [rbx+0x28],sil
   0x7ffff7eb9feb <__libc_ifunc_impl_list+11067>:	je     0x7ffff7eba3a3 <__libc_ifunc_impl_list+12019>
   0x7ffff7eb9ff1 <__libc_ifunc_impl_list+11073>:	lea    rax,[rip+0xb615d]        # 0x7ffff7f70155
   0x7ffff7eb9ff8 <__libc_ifunc_impl_list+11080>:	test   dh,0x8
   0x7ffff7eb9ffb <__libc_ifunc_impl_list+11083>:	mov    QWORD PTR [rbx+0x30],rax
   0x7ffff7eb9fff <__libc_ifunc_impl_list+11087>:	lea    rax,[rip+0x82d2a]        # 0x7ffff7f3cd30
   0x7ffff7eba006 <__libc_ifunc_impl_list+11094>:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7eba00a <__libc_ifunc_impl_list+11098>:	setne  al
   0x7ffff7eba00d <__libc_ifunc_impl_list+11101>:	mov    BYTE PTR [rbx+0x40],al
   0x7ffff7eba010 <__libc_ifunc_impl_list+11104>:	movzx  eax,al
   0x7ffff7eba013 <__libc_ifunc_impl_list+11107>:	mov    BYTE PTR [rbx+0x58],al
   0x7ffff7eba016 <__libc_ifunc_impl_list+11110>:	lea    rax,[rip+0xb6153]        # 0x7ffff7f70170
   0x7ffff7eba01d <__libc_ifunc_impl_list+11117>:	lea    rdi,[rip+0xbb21c]        # 0x7ffff7f75240
   0x7ffff7eba024 <__libc_ifunc_impl_list+11124>:	mov    esi,edx
   0x7ffff7eba026 <__libc_ifunc_impl_list+11126>:	mov    QWORD PTR [rbx+0x60],rax
   0x7ffff7eba02a <__libc_ifunc_impl_list+11130>:	lea    rax,[rip+0x89e7f]        # 0x7ffff7f43eb0
   0x7ffff7eba031 <__libc_ifunc_impl_list+11137>:	shr    esi,0x1f
   0x7ffff7eba034 <__libc_ifunc_impl_list+11140>:	mov    QWORD PTR [rbx+0x68],rax
   0x7ffff7eba038 <__libc_ifunc_impl_list+11144>:	lea    rax,[rip+0xb6149]        # 0x7ffff7f70188
   0x7ffff7eba03f <__libc_ifunc_impl_list+11151>:	mov    QWORD PTR [rbx+0x78],rax
   0x7ffff7eba043 <__libc_ifunc_impl_list+11155>:	lea    rax,[rip+0x89ef6]        # 0x7ffff7f43f40
   0x7ffff7eba04a <__libc_ifunc_impl_list+11162>:	mov    QWORD PTR [rbx+0x80],rax
   0x7ffff7eba051 <__libc_ifunc_impl_list+11169>:	mov    eax,ecx
   0x7ffff7eba053 <__libc_ifunc_impl_list+11171>:	lea    rcx,[rip+0xb614b]        # 0x7ffff7f701a5
   0x7ffff7eba05a <__libc_ifunc_impl_list+11178>:	shr    eax,0x9
   0x7ffff7eba05d <__libc_ifunc_impl_list+11181>:	mov    QWORD PTR [rbx+0x90],rcx
   0x7ffff7eba064 <__libc_ifunc_impl_list+11188>:	lea    rcx,[rip+0x5b2c5]        # 0x7ffff7f15330
   0x7ffff7eba06b <__libc_ifunc_impl_list+11195>:	and    eax,0x1
   0x7ffff7eba06e <__libc_ifunc_impl_list+11198>:	mov    QWORD PTR [rbx+0x98],rcx
   0x7ffff7eba075 <__libc_ifunc_impl_list+11205>:	lea    rcx,[rip+0xb613d]        # 0x7ffff7f701b9
   0x7ffff7eba07c <__libc_ifunc_impl_list+11212>:	mov    BYTE PTR [rbx+0xa0],al
   0x7ffff7eba082 <__libc_ifunc_impl_list+11218>:	mov    BYTE PTR [rbx+0xb8],al
   0x7ffff7eba088 <__libc_ifunc_impl_list+11224>:	lea    rax,[rip+0xb6139]        # 0x7ffff7f701c8
   0x7ffff7eba08f <__libc_ifunc_impl_list+11231>:	mov    QWORD PTR [rbx+0xc0],rax
   0x7ffff7eba096 <__libc_ifunc_impl_list+11238>:	lea    rax,[rip+0x7ed53]        # 0x7ffff7f38df0
   0x7ffff7eba09d <__libc_ifunc_impl_list+11245>:	mov    QWORD PTR [rbx+0xc8],rax
   0x7ffff7eba0a4 <__libc_ifunc_impl_list+11252>:	mov    eax,edx
   0x7ffff7eba0a6 <__libc_ifunc_impl_list+11254>:	shr    eax,0x10
   0x7ffff7eba0a9 <__libc_ifunc_impl_list+11257>:	mov    QWORD PTR [rbx+0x48],rdi
   0x7ffff7eba0ad <__libc_ifunc_impl_list+11261>:	lea    rdi,[rip+0x82d0c]        # 0x7ffff7f3cdc0
   0x7ffff7eba0b4 <__libc_ifunc_impl_list+11268>:	and    eax,0x1
   0x7ffff7eba0b7 <__libc_ifunc_impl_list+11271>:	mov    QWORD PTR [rbx+0xa8],rcx
   0x7ffff7eba0be <__libc_ifunc_impl_list+11278>:	lea    rcx,[rip+0x55cdb]        # 0x7ffff7f0fda0
   0x7ffff7eba0c5 <__libc_ifunc_impl_list+11285>:	mov    BYTE PTR [rbx+0xd0],al
   0x7ffff7eba0cb <__libc_ifunc_impl_list+11291>:	lea    rax,[rip+0xb6114]        # 0x7ffff7f701e6
   0x7ffff7eba0d2 <__libc_ifunc_impl_list+11298>:	mov    QWORD PTR [rbx+0xd8],rax
   0x7ffff7eba0d9 <__libc_ifunc_impl_list+11305>:	lea    rax,[rip+0x817d0]        # 0x7ffff7f3b8b0
   0x7ffff7eba0e0 <__libc_ifunc_impl_list+11312>:	mov    QWORD PTR [rbx+0xe0],rax
   0x7ffff7eba0e7 <__libc_ifunc_impl_list+11319>:	lea    rax,[rip+0xbb172]        # 0x7ffff7f75260
   0x7ffff7eba0ee <__libc_ifunc_impl_list+11326>:	mov    QWORD PTR [rbx+0xf0],rax
   0x7ffff7eba0f5 <__libc_ifunc_impl_list+11333>:	lea    rax,[rip+0x81844]        # 0x7ffff7f3b940
   0x7ffff7eba0fc <__libc_ifunc_impl_list+11340>:	mov    QWORD PTR [rbx+0xf8],rax
   0x7ffff7eba103 <__libc_ifunc_impl_list+11347>:	lea    rax,[rip+0xb60f6]        # 0x7ffff7f70200
   0x7ffff7eba10a <__libc_ifunc_impl_list+11354>:	mov    QWORD PTR [rbx+0x108],rax
   0x7ffff7eba111 <__libc_ifunc_impl_list+11361>:	lea    rax,[rip+0xfffffffffff9f7d8]        # 0x7ffff7e598f0 <memcpy>
   0x7ffff7eba118 <__libc_ifunc_impl_list+11368>:	mov    QWORD PTR [rbx+0x110],rax
   0x7ffff7eba11f <__libc_ifunc_impl_list+11375>:	lea    rax,[rip+0xb60f2]        # 0x7ffff7f70218
   0x7ffff7eba126 <__libc_ifunc_impl_list+11382>:	mov    QWORD PTR [rbx+0x120],rax
   0x7ffff7eba12d <__libc_ifunc_impl_list+11389>:	lea    rax,[rip+0xfffffffffff9f8cc]        # 0x7ffff7e59a00
   0x7ffff7eba134 <__libc_ifunc_impl_list+11396>:	mov    QWORD PTR [rbx+0x128],rax
   0x7ffff7eba13b <__libc_ifunc_impl_list+11403>:	lea    rax,[rip+0xb60f3]        # 0x7ffff7f70235
   0x7ffff7eba142 <__libc_ifunc_impl_list+11410>:	and    BYTE PTR [rbx+0x58],0x1
   0x7ffff7eba146 <__libc_ifunc_impl_list+11414>:	mov    QWORD PTR [rbx+0x50],rdi
   0x7ffff7eba14a <__libc_ifunc_impl_list+11418>:	mov    BYTE PTR [rbx+0x70],sil
   0x7ffff7eba14e <__libc_ifunc_impl_list+11422>:	mov    BYTE PTR [rbx+0x88],sil
   0x7ffff7eba155 <__libc_ifunc_impl_list+11429>:	mov    QWORD PTR [rbx+0xb0],rcx
   0x7ffff7eba15c <__libc_ifunc_impl_list+11436>:	mov    BYTE PTR [rbx+0xe8],sil
   0x7ffff7eba163 <__libc_ifunc_impl_list+11443>:	mov    BYTE PTR [rbx+0x100],sil
   0x7ffff7eba16a <__libc_ifunc_impl_list+11450>:	mov    BYTE PTR [rbx+0x118],0x1
   0x7ffff7eba171 <__libc_ifunc_impl_list+11457>:	mov    BYTE PTR [rbx+0x130],0x1
   0x7ffff7eba178 <__libc_ifunc_impl_list+11464>:	mov    QWORD PTR [rbx+0x138],rax
   0x7ffff7eba17f <__libc_ifunc_impl_list+11471>:	lea    rax,[rip+0xfffffffffff9f7da]        # 0x7ffff7e59960
   0x7ffff7eba186 <__libc_ifunc_impl_list+11478>:	mov    QWORD PTR [rbx+0x140],rax
   0x7ffff7eba18d <__libc_ifunc_impl_list+11485>:	mov    eax,0xe
   0x7ffff7eba192 <__libc_ifunc_impl_list+11490>:	mov    BYTE PTR [rbx+0x148],0x1
   0x7ffff7eba199 <__libc_ifunc_impl_list+11497>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eba19e <__libc_ifunc_impl_list+11502>:	mov    rdi,QWORD PTR [rip+0xf3d23]        # 0x7ffff7fadec8
   0x7ffff7eba1a5 <__libc_ifunc_impl_list+11509>:	lea    rdx,[rip+0xbaf8c]        # 0x7ffff7f75138
   0x7ffff7eba1ac <__libc_ifunc_impl_list+11516>:	lea    rcx,[rip+0x7ec2d]        # 0x7ffff7f38de0
   0x7ffff7eba1b3 <__libc_ifunc_impl_list+11523>:	mov    QWORD PTR [rbx],rdx
   0x7ffff7eba1b6 <__libc_ifunc_impl_list+11526>:	lea    r10,[rip+0xb5ece]        # 0x7ffff7f7008b
   0x7ffff7eba1bd <__libc_ifunc_impl_list+11533>:	lea    r11,[rip+0x7b6dc]        # 0x7ffff7f358a0
   0x7ffff7eba1c4 <__libc_ifunc_impl_list+11540>:	mov    esi,DWORD PTR [rdi+0xb8]
   0x7ffff7eba1ca <__libc_ifunc_impl_list+11546>:	mov    QWORD PTR [rbx+0x8],rcx
   0x7ffff7eba1ce <__libc_ifunc_impl_list+11550>:	lea    r8,[rip+0xbafb3]        # 0x7ffff7f75188
   0x7ffff7eba1d5 <__libc_ifunc_impl_list+11557>:	lea    r9,[rip+0x7b734]        # 0x7ffff7f35910
   0x7ffff7eba1dc <__libc_ifunc_impl_list+11564>:	mov    QWORD PTR [rbx+0x48],r10
   0x7ffff7eba1e0 <__libc_ifunc_impl_list+11568>:	mov    edx,esi
   0x7ffff7eba1e2 <__libc_ifunc_impl_list+11570>:	mov    ecx,esi
   0x7ffff7eba1e4 <__libc_ifunc_impl_list+11572>:	mov    QWORD PTR [rbx+0x50],r11
   0x7ffff7eba1e8 <__libc_ifunc_impl_list+11576>:	shr    edx,0x10
   0x7ffff7eba1eb <__libc_ifunc_impl_list+11579>:	shr    ecx,0x1f
   0x7ffff7eba1ee <__libc_ifunc_impl_list+11582>:	mov    QWORD PTR [rbx+0x60],r8
   0x7ffff7eba1f2 <__libc_ifunc_impl_list+11586>:	and    edx,0x1
   0x7ffff7eba1f5 <__libc_ifunc_impl_list+11589>:	mov    BYTE PTR [rbx+0x28],cl
   0x7ffff7eba1f8 <__libc_ifunc_impl_list+11592>:	mov    BYTE PTR [rbx+0x10],dl
   0x7ffff7eba1fb <__libc_ifunc_impl_list+11595>:	lea    rdx,[rip+0xb5e6b]        # 0x7ffff7f7006d
   0x7ffff7eba202 <__libc_ifunc_impl_list+11602>:	mov    QWORD PTR [rbx+0x18],rdx
   0x7ffff7eba206 <__libc_ifunc_impl_list+11606>:	lea    rdx,[rip+0x81693]        # 0x7ffff7f3b8a0
   0x7ffff7eba20d <__libc_ifunc_impl_list+11613>:	mov    QWORD PTR [rbx+0x20],rdx
   0x7ffff7eba211 <__libc_ifunc_impl_list+11617>:	lea    rdx,[rip+0xbaf48]        # 0x7ffff7f75160
   0x7ffff7eba218 <__libc_ifunc_impl_list+11624>:	mov    QWORD PTR [rbx+0x30],rdx
   0x7ffff7eba21c <__libc_ifunc_impl_list+11628>:	lea    rdx,[rip+0x816ed]        # 0x7ffff7f3b910
   0x7ffff7eba223 <__libc_ifunc_impl_list+11635>:	mov    QWORD PTR [rbx+0x38],rdx
   0x7ffff7eba227 <__libc_ifunc_impl_list+11639>:	mov    edx,DWORD PTR [rdi+0x9c]
   0x7ffff7eba22d <__libc_ifunc_impl_list+11645>:	mov    BYTE PTR [rbx+0x40],cl
   0x7ffff7eba230 <__libc_ifunc_impl_list+11648>:	test   edx,0x10000000
   0x7ffff7eba236 <__libc_ifunc_impl_list+11654>:	mov    QWORD PTR [rbx+0x68],r9
   0x7ffff7eba23a <__libc_ifunc_impl_list+11658>:	setne  dil
   0x7ffff7eba23e <__libc_ifunc_impl_list+11662>:	mov    BYTE PTR [rbx+0x58],dil
   0x7ffff7eba242 <__libc_ifunc_impl_list+11666>:	mov    BYTE PTR [rbx+0x70],dil
   0x7ffff7eba246 <__libc_ifunc_impl_list+11670>:	je     0x7ffff7eba3c2 <__libc_ifunc_impl_list+12050>
   0x7ffff7eba24c <__libc_ifunc_impl_list+11676>:	lea    rax,[rip+0xbaf55]        # 0x7ffff7f751a8
   0x7ffff7eba253 <__libc_ifunc_impl_list+11683>:	and    esi,0x800
   0x7ffff7eba259 <__libc_ifunc_impl_list+11689>:	mov    QWORD PTR [rbx+0x78],rax
   0x7ffff7eba25d <__libc_ifunc_impl_list+11693>:	lea    rax,[rip+0x82abc]        # 0x7ffff7f3cd20
   0x7ffff7eba264 <__libc_ifunc_impl_list+11700>:	mov    QWORD PTR [rbx+0x80],rax
   0x7ffff7eba26b <__libc_ifunc_impl_list+11707>:	setne  al
   0x7ffff7eba26e <__libc_ifunc_impl_list+11710>:	mov    BYTE PTR [rbx+0x88],al
   0x7ffff7eba274 <__libc_ifunc_impl_list+11716>:	movzx  eax,al
   0x7ffff7eba277 <__libc_ifunc_impl_list+11719>:	mov    BYTE PTR [rbx+0xa0],al
   0x7ffff7eba27d <__libc_ifunc_impl_list+11725>:	lea    rax,[rip+0xb5e22]        # 0x7ffff7f700a6
   0x7ffff7eba284 <__libc_ifunc_impl_list+11732>:	lea    rdi,[rip+0xbaf3d]        # 0x7ffff7f751c8
   0x7ffff7eba28b <__libc_ifunc_impl_list+11739>:	mov    QWORD PTR [rbx+0xa8],rax
   0x7ffff7eba292 <__libc_ifunc_impl_list+11746>:	lea    rax,[rip+0x89c07]        # 0x7ffff7f43ea0
   0x7ffff7eba299 <__libc_ifunc_impl_list+11753>:	mov    QWORD PTR [rbx+0xb0],rax
   0x7ffff7eba2a0 <__libc_ifunc_impl_list+11760>:	lea    rax,[rip+0xbaf49]        # 0x7ffff7f751f0
   0x7ffff7eba2a7 <__libc_ifunc_impl_list+11767>:	mov    QWORD PTR [rbx+0xc0],rax
   0x7ffff7eba2ae <__libc_ifunc_impl_list+11774>:	lea    rax,[rip+0x89c5b]        # 0x7ffff7f43f10
   0x7ffff7eba2b5 <__libc_ifunc_impl_list+11781>:	mov    QWORD PTR [rbx+0xc8],rax
   0x7ffff7eba2bc <__libc_ifunc_impl_list+11788>:	mov    eax,edx
   0x7ffff7eba2be <__libc_ifunc_impl_list+11790>:	shr    eax,0x9
   0x7ffff7eba2c1 <__libc_ifunc_impl_list+11793>:	mov    BYTE PTR [rbx+0xb8],cl
   0x7ffff7eba2c7 <__libc_ifunc_impl_list+11799>:	and    eax,0x1
   0x7ffff7eba2ca <__libc_ifunc_impl_list+11802>:	mov    BYTE PTR [rbx+0xd0],cl
   0x7ffff7eba2d0 <__libc_ifunc_impl_list+11808>:	lea    rcx,[rip+0xb5deb]        # 0x7ffff7f700c2
   0x7ffff7eba2d7 <__libc_ifunc_impl_list+11815>:	mov    BYTE PTR [rbx+0xe8],al
   0x7ffff7eba2dd <__libc_ifunc_impl_list+11821>:	mov    BYTE PTR [rbx+0x100],al
   0x7ffff7eba2e3 <__libc_ifunc_impl_list+11827>:	lea    rax,[rip+0xb5e03]        # 0x7ffff7f700ed
   0x7ffff7eba2ea <__libc_ifunc_impl_list+11834>:	mov    QWORD PTR [rbx+0x108],rax
   0x7ffff7eba2f1 <__libc_ifunc_impl_list+11841>:	lea    rax,[rip+0xfffffffffff9f5e8]        # 0x7ffff7e598e0
   0x7ffff7eba2f8 <__libc_ifunc_impl_list+11848>:	mov    QWORD PTR [rbx+0x110],rax
   0x7ffff7eba2ff <__libc_ifunc_impl_list+11855>:	lea    rax,[rip+0xbaf12]        # 0x7ffff7f75218
   0x7ffff7eba306 <__libc_ifunc_impl_list+11862>:	mov    QWORD PTR [rbx+0x120],rax
   0x7ffff7eba30d <__libc_ifunc_impl_list+11869>:	lea    rax,[rip+0xfffffffffff9f6ac]        # 0x7ffff7e599c0
   0x7ffff7eba314 <__libc_ifunc_impl_list+11876>:	mov    QWORD PTR [rbx+0x90],rdi
   0x7ffff7eba31b <__libc_ifunc_impl_list+11883>:	lea    rdi,[rip+0x82a6e]        # 0x7ffff7f3cd90
   0x7ffff7eba322 <__libc_ifunc_impl_list+11890>:	mov    QWORD PTR [rbx+0xd8],rcx
   0x7ffff7eba329 <__libc_ifunc_impl_list+11897>:	lea    rcx,[rip+0x5aff0]        # 0x7ffff7f15320
   0x7ffff7eba330 <__libc_ifunc_impl_list+11904>:	mov    QWORD PTR [rbx+0x128],rax
   0x7ffff7eba337 <__libc_ifunc_impl_list+11911>:	lea    rax,[rip+0xb5dcb]        # 0x7ffff7f70109
   0x7ffff7eba33e <__libc_ifunc_impl_list+11918>:	mov    QWORD PTR [rbx+0x98],rdi
   0x7ffff7eba345 <__libc_ifunc_impl_list+11925>:	lea    rdi,[rip+0xb5d8e]        # 0x7ffff7f700da
   0x7ffff7eba34c <__libc_ifunc_impl_list+11932>:	mov    QWORD PTR [rbx+0xe0],rcx
   0x7ffff7eba353 <__libc_ifunc_impl_list+11939>:	lea    rcx,[rip+0x55a36]        # 0x7ffff7f0fd90
   0x7ffff7eba35a <__libc_ifunc_impl_list+11946>:	mov    QWORD PTR [rbx+0x138],rax
   0x7ffff7eba361 <__libc_ifunc_impl_list+11953>:	lea    rax,[rip+0xfffffffffff9f5e8]        # 0x7ffff7e59950
   0x7ffff7eba368 <__libc_ifunc_impl_list+11960>:	mov    QWORD PTR [rbx+0x140],rax
   0x7ffff7eba36f <__libc_ifunc_impl_list+11967>:	mov    eax,0xe
   0x7ffff7eba374 <__libc_ifunc_impl_list+11972>:	and    BYTE PTR [rbx+0xa0],0x1
   0x7ffff7eba37b <__libc_ifunc_impl_list+11979>:	mov    QWORD PTR [rbx+0xf0],rdi
   0x7ffff7eba382 <__libc_ifunc_impl_list+11986>:	mov    QWORD PTR [rbx+0xf8],rcx
   0x7ffff7eba389 <__libc_ifunc_impl_list+11993>:	mov    BYTE PTR [rbx+0x118],0x1
   0x7ffff7eba390 <__libc_ifunc_impl_list+12000>:	mov    BYTE PTR [rbx+0x130],0x1
   0x7ffff7eba397 <__libc_ifunc_impl_list+12007>:	mov    BYTE PTR [rbx+0x148],0x1
   0x7ffff7eba39e <__libc_ifunc_impl_list+12014>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eba3a3 <__libc_ifunc_impl_list+12019>:	lea    rdi,[rip+0xb5dab]        # 0x7ffff7f70155
   0x7ffff7eba3aa <__libc_ifunc_impl_list+12026>:	mov    BYTE PTR [rbx+0x40],0x0
   0x7ffff7eba3ae <__libc_ifunc_impl_list+12030>:	mov    QWORD PTR [rbx+0x30],rdi
   0x7ffff7eba3b2 <__libc_ifunc_impl_list+12034>:	lea    rdi,[rip+0x82977]        # 0x7ffff7f3cd30
   0x7ffff7eba3b9 <__libc_ifunc_impl_list+12041>:	mov    QWORD PTR [rbx+0x38],rdi
   0x7ffff7eba3bd <__libc_ifunc_impl_list+12045>:	jmp    0x7ffff7eba013 <__libc_ifunc_impl_list+11107>
   0x7ffff7eba3c2 <__libc_ifunc_impl_list+12050>:	lea    rdi,[rip+0xbaddf]        # 0x7ffff7f751a8
   0x7ffff7eba3c9 <__libc_ifunc_impl_list+12057>:	mov    BYTE PTR [rbx+0x88],0x0
   0x7ffff7eba3d0 <__libc_ifunc_impl_list+12064>:	mov    QWORD PTR [rbx+0x78],rdi
   0x7ffff7eba3d4 <__libc_ifunc_impl_list+12068>:	lea    rdi,[rip+0x82945]        # 0x7ffff7f3cd20
   0x7ffff7eba3db <__libc_ifunc_impl_list+12075>:	mov    QWORD PTR [rbx+0x80],rdi
   0x7ffff7eba3e2 <__libc_ifunc_impl_list+12082>:	jmp    0x7ffff7eba277 <__libc_ifunc_impl_list+11719>
   0x7ffff7eba3e7 <__libc_ifunc_impl_list+12087>:	mov    rdx,QWORD PTR [rip+0xf3ada]        # 0x7ffff7fadec8
   0x7ffff7eba3ee <__libc_ifunc_impl_list+12094>:	lea    rcx,[rip+0xb5be8]        # 0x7ffff7f6ffdd
   0x7ffff7eba3f5 <__libc_ifunc_impl_list+12101>:	lea    rdi,[rip+0xfffffffffff9fbb4]        # 0x7ffff7e59fb0
   0x7ffff7eba3fc <__libc_ifunc_impl_list+12108>:	mov    BYTE PTR [rbx+0x10],0x1
   0x7ffff7eba400 <__libc_ifunc_impl_list+12112>:	mov    QWORD PTR [rbx],rcx
   0x7ffff7eba403 <__libc_ifunc_impl_list+12115>:	lea    rcx,[rip+0xb5bec]        # 0x7ffff7f6fff6
   0x7ffff7eba40a <__libc_ifunc_impl_list+12122>:	mov    edx,DWORD PTR [rdx+0xb8]
   0x7ffff7eba410 <__libc_ifunc_impl_list+12128>:	mov    QWORD PTR [rbx+0x18],rcx
   0x7ffff7eba414 <__libc_ifunc_impl_list+12132>:	mov    QWORD PTR [rbx+0x8],rdi
   0x7ffff7eba418 <__libc_ifunc_impl_list+12136>:	lea    rdi,[rip+0x7bc31]        # 0x7ffff7f36050
   0x7ffff7eba41f <__libc_ifunc_impl_list+12143>:	mov    ecx,edx
   0x7ffff7eba421 <__libc_ifunc_impl_list+12145>:	mov    QWORD PTR [rbx+0x20],rdi
   0x7ffff7eba425 <__libc_ifunc_impl_list+12149>:	lea    rdi,[rip+0x83424]        # 0x7ffff7f3d850
   0x7ffff7eba42c <__libc_ifunc_impl_list+12156>:	shr    ecx,0x5
   0x7ffff7eba42f <__libc_ifunc_impl_list+12159>:	mov    QWORD PTR [rbx+0x38],rdi
   0x7ffff7eba433 <__libc_ifunc_impl_list+12163>:	and    ecx,0x1
   0x7ffff7eba436 <__libc_ifunc_impl_list+12166>:	mov    BYTE PTR [rbx+0x28],cl
   0x7ffff7eba439 <__libc_ifunc_impl_list+12169>:	lea    rcx,[rip+0xb5bcf]        # 0x7ffff7f7000f
   0x7ffff7eba440 <__libc_ifunc_impl_list+12176>:	mov    QWORD PTR [rbx+0x30],rcx
   0x7ffff7eba444 <__libc_ifunc_impl_list+12180>:	mov    ecx,edx
   0x7ffff7eba446 <__libc_ifunc_impl_list+12182>:	and    ecx,0x820
   0x7ffff7eba44c <__libc_ifunc_impl_list+12188>:	cmp    ecx,0x820
   0x7ffff7eba452 <__libc_ifunc_impl_list+12194>:	sete   BYTE PTR [rbx+0x40]
   0x7ffff7eba456 <__libc_ifunc_impl_list+12198>:	test   edx,edx
   0x7ffff7eba458 <__libc_ifunc_impl_list+12200>:	js     0x7ffff7eba590 <__libc_ifunc_impl_list+12512>
   0x7ffff7eba45e <__libc_ifunc_impl_list+12206>:	lea    rdx,[rip+0xb5bc7]        # 0x7ffff7f7002c
   0x7ffff7eba465 <__libc_ifunc_impl_list+12213>:	lea    rcx,[rip+0x8a624]        # 0x7ffff7f44a90
   0x7ffff7eba46c <__libc_ifunc_impl_list+12220>:	mov    BYTE PTR [rbx+0x58],0x0
   0x7ffff7eba470 <__libc_ifunc_impl_list+12224>:	mov    QWORD PTR [rbx+0x48],rdx
   0x7ffff7eba474 <__libc_ifunc_impl_list+12228>:	mov    QWORD PTR [rbx+0x50],rcx
   0x7ffff7eba478 <__libc_ifunc_impl_list+12232>:	lea    rdx,[rip+0xb5bc6]        # 0x7ffff7f70045
   0x7ffff7eba47f <__libc_ifunc_impl_list+12239>:	mov    BYTE PTR [rbx+0x70],al
   0x7ffff7eba482 <__libc_ifunc_impl_list+12242>:	mov    eax,0x5
   0x7ffff7eba487 <__libc_ifunc_impl_list+12247>:	mov    QWORD PTR [rbx+0x60],rdx
   0x7ffff7eba48b <__libc_ifunc_impl_list+12251>:	lea    rdx,[rip+0x81c7e]        # 0x7ffff7f3c110
   0x7ffff7eba492 <__libc_ifunc_impl_list+12258>:	and    BYTE PTR [rbx+0x70],0x1
   0x7ffff7eba496 <__libc_ifunc_impl_list+12262>:	mov    QWORD PTR [rbx+0x68],rdx
   0x7ffff7eba49a <__libc_ifunc_impl_list+12266>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eba49f <__libc_ifunc_impl_list+12271>:	mov    rax,QWORD PTR [rip+0xf3a22]        # 0x7ffff7fadec8
   0x7ffff7eba4a6 <__libc_ifunc_impl_list+12278>:	mov    ecx,DWORD PTR [rax+0xb8]
   0x7ffff7eba4ac <__libc_ifunc_impl_list+12284>:	mov    eax,DWORD PTR [rax+0x9c]
   0x7ffff7eba4b2 <__libc_ifunc_impl_list+12290>:	mov    esi,ecx
   0x7ffff7eba4b4 <__libc_ifunc_impl_list+12292>:	and    esi,0x120
   0x7ffff7eba4ba <__libc_ifunc_impl_list+12298>:	cmp    esi,0x120
   0x7ffff7eba4c0 <__libc_ifunc_impl_list+12304>:	je     0x7ffff7eba5df <__libc_ifunc_impl_list+12591>
   0x7ffff7eba4c6 <__libc_ifunc_impl_list+12310>:	xor    esi,esi
   0x7ffff7eba4c8 <__libc_ifunc_impl_list+12312>:	xor    edi,edi
   0x7ffff7eba4ca <__libc_ifunc_impl_list+12314>:	mov    BYTE PTR [rbx+0x10],dil
   0x7ffff7eba4ce <__libc_ifunc_impl_list+12318>:	lea    rdi,[rip+0xb5aa2]        # 0x7ffff7f6ff77
   0x7ffff7eba4d5 <__libc_ifunc_impl_list+12325>:	lea    r8,[rip+0xb5a86]        # 0x7ffff7f6ff62
   0x7ffff7eba4dc <__libc_ifunc_impl_list+12332>:	mov    QWORD PTR [rbx+0x18],rdi
   0x7ffff7eba4e0 <__libc_ifunc_impl_list+12336>:	lea    r9,[rip+0x7bd59]        # 0x7ffff7f36240
   0x7ffff7eba4e7 <__libc_ifunc_impl_list+12343>:	lea    rdi,[rip+0x88d72]        # 0x7ffff7f43260
   0x7ffff7eba4ee <__libc_ifunc_impl_list+12350>:	mov    BYTE PTR [rbx+0x28],sil
   0x7ffff7eba4f2 <__libc_ifunc_impl_list+12354>:	mov    QWORD PTR [rbx],r8
   0x7ffff7eba4f5 <__libc_ifunc_impl_list+12357>:	and    BYTE PTR [rbx+0x28],0x1
   0x7ffff7eba4f9 <__libc_ifunc_impl_list+12361>:	mov    QWORD PTR [rbx+0x8],r9
   0x7ffff7eba4fd <__libc_ifunc_impl_list+12365>:	mov    QWORD PTR [rbx+0x20],rdi
   0x7ffff7eba501 <__libc_ifunc_impl_list+12369>:	test   ecx,ecx
   0x7ffff7eba503 <__libc_ifunc_impl_list+12371>:	js     0x7ffff7eba5c0 <__libc_ifunc_impl_list+12560>
   0x7ffff7eba509 <__libc_ifunc_impl_list+12377>:	mov    BYTE PTR [rbx+0x40],dl
   0x7ffff7eba50c <__libc_ifunc_impl_list+12380>:	lea    rdx,[rip+0xb5a92]        # 0x7ffff7f6ffa5
   0x7ffff7eba513 <__libc_ifunc_impl_list+12387>:	lea    rcx,[rip+0xb5a76]        # 0x7ffff7f6ff90
   0x7ffff7eba51a <__libc_ifunc_impl_list+12394>:	mov    QWORD PTR [rbx+0x48],rdx
   0x7ffff7eba51e <__libc_ifunc_impl_list+12398>:	lea    rdx,[rip+0x7e02b]        # 0x7ffff7f38550
   0x7ffff7eba525 <__libc_ifunc_impl_list+12405>:	lea    rdi,[rip+0xb5a8a]        # 0x7ffff7f6ffb6
   0x7ffff7eba52c <__libc_ifunc_impl_list+12412>:	mov    QWORD PTR [rbx+0x50],rdx
   0x7ffff7eba530 <__libc_ifunc_impl_list+12416>:	mov    edx,eax
   0x7ffff7eba532 <__libc_ifunc_impl_list+12418>:	shr    eax,0x9
   0x7ffff7eba535 <__libc_ifunc_impl_list+12421>:	and    eax,0x1
   0x7ffff7eba538 <__libc_ifunc_impl_list+12424>:	shr    edx,0x13
   0x7ffff7eba53b <__libc_ifunc_impl_list+12427>:	mov    QWORD PTR [rbx+0x30],rcx
   0x7ffff7eba53f <__libc_ifunc_impl_list+12431>:	lea    rcx,[rip+0x904ba]        # 0x7ffff7f4aa00
   0x7ffff7eba546 <__libc_ifunc_impl_list+12438>:	and    edx,0x1
   0x7ffff7eba549 <__libc_ifunc_impl_list+12441>:	mov    BYTE PTR [rbx+0x70],al
   0x7ffff7eba54c <__libc_ifunc_impl_list+12444>:	lea    rax,[rip+0xb5a73]        # 0x7ffff7f6ffc6
   0x7ffff7eba553 <__libc_ifunc_impl_list+12451>:	mov    BYTE PTR [rbx+0x58],dl
   0x7ffff7eba556 <__libc_ifunc_impl_list+12454>:	lea    rdx,[rip+0x80cf3]        # 0x7ffff7f3b250
   0x7ffff7eba55d <__libc_ifunc_impl_list+12461>:	mov    QWORD PTR [rbx+0x78],rax
   0x7ffff7eba561 <__libc_ifunc_impl_list+12465>:	lea    rax,[rip+0xfffffffffffb1578]        # 0x7ffff7e6bae0
   0x7ffff7eba568 <__libc_ifunc_impl_list+12472>:	mov    QWORD PTR [rbx+0x80],rax
   0x7ffff7eba56f <__libc_ifunc_impl_list+12479>:	mov    eax,0x6
   0x7ffff7eba574 <__libc_ifunc_impl_list+12484>:	and    BYTE PTR [rbx+0x40],0x1
   0x7ffff7eba578 <__libc_ifunc_impl_list+12488>:	mov    QWORD PTR [rbx+0x38],rcx
   0x7ffff7eba57c <__libc_ifunc_impl_list+12492>:	mov    QWORD PTR [rbx+0x60],rdi
   0x7ffff7eba580 <__libc_ifunc_impl_list+12496>:	mov    QWORD PTR [rbx+0x68],rdx
   0x7ffff7eba584 <__libc_ifunc_impl_list+12500>:	mov    BYTE PTR [rbx+0x88],0x1
   0x7ffff7eba58b <__libc_ifunc_impl_list+12507>:	jmp    0x7ffff7eb7a1e <__libc_ifunc_impl_list+1390>
   0x7ffff7eba590 <__libc_ifunc_impl_list+12512>:	lea    rax,[rip+0xb5a95]        # 0x7ffff7f7002c
   0x7ffff7eba597 <__libc_ifunc_impl_list+12519>:	and    edx,0x40000100
   0x7ffff7eba59d <__libc_ifunc_impl_list+12525>:	mov    QWORD PTR [rbx+0x48],rax
   0x7ffff7eba5a1 <__libc_ifunc_impl_list+12529>:	cmp    edx,0x40000100
   0x7ffff7eba5a7 <__libc_ifunc_impl_list+12535>:	lea    rax,[rip+0x8a4e2]        # 0x7ffff7f44a90
   0x7ffff7eba5ae <__libc_ifunc_impl_list+12542>:	mov    QWORD PTR [rbx+0x50],rax
   0x7ffff7eba5b2 <__libc_ifunc_impl_list+12546>:	sete   al
   0x7ffff7eba5b5 <__libc_ifunc_impl_list+12549>:	mov    BYTE PTR [rbx+0x58],al
   0x7ffff7eba5b8 <__libc_ifunc_impl_list+12552>:	movzx  eax,al
   0x7ffff7eba5bb <__libc_ifunc_impl_list+12555>:	jmp    0x7ffff7eba478 <__libc_ifunc_impl_list+12232>
   0x7ffff7eba5c0 <__libc_ifunc_impl_list+12560>:	and    ecx,0x40000100
   0x7ffff7eba5c6 <__libc_ifunc_impl_list+12566>:	cmp    ecx,0x40000100
   0x7ffff7eba5cc <__libc_ifunc_impl_list+12572>:	jne    0x7ffff7eba509 <__libc_ifunc_impl_list+12377>
   0x7ffff7eba5d2 <__libc_ifunc_impl_list+12578>:	mov    edx,eax
   0x7ffff7eba5d4 <__libc_ifunc_impl_list+12580>:	shr    edx,0x16
   0x7ffff7eba5d7 <__libc_ifunc_impl_list+12583>:	and    edx,0x1
   0x7ffff7eba5da <__libc_ifunc_impl_list+12586>:	jmp    0x7ffff7eba509 <__libc_ifunc_impl_list+12377>
   0x7ffff7eba5df <__libc_ifunc_impl_list+12591>:	test   eax,0x400000
   0x7ffff7eba5e4 <__libc_ifunc_impl_list+12596>:	je     0x7ffff7eba4c6 <__libc_ifunc_impl_list+12310>
   0x7ffff7eba5ea <__libc_ifunc_impl_list+12602>:	mov    esi,ecx
   0x7ffff7eba5ec <__libc_ifunc_impl_list+12604>:	mov    edi,0x1
   0x7ffff7eba5f1 <__libc_ifunc_impl_list+12609>:	shr    esi,0xb
   0x7ffff7eba5f4 <__libc_ifunc_impl_list+12612>:	and    esi,0x1
   0x7ffff7eba5f7 <__libc_ifunc_impl_list+12615>:	jmp    0x7ffff7eba4ca <__libc_ifunc_impl_list+12314>
   0x7ffff7eba5fc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7eba600 <gnu_dev_major>:	endbr64
   0x7ffff7eba604 <gnu_dev_major+4>:	mov    rdx,rdi
   0x7ffff7eba607 <gnu_dev_major+7>:	mov    rax,rdi
   0x7ffff7eba60a <gnu_dev_major+10>:	shr    rdx,0x8
   0x7ffff7eba60e <gnu_dev_major+14>:	shr    rax,0x20
   0x7ffff7eba612 <gnu_dev_major+18>:	and    edx,0xfff
   0x7ffff7eba618 <gnu_dev_major+24>:	and    eax,0xfffff000
   0x7ffff7eba61d <gnu_dev_major+29>:	or     eax,edx
   0x7ffff7eba61f <gnu_dev_major+31>:	ret
   0x7ffff7eba620 <gnu_dev_minor>:	endbr64
   0x7ffff7eba624 <gnu_dev_minor+4>:	mov    rax,rdi
   0x7ffff7eba627 <gnu_dev_minor+7>:	movzx  edx,dil
   0x7ffff7eba62b <gnu_dev_minor+11>:	shr    rax,0xc
   0x7ffff7eba62f <gnu_dev_minor+15>:	xor    al,al
   0x7ffff7eba631 <gnu_dev_minor+17>:	or     eax,edx
   0x7ffff7eba633 <gnu_dev_minor+19>:	ret
   0x7ffff7eba634:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eba63f:	nop
   0x7ffff7eba640 <gnu_dev_makedev>:	endbr64
   0x7ffff7eba644 <gnu_dev_makedev+4>:	movabs rax,0xffffff00000
   0x7ffff7eba64e <gnu_dev_makedev+14>:	mov    rdx,rsi
   0x7ffff7eba651 <gnu_dev_makedev+17>:	mov    edi,edi
   0x7ffff7eba653 <gnu_dev_makedev+19>:	movzx  esi,sil
   0x7ffff7eba657 <gnu_dev_makedev+23>:	movabs rcx,0xfffff00000000000
   0x7ffff7eba661 <gnu_dev_makedev+33>:	shl    rdx,0xc
   0x7ffff7eba665 <gnu_dev_makedev+37>:	and    rdx,rax
   0x7ffff7eba668 <gnu_dev_makedev+40>:	mov    rax,rdi
   0x7ffff7eba66b <gnu_dev_makedev+43>:	shl    rax,0x8
   0x7ffff7eba66f <gnu_dev_makedev+47>:	or     rdx,rsi
   0x7ffff7eba672 <gnu_dev_makedev+50>:	and    eax,0xfff00
   0x7ffff7eba677 <gnu_dev_makedev+55>:	or     rdx,rax
   0x7ffff7eba67a <gnu_dev_makedev+58>:	mov    rax,rdi
   0x7ffff7eba67d <gnu_dev_makedev+61>:	shl    rax,0x20
   0x7ffff7eba681 <gnu_dev_makedev+65>:	and    rax,rcx
   0x7ffff7eba684 <gnu_dev_makedev+68>:	or     rax,rdx
   0x7ffff7eba687 <gnu_dev_makedev+71>:	ret
   0x7ffff7eba688:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eba690 <__libc_allocate_once_slow>:	endbr64
   0x7ffff7eba694 <__libc_allocate_once_slow+4>:	push   r13
   0x7ffff7eba696 <__libc_allocate_once_slow+6>:	push   r12
   0x7ffff7eba698 <__libc_allocate_once_slow+8>:	mov    r12,rdx
   0x7ffff7eba69b <__libc_allocate_once_slow+11>:	push   rbp
   0x7ffff7eba69c <__libc_allocate_once_slow+12>:	mov    rbp,rcx
   0x7ffff7eba69f <__libc_allocate_once_slow+15>:	push   rbx
   0x7ffff7eba6a0 <__libc_allocate_once_slow+16>:	mov    rbx,rdi
   0x7ffff7eba6a3 <__libc_allocate_once_slow+19>:	mov    rdi,rcx
   0x7ffff7eba6a6 <__libc_allocate_once_slow+22>:	sub    rsp,0x8
   0x7ffff7eba6aa <__libc_allocate_once_slow+26>:	call   rsi
   0x7ffff7eba6ac <__libc_allocate_once_slow+28>:	mov    r8,rax
   0x7ffff7eba6af <__libc_allocate_once_slow+31>:	test   rax,rax
   0x7ffff7eba6b2 <__libc_allocate_once_slow+34>:	je     0x7ffff7eba6c0 <__libc_allocate_once_slow+48>
   0x7ffff7eba6b4 <__libc_allocate_once_slow+36>:	xor    edx,edx
   0x7ffff7eba6b6 <__libc_allocate_once_slow+38>:	mov    rax,rdx
   0x7ffff7eba6b9 <__libc_allocate_once_slow+41>:	lock cmpxchg QWORD PTR [rbx],r8
   0x7ffff7eba6be <__libc_allocate_once_slow+46>:	jne    0x7ffff7eba6ce <__libc_allocate_once_slow+62>
   0x7ffff7eba6c0 <__libc_allocate_once_slow+48>:	add    rsp,0x8
   0x7ffff7eba6c4 <__libc_allocate_once_slow+52>:	mov    rax,r8
   0x7ffff7eba6c7 <__libc_allocate_once_slow+55>:	pop    rbx
   0x7ffff7eba6c8 <__libc_allocate_once_slow+56>:	pop    rbp
   0x7ffff7eba6c9 <__libc_allocate_once_slow+57>:	pop    r12
   0x7ffff7eba6cb <__libc_allocate_once_slow+59>:	pop    r13
   0x7ffff7eba6cd <__libc_allocate_once_slow+61>:	ret
   0x7ffff7eba6ce <__libc_allocate_once_slow+62>:	mov    r13,QWORD PTR [rbx]
   0x7ffff7eba6d1 <__libc_allocate_once_slow+65>:	test   r13,r13
   0x7ffff7eba6d4 <__libc_allocate_once_slow+68>:	je     0x7ffff7eba6b6 <__libc_allocate_once_slow+38>
   0x7ffff7eba6d6 <__libc_allocate_once_slow+70>:	test   r12,r12
   0x7ffff7eba6d9 <__libc_allocate_once_slow+73>:	je     0x7ffff7eba6e9 <__libc_allocate_once_slow+89>
   0x7ffff7eba6db <__libc_allocate_once_slow+75>:	mov    rsi,r8
   0x7ffff7eba6de <__libc_allocate_once_slow+78>:	mov    rdi,rbp
   0x7ffff7eba6e1 <__libc_allocate_once_slow+81>:	call   r12
   0x7ffff7eba6e4 <__libc_allocate_once_slow+84>:	mov    r8,r13
   0x7ffff7eba6e7 <__libc_allocate_once_slow+87>:	jmp    0x7ffff7eba6c0 <__libc_allocate_once_slow+48>
   0x7ffff7eba6e9 <__libc_allocate_once_slow+89>:	mov    rdi,r8
   0x7ffff7eba6ec <__libc_allocate_once_slow+92>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7eba6f1 <__libc_allocate_once_slow+97>:	mov    r8,r13
   0x7ffff7eba6f4 <__libc_allocate_once_slow+100>:	jmp    0x7ffff7eba6c0 <__libc_allocate_once_slow+48>
   0x7ffff7eba6f6:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eba700:	endbr64
   0x7ffff7eba704:	push   r12
   0x7ffff7eba706:	test   edi,edi
   0x7ffff7eba708:	js     0x7ffff7eba747
   0x7ffff7eba70a:	mov    DWORD PTR [rsi+0x8],0x662f666c
   0x7ffff7eba711:	mov    r12,rsi
   0x7ffff7eba714:	movsxd rdi,edi
   0x7ffff7eba717:	xor    ecx,ecx
   0x7ffff7eba719:	movabs rax,0x65732f636f72702f
   0x7ffff7eba723:	lea    rsi,[rsi+0xe]
   0x7ffff7eba727:	mov    edx,0xa
   0x7ffff7eba72c:	mov    QWORD PTR [rsi-0xe],rax
   0x7ffff7eba730:	mov    eax,0x2f64
   0x7ffff7eba735:	mov    WORD PTR [rsi-0x2],ax
   0x7ffff7eba739:	call   0x7ffff7def360
   0x7ffff7eba73e:	mov    BYTE PTR [rax],0x0
   0x7ffff7eba741:	mov    rax,r12
   0x7ffff7eba744:	pop    r12
   0x7ffff7eba746:	ret
   0x7ffff7eba747:	lea    rcx,[rip+0xbc412]        # 0x7ffff7f76b60
   0x7ffff7eba74e:	mov    edx,0x1c
   0x7ffff7eba753:	lea    rsi,[rip+0xb5dc1]        # 0x7ffff7f7051b
   0x7ffff7eba75a:	lea    rdi,[rip+0xb5dcb]        # 0x7ffff7f7052c
   0x7ffff7eba761:	call   0x7ffff7dcee50 <__assert_fail>
   0x7ffff7eba766:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7eba770 <__libc_unwind_link_get>:	endbr64
   0x7ffff7eba774 <__libc_unwind_link_get+4>:	push   r15
   0x7ffff7eba776 <__libc_unwind_link_get+6>:	push   r14
   0x7ffff7eba778 <__libc_unwind_link_get+8>:	push   r13
   0x7ffff7eba77a <__libc_unwind_link_get+10>:	push   r12
   0x7ffff7eba77c <__libc_unwind_link_get+12>:	push   rbp
   0x7ffff7eba77d <__libc_unwind_link_get+13>:	push   rbx
   0x7ffff7eba77e <__libc_unwind_link_get+14>:	sub    rsp,0x18
   0x7ffff7eba782 <__libc_unwind_link_get+18>:	mov    rax,QWORD PTR [rip+0xfbd3f]        # 0x7ffff7fb64c8
   0x7ffff7eba789 <__libc_unwind_link_get+25>:	test   rax,rax
   0x7ffff7eba78c <__libc_unwind_link_get+28>:	je     0x7ffff7eba7b0 <__libc_unwind_link_get+64>
   0x7ffff7eba78e <__libc_unwind_link_get+30>:	lea    r12,[rip+0xfbd4b]        # 0x7ffff7fb64e0
   0x7ffff7eba795 <__libc_unwind_link_get+37>:	add    rsp,0x18
   0x7ffff7eba799 <__libc_unwind_link_get+41>:	mov    rax,r12
   0x7ffff7eba79c <__libc_unwind_link_get+44>:	pop    rbx
   0x7ffff7eba79d <__libc_unwind_link_get+45>:	pop    rbp
   0x7ffff7eba79e <__libc_unwind_link_get+46>:	pop    r12
   0x7ffff7eba7a0 <__libc_unwind_link_get+48>:	pop    r13
   0x7ffff7eba7a2 <__libc_unwind_link_get+50>:	pop    r14
   0x7ffff7eba7a4 <__libc_unwind_link_get+52>:	pop    r15
   0x7ffff7eba7a6 <__libc_unwind_link_get+54>:	ret
   0x7ffff7eba7a7 <__libc_unwind_link_get+55>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eba7b0 <__libc_unwind_link_get+64>:	mov    esi,0x80000002
   0x7ffff7eba7b5 <__libc_unwind_link_get+69>:	lea    rdi,[rip+0xb5d80]        # 0x7ffff7f7053c
   0x7ffff7eba7bc <__libc_unwind_link_get+76>:	call   0x7ffff7f0a060
   0x7ffff7eba7c1 <__libc_unwind_link_get+81>:	mov    r12,rax
   0x7ffff7eba7c4 <__libc_unwind_link_get+84>:	test   rax,rax
   0x7ffff7eba7c7 <__libc_unwind_link_get+87>:	je     0x7ffff7eba950 <__libc_unwind_link_get+480>
   0x7ffff7eba7cd <__libc_unwind_link_get+93>:	lea    rsi,[rip+0xb5d76]        # 0x7ffff7f7054a
   0x7ffff7eba7d4 <__libc_unwind_link_get+100>:	mov    rdi,rax
   0x7ffff7eba7d7 <__libc_unwind_link_get+103>:	call   0x7ffff7f0a130
   0x7ffff7eba7dc <__libc_unwind_link_get+108>:	lea    rsi,[rip+0xb5d79]        # 0x7ffff7f7055c
   0x7ffff7eba7e3 <__libc_unwind_link_get+115>:	mov    rdi,r12
   0x7ffff7eba7e6 <__libc_unwind_link_get+118>:	mov    r13,rax
   0x7ffff7eba7e9 <__libc_unwind_link_get+121>:	call   0x7ffff7f0a130
   0x7ffff7eba7ee <__libc_unwind_link_get+126>:	lea    rsi,[rip+0xb5d7c]        # 0x7ffff7f70571
   0x7ffff7eba7f5 <__libc_unwind_link_get+133>:	mov    rdi,r12
   0x7ffff7eba7f8 <__libc_unwind_link_get+136>:	mov    rbp,rax
   0x7ffff7eba7fb <__libc_unwind_link_get+139>:	call   0x7ffff7f0a130
   0x7ffff7eba800 <__libc_unwind_link_get+144>:	lea    rsi,[rip+0xb5d79]        # 0x7ffff7f70580
   0x7ffff7eba807 <__libc_unwind_link_get+151>:	mov    rdi,r12
   0x7ffff7eba80a <__libc_unwind_link_get+154>:	mov    r15,rax
   0x7ffff7eba80d <__libc_unwind_link_get+157>:	call   0x7ffff7f0a130
   0x7ffff7eba812 <__libc_unwind_link_get+162>:	lea    rsi,[rip+0xb5d75]        # 0x7ffff7f7058e
   0x7ffff7eba819 <__libc_unwind_link_get+169>:	mov    rdi,r12
   0x7ffff7eba81c <__libc_unwind_link_get+172>:	mov    r14,rax
   0x7ffff7eba81f <__libc_unwind_link_get+175>:	call   0x7ffff7f0a130
   0x7ffff7eba824 <__libc_unwind_link_get+180>:	lea    rsi,[rip+0xb5d72]        # 0x7ffff7f7059d
   0x7ffff7eba82b <__libc_unwind_link_get+187>:	mov    rdi,r12
   0x7ffff7eba82e <__libc_unwind_link_get+190>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7eba833 <__libc_unwind_link_get+195>:	call   0x7ffff7f0a130
   0x7ffff7eba838 <__libc_unwind_link_get+200>:	test   r13,r13
   0x7ffff7eba83b <__libc_unwind_link_get+203>:	mov    rcx,QWORD PTR [rsp+0x8]
   0x7ffff7eba840 <__libc_unwind_link_get+208>:	mov    rbx,rax
   0x7ffff7eba843 <__libc_unwind_link_get+211>:	je     0x7ffff7ebaa2e <__libc_unwind_link_get+702>
   0x7ffff7eba849 <__libc_unwind_link_get+217>:	test   rbp,rbp
   0x7ffff7eba84c <__libc_unwind_link_get+220>:	je     0x7ffff7eba993 <__libc_unwind_link_get+547>
   0x7ffff7eba852 <__libc_unwind_link_get+226>:	test   r15,r15
   0x7ffff7eba855 <__libc_unwind_link_get+229>:	je     0x7ffff7eba9b2 <__libc_unwind_link_get+578>
   0x7ffff7eba85b <__libc_unwind_link_get+235>:	test   r14,r14
   0x7ffff7eba85e <__libc_unwind_link_get+238>:	je     0x7ffff7eba9d1 <__libc_unwind_link_get+609>
   0x7ffff7eba864 <__libc_unwind_link_get+244>:	test   rcx,rcx
   0x7ffff7eba867 <__libc_unwind_link_get+247>:	je     0x7ffff7eba9f0 <__libc_unwind_link_get+640>
   0x7ffff7eba86d <__libc_unwind_link_get+253>:	test   rax,rax
   0x7ffff7eba870 <__libc_unwind_link_get+256>:	je     0x7ffff7ebaa0f <__libc_unwind_link_get+671>
   0x7ffff7eba876 <__libc_unwind_link_get+262>:	mov    rdx,rbp
   0x7ffff7eba879 <__libc_unwind_link_get+265>:	xor    eax,eax
   0x7ffff7eba87b <__libc_unwind_link_get+267>:	mov    rbp,rcx
   0x7ffff7eba87e <__libc_unwind_link_get+270>:	mov    ecx,0x1
   0x7ffff7eba883 <__libc_unwind_link_get+275>:	xor    r13,QWORD PTR fs:0x30
   0x7ffff7eba88c <__libc_unwind_link_get+284>:	rol    r13,0x11
   0x7ffff7eba890 <__libc_unwind_link_get+288>:	xor    rdx,QWORD PTR fs:0x30
   0x7ffff7eba899 <__libc_unwind_link_get+297>:	rol    rdx,0x11
   0x7ffff7eba89d <__libc_unwind_link_get+301>:	xor    r15,QWORD PTR fs:0x30
   0x7ffff7eba8a6 <__libc_unwind_link_get+310>:	rol    r15,0x11
   0x7ffff7eba8aa <__libc_unwind_link_get+314>:	xor    r14,QWORD PTR fs:0x30
   0x7ffff7eba8b3 <__libc_unwind_link_get+323>:	rol    r14,0x11
   0x7ffff7eba8b7 <__libc_unwind_link_get+327>:	xor    rbp,QWORD PTR fs:0x30
   0x7ffff7eba8c0 <__libc_unwind_link_get+336>:	rol    rbp,0x11
   0x7ffff7eba8c4 <__libc_unwind_link_get+340>:	xor    rbx,QWORD PTR fs:0x30
   0x7ffff7eba8cd <__libc_unwind_link_get+349>:	rol    rbx,0x11
   0x7ffff7eba8d1 <__libc_unwind_link_get+353>:	lock cmpxchg DWORD PTR [rip+0xfbbe7],ecx        # 0x7ffff7fb64c0
   0x7ffff7eba8d9 <__libc_unwind_link_get+361>:	jne    0x7ffff7eba978 <__libc_unwind_link_get+520>
   0x7ffff7eba8df <__libc_unwind_link_get+367>:	mov    rax,QWORD PTR [rip+0xfbbe2]        # 0x7ffff7fb64c8
   0x7ffff7eba8e6 <__libc_unwind_link_get+374>:	test   rax,rax
   0x7ffff7eba8e9 <__libc_unwind_link_get+377>:	je     0x7ffff7eba918 <__libc_unwind_link_get+424>
   0x7ffff7eba8eb <__libc_unwind_link_get+379>:	mov    rdi,r12
   0x7ffff7eba8ee <__libc_unwind_link_get+382>:	call   0x7ffff7f0a3e0
   0x7ffff7eba8f3 <__libc_unwind_link_get+387>:	xor    eax,eax
   0x7ffff7eba8f5 <__libc_unwind_link_get+389>:	xchg   DWORD PTR [rip+0xfbbc5],eax        # 0x7ffff7fb64c0
   0x7ffff7eba8fb <__libc_unwind_link_get+395>:	cmp    eax,0x1
   0x7ffff7eba8fe <__libc_unwind_link_get+398>:	jle    0x7ffff7eba78e <__libc_unwind_link_get+30>
   0x7ffff7eba904 <__libc_unwind_link_get+404>:	lea    rdi,[rip+0xfbbb5]        # 0x7ffff7fb64c0
   0x7ffff7eba90b <__libc_unwind_link_get+411>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7eba910 <__libc_unwind_link_get+416>:	jmp    0x7ffff7eba78e <__libc_unwind_link_get+30>
   0x7ffff7eba915 <__libc_unwind_link_get+421>:	nop    DWORD PTR [rax]
   0x7ffff7eba918 <__libc_unwind_link_get+424>:	mov    QWORD PTR [rip+0xfbbc1],r13        # 0x7ffff7fb64e0
   0x7ffff7eba91f <__libc_unwind_link_get+431>:	mov    QWORD PTR [rip+0xfbbc2],rdx        # 0x7ffff7fb64e8
   0x7ffff7eba926 <__libc_unwind_link_get+438>:	mov    QWORD PTR [rip+0xfbbc3],r15        # 0x7ffff7fb64f0
   0x7ffff7eba92d <__libc_unwind_link_get+445>:	mov    QWORD PTR [rip+0xfbbc4],r14        # 0x7ffff7fb64f8
   0x7ffff7eba934 <__libc_unwind_link_get+452>:	mov    QWORD PTR [rip+0xfbbc5],rbp        # 0x7ffff7fb6500
   0x7ffff7eba93b <__libc_unwind_link_get+459>:	mov    QWORD PTR [rip+0xfbbc6],rbx        # 0x7ffff7fb6508
   0x7ffff7eba942 <__libc_unwind_link_get+466>:	mov    QWORD PTR [rip+0xfbb7f],r12        # 0x7ffff7fb64c8
   0x7ffff7eba949 <__libc_unwind_link_get+473>:	jmp    0x7ffff7eba8f3 <__libc_unwind_link_get+387>
   0x7ffff7eba94b <__libc_unwind_link_get+475>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7eba950 <__libc_unwind_link_get+480>:	xor    eax,eax
   0x7ffff7eba952 <__libc_unwind_link_get+482>:	xchg   DWORD PTR [rip+0xfbb68],eax        # 0x7ffff7fb64c0
   0x7ffff7eba958 <__libc_unwind_link_get+488>:	cmp    eax,0x1
   0x7ffff7eba95b <__libc_unwind_link_get+491>:	jle    0x7ffff7eba795 <__libc_unwind_link_get+37>
   0x7ffff7eba961 <__libc_unwind_link_get+497>:	lea    rdi,[rip+0xfbb58]        # 0x7ffff7fb64c0
   0x7ffff7eba968 <__libc_unwind_link_get+504>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7eba96d <__libc_unwind_link_get+509>:	jmp    0x7ffff7eba795 <__libc_unwind_link_get+37>
   0x7ffff7eba972 <__libc_unwind_link_get+514>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7eba978 <__libc_unwind_link_get+520>:	lea    rdi,[rip+0xfbb41]        # 0x7ffff7fb64c0
   0x7ffff7eba97f <__libc_unwind_link_get+527>:	mov    QWORD PTR [rsp+0x8],rdx
   0x7ffff7eba984 <__libc_unwind_link_get+532>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7eba989 <__libc_unwind_link_get+537>:	mov    rdx,QWORD PTR [rsp+0x8]
   0x7ffff7eba98e <__libc_unwind_link_get+542>:	jmp    0x7ffff7eba8df <__libc_unwind_link_get+367>
   0x7ffff7eba993 <__libc_unwind_link_get+547>:	lea    rcx,[rip+0xbc1e6]        # 0x7ffff7f76b80
   0x7ffff7eba99a <__libc_unwind_link_get+554>:	mov    edx,0x50
   0x7ffff7eba99f <__libc_unwind_link_get+559>:	lea    rsi,[rip+0xb5c0c]        # 0x7ffff7f705b2
   0x7ffff7eba9a6 <__libc_unwind_link_get+566>:	lea    rdi,[rip+0xbaadb]        # 0x7ffff7f75488
   0x7ffff7eba9ad <__libc_unwind_link_get+573>:	call   0x7ffff7dcee50 <__assert_fail>
   0x7ffff7eba9b2 <__libc_unwind_link_get+578>:	lea    rcx,[rip+0xbc1c7]        # 0x7ffff7f76b80
   0x7ffff7eba9b9 <__libc_unwind_link_get+585>:	mov    edx,0x51
   0x7ffff7eba9be <__libc_unwind_link_get+590>:	lea    rsi,[rip+0xb5bed]        # 0x7ffff7f705b2
   0x7ffff7eba9c5 <__libc_unwind_link_get+597>:	lea    rdi,[rip+0xbaae4]        # 0x7ffff7f754b0
   0x7ffff7eba9cc <__libc_unwind_link_get+604>:	call   0x7ffff7dcee50 <__assert_fail>
   0x7ffff7eba9d1 <__libc_unwind_link_get+609>:	lea    rcx,[rip+0xbc1a8]        # 0x7ffff7f76b80
   0x7ffff7eba9d8 <__libc_unwind_link_get+616>:	mov    edx,0x53
   0x7ffff7eba9dd <__libc_unwind_link_get+621>:	lea    rsi,[rip+0xb5bce]        # 0x7ffff7f705b2
   0x7ffff7eba9e4 <__libc_unwind_link_get+628>:	lea    rdi,[rip+0xbaaed]        # 0x7ffff7f754d8
   0x7ffff7eba9eb <__libc_unwind_link_get+635>:	call   0x7ffff7dcee50 <__assert_fail>
   0x7ffff7eba9f0 <__libc_unwind_link_get+640>:	lea    rcx,[rip+0xbc189]        # 0x7ffff7f76b80
   0x7ffff7eba9f7 <__libc_unwind_link_get+647>:	mov    edx,0x55
   0x7ffff7eba9fc <__libc_unwind_link_get+652>:	lea    rsi,[rip+0xb5baf]        # 0x7ffff7f705b2
   0x7ffff7ebaa03 <__libc_unwind_link_get+659>:	lea    rdi,[rip+0xbaaee]        # 0x7ffff7f754f8
   0x7ffff7ebaa0a <__libc_unwind_link_get+666>:	call   0x7ffff7dcee50 <__assert_fail>
   0x7ffff7ebaa0f <__libc_unwind_link_get+671>:	lea    rcx,[rip+0xbc16a]        # 0x7ffff7f76b80
   0x7ffff7ebaa16 <__libc_unwind_link_get+678>:	mov    edx,0x56
   0x7ffff7ebaa1b <__libc_unwind_link_get+683>:	lea    rsi,[rip+0xb5b90]        # 0x7ffff7f705b2
   0x7ffff7ebaa22 <__libc_unwind_link_get+690>:	lea    rdi,[rip+0xb5b97]        # 0x7ffff7f705c0
   0x7ffff7ebaa29 <__libc_unwind_link_get+697>:	call   0x7ffff7dcee50 <__assert_fail>
   0x7ffff7ebaa2e <__libc_unwind_link_get+702>:	lea    rcx,[rip+0xbc14b]        # 0x7ffff7f76b80
   0x7ffff7ebaa35 <__libc_unwind_link_get+709>:	mov    edx,0x4f
   0x7ffff7ebaa3a <__libc_unwind_link_get+714>:	lea    rsi,[rip+0xb5b71]        # 0x7ffff7f705b2
   0x7ffff7ebaa41 <__libc_unwind_link_get+721>:	lea    rdi,[rip+0xbaa18]        # 0x7ffff7f75460
   0x7ffff7ebaa48 <__libc_unwind_link_get+728>:	call   0x7ffff7dcee50 <__assert_fail>
   0x7ffff7ebaa4d:	nop    DWORD PTR [rax]
   0x7ffff7ebaa50:	endbr64
   0x7ffff7ebaa54:	xor    edx,edx
   0x7ffff7ebaa56:	mov    ecx,0x1
   0x7ffff7ebaa5b:	mov    eax,edx
   0x7ffff7ebaa5d:	lock cmpxchg DWORD PTR [rip+0xfba5b],ecx        # 0x7ffff7fb64c0
   0x7ffff7ebaa65:	jne    0x7ffff7ebaa88
   0x7ffff7ebaa67:	mov    eax,edx
   0x7ffff7ebaa69:	xchg   DWORD PTR [rip+0xfba51],eax        # 0x7ffff7fb64c0
   0x7ffff7ebaa6f:	cmp    eax,0x1
   0x7ffff7ebaa72:	jg     0x7ffff7ebaa78
   0x7ffff7ebaa74:	ret
   0x7ffff7ebaa75:	nop    DWORD PTR [rax]
   0x7ffff7ebaa78:	lea    rdi,[rip+0xfba41]        # 0x7ffff7fb64c0
   0x7ffff7ebaa7f:	jmp    0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ebaa84:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebaa88:	mov    DWORD PTR [rip+0xfba2e],0x0        # 0x7ffff7fb64c0
   0x7ffff7ebaa92:	mov    QWORD PTR [rip+0xfba2b],0x0        # 0x7ffff7fb64c8
   0x7ffff7ebaa9d:	ret
   0x7ffff7ebaa9e:	xchg   ax,ax
   0x7ffff7ebaaa0:	endbr64
   0x7ffff7ebaaa4:	test   rsi,rsi
   0x7ffff7ebaaa7:	je     0x7ffff7ebaaf0
   0x7ffff7ebaaa9:	push   rbp
   0x7ffff7ebaaaa:	push   rbx
   0x7ffff7ebaaab:	mov    rbx,rsi
   0x7ffff7ebaaae:	sub    rsp,0x8
   0x7ffff7ebaab2:	mov    rbp,QWORD PTR [rsi]
   0x7ffff7ebaab5:	test   rbp,rbp
   0x7ffff7ebaab8:	je     0x7ffff7ebaae9
   0x7ffff7ebaaba:	mov    rdi,rbp
   0x7ffff7ebaabd:	mov    esi,0x2f
   0x7ffff7ebaac2:	call   0x7ffff7dbd5f0 <*ABS*+0xa89e0@plt>
   0x7ffff7ebaac7:	lea    rdx,[rax+0x1]
   0x7ffff7ebaacb:	test   rax,rax
   0x7ffff7ebaace:	mov    rax,QWORD PTR [rip+0xf34d3]        # 0x7ffff7fadfa8
   0x7ffff7ebaad5:	cmovne rbp,rdx
   0x7ffff7ebaad9:	mov    QWORD PTR [rax],rbp
   0x7ffff7ebaadc:	mov    rax,QWORD PTR [rip+0xf34ed]        # 0x7ffff7fadfd0
   0x7ffff7ebaae3:	mov    rdx,QWORD PTR [rbx]
   0x7ffff7ebaae6:	mov    QWORD PTR [rax],rdx
   0x7ffff7ebaae9:	add    rsp,0x8
   0x7ffff7ebaaed:	pop    rbx
   0x7ffff7ebaaee:	pop    rbp
   0x7ffff7ebaaef:	ret
   0x7ffff7ebaaf0:	ret
   0x7ffff7ebaaf1:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebaafb:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebab00 <ioperm>:	endbr64
   0x7ffff7ebab04 <ioperm+4>:	mov    eax,0xad
   0x7ffff7ebab09 <ioperm+9>:	syscall
   0x7ffff7ebab0b <ioperm+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebab11 <ioperm+17>:	jae    0x7ffff7ebab14 <ioperm+20>
   0x7ffff7ebab13 <ioperm+19>:	ret
   0x7ffff7ebab14 <ioperm+20>:	mov    rcx,QWORD PTR [rip+0xf32f5]        # 0x7ffff7fade10
   0x7ffff7ebab1b <ioperm+27>:	neg    eax
   0x7ffff7ebab1d <ioperm+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebab20 <ioperm+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebab24 <ioperm+36>:	ret
   0x7ffff7ebab25:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebab2f:	nop
   0x7ffff7ebab30 <iopl>:	endbr64
   0x7ffff7ebab34 <iopl+4>:	mov    eax,0xac
   0x7ffff7ebab39 <iopl+9>:	syscall
   0x7ffff7ebab3b <iopl+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebab41 <iopl+17>:	jae    0x7ffff7ebab44 <iopl+20>
   0x7ffff7ebab43 <iopl+19>:	ret
   0x7ffff7ebab44 <iopl+20>:	mov    rcx,QWORD PTR [rip+0xf32c5]        # 0x7ffff7fade10
   0x7ffff7ebab4b <iopl+27>:	neg    eax
   0x7ffff7ebab4d <iopl+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebab50 <iopl+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebab54 <iopl+36>:	ret
   0x7ffff7ebab55:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebab5f:	nop
   0x7ffff7ebab60 <ntp_adjtime>:	endbr64
   0x7ffff7ebab64 <ntp_adjtime+4>:	mov    rsi,rdi
   0x7ffff7ebab67 <ntp_adjtime+7>:	xor    edi,edi
   0x7ffff7ebab69 <ntp_adjtime+9>:	jmp    0x7ffff7ebb5f0 <clock_adjtime>
   0x7ffff7ebab6e:	xchg   ax,ax
   0x7ffff7ebab70 <clone>:	endbr64
   0x7ffff7ebab74 <clone+4>:	mov    rax,0xffffffffffffffea
   0x7ffff7ebab7b <clone+11>:	test   rdi,rdi
   0x7ffff7ebab7e <clone+14>:	je     0x7ffff7ebabbe <clone+78>
   0x7ffff7ebab80 <clone+16>:	and    rsi,0xfffffffffffffff0
   0x7ffff7ebab84 <clone+20>:	je     0x7ffff7ebabbe <clone+78>
   0x7ffff7ebab86 <clone+22>:	mov    QWORD PTR [rsi-0x8],rcx
   0x7ffff7ebab8a <clone+26>:	sub    rsi,0x10
   0x7ffff7ebab8e <clone+30>:	mov    QWORD PTR [rsi],rdi
   0x7ffff7ebab91 <clone+33>:	mov    rdi,rdx
   0x7ffff7ebab94 <clone+36>:	mov    rdx,r8
   0x7ffff7ebab97 <clone+39>:	mov    r8,r9
   0x7ffff7ebab9a <clone+42>:	mov    r10,QWORD PTR [rsp+0x8]
   0x7ffff7ebab9f <clone+47>:	mov    eax,0x38
   0x7ffff7ebaba4 <clone+52>:	syscall
   0x7ffff7ebaba6 <clone+54>:	test   rax,rax
   0x7ffff7ebaba9 <clone+57>:	jl     0x7ffff7ebabbe <clone+78>
   0x7ffff7ebabab <clone+59>:	je     0x7ffff7ebabae <clone+62>
   0x7ffff7ebabad <clone+61>:	ret
   0x7ffff7ebabae <clone+62>:	xor    ebp,ebp
   0x7ffff7ebabb0 <clone+64>:	pop    rax
   0x7ffff7ebabb1 <clone+65>:	pop    rdi
   0x7ffff7ebabb2 <clone+66>:	call   rax
   0x7ffff7ebabb4 <clone+68>:	mov    rdi,rax
   0x7ffff7ebabb7 <clone+71>:	mov    eax,0x3c
   0x7ffff7ebabbc <clone+76>:	syscall
   0x7ffff7ebabbe <clone+78>:	mov    rcx,QWORD PTR [rip+0xf324b]        # 0x7ffff7fade10
   0x7ffff7ebabc5 <clone+85>:	neg    eax
   0x7ffff7ebabc7 <clone+87>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebabca <clone+90>:	or     rax,0xffffffffffffffff
   0x7ffff7ebabce <clone+94>:	ret
   0x7ffff7ebabcf:	nop
   0x7ffff7ebabd0 <umount>:	endbr64
   0x7ffff7ebabd4 <umount+4>:	xor    esi,esi
   0x7ffff7ebabd6 <umount+6>:	jmp    0x7ffff7ebabe0 <umount2>
   0x7ffff7ebabdb:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebabe0 <umount2>:	endbr64
   0x7ffff7ebabe4 <umount2+4>:	mov    eax,0xa6
   0x7ffff7ebabe9 <umount2+9>:	syscall
   0x7ffff7ebabeb <umount2+11>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebabf1 <umount2+17>:	ja     0x7ffff7ebabf8 <umount2+24>
   0x7ffff7ebabf3 <umount2+19>:	ret
   0x7ffff7ebabf4 <umount2+20>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebabf8 <umount2+24>:	mov    rdx,QWORD PTR [rip+0xf3211]        # 0x7ffff7fade10
   0x7ffff7ebabff <umount2+31>:	neg    eax
   0x7ffff7ebac01 <umount2+33>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebac04 <umount2+36>:	mov    eax,0xffffffff
   0x7ffff7ebac09 <umount2+41>:	ret
   0x7ffff7ebac0a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebac10 <readahead>:	endbr64
   0x7ffff7ebac14 <readahead+4>:	mov    eax,0xbb
   0x7ffff7ebac19 <readahead+9>:	syscall
   0x7ffff7ebac1b <readahead+11>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebac21 <readahead+17>:	ja     0x7ffff7ebac28 <readahead+24>
   0x7ffff7ebac23 <readahead+19>:	ret
   0x7ffff7ebac24 <readahead+20>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebac28 <readahead+24>:	mov    rdx,QWORD PTR [rip+0xf31e1]        # 0x7ffff7fade10
   0x7ffff7ebac2f <readahead+31>:	neg    eax
   0x7ffff7ebac31 <readahead+33>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebac34 <readahead+36>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebac3b <readahead+43>:	ret
   0x7ffff7ebac3c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebac40 <setfsuid>:	endbr64
   0x7ffff7ebac44 <setfsuid+4>:	mov    eax,0x7a
   0x7ffff7ebac49 <setfsuid+9>:	syscall
   0x7ffff7ebac4b <setfsuid+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebac51 <setfsuid+17>:	jae    0x7ffff7ebac54 <setfsuid+20>
   0x7ffff7ebac53 <setfsuid+19>:	ret
   0x7ffff7ebac54 <setfsuid+20>:	mov    rcx,QWORD PTR [rip+0xf31b5]        # 0x7ffff7fade10
   0x7ffff7ebac5b <setfsuid+27>:	neg    eax
   0x7ffff7ebac5d <setfsuid+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebac60 <setfsuid+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebac64 <setfsuid+36>:	ret
   0x7ffff7ebac65:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebac6f:	nop
   0x7ffff7ebac70 <setfsgid>:	endbr64
   0x7ffff7ebac74 <setfsgid+4>:	mov    eax,0x7b
   0x7ffff7ebac79 <setfsgid+9>:	syscall
   0x7ffff7ebac7b <setfsgid+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebac81 <setfsgid+17>:	jae    0x7ffff7ebac84 <setfsgid+20>
   0x7ffff7ebac83 <setfsgid+19>:	ret
   0x7ffff7ebac84 <setfsgid+20>:	mov    rcx,QWORD PTR [rip+0xf3185]        # 0x7ffff7fade10
   0x7ffff7ebac8b <setfsgid+27>:	neg    eax
   0x7ffff7ebac8d <setfsgid+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebac90 <setfsgid+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebac94 <setfsgid+36>:	ret
   0x7ffff7ebac95:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebac9f:	nop
   0x7ffff7ebaca0 <epoll_pwait>:	endbr64
   0x7ffff7ebaca4 <epoll_pwait+4>:	mov    r10d,ecx
   0x7ffff7ebaca7 <epoll_pwait+7>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebacaf <epoll_pwait+15>:	test   eax,eax
   0x7ffff7ebacb1 <epoll_pwait+17>:	jne    0x7ffff7ebacd0 <epoll_pwait+48>
   0x7ffff7ebacb3 <epoll_pwait+19>:	mov    r9d,0x8
   0x7ffff7ebacb9 <epoll_pwait+25>:	mov    eax,0x119
   0x7ffff7ebacbe <epoll_pwait+30>:	syscall
   0x7ffff7ebacc0 <epoll_pwait+32>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebacc6 <epoll_pwait+38>:	ja     0x7ffff7ebad40 <epoll_pwait+160>
   0x7ffff7ebacc8 <epoll_pwait+40>:	ret
   0x7ffff7ebacc9 <epoll_pwait+41>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebacd0 <epoll_pwait+48>:	push   r12
   0x7ffff7ebacd2 <epoll_pwait+50>:	sub    rsp,0x20
   0x7ffff7ebacd6 <epoll_pwait+54>:	mov    QWORD PTR [rsp+0x18],r8
   0x7ffff7ebacdb <epoll_pwait+59>:	mov    DWORD PTR [rsp+0x10],edx
   0x7ffff7ebacdf <epoll_pwait+63>:	mov    QWORD PTR [rsp+0x8],rsi
   0x7ffff7ebace4 <epoll_pwait+68>:	mov    DWORD PTR [rsp+0x4],edi
   0x7ffff7ebace8 <epoll_pwait+72>:	mov    DWORD PTR [rsp+0x14],ecx
   0x7ffff7ebacec <epoll_pwait+76>:	call   0x7ffff7e25a70
   0x7ffff7ebacf1 <epoll_pwait+81>:	mov    r8,QWORD PTR [rsp+0x18]
   0x7ffff7ebacf6 <epoll_pwait+86>:	mov    r10d,DWORD PTR [rsp+0x14]
   0x7ffff7ebacfb <epoll_pwait+91>:	mov    r9d,0x8
   0x7ffff7ebad01 <epoll_pwait+97>:	mov    r12d,eax
   0x7ffff7ebad04 <epoll_pwait+100>:	mov    edx,DWORD PTR [rsp+0x10]
   0x7ffff7ebad08 <epoll_pwait+104>:	mov    rsi,QWORD PTR [rsp+0x8]
   0x7ffff7ebad0d <epoll_pwait+109>:	mov    eax,0x119
   0x7ffff7ebad12 <epoll_pwait+114>:	mov    edi,DWORD PTR [rsp+0x4]
   0x7ffff7ebad16 <epoll_pwait+118>:	syscall
   0x7ffff7ebad18 <epoll_pwait+120>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebad1e <epoll_pwait+126>:	ja     0x7ffff7ebad58 <epoll_pwait+184>
   0x7ffff7ebad20 <epoll_pwait+128>:	mov    edi,r12d
   0x7ffff7ebad23 <epoll_pwait+131>:	mov    DWORD PTR [rsp+0x4],eax
   0x7ffff7ebad27 <epoll_pwait+135>:	call   0x7ffff7e25ae0
   0x7ffff7ebad2c <epoll_pwait+140>:	mov    eax,DWORD PTR [rsp+0x4]
   0x7ffff7ebad30 <epoll_pwait+144>:	add    rsp,0x20
   0x7ffff7ebad34 <epoll_pwait+148>:	pop    r12
   0x7ffff7ebad36 <epoll_pwait+150>:	ret
   0x7ffff7ebad37 <epoll_pwait+151>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebad40 <epoll_pwait+160>:	mov    rdx,QWORD PTR [rip+0xf30c9]        # 0x7ffff7fade10
   0x7ffff7ebad47 <epoll_pwait+167>:	neg    eax
   0x7ffff7ebad49 <epoll_pwait+169>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebad4c <epoll_pwait+172>:	mov    eax,0xffffffff
   0x7ffff7ebad51 <epoll_pwait+177>:	ret
   0x7ffff7ebad52 <epoll_pwait+178>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebad58 <epoll_pwait+184>:	mov    rdx,QWORD PTR [rip+0xf30b1]        # 0x7ffff7fade10
   0x7ffff7ebad5f <epoll_pwait+191>:	neg    eax
   0x7ffff7ebad61 <epoll_pwait+193>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebad64 <epoll_pwait+196>:	mov    eax,0xffffffff
   0x7ffff7ebad69 <epoll_pwait+201>:	jmp    0x7ffff7ebad20 <epoll_pwait+128>
   0x7ffff7ebad6b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebad70 <epoll_pwait2>:	endbr64
   0x7ffff7ebad74 <epoll_pwait2+4>:	mov    r10,rcx
   0x7ffff7ebad77 <epoll_pwait2+7>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebad7f <epoll_pwait2+15>:	test   eax,eax
   0x7ffff7ebad81 <epoll_pwait2+17>:	jne    0x7ffff7ebada0 <epoll_pwait2+48>
   0x7ffff7ebad83 <epoll_pwait2+19>:	mov    r9d,0x8
   0x7ffff7ebad89 <epoll_pwait2+25>:	mov    eax,0x1b9
   0x7ffff7ebad8e <epoll_pwait2+30>:	syscall
   0x7ffff7ebad90 <epoll_pwait2+32>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebad96 <epoll_pwait2+38>:	ja     0x7ffff7ebae10 <epoll_pwait2+160>
   0x7ffff7ebad98 <epoll_pwait2+40>:	ret
   0x7ffff7ebad99 <epoll_pwait2+41>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebada0 <epoll_pwait2+48>:	push   r12
   0x7ffff7ebada2 <epoll_pwait2+50>:	sub    rsp,0x20
   0x7ffff7ebada6 <epoll_pwait2+54>:	mov    QWORD PTR [rsp+0x18],r8
   0x7ffff7ebadab <epoll_pwait2+59>:	mov    DWORD PTR [rsp+0xc],edx
   0x7ffff7ebadaf <epoll_pwait2+63>:	mov    QWORD PTR [rsp],rsi
   0x7ffff7ebadb3 <epoll_pwait2+67>:	mov    DWORD PTR [rsp+0x8],edi
   0x7ffff7ebadb7 <epoll_pwait2+71>:	mov    QWORD PTR [rsp+0x10],rcx
   0x7ffff7ebadbc <epoll_pwait2+76>:	call   0x7ffff7e25a70
   0x7ffff7ebadc1 <epoll_pwait2+81>:	mov    r8,QWORD PTR [rsp+0x18]
   0x7ffff7ebadc6 <epoll_pwait2+86>:	mov    r10,QWORD PTR [rsp+0x10]
   0x7ffff7ebadcb <epoll_pwait2+91>:	mov    r9d,0x8
   0x7ffff7ebadd1 <epoll_pwait2+97>:	mov    r12d,eax
   0x7ffff7ebadd4 <epoll_pwait2+100>:	mov    edx,DWORD PTR [rsp+0xc]
   0x7ffff7ebadd8 <epoll_pwait2+104>:	mov    rsi,QWORD PTR [rsp]
   0x7ffff7ebaddc <epoll_pwait2+108>:	mov    eax,0x1b9
   0x7ffff7ebade1 <epoll_pwait2+113>:	mov    edi,DWORD PTR [rsp+0x8]
   0x7ffff7ebade5 <epoll_pwait2+117>:	syscall
   0x7ffff7ebade7 <epoll_pwait2+119>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebaded <epoll_pwait2+125>:	ja     0x7ffff7ebae28 <epoll_pwait2+184>
   0x7ffff7ebadef <epoll_pwait2+127>:	mov    edi,r12d
   0x7ffff7ebadf2 <epoll_pwait2+130>:	mov    DWORD PTR [rsp+0x8],eax
   0x7ffff7ebadf6 <epoll_pwait2+134>:	call   0x7ffff7e25ae0
   0x7ffff7ebadfb <epoll_pwait2+139>:	mov    eax,DWORD PTR [rsp+0x8]
   0x7ffff7ebadff <epoll_pwait2+143>:	add    rsp,0x20
   0x7ffff7ebae03 <epoll_pwait2+147>:	pop    r12
   0x7ffff7ebae05 <epoll_pwait2+149>:	ret
   0x7ffff7ebae06 <epoll_pwait2+150>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebae10 <epoll_pwait2+160>:	mov    rdx,QWORD PTR [rip+0xf2ff9]        # 0x7ffff7fade10
   0x7ffff7ebae17 <epoll_pwait2+167>:	neg    eax
   0x7ffff7ebae19 <epoll_pwait2+169>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebae1c <epoll_pwait2+172>:	mov    eax,0xffffffff
   0x7ffff7ebae21 <epoll_pwait2+177>:	ret
   0x7ffff7ebae22 <epoll_pwait2+178>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebae28 <epoll_pwait2+184>:	mov    rdx,QWORD PTR [rip+0xf2fe1]        # 0x7ffff7fade10
   0x7ffff7ebae2f <epoll_pwait2+191>:	neg    eax
   0x7ffff7ebae31 <epoll_pwait2+193>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebae34 <epoll_pwait2+196>:	mov    eax,0xffffffff
   0x7ffff7ebae39 <epoll_pwait2+201>:	jmp    0x7ffff7ebadef <epoll_pwait2+127>
   0x7ffff7ebae3b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebae40 <signalfd>:	endbr64
   0x7ffff7ebae44 <signalfd+4>:	mov    r10d,edx
   0x7ffff7ebae47 <signalfd+7>:	mov    eax,0x121
   0x7ffff7ebae4c <signalfd+12>:	mov    edx,0x8
   0x7ffff7ebae51 <signalfd+17>:	syscall
   0x7ffff7ebae53 <signalfd+19>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebae59 <signalfd+25>:	ja     0x7ffff7ebae60 <signalfd+32>
   0x7ffff7ebae5b <signalfd+27>:	ret
   0x7ffff7ebae5c <signalfd+28>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebae60 <signalfd+32>:	mov    rdx,QWORD PTR [rip+0xf2fa9]        # 0x7ffff7fade10
   0x7ffff7ebae67 <signalfd+39>:	neg    eax
   0x7ffff7ebae69 <signalfd+41>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebae6c <signalfd+44>:	mov    eax,0xffffffff
   0x7ffff7ebae71 <signalfd+49>:	ret
   0x7ffff7ebae72:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebae7c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebae80 <eventfd>:	endbr64
   0x7ffff7ebae84 <eventfd+4>:	mov    eax,0x122
   0x7ffff7ebae89 <eventfd+9>:	syscall
   0x7ffff7ebae8b <eventfd+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebae91 <eventfd+17>:	jae    0x7ffff7ebae94 <eventfd+20>
   0x7ffff7ebae93 <eventfd+19>:	ret
   0x7ffff7ebae94 <eventfd+20>:	mov    rcx,QWORD PTR [rip+0xf2f75]        # 0x7ffff7fade10
   0x7ffff7ebae9b <eventfd+27>:	neg    eax
   0x7ffff7ebae9d <eventfd+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebaea0 <eventfd+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebaea4 <eventfd+36>:	ret
   0x7ffff7ebaea5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebaeaf:	nop
   0x7ffff7ebaeb0 <eventfd_read>:	endbr64
   0x7ffff7ebaeb4 <eventfd_read+4>:	sub    rsp,0x8
   0x7ffff7ebaeb8 <eventfd_read+8>:	mov    edx,0x8
   0x7ffff7ebaebd <eventfd_read+13>:	call   0x7ffff7ea9980 <read>
   0x7ffff7ebaec2 <eventfd_read+18>:	cmp    rax,0x8
   0x7ffff7ebaec6 <eventfd_read+22>:	setne  al
   0x7ffff7ebaec9 <eventfd_read+25>:	add    rsp,0x8
   0x7ffff7ebaecd <eventfd_read+29>:	movzx  eax,al
   0x7ffff7ebaed0 <eventfd_read+32>:	neg    eax
   0x7ffff7ebaed2 <eventfd_read+34>:	ret
   0x7ffff7ebaed3:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebaedd:	nop    DWORD PTR [rax]
   0x7ffff7ebaee0 <eventfd_write>:	endbr64
   0x7ffff7ebaee4 <eventfd_write+4>:	sub    rsp,0x18
   0x7ffff7ebaee8 <eventfd_write+8>:	mov    edx,0x8
   0x7ffff7ebaeed <eventfd_write+13>:	mov    QWORD PTR [rsp+0x8],rsi
   0x7ffff7ebaef2 <eventfd_write+18>:	lea    rsi,[rsp+0x8]
   0x7ffff7ebaef7 <eventfd_write+23>:	call   0x7ffff7ea9a20 <write>
   0x7ffff7ebaefc <eventfd_write+28>:	cmp    rax,0x8
   0x7ffff7ebaf00 <eventfd_write+32>:	setne  al
   0x7ffff7ebaf03 <eventfd_write+35>:	add    rsp,0x18
   0x7ffff7ebaf07 <eventfd_write+39>:	movzx  eax,al
   0x7ffff7ebaf0a <eventfd_write+42>:	neg    eax
   0x7ffff7ebaf0c <eventfd_write+44>:	ret
   0x7ffff7ebaf0d:	nop    DWORD PTR [rax]
   0x7ffff7ebaf10 <prlimit64>:	endbr64
   0x7ffff7ebaf14 <prlimit64+4>:	mov    r10,rcx
   0x7ffff7ebaf17 <prlimit64+7>:	mov    eax,0x12e
   0x7ffff7ebaf1c <prlimit64+12>:	syscall
   0x7ffff7ebaf1e <prlimit64+14>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebaf24 <prlimit64+20>:	ja     0x7ffff7ebaf30 <prlimit64+32>
   0x7ffff7ebaf26 <prlimit64+22>:	ret
   0x7ffff7ebaf27 <prlimit64+23>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebaf30 <prlimit64+32>:	mov    rdx,QWORD PTR [rip+0xf2ed9]        # 0x7ffff7fade10
   0x7ffff7ebaf37 <prlimit64+39>:	neg    eax
   0x7ffff7ebaf39 <prlimit64+41>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebaf3c <prlimit64+44>:	mov    eax,0xffffffff
   0x7ffff7ebaf41 <prlimit64+49>:	ret
   0x7ffff7ebaf42:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebaf4c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebaf50 <personality>:	endbr64
   0x7ffff7ebaf54 <personality+4>:	mov    eax,0x87
   0x7ffff7ebaf59 <personality+9>:	syscall
   0x7ffff7ebaf5b <personality+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebaf61 <personality+17>:	jae    0x7ffff7ebaf64 <personality+20>
   0x7ffff7ebaf63 <personality+19>:	ret
   0x7ffff7ebaf64 <personality+20>:	mov    rcx,QWORD PTR [rip+0xf2ea5]        # 0x7ffff7fade10
   0x7ffff7ebaf6b <personality+27>:	neg    eax
   0x7ffff7ebaf6d <personality+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebaf70 <personality+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebaf74 <personality+36>:	ret
   0x7ffff7ebaf75:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebaf7f:	nop
   0x7ffff7ebaf80 <epoll_wait>:	endbr64
   0x7ffff7ebaf84 <epoll_wait+4>:	mov    r10d,ecx
   0x7ffff7ebaf87 <epoll_wait+7>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebaf8f <epoll_wait+15>:	test   eax,eax
   0x7ffff7ebaf91 <epoll_wait+17>:	jne    0x7ffff7ebafa8 <epoll_wait+40>
   0x7ffff7ebaf93 <epoll_wait+19>:	mov    eax,0xe8
   0x7ffff7ebaf98 <epoll_wait+24>:	syscall
   0x7ffff7ebaf9a <epoll_wait+26>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebafa0 <epoll_wait+32>:	ja     0x7ffff7ebb000 <epoll_wait+128>
   0x7ffff7ebafa2 <epoll_wait+34>:	ret
   0x7ffff7ebafa3 <epoll_wait+35>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebafa8 <epoll_wait+40>:	sub    rsp,0x28
   0x7ffff7ebafac <epoll_wait+44>:	mov    DWORD PTR [rsp+0x18],edx
   0x7ffff7ebafb0 <epoll_wait+48>:	mov    QWORD PTR [rsp+0x10],rsi
   0x7ffff7ebafb5 <epoll_wait+53>:	mov    DWORD PTR [rsp+0xc],edi
   0x7ffff7ebafb9 <epoll_wait+57>:	mov    DWORD PTR [rsp+0x1c],ecx
   0x7ffff7ebafbd <epoll_wait+61>:	call   0x7ffff7e25a70
   0x7ffff7ebafc2 <epoll_wait+66>:	mov    r10d,DWORD PTR [rsp+0x1c]
   0x7ffff7ebafc7 <epoll_wait+71>:	mov    edx,DWORD PTR [rsp+0x18]
   0x7ffff7ebafcb <epoll_wait+75>:	mov    r8d,eax
   0x7ffff7ebafce <epoll_wait+78>:	mov    rsi,QWORD PTR [rsp+0x10]
   0x7ffff7ebafd3 <epoll_wait+83>:	mov    edi,DWORD PTR [rsp+0xc]
   0x7ffff7ebafd7 <epoll_wait+87>:	mov    eax,0xe8
   0x7ffff7ebafdc <epoll_wait+92>:	syscall
   0x7ffff7ebafde <epoll_wait+94>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebafe4 <epoll_wait+100>:	ja     0x7ffff7ebb018 <epoll_wait+152>
   0x7ffff7ebafe6 <epoll_wait+102>:	mov    edi,r8d
   0x7ffff7ebafe9 <epoll_wait+105>:	mov    DWORD PTR [rsp+0xc],eax
   0x7ffff7ebafed <epoll_wait+109>:	call   0x7ffff7e25ae0
   0x7ffff7ebaff2 <epoll_wait+114>:	mov    eax,DWORD PTR [rsp+0xc]
   0x7ffff7ebaff6 <epoll_wait+118>:	add    rsp,0x28
   0x7ffff7ebaffa <epoll_wait+122>:	ret
   0x7ffff7ebaffb <epoll_wait+123>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb000 <epoll_wait+128>:	mov    rdx,QWORD PTR [rip+0xf2e09]        # 0x7ffff7fade10
   0x7ffff7ebb007 <epoll_wait+135>:	neg    eax
   0x7ffff7ebb009 <epoll_wait+137>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb00c <epoll_wait+140>:	mov    eax,0xffffffff
   0x7ffff7ebb011 <epoll_wait+145>:	ret
   0x7ffff7ebb012 <epoll_wait+146>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb018 <epoll_wait+152>:	mov    rdx,QWORD PTR [rip+0xf2df1]        # 0x7ffff7fade10
   0x7ffff7ebb01f <epoll_wait+159>:	neg    eax
   0x7ffff7ebb021 <epoll_wait+161>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb024 <epoll_wait+164>:	mov    eax,0xffffffff
   0x7ffff7ebb029 <epoll_wait+169>:	jmp    0x7ffff7ebafe6 <epoll_wait+102>
   0x7ffff7ebb02b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb030 <tee>:	endbr64
   0x7ffff7ebb034 <tee+4>:	mov    r10d,ecx
   0x7ffff7ebb037 <tee+7>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebb03f <tee+15>:	test   eax,eax
   0x7ffff7ebb041 <tee+17>:	jne    0x7ffff7ebb058 <tee+40>
   0x7ffff7ebb043 <tee+19>:	mov    eax,0x114
   0x7ffff7ebb048 <tee+24>:	syscall
   0x7ffff7ebb04a <tee+26>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb050 <tee+32>:	ja     0x7ffff7ebb0b0 <tee+128>
   0x7ffff7ebb052 <tee+34>:	ret
   0x7ffff7ebb053 <tee+35>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb058 <tee+40>:	sub    rsp,0x28
   0x7ffff7ebb05c <tee+44>:	mov    QWORD PTR [rsp+0x10],rdx
   0x7ffff7ebb061 <tee+49>:	mov    DWORD PTR [rsp+0x18],esi
   0x7ffff7ebb065 <tee+53>:	mov    DWORD PTR [rsp+0x8],edi
   0x7ffff7ebb069 <tee+57>:	mov    DWORD PTR [rsp+0x1c],ecx
   0x7ffff7ebb06d <tee+61>:	call   0x7ffff7e25a70
   0x7ffff7ebb072 <tee+66>:	mov    r10d,DWORD PTR [rsp+0x1c]
   0x7ffff7ebb077 <tee+71>:	mov    rdx,QWORD PTR [rsp+0x10]
   0x7ffff7ebb07c <tee+76>:	mov    r8d,eax
   0x7ffff7ebb07f <tee+79>:	mov    esi,DWORD PTR [rsp+0x18]
   0x7ffff7ebb083 <tee+83>:	mov    edi,DWORD PTR [rsp+0x8]
   0x7ffff7ebb087 <tee+87>:	mov    eax,0x114
   0x7ffff7ebb08c <tee+92>:	syscall
   0x7ffff7ebb08e <tee+94>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb094 <tee+100>:	ja     0x7ffff7ebb0c8 <tee+152>
   0x7ffff7ebb096 <tee+102>:	mov    edi,r8d
   0x7ffff7ebb099 <tee+105>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ebb09e <tee+110>:	call   0x7ffff7e25ae0
   0x7ffff7ebb0a3 <tee+115>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ebb0a8 <tee+120>:	add    rsp,0x28
   0x7ffff7ebb0ac <tee+124>:	ret
   0x7ffff7ebb0ad <tee+125>:	nop    DWORD PTR [rax]
   0x7ffff7ebb0b0 <tee+128>:	mov    rdx,QWORD PTR [rip+0xf2d59]        # 0x7ffff7fade10
   0x7ffff7ebb0b7 <tee+135>:	neg    eax
   0x7ffff7ebb0b9 <tee+137>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb0bc <tee+140>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebb0c3 <tee+147>:	ret
   0x7ffff7ebb0c4 <tee+148>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebb0c8 <tee+152>:	mov    rdx,QWORD PTR [rip+0xf2d41]        # 0x7ffff7fade10
   0x7ffff7ebb0cf <tee+159>:	neg    eax
   0x7ffff7ebb0d1 <tee+161>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb0d4 <tee+164>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebb0db <tee+171>:	jmp    0x7ffff7ebb096 <tee+102>
   0x7ffff7ebb0dd:	nop    DWORD PTR [rax]
   0x7ffff7ebb0e0 <vmsplice>:	endbr64
   0x7ffff7ebb0e4 <vmsplice+4>:	mov    r10d,ecx
   0x7ffff7ebb0e7 <vmsplice+7>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebb0ef <vmsplice+15>:	test   eax,eax
   0x7ffff7ebb0f1 <vmsplice+17>:	jne    0x7ffff7ebb108 <vmsplice+40>
   0x7ffff7ebb0f3 <vmsplice+19>:	mov    eax,0x116
   0x7ffff7ebb0f8 <vmsplice+24>:	syscall
   0x7ffff7ebb0fa <vmsplice+26>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb100 <vmsplice+32>:	ja     0x7ffff7ebb160 <vmsplice+128>
   0x7ffff7ebb102 <vmsplice+34>:	ret
   0x7ffff7ebb103 <vmsplice+35>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb108 <vmsplice+40>:	sub    rsp,0x28
   0x7ffff7ebb10c <vmsplice+44>:	mov    QWORD PTR [rsp+0x10],rdx
   0x7ffff7ebb111 <vmsplice+49>:	mov    QWORD PTR [rsp+0x8],rsi
   0x7ffff7ebb116 <vmsplice+54>:	mov    DWORD PTR [rsp],edi
   0x7ffff7ebb119 <vmsplice+57>:	mov    DWORD PTR [rsp+0x1c],ecx
   0x7ffff7ebb11d <vmsplice+61>:	call   0x7ffff7e25a70
   0x7ffff7ebb122 <vmsplice+66>:	mov    r10d,DWORD PTR [rsp+0x1c]
   0x7ffff7ebb127 <vmsplice+71>:	mov    rdx,QWORD PTR [rsp+0x10]
   0x7ffff7ebb12c <vmsplice+76>:	mov    r8d,eax
   0x7ffff7ebb12f <vmsplice+79>:	mov    rsi,QWORD PTR [rsp+0x8]
   0x7ffff7ebb134 <vmsplice+84>:	mov    edi,DWORD PTR [rsp]
   0x7ffff7ebb137 <vmsplice+87>:	mov    eax,0x116
   0x7ffff7ebb13c <vmsplice+92>:	syscall
   0x7ffff7ebb13e <vmsplice+94>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb144 <vmsplice+100>:	ja     0x7ffff7ebb178 <vmsplice+152>
   0x7ffff7ebb146 <vmsplice+102>:	mov    edi,r8d
   0x7ffff7ebb149 <vmsplice+105>:	mov    QWORD PTR [rsp],rax
   0x7ffff7ebb14d <vmsplice+109>:	call   0x7ffff7e25ae0
   0x7ffff7ebb152 <vmsplice+114>:	mov    rax,QWORD PTR [rsp]
   0x7ffff7ebb156 <vmsplice+118>:	add    rsp,0x28
   0x7ffff7ebb15a <vmsplice+122>:	ret
   0x7ffff7ebb15b <vmsplice+123>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb160 <vmsplice+128>:	mov    rdx,QWORD PTR [rip+0xf2ca9]        # 0x7ffff7fade10
   0x7ffff7ebb167 <vmsplice+135>:	neg    eax
   0x7ffff7ebb169 <vmsplice+137>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb16c <vmsplice+140>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebb173 <vmsplice+147>:	ret
   0x7ffff7ebb174 <vmsplice+148>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebb178 <vmsplice+152>:	mov    rdx,QWORD PTR [rip+0xf2c91]        # 0x7ffff7fade10
   0x7ffff7ebb17f <vmsplice+159>:	neg    eax
   0x7ffff7ebb181 <vmsplice+161>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb184 <vmsplice+164>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebb18b <vmsplice+171>:	jmp    0x7ffff7ebb146 <vmsplice+102>
   0x7ffff7ebb18d:	nop    DWORD PTR [rax]
   0x7ffff7ebb190 <splice>:	endbr64
   0x7ffff7ebb194 <splice+4>:	mov    r10,rcx
   0x7ffff7ebb197 <splice+7>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebb19f <splice+15>:	test   eax,eax
   0x7ffff7ebb1a1 <splice+17>:	jne    0x7ffff7ebb1b8 <splice+40>
   0x7ffff7ebb1a3 <splice+19>:	mov    eax,0x113
   0x7ffff7ebb1a8 <splice+24>:	syscall
   0x7ffff7ebb1aa <splice+26>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb1b0 <splice+32>:	ja     0x7ffff7ebb230 <splice+160>
   0x7ffff7ebb1b2 <splice+34>:	ret
   0x7ffff7ebb1b3 <splice+35>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb1b8 <splice+40>:	push   r12
   0x7ffff7ebb1ba <splice+42>:	sub    rsp,0x30
   0x7ffff7ebb1be <splice+46>:	mov    DWORD PTR [rsp+0x2c],r9d
   0x7ffff7ebb1c3 <splice+51>:	mov    QWORD PTR [rsp+0x20],r8
   0x7ffff7ebb1c8 <splice+56>:	mov    DWORD PTR [rsp+0x28],edx
   0x7ffff7ebb1cc <splice+60>:	mov    QWORD PTR [rsp+0x10],rsi
   0x7ffff7ebb1d1 <splice+65>:	mov    DWORD PTR [rsp+0x8],edi
   0x7ffff7ebb1d5 <splice+69>:	mov    QWORD PTR [rsp+0x18],rcx
   0x7ffff7ebb1da <splice+74>:	call   0x7ffff7e25a70
   0x7ffff7ebb1df <splice+79>:	mov    r9d,DWORD PTR [rsp+0x2c]
   0x7ffff7ebb1e4 <splice+84>:	mov    r8,QWORD PTR [rsp+0x20]
   0x7ffff7ebb1e9 <splice+89>:	mov    r12d,eax
   0x7ffff7ebb1ec <splice+92>:	mov    r10,QWORD PTR [rsp+0x18]
   0x7ffff7ebb1f1 <splice+97>:	mov    edx,DWORD PTR [rsp+0x28]
   0x7ffff7ebb1f5 <splice+101>:	mov    eax,0x113
   0x7ffff7ebb1fa <splice+106>:	mov    rsi,QWORD PTR [rsp+0x10]
   0x7ffff7ebb1ff <splice+111>:	mov    edi,DWORD PTR [rsp+0x8]
   0x7ffff7ebb203 <splice+115>:	syscall
   0x7ffff7ebb205 <splice+117>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb20b <splice+123>:	ja     0x7ffff7ebb248 <splice+184>
   0x7ffff7ebb20d <splice+125>:	mov    edi,r12d
   0x7ffff7ebb210 <splice+128>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ebb215 <splice+133>:	call   0x7ffff7e25ae0
   0x7ffff7ebb21a <splice+138>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ebb21f <splice+143>:	add    rsp,0x30
   0x7ffff7ebb223 <splice+147>:	pop    r12
   0x7ffff7ebb225 <splice+149>:	ret
   0x7ffff7ebb226 <splice+150>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb230 <splice+160>:	mov    rdx,QWORD PTR [rip+0xf2bd9]        # 0x7ffff7fade10
   0x7ffff7ebb237 <splice+167>:	neg    eax
   0x7ffff7ebb239 <splice+169>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb23c <splice+172>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebb243 <splice+179>:	ret
   0x7ffff7ebb244 <splice+180>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebb248 <splice+184>:	mov    rdx,QWORD PTR [rip+0xf2bc1]        # 0x7ffff7fade10
   0x7ffff7ebb24f <splice+191>:	neg    eax
   0x7ffff7ebb251 <splice+193>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb254 <splice+196>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebb25b <splice+203>:	jmp    0x7ffff7ebb20d <splice+125>
   0x7ffff7ebb25d:	nop    DWORD PTR [rax]
   0x7ffff7ebb260 <open_by_handle_at>:	endbr64
   0x7ffff7ebb264 <open_by_handle_at+4>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebb26c <open_by_handle_at+12>:	test   eax,eax
   0x7ffff7ebb26e <open_by_handle_at+14>:	jne    0x7ffff7ebb280 <open_by_handle_at+32>
   0x7ffff7ebb270 <open_by_handle_at+16>:	mov    eax,0x130
   0x7ffff7ebb275 <open_by_handle_at+21>:	syscall
   0x7ffff7ebb277 <open_by_handle_at+23>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb27d <open_by_handle_at+29>:	ja     0x7ffff7ebb2d0 <open_by_handle_at+112>
   0x7ffff7ebb27f <open_by_handle_at+31>:	ret
   0x7ffff7ebb280 <open_by_handle_at+32>:	sub    rsp,0x18
   0x7ffff7ebb284 <open_by_handle_at+36>:	mov    DWORD PTR [rsp+0xc],edx
   0x7ffff7ebb288 <open_by_handle_at+40>:	mov    QWORD PTR [rsp],rsi
   0x7ffff7ebb28c <open_by_handle_at+44>:	mov    DWORD PTR [rsp+0x8],edi
   0x7ffff7ebb290 <open_by_handle_at+48>:	call   0x7ffff7e25a70
   0x7ffff7ebb295 <open_by_handle_at+53>:	mov    edx,DWORD PTR [rsp+0xc]
   0x7ffff7ebb299 <open_by_handle_at+57>:	mov    rsi,QWORD PTR [rsp]
   0x7ffff7ebb29d <open_by_handle_at+61>:	mov    r8d,eax
   0x7ffff7ebb2a0 <open_by_handle_at+64>:	mov    edi,DWORD PTR [rsp+0x8]
   0x7ffff7ebb2a4 <open_by_handle_at+68>:	mov    eax,0x130
   0x7ffff7ebb2a9 <open_by_handle_at+73>:	syscall
   0x7ffff7ebb2ab <open_by_handle_at+75>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb2b1 <open_by_handle_at+81>:	ja     0x7ffff7ebb2e8 <open_by_handle_at+136>
   0x7ffff7ebb2b3 <open_by_handle_at+83>:	mov    edi,r8d
   0x7ffff7ebb2b6 <open_by_handle_at+86>:	mov    DWORD PTR [rsp+0x8],eax
   0x7ffff7ebb2ba <open_by_handle_at+90>:	call   0x7ffff7e25ae0
   0x7ffff7ebb2bf <open_by_handle_at+95>:	mov    eax,DWORD PTR [rsp+0x8]
   0x7ffff7ebb2c3 <open_by_handle_at+99>:	add    rsp,0x18
   0x7ffff7ebb2c7 <open_by_handle_at+103>:	ret
   0x7ffff7ebb2c8 <open_by_handle_at+104>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb2d0 <open_by_handle_at+112>:	mov    rdx,QWORD PTR [rip+0xf2b39]        # 0x7ffff7fade10
   0x7ffff7ebb2d7 <open_by_handle_at+119>:	neg    eax
   0x7ffff7ebb2d9 <open_by_handle_at+121>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb2dc <open_by_handle_at+124>:	mov    eax,0xffffffff
   0x7ffff7ebb2e1 <open_by_handle_at+129>:	ret
   0x7ffff7ebb2e2 <open_by_handle_at+130>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb2e8 <open_by_handle_at+136>:	mov    rdx,QWORD PTR [rip+0xf2b21]        # 0x7ffff7fade10
   0x7ffff7ebb2ef <open_by_handle_at+143>:	neg    eax
   0x7ffff7ebb2f1 <open_by_handle_at+145>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb2f4 <open_by_handle_at+148>:	mov    eax,0xffffffff
   0x7ffff7ebb2f9 <open_by_handle_at+153>:	jmp    0x7ffff7ebb2b3 <open_by_handle_at+83>
   0x7ffff7ebb2fb:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb300 <mlock2>:	endbr64
   0x7ffff7ebb304 <mlock2+4>:	test   edx,edx
   0x7ffff7ebb306 <mlock2+6>:	je     0x7ffff7ebb338 <mlock2+56>
   0x7ffff7ebb308 <mlock2+8>:	mov    eax,0x145
   0x7ffff7ebb30d <mlock2+13>:	syscall
   0x7ffff7ebb30f <mlock2+15>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb315 <mlock2+21>:	ja     0x7ffff7ebb350 <mlock2+80>
   0x7ffff7ebb317 <mlock2+23>:	mov    r8d,eax
   0x7ffff7ebb31a <mlock2+26>:	test   eax,eax
   0x7ffff7ebb31c <mlock2+28>:	je     0x7ffff7ebb32d <mlock2+45>
   0x7ffff7ebb31e <mlock2+30>:	mov    rax,QWORD PTR [rip+0xf2aeb]        # 0x7ffff7fade10
   0x7ffff7ebb325 <mlock2+37>:	mov    edx,DWORD PTR fs:[rax]
   0x7ffff7ebb328 <mlock2+40>:	cmp    edx,0x26
   0x7ffff7ebb32b <mlock2+43>:	je     0x7ffff7ebb366 <mlock2+102>
   0x7ffff7ebb32d <mlock2+45>:	mov    eax,r8d
   0x7ffff7ebb330 <mlock2+48>:	ret
   0x7ffff7ebb331 <mlock2+49>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebb338 <mlock2+56>:	mov    eax,0x95
   0x7ffff7ebb33d <mlock2+61>:	syscall
   0x7ffff7ebb33f <mlock2+63>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb345 <mlock2+69>:	ja     0x7ffff7ebb378 <mlock2+120>
   0x7ffff7ebb347 <mlock2+71>:	mov    r8d,eax
   0x7ffff7ebb34a <mlock2+74>:	mov    eax,r8d
   0x7ffff7ebb34d <mlock2+77>:	ret
   0x7ffff7ebb34e <mlock2+78>:	xchg   ax,ax
   0x7ffff7ebb350 <mlock2+80>:	mov    edx,eax
   0x7ffff7ebb352 <mlock2+82>:	mov    rax,QWORD PTR [rip+0xf2ab7]        # 0x7ffff7fade10
   0x7ffff7ebb359 <mlock2+89>:	mov    r8d,0xffffffff
   0x7ffff7ebb35f <mlock2+95>:	neg    edx
   0x7ffff7ebb361 <mlock2+97>:	mov    DWORD PTR fs:[rax],edx
   0x7ffff7ebb364 <mlock2+100>:	jmp    0x7ffff7ebb328 <mlock2+40>
   0x7ffff7ebb366 <mlock2+102>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ebb36d <mlock2+109>:	mov    r8d,0xffffffff
   0x7ffff7ebb373 <mlock2+115>:	jmp    0x7ffff7ebb32d <mlock2+45>
   0x7ffff7ebb375 <mlock2+117>:	nop    DWORD PTR [rax]
   0x7ffff7ebb378 <mlock2+120>:	mov    rdx,QWORD PTR [rip+0xf2a91]        # 0x7ffff7fade10
   0x7ffff7ebb37f <mlock2+127>:	neg    eax
   0x7ffff7ebb381 <mlock2+129>:	mov    r8d,0xffffffff
   0x7ffff7ebb387 <mlock2+135>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb38a <mlock2+138>:	jmp    0x7ffff7ebb32d <mlock2+45>
   0x7ffff7ebb38c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebb390 <pkey_mprotect>:	endbr64
   0x7ffff7ebb394 <pkey_mprotect+4>:	mov    r10d,ecx
   0x7ffff7ebb397 <pkey_mprotect+7>:	cmp    ecx,0xffffffff
   0x7ffff7ebb39a <pkey_mprotect+10>:	je     0x7ffff7ebb3c8 <pkey_mprotect+56>
   0x7ffff7ebb39c <pkey_mprotect+12>:	mov    eax,0x149
   0x7ffff7ebb3a1 <pkey_mprotect+17>:	syscall
   0x7ffff7ebb3a3 <pkey_mprotect+19>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb3a9 <pkey_mprotect+25>:	ja     0x7ffff7ebb3b0 <pkey_mprotect+32>
   0x7ffff7ebb3ab <pkey_mprotect+27>:	ret
   0x7ffff7ebb3ac <pkey_mprotect+28>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebb3b0 <pkey_mprotect+32>:	mov    rdx,QWORD PTR [rip+0xf2a59]        # 0x7ffff7fade10
   0x7ffff7ebb3b7 <pkey_mprotect+39>:	neg    eax
   0x7ffff7ebb3b9 <pkey_mprotect+41>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb3bc <pkey_mprotect+44>:	mov    eax,0xffffffff
   0x7ffff7ebb3c1 <pkey_mprotect+49>:	ret
   0x7ffff7ebb3c2 <pkey_mprotect+50>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb3c8 <pkey_mprotect+56>:	jmp    0x7ffff7eb3c50 <mprotect>
   0x7ffff7ebb3cd:	nop    DWORD PTR [rax]
   0x7ffff7ebb3d0 <pkey_set>:	endbr64
   0x7ffff7ebb3d4 <pkey_set+4>:	cmp    edi,0xf
   0x7ffff7ebb3d7 <pkey_set+7>:	ja     0x7ffff7ebb410 <pkey_set+64>
   0x7ffff7ebb3d9 <pkey_set+9>:	cmp    esi,0x3
   0x7ffff7ebb3dc <pkey_set+12>:	ja     0x7ffff7ebb410 <pkey_set+64>
   0x7ffff7ebb3de <pkey_set+14>:	xor    r8d,r8d
   0x7ffff7ebb3e1 <pkey_set+17>:	add    edi,edi
   0x7ffff7ebb3e3 <pkey_set+19>:	mov    ecx,r8d
   0x7ffff7ebb3e6 <pkey_set+22>:	rdpkru
   0x7ffff7ebb3e9 <pkey_set+25>:	mov    edx,0x3
   0x7ffff7ebb3ee <pkey_set+30>:	mov    ecx,edi
   0x7ffff7ebb3f0 <pkey_set+32>:	mov    r9d,eax
   0x7ffff7ebb3f3 <pkey_set+35>:	shl    edx,cl
   0x7ffff7ebb3f5 <pkey_set+37>:	shl    esi,cl
   0x7ffff7ebb3f7 <pkey_set+39>:	mov    ecx,r8d
   0x7ffff7ebb3fa <pkey_set+42>:	mov    eax,edx
   0x7ffff7ebb3fc <pkey_set+44>:	mov    edx,r8d
   0x7ffff7ebb3ff <pkey_set+47>:	not    eax
   0x7ffff7ebb401 <pkey_set+49>:	and    eax,r9d
   0x7ffff7ebb404 <pkey_set+52>:	or     eax,esi
   0x7ffff7ebb406 <pkey_set+54>:	wrpkru
   0x7ffff7ebb409 <pkey_set+57>:	xor    eax,eax
   0x7ffff7ebb40b <pkey_set+59>:	ret
   0x7ffff7ebb40c <pkey_set+60>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebb410 <pkey_set+64>:	mov    rax,QWORD PTR [rip+0xf29f9]        # 0x7ffff7fade10
   0x7ffff7ebb417 <pkey_set+71>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ebb41e <pkey_set+78>:	mov    eax,0xffffffff
   0x7ffff7ebb423 <pkey_set+83>:	ret
   0x7ffff7ebb424:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb42e:	xchg   ax,ax
   0x7ffff7ebb430 <pkey_get>:	endbr64
   0x7ffff7ebb434 <pkey_get+4>:	cmp    edi,0xf
   0x7ffff7ebb437 <pkey_get+7>:	ja     0x7ffff7ebb450 <pkey_get+32>
   0x7ffff7ebb439 <pkey_get+9>:	xor    ecx,ecx
   0x7ffff7ebb43b <pkey_get+11>:	rdpkru
   0x7ffff7ebb43e <pkey_get+14>:	lea    ecx,[rdi+rdi*1]
   0x7ffff7ebb441 <pkey_get+17>:	shr    eax,cl
   0x7ffff7ebb443 <pkey_get+19>:	and    eax,0x3
   0x7ffff7ebb446 <pkey_get+22>:	ret
   0x7ffff7ebb447 <pkey_get+23>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb450 <pkey_get+32>:	mov    rax,QWORD PTR [rip+0xf29b9]        # 0x7ffff7fade10
   0x7ffff7ebb457 <pkey_get+39>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ebb45e <pkey_get+46>:	mov    eax,0xffffffff
   0x7ffff7ebb463 <pkey_get+51>:	ret
   0x7ffff7ebb464:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb46e:	xchg   ax,ax
   0x7ffff7ebb470 <timerfd_gettime>:	endbr64
   0x7ffff7ebb474 <timerfd_gettime+4>:	mov    eax,0x11f
   0x7ffff7ebb479 <timerfd_gettime+9>:	syscall
   0x7ffff7ebb47b <timerfd_gettime+11>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb481 <timerfd_gettime+17>:	ja     0x7ffff7ebb488 <timerfd_gettime+24>
   0x7ffff7ebb483 <timerfd_gettime+19>:	ret
   0x7ffff7ebb484 <timerfd_gettime+20>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebb488 <timerfd_gettime+24>:	mov    rdx,QWORD PTR [rip+0xf2981]        # 0x7ffff7fade10
   0x7ffff7ebb48f <timerfd_gettime+31>:	neg    eax
   0x7ffff7ebb491 <timerfd_gettime+33>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb494 <timerfd_gettime+36>:	mov    eax,0xffffffff
   0x7ffff7ebb499 <timerfd_gettime+41>:	ret
   0x7ffff7ebb49a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb4a0 <timerfd_settime>:	endbr64
   0x7ffff7ebb4a4 <timerfd_settime+4>:	mov    r10,rcx
   0x7ffff7ebb4a7 <timerfd_settime+7>:	mov    eax,0x11e
   0x7ffff7ebb4ac <timerfd_settime+12>:	syscall
   0x7ffff7ebb4ae <timerfd_settime+14>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb4b4 <timerfd_settime+20>:	ja     0x7ffff7ebb4c0 <timerfd_settime+32>
   0x7ffff7ebb4b6 <timerfd_settime+22>:	ret
   0x7ffff7ebb4b7 <timerfd_settime+23>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb4c0 <timerfd_settime+32>:	mov    rdx,QWORD PTR [rip+0xf2949]        # 0x7ffff7fade10
   0x7ffff7ebb4c7 <timerfd_settime+39>:	neg    eax
   0x7ffff7ebb4c9 <timerfd_settime+41>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb4cc <timerfd_settime+44>:	mov    eax,0xffffffff
   0x7ffff7ebb4d1 <timerfd_settime+49>:	ret
   0x7ffff7ebb4d2:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb4dc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebb4e0 <prctl>:	endbr64
   0x7ffff7ebb4e4 <prctl+4>:	sub    rsp,0x58
   0x7ffff7ebb4e8 <prctl+8>:	mov    r10,rcx
   0x7ffff7ebb4eb <prctl+11>:	mov    QWORD PTR [rsp+0x28],rsi
   0x7ffff7ebb4f0 <prctl+16>:	mov    QWORD PTR [rsp+0x30],rdx
   0x7ffff7ebb4f5 <prctl+21>:	mov    QWORD PTR [rsp+0x38],rcx
   0x7ffff7ebb4fa <prctl+26>:	mov    QWORD PTR [rsp+0x40],r8
   0x7ffff7ebb4ff <prctl+31>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ebb508 <prctl+40>:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7ebb50d <prctl+45>:	xor    eax,eax
   0x7ffff7ebb50f <prctl+47>:	lea    rax,[rsp+0x60]
   0x7ffff7ebb514 <prctl+52>:	mov    DWORD PTR [rsp],0x8
   0x7ffff7ebb51b <prctl+59>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ebb520 <prctl+64>:	lea    rax,[rsp+0x20]
   0x7ffff7ebb525 <prctl+69>:	mov    QWORD PTR [rsp+0x10],rax
   0x7ffff7ebb52a <prctl+74>:	mov    eax,0x9d
   0x7ffff7ebb52f <prctl+79>:	syscall
   0x7ffff7ebb531 <prctl+81>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb537 <prctl+87>:	ja     0x7ffff7ebb550 <prctl+112>
   0x7ffff7ebb539 <prctl+89>:	mov    rdx,QWORD PTR [rsp+0x18]
   0x7ffff7ebb53e <prctl+94>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7ebb547 <prctl+103>:	jne    0x7ffff7ebb563 <prctl+131>
   0x7ffff7ebb549 <prctl+105>:	add    rsp,0x58
   0x7ffff7ebb54d <prctl+109>:	ret
   0x7ffff7ebb54e <prctl+110>:	xchg   ax,ax
   0x7ffff7ebb550 <prctl+112>:	mov    rdx,QWORD PTR [rip+0xf28b9]        # 0x7ffff7fade10
   0x7ffff7ebb557 <prctl+119>:	neg    eax
   0x7ffff7ebb559 <prctl+121>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb55c <prctl+124>:	mov    eax,0xffffffff
   0x7ffff7ebb561 <prctl+129>:	jmp    0x7ffff7ebb539 <prctl+89>
   0x7ffff7ebb563 <prctl+131>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ebb568:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb570 <process_vm_readv>:	endbr64
   0x7ffff7ebb574 <process_vm_readv+4>:	mov    r10,rcx
   0x7ffff7ebb577 <process_vm_readv+7>:	mov    eax,0x136
   0x7ffff7ebb57c <process_vm_readv+12>:	syscall
   0x7ffff7ebb57e <process_vm_readv+14>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb584 <process_vm_readv+20>:	ja     0x7ffff7ebb590 <process_vm_readv+32>
   0x7ffff7ebb586 <process_vm_readv+22>:	ret
   0x7ffff7ebb587 <process_vm_readv+23>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb590 <process_vm_readv+32>:	mov    rdx,QWORD PTR [rip+0xf2879]        # 0x7ffff7fade10
   0x7ffff7ebb597 <process_vm_readv+39>:	neg    eax
   0x7ffff7ebb599 <process_vm_readv+41>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb59c <process_vm_readv+44>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebb5a3 <process_vm_readv+51>:	ret
   0x7ffff7ebb5a4:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb5ae:	xchg   ax,ax
   0x7ffff7ebb5b0 <process_vm_writev>:	endbr64
   0x7ffff7ebb5b4 <process_vm_writev+4>:	mov    r10,rcx
   0x7ffff7ebb5b7 <process_vm_writev+7>:	mov    eax,0x137
   0x7ffff7ebb5bc <process_vm_writev+12>:	syscall
   0x7ffff7ebb5be <process_vm_writev+14>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb5c4 <process_vm_writev+20>:	ja     0x7ffff7ebb5d0 <process_vm_writev+32>
   0x7ffff7ebb5c6 <process_vm_writev+22>:	ret
   0x7ffff7ebb5c7 <process_vm_writev+23>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb5d0 <process_vm_writev+32>:	mov    rdx,QWORD PTR [rip+0xf2839]        # 0x7ffff7fade10
   0x7ffff7ebb5d7 <process_vm_writev+39>:	neg    eax
   0x7ffff7ebb5d9 <process_vm_writev+41>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb5dc <process_vm_writev+44>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebb5e3 <process_vm_writev+51>:	ret
   0x7ffff7ebb5e4:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb5ee:	xchg   ax,ax
   0x7ffff7ebb5f0 <clock_adjtime>:	endbr64
   0x7ffff7ebb5f4 <clock_adjtime+4>:	mov    eax,0x131
   0x7ffff7ebb5f9 <clock_adjtime+9>:	syscall
   0x7ffff7ebb5fb <clock_adjtime+11>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb601 <clock_adjtime+17>:	ja     0x7ffff7ebb608 <clock_adjtime+24>
   0x7ffff7ebb603 <clock_adjtime+19>:	ret
   0x7ffff7ebb604 <clock_adjtime+20>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebb608 <clock_adjtime+24>:	mov    rdx,QWORD PTR [rip+0xf2801]        # 0x7ffff7fade10
   0x7ffff7ebb60f <clock_adjtime+31>:	neg    eax
   0x7ffff7ebb611 <clock_adjtime+33>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb614 <clock_adjtime+36>:	mov    eax,0xffffffff
   0x7ffff7ebb619 <clock_adjtime+41>:	ret
   0x7ffff7ebb61a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb620 <__xstat64>:	endbr64
   0x7ffff7ebb624 <__xstat64+4>:	mov    r8d,edi
   0x7ffff7ebb627 <__xstat64+7>:	mov    rdi,rsi
   0x7ffff7ebb62a <__xstat64+10>:	mov    rsi,rdx
   0x7ffff7ebb62d <__xstat64+13>:	cmp    r8d,0x1
   0x7ffff7ebb631 <__xstat64+17>:	ja     0x7ffff7ebb660 <__xstat64+64>
   0x7ffff7ebb633 <__xstat64+19>:	mov    eax,0x4
   0x7ffff7ebb638 <__xstat64+24>:	syscall
   0x7ffff7ebb63a <__xstat64+26>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb640 <__xstat64+32>:	ja     0x7ffff7ebb648 <__xstat64+40>
   0x7ffff7ebb642 <__xstat64+34>:	ret
   0x7ffff7ebb643 <__xstat64+35>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb648 <__xstat64+40>:	mov    rdx,QWORD PTR [rip+0xf27c1]        # 0x7ffff7fade10
   0x7ffff7ebb64f <__xstat64+47>:	neg    eax
   0x7ffff7ebb651 <__xstat64+49>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb654 <__xstat64+52>:	mov    eax,0xffffffff
   0x7ffff7ebb659 <__xstat64+57>:	ret
   0x7ffff7ebb65a <__xstat64+58>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb660 <__xstat64+64>:	mov    rax,QWORD PTR [rip+0xf27a9]        # 0x7ffff7fade10
   0x7ffff7ebb667 <__xstat64+71>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ebb66e <__xstat64+78>:	mov    eax,0xffffffff
   0x7ffff7ebb673 <__xstat64+83>:	ret
   0x7ffff7ebb674:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb67e:	xchg   ax,ax
   0x7ffff7ebb680 <__fxstat64>:	endbr64
   0x7ffff7ebb684 <__fxstat64+4>:	mov    r8d,edi
   0x7ffff7ebb687 <__fxstat64+7>:	mov    edi,esi
   0x7ffff7ebb689 <__fxstat64+9>:	mov    rsi,rdx
   0x7ffff7ebb68c <__fxstat64+12>:	cmp    r8d,0x1
   0x7ffff7ebb690 <__fxstat64+16>:	ja     0x7ffff7ebb6c0 <__fxstat64+64>
   0x7ffff7ebb692 <__fxstat64+18>:	mov    eax,0x5
   0x7ffff7ebb697 <__fxstat64+23>:	syscall
   0x7ffff7ebb699 <__fxstat64+25>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb69f <__fxstat64+31>:	ja     0x7ffff7ebb6a8 <__fxstat64+40>
   0x7ffff7ebb6a1 <__fxstat64+33>:	ret
   0x7ffff7ebb6a2 <__fxstat64+34>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb6a8 <__fxstat64+40>:	mov    rdx,QWORD PTR [rip+0xf2761]        # 0x7ffff7fade10
   0x7ffff7ebb6af <__fxstat64+47>:	neg    eax
   0x7ffff7ebb6b1 <__fxstat64+49>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb6b4 <__fxstat64+52>:	mov    eax,0xffffffff
   0x7ffff7ebb6b9 <__fxstat64+57>:	ret
   0x7ffff7ebb6ba <__fxstat64+58>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb6c0 <__fxstat64+64>:	mov    rax,QWORD PTR [rip+0xf2749]        # 0x7ffff7fade10
   0x7ffff7ebb6c7 <__fxstat64+71>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ebb6ce <__fxstat64+78>:	mov    eax,0xffffffff
   0x7ffff7ebb6d3 <__fxstat64+83>:	ret
   0x7ffff7ebb6d4:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb6de:	xchg   ax,ax
   0x7ffff7ebb6e0 <__lxstat64>:	endbr64
   0x7ffff7ebb6e4 <__lxstat64+4>:	mov    r8d,edi
   0x7ffff7ebb6e7 <__lxstat64+7>:	mov    rdi,rsi
   0x7ffff7ebb6ea <__lxstat64+10>:	mov    rsi,rdx
   0x7ffff7ebb6ed <__lxstat64+13>:	cmp    r8d,0x1
   0x7ffff7ebb6f1 <__lxstat64+17>:	ja     0x7ffff7ebb720 <__lxstat64+64>
   0x7ffff7ebb6f3 <__lxstat64+19>:	mov    eax,0x6
   0x7ffff7ebb6f8 <__lxstat64+24>:	syscall
   0x7ffff7ebb6fa <__lxstat64+26>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb700 <__lxstat64+32>:	ja     0x7ffff7ebb708 <__lxstat64+40>
   0x7ffff7ebb702 <__lxstat64+34>:	ret
   0x7ffff7ebb703 <__lxstat64+35>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb708 <__lxstat64+40>:	mov    rdx,QWORD PTR [rip+0xf2701]        # 0x7ffff7fade10
   0x7ffff7ebb70f <__lxstat64+47>:	neg    eax
   0x7ffff7ebb711 <__lxstat64+49>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb714 <__lxstat64+52>:	mov    eax,0xffffffff
   0x7ffff7ebb719 <__lxstat64+57>:	ret
   0x7ffff7ebb71a <__lxstat64+58>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb720 <__lxstat64+64>:	mov    rax,QWORD PTR [rip+0xf26e9]        # 0x7ffff7fade10
   0x7ffff7ebb727 <__lxstat64+71>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ebb72e <__lxstat64+78>:	mov    eax,0xffffffff
   0x7ffff7ebb733 <__lxstat64+83>:	ret
   0x7ffff7ebb734:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb73e:	xchg   ax,ax
   0x7ffff7ebb740 <__fxstatat64>:	endbr64
   0x7ffff7ebb744 <__fxstatat64+4>:	mov    r9d,edi
   0x7ffff7ebb747 <__fxstatat64+7>:	mov    r10d,r8d
   0x7ffff7ebb74a <__fxstatat64+10>:	mov    edi,esi
   0x7ffff7ebb74c <__fxstatat64+12>:	mov    rsi,rdx
   0x7ffff7ebb74f <__fxstatat64+15>:	mov    rdx,rcx
   0x7ffff7ebb752 <__fxstatat64+18>:	cmp    r9d,0x1
   0x7ffff7ebb756 <__fxstatat64+22>:	ja     0x7ffff7ebb788 <__fxstatat64+72>
   0x7ffff7ebb758 <__fxstatat64+24>:	mov    eax,0x106
   0x7ffff7ebb75d <__fxstatat64+29>:	syscall
   0x7ffff7ebb75f <__fxstatat64+31>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebb765 <__fxstatat64+37>:	ja     0x7ffff7ebb770 <__fxstatat64+48>
   0x7ffff7ebb767 <__fxstatat64+39>:	ret
   0x7ffff7ebb768 <__fxstatat64+40>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb770 <__fxstatat64+48>:	mov    rdx,QWORD PTR [rip+0xf2699]        # 0x7ffff7fade10
   0x7ffff7ebb777 <__fxstatat64+55>:	neg    eax
   0x7ffff7ebb779 <__fxstatat64+57>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebb77c <__fxstatat64+60>:	mov    eax,0xffffffff
   0x7ffff7ebb781 <__fxstatat64+65>:	ret
   0x7ffff7ebb782 <__fxstatat64+66>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb788 <__fxstatat64+72>:	mov    rax,QWORD PTR [rip+0xf2681]        # 0x7ffff7fade10
   0x7ffff7ebb78f <__fxstatat64+79>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ebb796 <__fxstatat64+86>:	mov    eax,0xffffffff
   0x7ffff7ebb79b <__fxstatat64+91>:	ret
   0x7ffff7ebb79c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebb7a0 <__xmknod>:	endbr64
   0x7ffff7ebb7a4 <__xmknod+4>:	test   edi,edi
   0x7ffff7ebb7a6 <__xmknod+6>:	jne    0x7ffff7ebb7b8 <__xmknod+24>
   0x7ffff7ebb7a8 <__xmknod+8>:	mov    rcx,QWORD PTR [rcx]
   0x7ffff7ebb7ab <__xmknod+11>:	mov    edi,0xffffff9c
   0x7ffff7ebb7b0 <__xmknod+16>:	jmp    0x7ffff7ea9260 <mknodat>
   0x7ffff7ebb7b5 <__xmknod+21>:	nop    DWORD PTR [rax]
   0x7ffff7ebb7b8 <__xmknod+24>:	mov    rax,QWORD PTR [rip+0xf2651]        # 0x7ffff7fade10
   0x7ffff7ebb7bf <__xmknod+31>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ebb7c6 <__xmknod+38>:	mov    eax,0xffffffff
   0x7ffff7ebb7cb <__xmknod+43>:	ret
   0x7ffff7ebb7cc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebb7d0 <__xmknodat>:	endbr64
   0x7ffff7ebb7d4 <__xmknodat+4>:	mov    r9d,edi
   0x7ffff7ebb7d7 <__xmknodat+7>:	mov    edi,esi
   0x7ffff7ebb7d9 <__xmknodat+9>:	mov    rsi,rdx
   0x7ffff7ebb7dc <__xmknodat+12>:	mov    edx,ecx
   0x7ffff7ebb7de <__xmknodat+14>:	test   r9d,r9d
   0x7ffff7ebb7e1 <__xmknodat+17>:	jne    0x7ffff7ebb7f0 <__xmknodat+32>
   0x7ffff7ebb7e3 <__xmknodat+19>:	mov    rcx,QWORD PTR [r8]
   0x7ffff7ebb7e6 <__xmknodat+22>:	jmp    0x7ffff7ea9260 <mknodat>
   0x7ffff7ebb7eb <__xmknodat+27>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb7f0 <__xmknodat+32>:	mov    rax,QWORD PTR [rip+0xf2619]        # 0x7ffff7fade10
   0x7ffff7ebb7f7 <__xmknodat+39>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ebb7fe <__xmknodat+46>:	mov    eax,0xffffffff
   0x7ffff7ebb803 <__xmknodat+51>:	ret
   0x7ffff7ebb804:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb80e:	xchg   ax,ax
   0x7ffff7ebb810:	endbr64
   0x7ffff7ebb814:	push   r15
   0x7ffff7ebb816:	xor    edx,edx
   0x7ffff7ebb818:	mov    r15d,esi
   0x7ffff7ebb81b:	mov    esi,0x10000
   0x7ffff7ebb820:	push   r14
   0x7ffff7ebb822:	push   r13
   0x7ffff7ebb824:	push   r12
   0x7ffff7ebb826:	lea    r12,[rip+0xb4db1]        # 0x7ffff7f705de
   0x7ffff7ebb82d:	push   rbp
   0x7ffff7ebb82e:	push   rbx
   0x7ffff7ebb82f:	mov    ebx,edi
   0x7ffff7ebb831:	mov    rdi,r12
   0x7ffff7ebb834:	sub    rsp,0x418
   0x7ffff7ebb83b:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ebb844:	mov    QWORD PTR [rsp+0x408],rax
   0x7ffff7ebb84c:	xor    eax,eax
   0x7ffff7ebb84e:	call   0x7ffff7eaeb80 <__open_nocancel>
   0x7ffff7ebb853:	mov    ebp,eax
   0x7ffff7ebb855:	cmp    eax,0xffffffff
   0x7ffff7ebb858:	je     0x7ffff7ebb95c
   0x7ffff7ebb85e:	mov    r12,rsp
   0x7ffff7ebb861:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebb868:	mov    edx,0x400
   0x7ffff7ebb86d:	mov    rsi,r12
   0x7ffff7ebb870:	mov    edi,ebp
   0x7ffff7ebb872:	call   0x7ffff7e7b6a0 <getdents64>
   0x7ffff7ebb877:	cmp    rax,0xffffffffffffffff
   0x7ffff7ebb87b:	je     0x7ffff7ebb91a
   0x7ffff7ebb881:	test   rax,rax
   0x7ffff7ebb884:	je     0x7ffff7ebb954
   0x7ffff7ebb88a:	lea    r14,[r12+rax*1]
   0x7ffff7ebb88e:	xor    esi,esi
   0x7ffff7ebb890:	mov    rax,r12
   0x7ffff7ebb893:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb898:	movzx  r13d,WORD PTR [rax+0x10]
   0x7ffff7ebb89d:	movsx  edx,BYTE PTR [rax+0x13]
   0x7ffff7ebb8a1:	add    r13,rax
   0x7ffff7ebb8a4:	cmp    dl,0x2e
   0x7ffff7ebb8a7:	je     0x7ffff7ebb8f8
   0x7ffff7ebb8a9:	lea    ecx,[rdx-0x30]
   0x7ffff7ebb8ac:	cmp    ecx,0x9
   0x7ffff7ebb8af:	ja     0x7ffff7ebb950
   0x7ffff7ebb8b5:	add    rax,0x13
   0x7ffff7ebb8b9:	xor    edi,edi
   0x7ffff7ebb8bb:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb8c0:	lea    ecx,[rdi+rdi*4]
   0x7ffff7ebb8c3:	add    rax,0x1
   0x7ffff7ebb8c7:	lea    edi,[rdx+rcx*2-0x30]
   0x7ffff7ebb8cb:	movsx  edx,BYTE PTR [rax]
   0x7ffff7ebb8ce:	lea    ecx,[rdx-0x30]
   0x7ffff7ebb8d1:	cmp    ecx,0x9
   0x7ffff7ebb8d4:	jbe    0x7ffff7ebb8c0
   0x7ffff7ebb8d6:	cmp    ebp,edi
   0x7ffff7ebb8d8:	je     0x7ffff7ebb8f8
   0x7ffff7ebb8da:	cmp    ebx,edi
   0x7ffff7ebb8dc:	jg     0x7ffff7ebb8f8
   0x7ffff7ebb8de:	call   0x7ffff7eaea10 <__close_nocancel>
   0x7ffff7ebb8e3:	cmp    r14,r13
   0x7ffff7ebb8e6:	je     0x7ffff7ebb906
   0x7ffff7ebb8e8:	mov    esi,0x1
   0x7ffff7ebb8ed:	mov    rax,r13
   0x7ffff7ebb8f0:	jmp    0x7ffff7ebb898
   0x7ffff7ebb8f2:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebb8f8:	cmp    r14,r13
   0x7ffff7ebb8fb:	jne    0x7ffff7ebb8ed
   0x7ffff7ebb8fd:	test   sil,sil
   0x7ffff7ebb900:	je     0x7ffff7ebb868
   0x7ffff7ebb906:	xor    edx,edx
   0x7ffff7ebb908:	xor    esi,esi
   0x7ffff7ebb90a:	mov    edi,ebp
   0x7ffff7ebb90c:	call   0x7ffff7ea9ac0 <lseek64>
   0x7ffff7ebb911:	test   rax,rax
   0x7ffff7ebb914:	jns    0x7ffff7ebb868
   0x7ffff7ebb91a:	xor    r14d,r14d
   0x7ffff7ebb91d:	mov    edi,ebp
   0x7ffff7ebb91f:	call   0x7ffff7eaea10 <__close_nocancel>
   0x7ffff7ebb924:	mov    rax,QWORD PTR [rsp+0x408]
   0x7ffff7ebb92c:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7ebb935:	jne    0x7ffff7ebb9c7
   0x7ffff7ebb93b:	add    rsp,0x418
   0x7ffff7ebb942:	mov    eax,r14d
   0x7ffff7ebb945:	pop    rbx
   0x7ffff7ebb946:	pop    rbp
   0x7ffff7ebb947:	pop    r12
   0x7ffff7ebb949:	pop    r13
   0x7ffff7ebb94b:	pop    r14
   0x7ffff7ebb94d:	pop    r15
   0x7ffff7ebb94f:	ret
   0x7ffff7ebb950:	xor    edi,edi
   0x7ffff7ebb952:	jmp    0x7ffff7ebb8d6
   0x7ffff7ebb954:	mov    r14d,0x1
   0x7ffff7ebb95a:	jmp    0x7ffff7ebb91d
   0x7ffff7ebb95c:	mov    r13,QWORD PTR [rip+0xf24ad]        # 0x7ffff7fade10
   0x7ffff7ebb963:	cmp    DWORD PTR fs:[r13+0x0],0x2
   0x7ffff7ebb969:	setne  r14b
   0x7ffff7ebb96d:	and    r14b,r15b
   0x7ffff7ebb970:	je     0x7ffff7ebb91d
   0x7ffff7ebb972:	mov    ebp,ebx
   0x7ffff7ebb974:	cmp    ebx,0x7fffffff
   0x7ffff7ebb97a:	jne    0x7ffff7ebb98b
   0x7ffff7ebb97c:	jmp    0x7ffff7ebb9a3
   0x7ffff7ebb97e:	xchg   ax,ax
   0x7ffff7ebb980:	add    ebp,0x1
   0x7ffff7ebb983:	cmp    ebp,0x7fffffff
   0x7ffff7ebb989:	je     0x7ffff7ebb9a3
   0x7ffff7ebb98b:	mov    edi,ebp
   0x7ffff7ebb98d:	call   0x7ffff7eaea10 <__close_nocancel>
   0x7ffff7ebb992:	test   eax,eax
   0x7ffff7ebb994:	je     0x7ffff7ebb9a3
   0x7ffff7ebb996:	cmp    eax,0xffffffff
   0x7ffff7ebb999:	jne    0x7ffff7ebb980
   0x7ffff7ebb99b:	cmp    DWORD PTR fs:[r13+0x0],0x9
   0x7ffff7ebb9a1:	je     0x7ffff7ebb980
   0x7ffff7ebb9a3:	xor    edx,edx
   0x7ffff7ebb9a5:	mov    esi,0x10000
   0x7ffff7ebb9aa:	mov    rdi,r12
   0x7ffff7ebb9ad:	xor    eax,eax
   0x7ffff7ebb9af:	call   0x7ffff7eaeb80 <__open_nocancel>
   0x7ffff7ebb9b4:	xor    r14d,r14d
   0x7ffff7ebb9b7:	mov    ebp,eax
   0x7ffff7ebb9b9:	cmp    eax,0xffffffff
   0x7ffff7ebb9bc:	jne    0x7ffff7ebb85e
   0x7ffff7ebb9c2:	jmp    0x7ffff7ebb924
   0x7ffff7ebb9c7:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ebb9cc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebb9d0:	endbr64
   0x7ffff7ebb9d4:	mov    eax,0xffffffea
   0x7ffff7ebb9d9:	test   rdi,rdi
   0x7ffff7ebb9dc:	je     0x7ffff7ebba0a
   0x7ffff7ebb9de:	test   rdx,rdx
   0x7ffff7ebb9e1:	je     0x7ffff7ebba0a
   0x7ffff7ebb9e3:	mov    r8,rcx
   0x7ffff7ebb9e6:	mov    eax,0x1b3
   0x7ffff7ebb9eb:	syscall
   0x7ffff7ebb9ed:	test   rax,rax
   0x7ffff7ebb9f0:	jl     0x7ffff7ebba0a
   0x7ffff7ebb9f2:	je     0x7ffff7ebb9f5
   0x7ffff7ebb9f4:	ret
   0x7ffff7ebb9f5:	xor    ebp,ebp
   0x7ffff7ebb9f7:	and    rsp,0xfffffffffffffff0
   0x7ffff7ebb9fb:	mov    rdi,r8
   0x7ffff7ebb9fe:	call   rdx
   0x7ffff7ebba00:	mov    rdi,rax
   0x7ffff7ebba03:	mov    eax,0x3c
   0x7ffff7ebba08:	syscall
   0x7ffff7ebba0a:	mov    rcx,QWORD PTR [rip+0xf23ff]        # 0x7ffff7fade10
   0x7ffff7ebba11:	neg    eax
   0x7ffff7ebba13:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebba16:	or     rax,0xffffffffffffffff
   0x7ffff7ebba1a:	ret
   0x7ffff7ebba1b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebba20:	endbr64
   0x7ffff7ebba24:	push   r14
   0x7ffff7ebba26:	mov    rcx,rdx
   0x7ffff7ebba29:	mov    r14,rsi
   0x7ffff7ebba2c:	push   r13
   0x7ffff7ebba2e:	push   r12
   0x7ffff7ebba30:	mov    r12,rdx
   0x7ffff7ebba33:	mov    rdx,rsi
   0x7ffff7ebba36:	mov    esi,0x58
   0x7ffff7ebba3b:	push   rbp
   0x7ffff7ebba3c:	mov    rbp,QWORD PTR [rip+0xf23cd]        # 0x7ffff7fade10
   0x7ffff7ebba43:	push   rbx
   0x7ffff7ebba44:	mov    rbx,rdi
   0x7ffff7ebba47:	mov    r13d,DWORD PTR fs:[rbp+0x0]
   0x7ffff7ebba4c:	call   0x7ffff7ebb9d0
   0x7ffff7ebba51:	cmp    eax,0xffffffff
   0x7ffff7ebba54:	jne    0x7ffff7ebba5d
   0x7ffff7ebba56:	cmp    DWORD PTR fs:[rbp+0x0],0x26
   0x7ffff7ebba5b:	je     0x7ffff7ebba70
   0x7ffff7ebba5d:	pop    rbx
   0x7ffff7ebba5e:	pop    rbp
   0x7ffff7ebba5f:	pop    r12
   0x7ffff7ebba61:	pop    r13
   0x7ffff7ebba63:	pop    r14
   0x7ffff7ebba65:	ret
   0x7ffff7ebba66:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebba70:	mov    DWORD PTR fs:[rbp+0x0],r13d
   0x7ffff7ebba75:	sub    rsp,0x8
   0x7ffff7ebba79:	mov    r9,QWORD PTR [rbx+0x38]
   0x7ffff7ebba7d:	mov    rcx,r12
   0x7ffff7ebba80:	push   QWORD PTR [rbx+0x10]
   0x7ffff7ebba83:	mov    r8,QWORD PTR [rbx+0x18]
   0x7ffff7ebba87:	mov    rdi,r14
   0x7ffff7ebba8a:	xor    eax,eax
   0x7ffff7ebba8c:	mov    rdx,QWORD PTR [rbx+0x20]
   0x7ffff7ebba90:	mov    rsi,QWORD PTR [rbx+0x30]
   0x7ffff7ebba94:	or     edx,DWORD PTR [rbx]
   0x7ffff7ebba96:	add    rsi,QWORD PTR [rbx+0x28]
   0x7ffff7ebba9a:	call   0x7ffff7ebab70 <clone>
   0x7ffff7ebba9f:	pop    rdx
   0x7ffff7ebbaa0:	pop    rcx
   0x7ffff7ebbaa1:	pop    rbx
   0x7ffff7ebbaa2:	pop    rbp
   0x7ffff7ebbaa3:	pop    r12
   0x7ffff7ebbaa5:	pop    r13
   0x7ffff7ebbaa7:	pop    r14
   0x7ffff7ebbaa9:	ret
   0x7ffff7ebbaaa:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbab0 <fanotify_mark>:	endbr64
   0x7ffff7ebbab4 <fanotify_mark+4>:	mov    r10d,ecx
   0x7ffff7ebbab7 <fanotify_mark+7>:	mov    eax,0x12d
   0x7ffff7ebbabc <fanotify_mark+12>:	syscall
   0x7ffff7ebbabe <fanotify_mark+14>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebbac4 <fanotify_mark+20>:	ja     0x7ffff7ebbad0 <fanotify_mark+32>
   0x7ffff7ebbac6 <fanotify_mark+22>:	ret
   0x7ffff7ebbac7 <fanotify_mark+23>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbad0 <fanotify_mark+32>:	mov    rdx,QWORD PTR [rip+0xf2339]        # 0x7ffff7fade10
   0x7ffff7ebbad7 <fanotify_mark+39>:	neg    eax
   0x7ffff7ebbad9 <fanotify_mark+41>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebbadc <fanotify_mark+44>:	mov    eax,0xffffffff
   0x7ffff7ebbae1 <fanotify_mark+49>:	ret
   0x7ffff7ebbae2:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbaec:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebbaf0 <mremap>:	endbr64
   0x7ffff7ebbaf4 <mremap+4>:	sub    rsp,0x58
   0x7ffff7ebbaf8 <mremap+8>:	mov    r10d,ecx
   0x7ffff7ebbafb <mremap+11>:	mov    QWORD PTR [rsp+0x40],r8
   0x7ffff7ebbb00 <mremap+16>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ebbb09 <mremap+25>:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7ebbb0e <mremap+30>:	xor    eax,eax
   0x7ffff7ebbb10 <mremap+32>:	and    ecx,0x2
   0x7ffff7ebbb13 <mremap+35>:	jne    0x7ffff7ebbb40 <mremap+80>
   0x7ffff7ebbb15 <mremap+37>:	xor    r8d,r8d
   0x7ffff7ebbb18 <mremap+40>:	mov    eax,0x19
   0x7ffff7ebbb1d <mremap+45>:	syscall
   0x7ffff7ebbb1f <mremap+47>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebbb25 <mremap+53>:	ja     0x7ffff7ebbb68 <mremap+120>
   0x7ffff7ebbb27 <mremap+55>:	mov    rdx,QWORD PTR [rsp+0x18]
   0x7ffff7ebbb2c <mremap+60>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7ebbb35 <mremap+69>:	jne    0x7ffff7ebbb7d <mremap+141>
   0x7ffff7ebbb37 <mremap+71>:	add    rsp,0x58
   0x7ffff7ebbb3b <mremap+75>:	ret
   0x7ffff7ebbb3c <mremap+76>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebbb40 <mremap+80>:	lea    rax,[rsp+0x60]
   0x7ffff7ebbb45 <mremap+85>:	mov    DWORD PTR [rsp],0x20
   0x7ffff7ebbb4c <mremap+92>:	mov    r8,QWORD PTR [rsp+0x40]
   0x7ffff7ebbb51 <mremap+97>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ebbb56 <mremap+102>:	lea    rax,[rsp+0x20]
   0x7ffff7ebbb5b <mremap+107>:	mov    QWORD PTR [rsp+0x10],rax
   0x7ffff7ebbb60 <mremap+112>:	jmp    0x7ffff7ebbb18 <mremap+40>
   0x7ffff7ebbb62 <mremap+114>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbb68 <mremap+120>:	mov    rdx,QWORD PTR [rip+0xf22a1]        # 0x7ffff7fade10
   0x7ffff7ebbb6f <mremap+127>:	neg    eax
   0x7ffff7ebbb71 <mremap+129>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebbb74 <mremap+132>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebbb7b <mremap+139>:	jmp    0x7ffff7ebbb27 <mremap+55>
   0x7ffff7ebbb7d <mremap+141>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ebbb82:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbb8c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebbb90 <arch_prctl>:	endbr64
   0x7ffff7ebbb94 <arch_prctl+4>:	mov    eax,0x9e
   0x7ffff7ebbb99 <arch_prctl+9>:	syscall
   0x7ffff7ebbb9b <arch_prctl+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbba1 <arch_prctl+17>:	jae    0x7ffff7ebbba4 <arch_prctl+20>
   0x7ffff7ebbba3 <arch_prctl+19>:	ret
   0x7ffff7ebbba4 <arch_prctl+20>:	mov    rcx,QWORD PTR [rip+0xf2265]        # 0x7ffff7fade10
   0x7ffff7ebbbab <arch_prctl+27>:	neg    eax
   0x7ffff7ebbbad <arch_prctl+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbbb0 <arch_prctl+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbbb4 <arch_prctl+36>:	ret
   0x7ffff7ebbbb5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbbbf:	nop
   0x7ffff7ebbbc0 <modify_ldt>:	endbr64
   0x7ffff7ebbbc4 <modify_ldt+4>:	mov    eax,0x9a
   0x7ffff7ebbbc9 <modify_ldt+9>:	syscall
   0x7ffff7ebbbcb <modify_ldt+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbbd1 <modify_ldt+17>:	jae    0x7ffff7ebbbd4 <modify_ldt+20>
   0x7ffff7ebbbd3 <modify_ldt+19>:	ret
   0x7ffff7ebbbd4 <modify_ldt+20>:	mov    rcx,QWORD PTR [rip+0xf2235]        # 0x7ffff7fade10
   0x7ffff7ebbbdb <modify_ldt+27>:	neg    eax
   0x7ffff7ebbbdd <modify_ldt+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbbe0 <modify_ldt+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbbe4 <modify_ldt+36>:	ret
   0x7ffff7ebbbe5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbbef:	nop
   0x7ffff7ebbbf0:	endbr64
   0x7ffff7ebbbf4:	mov    eax,0xe4
   0x7ffff7ebbbf9:	syscall
   0x7ffff7ebbbfb:	ret
   0x7ffff7ebbbfc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebbc00 <capget>:	endbr64
   0x7ffff7ebbc04 <capget+4>:	mov    eax,0x7d
   0x7ffff7ebbc09 <capget+9>:	syscall
   0x7ffff7ebbc0b <capget+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbc11 <capget+17>:	jae    0x7ffff7ebbc14 <capget+20>
   0x7ffff7ebbc13 <capget+19>:	ret
   0x7ffff7ebbc14 <capget+20>:	mov    rcx,QWORD PTR [rip+0xf21f5]        # 0x7ffff7fade10
   0x7ffff7ebbc1b <capget+27>:	neg    eax
   0x7ffff7ebbc1d <capget+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbc20 <capget+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbc24 <capget+36>:	ret
   0x7ffff7ebbc25:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbc2f:	nop
   0x7ffff7ebbc30 <capset>:	endbr64
   0x7ffff7ebbc34 <capset+4>:	mov    eax,0x7e
   0x7ffff7ebbc39 <capset+9>:	syscall
   0x7ffff7ebbc3b <capset+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbc41 <capset+17>:	jae    0x7ffff7ebbc44 <capset+20>
   0x7ffff7ebbc43 <capset+19>:	ret
   0x7ffff7ebbc44 <capset+20>:	mov    rcx,QWORD PTR [rip+0xf21c5]        # 0x7ffff7fade10
   0x7ffff7ebbc4b <capset+27>:	neg    eax
   0x7ffff7ebbc4d <capset+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbc50 <capset+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbc54 <capset+36>:	ret
   0x7ffff7ebbc55:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbc5f:	nop
   0x7ffff7ebbc60 <create_module>:	endbr64
   0x7ffff7ebbc64 <create_module+4>:	mov    eax,0xae
   0x7ffff7ebbc69 <create_module+9>:	syscall
   0x7ffff7ebbc6b <create_module+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbc71 <create_module+17>:	jae    0x7ffff7ebbc74 <create_module+20>
   0x7ffff7ebbc73 <create_module+19>:	ret
   0x7ffff7ebbc74 <create_module+20>:	mov    rcx,QWORD PTR [rip+0xf2195]        # 0x7ffff7fade10
   0x7ffff7ebbc7b <create_module+27>:	neg    eax
   0x7ffff7ebbc7d <create_module+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbc80 <create_module+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbc84 <create_module+36>:	ret
   0x7ffff7ebbc85:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbc8f:	nop
   0x7ffff7ebbc90 <delete_module>:	endbr64
   0x7ffff7ebbc94 <delete_module+4>:	mov    eax,0xb0
   0x7ffff7ebbc99 <delete_module+9>:	syscall
   0x7ffff7ebbc9b <delete_module+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbca1 <delete_module+17>:	jae    0x7ffff7ebbca4 <delete_module+20>
   0x7ffff7ebbca3 <delete_module+19>:	ret
   0x7ffff7ebbca4 <delete_module+20>:	mov    rcx,QWORD PTR [rip+0xf2165]        # 0x7ffff7fade10
   0x7ffff7ebbcab <delete_module+27>:	neg    eax
   0x7ffff7ebbcad <delete_module+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbcb0 <delete_module+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbcb4 <delete_module+36>:	ret
   0x7ffff7ebbcb5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbcbf:	nop
   0x7ffff7ebbcc0 <epoll_create>:	endbr64
   0x7ffff7ebbcc4 <epoll_create+4>:	mov    eax,0xd5
   0x7ffff7ebbcc9 <epoll_create+9>:	syscall
   0x7ffff7ebbccb <epoll_create+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbcd1 <epoll_create+17>:	jae    0x7ffff7ebbcd4 <epoll_create+20>
   0x7ffff7ebbcd3 <epoll_create+19>:	ret
   0x7ffff7ebbcd4 <epoll_create+20>:	mov    rcx,QWORD PTR [rip+0xf2135]        # 0x7ffff7fade10
   0x7ffff7ebbcdb <epoll_create+27>:	neg    eax
   0x7ffff7ebbcdd <epoll_create+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbce0 <epoll_create+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbce4 <epoll_create+36>:	ret
   0x7ffff7ebbce5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbcef:	nop
   0x7ffff7ebbcf0 <epoll_create1>:	endbr64
   0x7ffff7ebbcf4 <epoll_create1+4>:	mov    eax,0x123
   0x7ffff7ebbcf9 <epoll_create1+9>:	syscall
   0x7ffff7ebbcfb <epoll_create1+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbd01 <epoll_create1+17>:	jae    0x7ffff7ebbd04 <epoll_create1+20>
   0x7ffff7ebbd03 <epoll_create1+19>:	ret
   0x7ffff7ebbd04 <epoll_create1+20>:	mov    rcx,QWORD PTR [rip+0xf2105]        # 0x7ffff7fade10
   0x7ffff7ebbd0b <epoll_create1+27>:	neg    eax
   0x7ffff7ebbd0d <epoll_create1+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbd10 <epoll_create1+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbd14 <epoll_create1+36>:	ret
   0x7ffff7ebbd15:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbd1f:	nop
   0x7ffff7ebbd20 <epoll_ctl>:	endbr64
   0x7ffff7ebbd24 <epoll_ctl+4>:	mov    r10,rcx
   0x7ffff7ebbd27 <epoll_ctl+7>:	mov    eax,0xe9
   0x7ffff7ebbd2c <epoll_ctl+12>:	syscall
   0x7ffff7ebbd2e <epoll_ctl+14>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbd34 <epoll_ctl+20>:	jae    0x7ffff7ebbd37 <epoll_ctl+23>
   0x7ffff7ebbd36 <epoll_ctl+22>:	ret
   0x7ffff7ebbd37 <epoll_ctl+23>:	mov    rcx,QWORD PTR [rip+0xf20d2]        # 0x7ffff7fade10
   0x7ffff7ebbd3e <epoll_ctl+30>:	neg    eax
   0x7ffff7ebbd40 <epoll_ctl+32>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbd43 <epoll_ctl+35>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbd47 <epoll_ctl+39>:	ret
   0x7ffff7ebbd48:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbd50 <get_kernel_syms>:	endbr64
   0x7ffff7ebbd54 <get_kernel_syms+4>:	mov    eax,0xb1
   0x7ffff7ebbd59 <get_kernel_syms+9>:	syscall
   0x7ffff7ebbd5b <get_kernel_syms+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbd61 <get_kernel_syms+17>:	jae    0x7ffff7ebbd64 <get_kernel_syms+20>
   0x7ffff7ebbd63 <get_kernel_syms+19>:	ret
   0x7ffff7ebbd64 <get_kernel_syms+20>:	mov    rcx,QWORD PTR [rip+0xf20a5]        # 0x7ffff7fade10
   0x7ffff7ebbd6b <get_kernel_syms+27>:	neg    eax
   0x7ffff7ebbd6d <get_kernel_syms+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbd70 <get_kernel_syms+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbd74 <get_kernel_syms+36>:	ret
   0x7ffff7ebbd75:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbd7f:	nop
   0x7ffff7ebbd80 <init_module>:	endbr64
   0x7ffff7ebbd84 <init_module+4>:	mov    r10,rcx
   0x7ffff7ebbd87 <init_module+7>:	mov    eax,0xaf
   0x7ffff7ebbd8c <init_module+12>:	syscall
   0x7ffff7ebbd8e <init_module+14>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbd94 <init_module+20>:	jae    0x7ffff7ebbd97 <init_module+23>
   0x7ffff7ebbd96 <init_module+22>:	ret
   0x7ffff7ebbd97 <init_module+23>:	mov    rcx,QWORD PTR [rip+0xf2072]        # 0x7ffff7fade10
   0x7ffff7ebbd9e <init_module+30>:	neg    eax
   0x7ffff7ebbda0 <init_module+32>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbda3 <init_module+35>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbda7 <init_module+39>:	ret
   0x7ffff7ebbda8:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbdb0 <inotify_add_watch>:	endbr64
   0x7ffff7ebbdb4 <inotify_add_watch+4>:	mov    eax,0xfe
   0x7ffff7ebbdb9 <inotify_add_watch+9>:	syscall
   0x7ffff7ebbdbb <inotify_add_watch+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbdc1 <inotify_add_watch+17>:	jae    0x7ffff7ebbdc4 <inotify_add_watch+20>
   0x7ffff7ebbdc3 <inotify_add_watch+19>:	ret
   0x7ffff7ebbdc4 <inotify_add_watch+20>:	mov    rcx,QWORD PTR [rip+0xf2045]        # 0x7ffff7fade10
   0x7ffff7ebbdcb <inotify_add_watch+27>:	neg    eax
   0x7ffff7ebbdcd <inotify_add_watch+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbdd0 <inotify_add_watch+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbdd4 <inotify_add_watch+36>:	ret
   0x7ffff7ebbdd5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbddf:	nop
   0x7ffff7ebbde0 <inotify_init>:	endbr64
   0x7ffff7ebbde4 <inotify_init+4>:	mov    eax,0xfd
   0x7ffff7ebbde9 <inotify_init+9>:	syscall
   0x7ffff7ebbdeb <inotify_init+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbdf1 <inotify_init+17>:	jae    0x7ffff7ebbdf4 <inotify_init+20>
   0x7ffff7ebbdf3 <inotify_init+19>:	ret
   0x7ffff7ebbdf4 <inotify_init+20>:	mov    rcx,QWORD PTR [rip+0xf2015]        # 0x7ffff7fade10
   0x7ffff7ebbdfb <inotify_init+27>:	neg    eax
   0x7ffff7ebbdfd <inotify_init+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbe00 <inotify_init+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbe04 <inotify_init+36>:	ret
   0x7ffff7ebbe05:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbe0f:	nop
   0x7ffff7ebbe10 <inotify_init1>:	endbr64
   0x7ffff7ebbe14 <inotify_init1+4>:	mov    eax,0x126
   0x7ffff7ebbe19 <inotify_init1+9>:	syscall
   0x7ffff7ebbe1b <inotify_init1+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbe21 <inotify_init1+17>:	jae    0x7ffff7ebbe24 <inotify_init1+20>
   0x7ffff7ebbe23 <inotify_init1+19>:	ret
   0x7ffff7ebbe24 <inotify_init1+20>:	mov    rcx,QWORD PTR [rip+0xf1fe5]        # 0x7ffff7fade10
   0x7ffff7ebbe2b <inotify_init1+27>:	neg    eax
   0x7ffff7ebbe2d <inotify_init1+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbe30 <inotify_init1+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbe34 <inotify_init1+36>:	ret
   0x7ffff7ebbe35:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbe3f:	nop
   0x7ffff7ebbe40 <inotify_rm_watch>:	endbr64
   0x7ffff7ebbe44 <inotify_rm_watch+4>:	mov    eax,0xff
   0x7ffff7ebbe49 <inotify_rm_watch+9>:	syscall
   0x7ffff7ebbe4b <inotify_rm_watch+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbe51 <inotify_rm_watch+17>:	jae    0x7ffff7ebbe54 <inotify_rm_watch+20>
   0x7ffff7ebbe53 <inotify_rm_watch+19>:	ret
   0x7ffff7ebbe54 <inotify_rm_watch+20>:	mov    rcx,QWORD PTR [rip+0xf1fb5]        # 0x7ffff7fade10
   0x7ffff7ebbe5b <inotify_rm_watch+27>:	neg    eax
   0x7ffff7ebbe5d <inotify_rm_watch+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbe60 <inotify_rm_watch+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbe64 <inotify_rm_watch+36>:	ret
   0x7ffff7ebbe65:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbe6f:	nop
   0x7ffff7ebbe70 <klogctl>:	endbr64
   0x7ffff7ebbe74 <klogctl+4>:	mov    eax,0x67
   0x7ffff7ebbe79 <klogctl+9>:	syscall
   0x7ffff7ebbe7b <klogctl+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbe81 <klogctl+17>:	jae    0x7ffff7ebbe84 <klogctl+20>
   0x7ffff7ebbe83 <klogctl+19>:	ret
   0x7ffff7ebbe84 <klogctl+20>:	mov    rcx,QWORD PTR [rip+0xf1f85]        # 0x7ffff7fade10
   0x7ffff7ebbe8b <klogctl+27>:	neg    eax
   0x7ffff7ebbe8d <klogctl+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbe90 <klogctl+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbe94 <klogctl+36>:	ret
   0x7ffff7ebbe95:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbe9f:	nop
   0x7ffff7ebbea0 <mount>:	endbr64
   0x7ffff7ebbea4 <mount+4>:	mov    r10,rcx
   0x7ffff7ebbea7 <mount+7>:	mov    eax,0xa5
   0x7ffff7ebbeac <mount+12>:	syscall
   0x7ffff7ebbeae <mount+14>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbeb4 <mount+20>:	jae    0x7ffff7ebbeb7 <mount+23>
   0x7ffff7ebbeb6 <mount+22>:	ret
   0x7ffff7ebbeb7 <mount+23>:	mov    rcx,QWORD PTR [rip+0xf1f52]        # 0x7ffff7fade10
   0x7ffff7ebbebe <mount+30>:	neg    eax
   0x7ffff7ebbec0 <mount+32>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbec3 <mount+35>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbec7 <mount+39>:	ret
   0x7ffff7ebbec8:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbed0 <nfsservctl>:	endbr64
   0x7ffff7ebbed4 <nfsservctl+4>:	mov    eax,0xb4
   0x7ffff7ebbed9 <nfsservctl+9>:	syscall
   0x7ffff7ebbedb <nfsservctl+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbee1 <nfsservctl+17>:	jae    0x7ffff7ebbee4 <nfsservctl+20>
   0x7ffff7ebbee3 <nfsservctl+19>:	ret
   0x7ffff7ebbee4 <nfsservctl+20>:	mov    rcx,QWORD PTR [rip+0xf1f25]        # 0x7ffff7fade10
   0x7ffff7ebbeeb <nfsservctl+27>:	neg    eax
   0x7ffff7ebbeed <nfsservctl+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbef0 <nfsservctl+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbef4 <nfsservctl+36>:	ret
   0x7ffff7ebbef5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbeff:	nop
   0x7ffff7ebbf00 <pivot_root>:	endbr64
   0x7ffff7ebbf04 <pivot_root+4>:	mov    eax,0x9b
   0x7ffff7ebbf09 <pivot_root+9>:	syscall
   0x7ffff7ebbf0b <pivot_root+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbf11 <pivot_root+17>:	jae    0x7ffff7ebbf14 <pivot_root+20>
   0x7ffff7ebbf13 <pivot_root+19>:	ret
   0x7ffff7ebbf14 <pivot_root+20>:	mov    rcx,QWORD PTR [rip+0xf1ef5]        # 0x7ffff7fade10
   0x7ffff7ebbf1b <pivot_root+27>:	neg    eax
   0x7ffff7ebbf1d <pivot_root+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbf20 <pivot_root+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbf24 <pivot_root+36>:	ret
   0x7ffff7ebbf25:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbf2f:	nop
   0x7ffff7ebbf30 <query_module>:	endbr64
   0x7ffff7ebbf34 <query_module+4>:	mov    r10,rcx
   0x7ffff7ebbf37 <query_module+7>:	mov    eax,0xb2
   0x7ffff7ebbf3c <query_module+12>:	syscall
   0x7ffff7ebbf3e <query_module+14>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbf44 <query_module+20>:	jae    0x7ffff7ebbf47 <query_module+23>
   0x7ffff7ebbf46 <query_module+22>:	ret
   0x7ffff7ebbf47 <query_module+23>:	mov    rcx,QWORD PTR [rip+0xf1ec2]        # 0x7ffff7fade10
   0x7ffff7ebbf4e <query_module+30>:	neg    eax
   0x7ffff7ebbf50 <query_module+32>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbf53 <query_module+35>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbf57 <query_module+39>:	ret
   0x7ffff7ebbf58:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbf60 <quotactl>:	endbr64
   0x7ffff7ebbf64 <quotactl+4>:	mov    r10,rcx
   0x7ffff7ebbf67 <quotactl+7>:	mov    eax,0xb3
   0x7ffff7ebbf6c <quotactl+12>:	syscall
   0x7ffff7ebbf6e <quotactl+14>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbf74 <quotactl+20>:	jae    0x7ffff7ebbf77 <quotactl+23>
   0x7ffff7ebbf76 <quotactl+22>:	ret
   0x7ffff7ebbf77 <quotactl+23>:	mov    rcx,QWORD PTR [rip+0xf1e92]        # 0x7ffff7fade10
   0x7ffff7ebbf7e <quotactl+30>:	neg    eax
   0x7ffff7ebbf80 <quotactl+32>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbf83 <quotactl+35>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbf87 <quotactl+39>:	ret
   0x7ffff7ebbf88:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbf90 <sysinfo>:	endbr64
   0x7ffff7ebbf94 <sysinfo+4>:	mov    eax,0x63
   0x7ffff7ebbf99 <sysinfo+9>:	syscall
   0x7ffff7ebbf9b <sysinfo+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbfa1 <sysinfo+17>:	jae    0x7ffff7ebbfa4 <sysinfo+20>
   0x7ffff7ebbfa3 <sysinfo+19>:	ret
   0x7ffff7ebbfa4 <sysinfo+20>:	mov    rcx,QWORD PTR [rip+0xf1e65]        # 0x7ffff7fade10
   0x7ffff7ebbfab <sysinfo+27>:	neg    eax
   0x7ffff7ebbfad <sysinfo+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbfb0 <sysinfo+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbfb4 <sysinfo+36>:	ret
   0x7ffff7ebbfb5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbfbf:	nop
   0x7ffff7ebbfc0 <unshare>:	endbr64
   0x7ffff7ebbfc4 <unshare+4>:	mov    eax,0x110
   0x7ffff7ebbfc9 <unshare+9>:	syscall
   0x7ffff7ebbfcb <unshare+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebbfd1 <unshare+17>:	jae    0x7ffff7ebbfd4 <unshare+20>
   0x7ffff7ebbfd3 <unshare+19>:	ret
   0x7ffff7ebbfd4 <unshare+20>:	mov    rcx,QWORD PTR [rip+0xf1e35]        # 0x7ffff7fade10
   0x7ffff7ebbfdb <unshare+27>:	neg    eax
   0x7ffff7ebbfdd <unshare+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebbfe0 <unshare+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebbfe4 <unshare+36>:	ret
   0x7ffff7ebbfe5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebbfef:	nop
   0x7ffff7ebbff0 <uselib>:	endbr64
   0x7ffff7ebbff4 <uselib+4>:	mov    eax,0x86
   0x7ffff7ebbff9 <uselib+9>:	syscall
   0x7ffff7ebbffb <uselib+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebc001 <uselib+17>:	jae    0x7ffff7ebc004 <uselib+20>
   0x7ffff7ebc003 <uselib+19>:	ret
   0x7ffff7ebc004 <uselib+20>:	mov    rcx,QWORD PTR [rip+0xf1e05]        # 0x7ffff7fade10
   0x7ffff7ebc00b <uselib+27>:	neg    eax
   0x7ffff7ebc00d <uselib+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebc010 <uselib+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebc014 <uselib+36>:	ret
   0x7ffff7ebc015:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc01f:	nop
   0x7ffff7ebc020 <timerfd_create>:	endbr64
   0x7ffff7ebc024 <timerfd_create+4>:	mov    eax,0x11b
   0x7ffff7ebc029 <timerfd_create+9>:	syscall
   0x7ffff7ebc02b <timerfd_create+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebc031 <timerfd_create+17>:	jae    0x7ffff7ebc034 <timerfd_create+20>
   0x7ffff7ebc033 <timerfd_create+19>:	ret
   0x7ffff7ebc034 <timerfd_create+20>:	mov    rcx,QWORD PTR [rip+0xf1dd5]        # 0x7ffff7fade10
   0x7ffff7ebc03b <timerfd_create+27>:	neg    eax
   0x7ffff7ebc03d <timerfd_create+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebc040 <timerfd_create+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebc044 <timerfd_create+36>:	ret
   0x7ffff7ebc045:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc04f:	nop
   0x7ffff7ebc050 <fanotify_init>:	endbr64
   0x7ffff7ebc054 <fanotify_init+4>:	mov    eax,0x12c
   0x7ffff7ebc059 <fanotify_init+9>:	syscall
   0x7ffff7ebc05b <fanotify_init+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebc061 <fanotify_init+17>:	jae    0x7ffff7ebc064 <fanotify_init+20>
   0x7ffff7ebc063 <fanotify_init+19>:	ret
   0x7ffff7ebc064 <fanotify_init+20>:	mov    rcx,QWORD PTR [rip+0xf1da5]        # 0x7ffff7fade10
   0x7ffff7ebc06b <fanotify_init+27>:	neg    eax
   0x7ffff7ebc06d <fanotify_init+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebc070 <fanotify_init+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebc074 <fanotify_init+36>:	ret
   0x7ffff7ebc075:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc07f:	nop
   0x7ffff7ebc080 <name_to_handle_at>:	endbr64
   0x7ffff7ebc084 <name_to_handle_at+4>:	mov    r10,rcx
   0x7ffff7ebc087 <name_to_handle_at+7>:	mov    eax,0x12f
   0x7ffff7ebc08c <name_to_handle_at+12>:	syscall
   0x7ffff7ebc08e <name_to_handle_at+14>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebc094 <name_to_handle_at+20>:	jae    0x7ffff7ebc097 <name_to_handle_at+23>
   0x7ffff7ebc096 <name_to_handle_at+22>:	ret
   0x7ffff7ebc097 <name_to_handle_at+23>:	mov    rcx,QWORD PTR [rip+0xf1d72]        # 0x7ffff7fade10
   0x7ffff7ebc09e <name_to_handle_at+30>:	neg    eax
   0x7ffff7ebc0a0 <name_to_handle_at+32>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebc0a3 <name_to_handle_at+35>:	or     rax,0xffffffffffffffff
   0x7ffff7ebc0a7 <name_to_handle_at+39>:	ret
   0x7ffff7ebc0a8:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc0b0 <setns>:	endbr64
   0x7ffff7ebc0b4 <setns+4>:	mov    eax,0x134
   0x7ffff7ebc0b9 <setns+9>:	syscall
   0x7ffff7ebc0bb <setns+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebc0c1 <setns+17>:	jae    0x7ffff7ebc0c4 <setns+20>
   0x7ffff7ebc0c3 <setns+19>:	ret
   0x7ffff7ebc0c4 <setns+20>:	mov    rcx,QWORD PTR [rip+0xf1d45]        # 0x7ffff7fade10
   0x7ffff7ebc0cb <setns+27>:	neg    eax
   0x7ffff7ebc0cd <setns+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebc0d0 <setns+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebc0d4 <setns+36>:	ret
   0x7ffff7ebc0d5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc0df:	nop
   0x7ffff7ebc0e0 <memfd_create>:	endbr64
   0x7ffff7ebc0e4 <memfd_create+4>:	mov    eax,0x13f
   0x7ffff7ebc0e9 <memfd_create+9>:	syscall
   0x7ffff7ebc0eb <memfd_create+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebc0f1 <memfd_create+17>:	jae    0x7ffff7ebc0f4 <memfd_create+20>
   0x7ffff7ebc0f3 <memfd_create+19>:	ret
   0x7ffff7ebc0f4 <memfd_create+20>:	mov    rcx,QWORD PTR [rip+0xf1d15]        # 0x7ffff7fade10
   0x7ffff7ebc0fb <memfd_create+27>:	neg    eax
   0x7ffff7ebc0fd <memfd_create+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebc100 <memfd_create+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebc104 <memfd_create+36>:	ret
   0x7ffff7ebc105:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc10f:	nop
   0x7ffff7ebc110 <pkey_alloc>:	endbr64
   0x7ffff7ebc114 <pkey_alloc+4>:	mov    eax,0x14a
   0x7ffff7ebc119 <pkey_alloc+9>:	syscall
   0x7ffff7ebc11b <pkey_alloc+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebc121 <pkey_alloc+17>:	jae    0x7ffff7ebc124 <pkey_alloc+20>
   0x7ffff7ebc123 <pkey_alloc+19>:	ret
   0x7ffff7ebc124 <pkey_alloc+20>:	mov    rcx,QWORD PTR [rip+0xf1ce5]        # 0x7ffff7fade10
   0x7ffff7ebc12b <pkey_alloc+27>:	neg    eax
   0x7ffff7ebc12d <pkey_alloc+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebc130 <pkey_alloc+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebc134 <pkey_alloc+36>:	ret
   0x7ffff7ebc135:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc13f:	nop
   0x7ffff7ebc140 <pkey_free>:	endbr64
   0x7ffff7ebc144 <pkey_free+4>:	mov    eax,0x14b
   0x7ffff7ebc149 <pkey_free+9>:	syscall
   0x7ffff7ebc14b <pkey_free+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebc151 <pkey_free+17>:	jae    0x7ffff7ebc154 <pkey_free+20>
   0x7ffff7ebc153 <pkey_free+19>:	ret
   0x7ffff7ebc154 <pkey_free+20>:	mov    rcx,QWORD PTR [rip+0xf1cb5]        # 0x7ffff7fade10
   0x7ffff7ebc15b <pkey_free+27>:	neg    eax
   0x7ffff7ebc15d <pkey_free+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebc160 <pkey_free+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebc164 <pkey_free+36>:	ret
   0x7ffff7ebc165:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc16f:	nop
   0x7ffff7ebc170 <gettid>:	endbr64
   0x7ffff7ebc174 <gettid+4>:	mov    eax,0xba
   0x7ffff7ebc179 <gettid+9>:	syscall
   0x7ffff7ebc17b <gettid+11>:	ret
   0x7ffff7ebc17c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebc180 <tgkill>:	endbr64
   0x7ffff7ebc184 <tgkill+4>:	mov    eax,0xea
   0x7ffff7ebc189 <tgkill+9>:	syscall
   0x7ffff7ebc18b <tgkill+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebc191 <tgkill+17>:	jae    0x7ffff7ebc194 <tgkill+20>
   0x7ffff7ebc193 <tgkill+19>:	ret
   0x7ffff7ebc194 <tgkill+20>:	mov    rcx,QWORD PTR [rip+0xf1c75]        # 0x7ffff7fade10
   0x7ffff7ebc19b <tgkill+27>:	neg    eax
   0x7ffff7ebc19d <tgkill+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebc1a0 <tgkill+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebc1a4 <tgkill+36>:	ret
   0x7ffff7ebc1a5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc1af:	nop
   0x7ffff7ebc1b0 <bdflush>:	endbr64
   0x7ffff7ebc1b4 <bdflush+4>:	mov    rax,QWORD PTR [rip+0xf1c55]        # 0x7ffff7fade10
   0x7ffff7ebc1bb <bdflush+11>:	mov    DWORD PTR fs:[rax],0x26
   0x7ffff7ebc1c2 <bdflush+18>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebc1c9 <bdflush+25>:	ret
   0x7ffff7ebc1ca:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc1d0:	endbr64
   0x7ffff7ebc1d4:	push   r12
   0x7ffff7ebc1d6:	xor    esi,esi
   0x7ffff7ebc1d8:	lea    rdi,[rip+0xb9341]        # 0x7ffff7f75520
   0x7ffff7ebc1df:	push   rbp
   0x7ffff7ebc1e0:	push   rbx
   0x7ffff7ebc1e1:	sub    rsp,0x20
   0x7ffff7ebc1e5:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ebc1ee:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7ebc1f3:	xor    eax,eax
   0x7ffff7ebc1f5:	call   0x7ffff7eaeb80 <__open_nocancel>
   0x7ffff7ebc1fa:	cmp    eax,0xffffffff
   0x7ffff7ebc1fd:	je     0x7ffff7ebc270
   0x7ffff7ebc1ff:	mov    rbx,rsp
   0x7ffff7ebc202:	mov    edi,eax
   0x7ffff7ebc204:	mov    edx,0x15
   0x7ffff7ebc209:	mov    r12d,eax
   0x7ffff7ebc20c:	mov    rsi,rbx
   0x7ffff7ebc20f:	call   0x7ffff7eaecd0 <__read_nocancel>
   0x7ffff7ebc214:	mov    edi,r12d
   0x7ffff7ebc217:	mov    rbp,rax
   0x7ffff7ebc21a:	call   0x7ffff7eaea10 <__close_nocancel>
   0x7ffff7ebc21f:	test   rbp,rbp
   0x7ffff7ebc222:	jle    0x7ffff7ebc270
   0x7ffff7ebc224:	mov    rcx,rbx
   0x7ffff7ebc227:	lea    rdi,[rbx+rbp*1]
   0x7ffff7ebc22b:	xor    eax,eax
   0x7ffff7ebc22d:	jmp    0x7ffff7ebc247
   0x7ffff7ebc22f:	nop
   0x7ffff7ebc230:	sub    edx,0x30
   0x7ffff7ebc233:	lea    rsi,[rax+rax*4]
   0x7ffff7ebc237:	add    rcx,0x1
   0x7ffff7ebc23b:	movsxd rdx,edx
   0x7ffff7ebc23e:	lea    rax,[rdx+rsi*2]
   0x7ffff7ebc242:	cmp    rcx,rdi
   0x7ffff7ebc245:	je     0x7ffff7ebc24f
   0x7ffff7ebc247:	movsx  edx,BYTE PTR [rcx]
   0x7ffff7ebc24a:	cmp    dl,0xa
   0x7ffff7ebc24d:	jne    0x7ffff7ebc230
   0x7ffff7ebc24f:	mov    rdx,QWORD PTR [rsp+0x18]
   0x7ffff7ebc254:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7ebc25d:	jne    0x7ffff7ebc274
   0x7ffff7ebc25f:	add    rsp,0x20
   0x7ffff7ebc263:	pop    rbx
   0x7ffff7ebc264:	pop    rbp
   0x7ffff7ebc265:	pop    r12
   0x7ffff7ebc267:	ret
   0x7ffff7ebc268:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc270:	xor    eax,eax
   0x7ffff7ebc272:	jmp    0x7ffff7ebc24f
   0x7ffff7ebc274:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ebc279:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebc280:	endbr64
   0x7ffff7ebc284:	push   r12
   0x7ffff7ebc286:	xor    esi,esi
   0x7ffff7ebc288:	lea    rdi,[rip+0xb92c9]        # 0x7ffff7f75558
   0x7ffff7ebc28f:	push   rbp
   0x7ffff7ebc290:	push   rbx
   0x7ffff7ebc291:	sub    rsp,0x20
   0x7ffff7ebc295:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ebc29e:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7ebc2a3:	xor    eax,eax
   0x7ffff7ebc2a5:	call   0x7ffff7eaeb80 <__open_nocancel>
   0x7ffff7ebc2aa:	cmp    eax,0xffffffff
   0x7ffff7ebc2ad:	je     0x7ffff7ebc2d3
   0x7ffff7ebc2af:	mov    r12,rsp
   0x7ffff7ebc2b2:	mov    edi,eax
   0x7ffff7ebc2b4:	mov    edx,0x18
   0x7ffff7ebc2b9:	mov    ebp,eax
   0x7ffff7ebc2bb:	mov    rsi,r12
   0x7ffff7ebc2be:	call   0x7ffff7eaecd0 <__read_nocancel>
   0x7ffff7ebc2c3:	mov    edi,ebp
   0x7ffff7ebc2c5:	mov    rbx,rax
   0x7ffff7ebc2c8:	call   0x7ffff7eaea10 <__close_nocancel>
   0x7ffff7ebc2cd:	cmp    rbx,0x17
   0x7ffff7ebc2d1:	je     0x7ffff7ebc2f8
   0x7ffff7ebc2d3:	mov    eax,0x3
   0x7ffff7ebc2d8:	mov    rdx,QWORD PTR [rsp+0x18]
   0x7ffff7ebc2dd:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7ebc2e6:	jne    0x7ffff7ebc347
   0x7ffff7ebc2e8:	add    rsp,0x20
   0x7ffff7ebc2ec:	pop    rbx
   0x7ffff7ebc2ed:	pop    rbp
   0x7ffff7ebc2ee:	pop    r12
   0x7ffff7ebc2f0:	ret
   0x7ffff7ebc2f1:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebc2f8:	lea    rsi,[rip+0xba8e1]        # 0x7ffff7f76be0
   0x7ffff7ebc2ff:	mov    rdi,r12
   0x7ffff7ebc302:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7ebc307:	mov    r8d,eax
   0x7ffff7ebc30a:	xor    eax,eax
   0x7ffff7ebc30c:	test   r8d,r8d
   0x7ffff7ebc30f:	je     0x7ffff7ebc2d8
   0x7ffff7ebc311:	lea    rsi,[rip+0xba8a8]        # 0x7ffff7f76bc0
   0x7ffff7ebc318:	mov    rdi,r12
   0x7ffff7ebc31b:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7ebc320:	mov    r8d,eax
   0x7ffff7ebc323:	mov    eax,0x1
   0x7ffff7ebc328:	test   r8d,r8d
   0x7ffff7ebc32b:	je     0x7ffff7ebc2d8
   0x7ffff7ebc32d:	lea    rsi,[rip+0xba86c]        # 0x7ffff7f76ba0
   0x7ffff7ebc334:	mov    rdi,r12
   0x7ffff7ebc337:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7ebc33c:	test   eax,eax
   0x7ffff7ebc33e:	jne    0x7ffff7ebc2d3
   0x7ffff7ebc340:	mov    eax,0x2
   0x7ffff7ebc345:	jmp    0x7ffff7ebc2d8
   0x7ffff7ebc347:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ebc34c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebc350:	endbr64
   0x7ffff7ebc354:	push   r15
   0x7ffff7ebc356:	push   r14
   0x7ffff7ebc358:	push   r13
   0x7ffff7ebc35a:	push   r12
   0x7ffff7ebc35c:	mov    r12,rdi
   0x7ffff7ebc35f:	push   rbp
   0x7ffff7ebc360:	push   rbx
   0x7ffff7ebc361:	sub    rsp,0x438
   0x7ffff7ebc368:	mov    QWORD PTR [rsp+0x10],rsi
   0x7ffff7ebc36d:	mov    QWORD PTR [rsp+0x18],rdx
   0x7ffff7ebc372:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ebc37b:	mov    QWORD PTR [rsp+0x428],rax
   0x7ffff7ebc383:	xor    eax,eax
   0x7ffff7ebc385:	mov    QWORD PTR [rsi],0x0
   0x7ffff7ebc38c:	mov    DWORD PTR [rdx],0x0
   0x7ffff7ebc392:	test   rdi,rdi
   0x7ffff7ebc395:	je     0x7ffff7ebc4b9
   0x7ffff7ebc39b:	xor    edx,edx
   0x7ffff7ebc39d:	mov    esi,0x10000
   0x7ffff7ebc3a2:	lea    rdi,[rip+0xb4260]        # 0x7ffff7f70609
   0x7ffff7ebc3a9:	xor    eax,eax
   0x7ffff7ebc3ab:	call   0x7ffff7eaeb80 <__open_nocancel>
   0x7ffff7ebc3b0:	mov    DWORD PTR [rsp+0xc],eax
   0x7ffff7ebc3b4:	cmp    eax,0xffffffff
   0x7ffff7ebc3b7:	je     0x7ffff7ebc490
   0x7ffff7ebc3bd:	lea    r13,[rsp+0x20]
   0x7ffff7ebc3c2:	lea    rbp,[rip+0xb4259]        # 0x7ffff7f70622
   0x7ffff7ebc3c9:	mov    edi,DWORD PTR [rsp+0xc]
   0x7ffff7ebc3cd:	mov    edx,0x400
   0x7ffff7ebc3d2:	mov    rsi,r13
   0x7ffff7ebc3d5:	call   0x7ffff7e7b6a0 <getdents64>
   0x7ffff7ebc3da:	lea    rdx,[rax+0x1]
   0x7ffff7ebc3de:	cmp    rdx,0x1
   0x7ffff7ebc3e2:	jbe    0x7ffff7ebc487
   0x7ffff7ebc3e8:	lea    rbx,[r13+rax*1+0x0]
   0x7ffff7ebc3ed:	cmp    rbx,r13
   0x7ffff7ebc3f0:	je     0x7ffff7ebc3c9
   0x7ffff7ebc3f2:	mov    r15,r13
   0x7ffff7ebc3f5:	jmp    0x7ffff7ebc405
   0x7ffff7ebc3f7:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc400:	cmp    rbx,r15
   0x7ffff7ebc403:	je     0x7ffff7ebc3c9
   0x7ffff7ebc405:	movzx  eax,WORD PTR [r15+0x10]
   0x7ffff7ebc40a:	mov    r14,r15
   0x7ffff7ebc40d:	lea    rdi,[r15+0x13]
   0x7ffff7ebc411:	add    r15,rax
   0x7ffff7ebc414:	cmp    BYTE PTR [r14+0x13],0x2e
   0x7ffff7ebc419:	je     0x7ffff7ebc400
   0x7ffff7ebc41b:	mov    edx,0xa
   0x7ffff7ebc420:	mov    rsi,rbp
   0x7ffff7ebc423:	call   0x7ffff7dbd590 <*ABS*+0xa88b0@plt>
   0x7ffff7ebc428:	test   eax,eax
   0x7ffff7ebc42a:	jne    0x7ffff7ebc400
   0x7ffff7ebc42c:	movzx  eax,BYTE PTR [r14+0x1d]
   0x7ffff7ebc431:	lea    edx,[rax-0x30]
   0x7ffff7ebc434:	cmp    dl,0x9
   0x7ffff7ebc437:	ja     0x7ffff7ebc400
   0x7ffff7ebc439:	lea    rdx,[r14+0x1e]
   0x7ffff7ebc43d:	xor    esi,esi
   0x7ffff7ebc43f:	nop
   0x7ffff7ebc440:	sub    eax,0x30
   0x7ffff7ebc443:	lea    rsi,[rsi+rsi*4]
   0x7ffff7ebc447:	add    rdx,0x1
   0x7ffff7ebc44b:	movsx  rax,al
   0x7ffff7ebc44f:	lea    rsi,[rax+rsi*2]
   0x7ffff7ebc453:	movzx  eax,BYTE PTR [rdx-0x1]
   0x7ffff7ebc457:	lea    edi,[rax-0x30]
   0x7ffff7ebc45a:	cmp    dil,0x9
   0x7ffff7ebc45e:	jbe    0x7ffff7ebc440
   0x7ffff7ebc460:	shl    rsi,0xa
   0x7ffff7ebc464:	cmp    r12,rsi
   0x7ffff7ebc467:	jne    0x7ffff7ebc400
   0x7ffff7ebc469:	mov    rax,QWORD PTR [rsp+0x10]
   0x7ffff7ebc46e:	mov    rcx,QWORD PTR [rsp+0x18]
   0x7ffff7ebc473:	mov    QWORD PTR [rax],r12
   0x7ffff7ebc476:	xor    eax,eax
   0x7ffff7ebc478:	tzcnt  rax,r12
   0x7ffff7ebc47d:	shl    eax,0x1a
   0x7ffff7ebc480:	or     eax,0x40000
   0x7ffff7ebc485:	mov    DWORD PTR [rcx],eax
   0x7ffff7ebc487:	mov    edi,DWORD PTR [rsp+0xc]
   0x7ffff7ebc48b:	call   0x7ffff7eaea10 <__close_nocancel>
   0x7ffff7ebc490:	mov    rax,QWORD PTR [rsp+0x428]
   0x7ffff7ebc498:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7ebc4a1:	jne    0x7ffff7ebc5af
   0x7ffff7ebc4a7:	add    rsp,0x438
   0x7ffff7ebc4ae:	pop    rbx
   0x7ffff7ebc4af:	pop    rbp
   0x7ffff7ebc4b0:	pop    r12
   0x7ffff7ebc4b2:	pop    r13
   0x7ffff7ebc4b4:	pop    r14
   0x7ffff7ebc4b6:	pop    r15
   0x7ffff7ebc4b8:	ret
   0x7ffff7ebc4b9:	xor    esi,esi
   0x7ffff7ebc4bb:	lea    rdi,[rip+0xb412b]        # 0x7ffff7f705ed
   0x7ffff7ebc4c2:	lea    r13,[rsp+0x20]
   0x7ffff7ebc4c7:	xor    ebx,ebx
   0x7ffff7ebc4c9:	call   0x7ffff7eaeb80 <__open_nocancel>
   0x7ffff7ebc4ce:	lea    r14,[rip+0xb4126]        # 0x7ffff7f705fb
   0x7ffff7ebc4d5:	mov    ebp,eax
   0x7ffff7ebc4d7:	cmp    eax,0xffffffff
   0x7ffff7ebc4da:	je     0x7ffff7ebc52b
   0x7ffff7ebc4dc:	mov    rcx,rbx
   0x7ffff7ebc4df:	mov    edx,0x1ff
   0x7ffff7ebc4e4:	mov    rsi,r13
   0x7ffff7ebc4e7:	mov    edi,ebp
   0x7ffff7ebc4e9:	call   0x7ffff7eaed00 <__pread64_nocancel>
   0x7ffff7ebc4ee:	test   rax,rax
   0x7ffff7ebc4f1:	js     0x7ffff7ebc524
   0x7ffff7ebc4f3:	mov    rsi,r14
   0x7ffff7ebc4f6:	mov    rdi,r13
   0x7ffff7ebc4f9:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
   0x7ffff7ebc4fe:	call   0x7ffff7e3e040
   0x7ffff7ebc503:	test   rax,rax
   0x7ffff7ebc506:	jne    0x7ffff7ebc53c
   0x7ffff7ebc508:	mov    esi,0xa
   0x7ffff7ebc50d:	mov    rdi,r13
   0x7ffff7ebc510:	call   0x7ffff7dbd5f0 <*ABS*+0xa89e0@plt>
   0x7ffff7ebc515:	test   rax,rax
   0x7ffff7ebc518:	je     0x7ffff7ebc524
   0x7ffff7ebc51a:	sub    rax,r13
   0x7ffff7ebc51d:	lea    rbx,[rax+rbx*1+0x1]
   0x7ffff7ebc522:	jmp    0x7ffff7ebc4dc
   0x7ffff7ebc524:	mov    edi,ebp
   0x7ffff7ebc526:	call   0x7ffff7eaea10 <__close_nocancel>
   0x7ffff7ebc52b:	mov    rax,QWORD PTR [rsp+0x10]
   0x7ffff7ebc530:	mov    QWORD PTR [rax],0x0
   0x7ffff7ebc537:	jmp    0x7ffff7ebc490
   0x7ffff7ebc53c:	movsx  edx,BYTE PTR [rax+0xe]
   0x7ffff7ebc540:	lea    ecx,[rdx-0x30]
   0x7ffff7ebc543:	cmp    cl,0x9
   0x7ffff7ebc546:	jbe    0x7ffff7ebc54d
   0x7ffff7ebc548:	cmp    dl,0x20
   0x7ffff7ebc54b:	jne    0x7ffff7ebc524
   0x7ffff7ebc54d:	add    rax,0xf
   0x7ffff7ebc551:	cmp    dl,0x20
   0x7ffff7ebc554:	je     0x7ffff7ebc564
   0x7ffff7ebc556:	sub    edx,0x30
   0x7ffff7ebc559:	lea    rcx,[r12+r12*4]
   0x7ffff7ebc55d:	movsxd rdx,edx
   0x7ffff7ebc560:	lea    r12,[rdx+rcx*2]
   0x7ffff7ebc564:	movsx  edx,BYTE PTR [rax]
   0x7ffff7ebc567:	add    rax,0x1
   0x7ffff7ebc56b:	lea    ecx,[rdx-0x30]
   0x7ffff7ebc56e:	cmp    cl,0x9
   0x7ffff7ebc571:	jbe    0x7ffff7ebc551
   0x7ffff7ebc573:	cmp    dl,0x20
   0x7ffff7ebc576:	je     0x7ffff7ebc564
   0x7ffff7ebc578:	mov    edi,ebp
   0x7ffff7ebc57a:	shl    r12,0xa
   0x7ffff7ebc57e:	call   0x7ffff7eaea10 <__close_nocancel>
   0x7ffff7ebc583:	mov    rax,QWORD PTR [rsp+0x10]
   0x7ffff7ebc588:	mov    QWORD PTR [rax],r12
   0x7ffff7ebc58b:	test   r12,r12
   0x7ffff7ebc58e:	je     0x7ffff7ebc490
   0x7ffff7ebc594:	xor    eax,eax
   0x7ffff7ebc596:	mov    rcx,QWORD PTR [rsp+0x18]
   0x7ffff7ebc59b:	tzcnt  rax,r12
   0x7ffff7ebc5a0:	shl    eax,0x1a
   0x7ffff7ebc5a3:	or     eax,0x40000
   0x7ffff7ebc5a8:	mov    DWORD PTR [rcx],eax
   0x7ffff7ebc5aa:	jmp    0x7ffff7ebc490
   0x7ffff7ebc5af:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ebc5b4:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc5be:	xchg   ax,ax
   0x7ffff7ebc5c0 <accept>:	endbr64
   0x7ffff7ebc5c4 <accept+4>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebc5cc <accept+12>:	test   eax,eax
   0x7ffff7ebc5ce <accept+14>:	jne    0x7ffff7ebc5e0 <accept+32>
   0x7ffff7ebc5d0 <accept+16>:	mov    eax,0x2b
   0x7ffff7ebc5d5 <accept+21>:	syscall
   0x7ffff7ebc5d7 <accept+23>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebc5dd <accept+29>:	ja     0x7ffff7ebc630 <accept+112>
   0x7ffff7ebc5df <accept+31>:	ret
   0x7ffff7ebc5e0 <accept+32>:	sub    rsp,0x28
   0x7ffff7ebc5e4 <accept+36>:	mov    QWORD PTR [rsp+0x18],rdx
   0x7ffff7ebc5e9 <accept+41>:	mov    QWORD PTR [rsp+0x10],rsi
   0x7ffff7ebc5ee <accept+46>:	mov    DWORD PTR [rsp+0xc],edi
   0x7ffff7ebc5f2 <accept+50>:	call   0x7ffff7e25a70
   0x7ffff7ebc5f7 <accept+55>:	mov    rdx,QWORD PTR [rsp+0x18]
   0x7ffff7ebc5fc <accept+60>:	mov    rsi,QWORD PTR [rsp+0x10]
   0x7ffff7ebc601 <accept+65>:	mov    r8d,eax
   0x7ffff7ebc604 <accept+68>:	mov    edi,DWORD PTR [rsp+0xc]
   0x7ffff7ebc608 <accept+72>:	mov    eax,0x2b
   0x7ffff7ebc60d <accept+77>:	syscall
   0x7ffff7ebc60f <accept+79>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebc615 <accept+85>:	ja     0x7ffff7ebc648 <accept+136>
   0x7ffff7ebc617 <accept+87>:	mov    edi,r8d
   0x7ffff7ebc61a <accept+90>:	mov    DWORD PTR [rsp+0xc],eax
   0x7ffff7ebc61e <accept+94>:	call   0x7ffff7e25ae0
   0x7ffff7ebc623 <accept+99>:	mov    eax,DWORD PTR [rsp+0xc]
   0x7ffff7ebc627 <accept+103>:	add    rsp,0x28
   0x7ffff7ebc62b <accept+107>:	ret
   0x7ffff7ebc62c <accept+108>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebc630 <accept+112>:	mov    rdx,QWORD PTR [rip+0xf17d9]        # 0x7ffff7fade10
   0x7ffff7ebc637 <accept+119>:	neg    eax
   0x7ffff7ebc639 <accept+121>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebc63c <accept+124>:	mov    eax,0xffffffff
   0x7ffff7ebc641 <accept+129>:	ret
   0x7ffff7ebc642 <accept+130>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc648 <accept+136>:	mov    rdx,QWORD PTR [rip+0xf17c1]        # 0x7ffff7fade10
   0x7ffff7ebc64f <accept+143>:	neg    eax
   0x7ffff7ebc651 <accept+145>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebc654 <accept+148>:	mov    eax,0xffffffff
   0x7ffff7ebc659 <accept+153>:	jmp    0x7ffff7ebc617 <accept+87>
   0x7ffff7ebc65b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc660 <bind>:	endbr64
   0x7ffff7ebc664 <bind+4>:	mov    eax,0x31
   0x7ffff7ebc669 <bind+9>:	syscall
   0x7ffff7ebc66b <bind+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebc671 <bind+17>:	jae    0x7ffff7ebc674 <bind+20>
   0x7ffff7ebc673 <bind+19>:	ret
   0x7ffff7ebc674 <bind+20>:	mov    rcx,QWORD PTR [rip+0xf1795]        # 0x7ffff7fade10
   0x7ffff7ebc67b <bind+27>:	neg    eax
   0x7ffff7ebc67d <bind+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebc680 <bind+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebc684 <bind+36>:	ret
   0x7ffff7ebc685:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc68f:	nop
   0x7ffff7ebc690 <connect>:	endbr64
   0x7ffff7ebc694 <connect+4>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebc69c <connect+12>:	test   eax,eax
   0x7ffff7ebc69e <connect+14>:	jne    0x7ffff7ebc6b0 <connect+32>
   0x7ffff7ebc6a0 <connect+16>:	mov    eax,0x2a
   0x7ffff7ebc6a5 <connect+21>:	syscall
   0x7ffff7ebc6a7 <connect+23>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebc6ad <connect+29>:	ja     0x7ffff7ebc700 <connect+112>
   0x7ffff7ebc6af <connect+31>:	ret
   0x7ffff7ebc6b0 <connect+32>:	sub    rsp,0x18
   0x7ffff7ebc6b4 <connect+36>:	mov    DWORD PTR [rsp+0xc],edx
   0x7ffff7ebc6b8 <connect+40>:	mov    QWORD PTR [rsp],rsi
   0x7ffff7ebc6bc <connect+44>:	mov    DWORD PTR [rsp+0x8],edi
   0x7ffff7ebc6c0 <connect+48>:	call   0x7ffff7e25a70
   0x7ffff7ebc6c5 <connect+53>:	mov    edx,DWORD PTR [rsp+0xc]
   0x7ffff7ebc6c9 <connect+57>:	mov    rsi,QWORD PTR [rsp]
   0x7ffff7ebc6cd <connect+61>:	mov    r8d,eax
   0x7ffff7ebc6d0 <connect+64>:	mov    edi,DWORD PTR [rsp+0x8]
   0x7ffff7ebc6d4 <connect+68>:	mov    eax,0x2a
   0x7ffff7ebc6d9 <connect+73>:	syscall
   0x7ffff7ebc6db <connect+75>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebc6e1 <connect+81>:	ja     0x7ffff7ebc718 <connect+136>
   0x7ffff7ebc6e3 <connect+83>:	mov    edi,r8d
   0x7ffff7ebc6e6 <connect+86>:	mov    DWORD PTR [rsp+0x8],eax
   0x7ffff7ebc6ea <connect+90>:	call   0x7ffff7e25ae0
   0x7ffff7ebc6ef <connect+95>:	mov    eax,DWORD PTR [rsp+0x8]
   0x7ffff7ebc6f3 <connect+99>:	add    rsp,0x18
   0x7ffff7ebc6f7 <connect+103>:	ret
   0x7ffff7ebc6f8 <connect+104>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc700 <connect+112>:	mov    rdx,QWORD PTR [rip+0xf1709]        # 0x7ffff7fade10
   0x7ffff7ebc707 <connect+119>:	neg    eax
   0x7ffff7ebc709 <connect+121>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebc70c <connect+124>:	mov    eax,0xffffffff
   0x7ffff7ebc711 <connect+129>:	ret
   0x7ffff7ebc712 <connect+130>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc718 <connect+136>:	mov    rdx,QWORD PTR [rip+0xf16f1]        # 0x7ffff7fade10
   0x7ffff7ebc71f <connect+143>:	neg    eax
   0x7ffff7ebc721 <connect+145>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebc724 <connect+148>:	mov    eax,0xffffffff
   0x7ffff7ebc729 <connect+153>:	jmp    0x7ffff7ebc6e3 <connect+83>
   0x7ffff7ebc72b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc730 <getpeername>:	endbr64
   0x7ffff7ebc734 <getpeername+4>:	mov    eax,0x34
   0x7ffff7ebc739 <getpeername+9>:	syscall
   0x7ffff7ebc73b <getpeername+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebc741 <getpeername+17>:	jae    0x7ffff7ebc744 <getpeername+20>
   0x7ffff7ebc743 <getpeername+19>:	ret
   0x7ffff7ebc744 <getpeername+20>:	mov    rcx,QWORD PTR [rip+0xf16c5]        # 0x7ffff7fade10
   0x7ffff7ebc74b <getpeername+27>:	neg    eax
   0x7ffff7ebc74d <getpeername+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebc750 <getpeername+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebc754 <getpeername+36>:	ret
   0x7ffff7ebc755:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc75f:	nop
   0x7ffff7ebc760 <getsockname>:	endbr64
   0x7ffff7ebc764 <getsockname+4>:	mov    eax,0x33
   0x7ffff7ebc769 <getsockname+9>:	syscall
   0x7ffff7ebc76b <getsockname+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebc771 <getsockname+17>:	jae    0x7ffff7ebc774 <getsockname+20>
   0x7ffff7ebc773 <getsockname+19>:	ret
   0x7ffff7ebc774 <getsockname+20>:	mov    rcx,QWORD PTR [rip+0xf1695]        # 0x7ffff7fade10
   0x7ffff7ebc77b <getsockname+27>:	neg    eax
   0x7ffff7ebc77d <getsockname+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebc780 <getsockname+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebc784 <getsockname+36>:	ret
   0x7ffff7ebc785:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc78f:	nop
   0x7ffff7ebc790 <getsockopt>:	endbr64
   0x7ffff7ebc794 <getsockopt+4>:	mov    r10,rcx
   0x7ffff7ebc797 <getsockopt+7>:	mov    eax,0x37
   0x7ffff7ebc79c <getsockopt+12>:	syscall
   0x7ffff7ebc79e <getsockopt+14>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebc7a4 <getsockopt+20>:	ja     0x7ffff7ebc7b0 <getsockopt+32>
   0x7ffff7ebc7a6 <getsockopt+22>:	ret
   0x7ffff7ebc7a7 <getsockopt+23>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc7b0 <getsockopt+32>:	mov    rdx,QWORD PTR [rip+0xf1659]        # 0x7ffff7fade10
   0x7ffff7ebc7b7 <getsockopt+39>:	neg    eax
   0x7ffff7ebc7b9 <getsockopt+41>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebc7bc <getsockopt+44>:	mov    eax,0xffffffff
   0x7ffff7ebc7c1 <getsockopt+49>:	ret
   0x7ffff7ebc7c2:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc7cc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebc7d0 <listen>:	endbr64
   0x7ffff7ebc7d4 <listen+4>:	mov    eax,0x32
   0x7ffff7ebc7d9 <listen+9>:	syscall
   0x7ffff7ebc7db <listen+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebc7e1 <listen+17>:	jae    0x7ffff7ebc7e4 <listen+20>
   0x7ffff7ebc7e3 <listen+19>:	ret
   0x7ffff7ebc7e4 <listen+20>:	mov    rcx,QWORD PTR [rip+0xf1625]        # 0x7ffff7fade10
   0x7ffff7ebc7eb <listen+27>:	neg    eax
   0x7ffff7ebc7ed <listen+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebc7f0 <listen+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebc7f4 <listen+36>:	ret
   0x7ffff7ebc7f5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc7ff:	nop
   0x7ffff7ebc800 <recv>:	endbr64
   0x7ffff7ebc804 <recv+4>:	mov    r10d,ecx
   0x7ffff7ebc807 <recv+7>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebc80f <recv+15>:	test   eax,eax
   0x7ffff7ebc811 <recv+17>:	jne    0x7ffff7ebc830 <recv+48>
   0x7ffff7ebc813 <recv+19>:	xor    r9d,r9d
   0x7ffff7ebc816 <recv+22>:	xor    r8d,r8d
   0x7ffff7ebc819 <recv+25>:	mov    eax,0x2d
   0x7ffff7ebc81e <recv+30>:	syscall
   0x7ffff7ebc820 <recv+32>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebc826 <recv+38>:	ja     0x7ffff7ebc890 <recv+144>
   0x7ffff7ebc828 <recv+40>:	ret
   0x7ffff7ebc829 <recv+41>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebc830 <recv+48>:	push   r12
   0x7ffff7ebc832 <recv+50>:	sub    rsp,0x20
   0x7ffff7ebc836 <recv+54>:	mov    QWORD PTR [rsp+0x10],rdx
   0x7ffff7ebc83b <recv+59>:	mov    QWORD PTR [rsp+0x8],rsi
   0x7ffff7ebc840 <recv+64>:	mov    DWORD PTR [rsp],edi
   0x7ffff7ebc843 <recv+67>:	mov    DWORD PTR [rsp+0x1c],ecx
   0x7ffff7ebc847 <recv+71>:	call   0x7ffff7e25a70
   0x7ffff7ebc84c <recv+76>:	mov    r10d,DWORD PTR [rsp+0x1c]
   0x7ffff7ebc851 <recv+81>:	mov    edi,DWORD PTR [rsp]
   0x7ffff7ebc854 <recv+84>:	xor    r9d,r9d
   0x7ffff7ebc857 <recv+87>:	mov    r12d,eax
   0x7ffff7ebc85a <recv+90>:	mov    rdx,QWORD PTR [rsp+0x10]
   0x7ffff7ebc85f <recv+95>:	mov    rsi,QWORD PTR [rsp+0x8]
   0x7ffff7ebc864 <recv+100>:	xor    r8d,r8d
   0x7ffff7ebc867 <recv+103>:	mov    eax,0x2d
   0x7ffff7ebc86c <recv+108>:	syscall
   0x7ffff7ebc86e <recv+110>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebc874 <recv+116>:	ja     0x7ffff7ebc8a8 <recv+168>
   0x7ffff7ebc876 <recv+118>:	mov    edi,r12d
   0x7ffff7ebc879 <recv+121>:	mov    QWORD PTR [rsp],rax
   0x7ffff7ebc87d <recv+125>:	call   0x7ffff7e25ae0
   0x7ffff7ebc882 <recv+130>:	mov    rax,QWORD PTR [rsp]
   0x7ffff7ebc886 <recv+134>:	add    rsp,0x20
   0x7ffff7ebc88a <recv+138>:	pop    r12
   0x7ffff7ebc88c <recv+140>:	ret
   0x7ffff7ebc88d <recv+141>:	nop    DWORD PTR [rax]
   0x7ffff7ebc890 <recv+144>:	mov    rdx,QWORD PTR [rip+0xf1579]        # 0x7ffff7fade10
   0x7ffff7ebc897 <recv+151>:	neg    eax
   0x7ffff7ebc899 <recv+153>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebc89c <recv+156>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebc8a3 <recv+163>:	ret
   0x7ffff7ebc8a4 <recv+164>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebc8a8 <recv+168>:	mov    rdx,QWORD PTR [rip+0xf1561]        # 0x7ffff7fade10
   0x7ffff7ebc8af <recv+175>:	neg    eax
   0x7ffff7ebc8b1 <recv+177>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebc8b4 <recv+180>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebc8bb <recv+187>:	jmp    0x7ffff7ebc876 <recv+118>
   0x7ffff7ebc8bd:	nop    DWORD PTR [rax]
   0x7ffff7ebc8c0 <recvfrom>:	endbr64
   0x7ffff7ebc8c4 <recvfrom+4>:	mov    r10d,ecx
   0x7ffff7ebc8c7 <recvfrom+7>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebc8cf <recvfrom+15>:	test   eax,eax
   0x7ffff7ebc8d1 <recvfrom+17>:	jne    0x7ffff7ebc8e8 <recvfrom+40>
   0x7ffff7ebc8d3 <recvfrom+19>:	mov    eax,0x2d
   0x7ffff7ebc8d8 <recvfrom+24>:	syscall
   0x7ffff7ebc8da <recvfrom+26>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebc8e0 <recvfrom+32>:	ja     0x7ffff7ebc958 <recvfrom+152>
   0x7ffff7ebc8e2 <recvfrom+34>:	ret
   0x7ffff7ebc8e3 <recvfrom+35>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc8e8 <recvfrom+40>:	push   r12
   0x7ffff7ebc8ea <recvfrom+42>:	sub    rsp,0x30
   0x7ffff7ebc8ee <recvfrom+46>:	mov    QWORD PTR [rsp+0x28],r9
   0x7ffff7ebc8f3 <recvfrom+51>:	mov    QWORD PTR [rsp+0x20],r8
   0x7ffff7ebc8f8 <recvfrom+56>:	mov    QWORD PTR [rsp+0x10],rdx
   0x7ffff7ebc8fd <recvfrom+61>:	mov    QWORD PTR [rsp+0x8],rsi
   0x7ffff7ebc902 <recvfrom+66>:	mov    DWORD PTR [rsp],edi
   0x7ffff7ebc905 <recvfrom+69>:	mov    DWORD PTR [rsp+0x1c],ecx
   0x7ffff7ebc909 <recvfrom+73>:	call   0x7ffff7e25a70
   0x7ffff7ebc90e <recvfrom+78>:	mov    r9,QWORD PTR [rsp+0x28]
   0x7ffff7ebc913 <recvfrom+83>:	mov    r8,QWORD PTR [rsp+0x20]
   0x7ffff7ebc918 <recvfrom+88>:	mov    r12d,eax
   0x7ffff7ebc91b <recvfrom+91>:	mov    r10d,DWORD PTR [rsp+0x1c]
   0x7ffff7ebc920 <recvfrom+96>:	mov    edi,DWORD PTR [rsp]
   0x7ffff7ebc923 <recvfrom+99>:	mov    eax,0x2d
   0x7ffff7ebc928 <recvfrom+104>:	mov    rdx,QWORD PTR [rsp+0x10]
   0x7ffff7ebc92d <recvfrom+109>:	mov    rsi,QWORD PTR [rsp+0x8]
   0x7ffff7ebc932 <recvfrom+114>:	syscall
   0x7ffff7ebc934 <recvfrom+116>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebc93a <recvfrom+122>:	ja     0x7ffff7ebc970 <recvfrom+176>
   0x7ffff7ebc93c <recvfrom+124>:	mov    edi,r12d
   0x7ffff7ebc93f <recvfrom+127>:	mov    QWORD PTR [rsp],rax
   0x7ffff7ebc943 <recvfrom+131>:	call   0x7ffff7e25ae0
   0x7ffff7ebc948 <recvfrom+136>:	mov    rax,QWORD PTR [rsp]
   0x7ffff7ebc94c <recvfrom+140>:	add    rsp,0x30
   0x7ffff7ebc950 <recvfrom+144>:	pop    r12
   0x7ffff7ebc952 <recvfrom+146>:	ret
   0x7ffff7ebc953 <recvfrom+147>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc958 <recvfrom+152>:	mov    rdx,QWORD PTR [rip+0xf14b1]        # 0x7ffff7fade10
   0x7ffff7ebc95f <recvfrom+159>:	neg    eax
   0x7ffff7ebc961 <recvfrom+161>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebc964 <recvfrom+164>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebc96b <recvfrom+171>:	ret
   0x7ffff7ebc96c <recvfrom+172>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebc970 <recvfrom+176>:	mov    rdx,QWORD PTR [rip+0xf1499]        # 0x7ffff7fade10
   0x7ffff7ebc977 <recvfrom+183>:	neg    eax
   0x7ffff7ebc979 <recvfrom+185>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebc97c <recvfrom+188>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebc983 <recvfrom+195>:	jmp    0x7ffff7ebc93c <recvfrom+124>
   0x7ffff7ebc985:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc98f:	nop
   0x7ffff7ebc990 <recvmsg>:	endbr64
   0x7ffff7ebc994 <recvmsg+4>:	push   r12
   0x7ffff7ebc996 <recvmsg+6>:	sub    rsp,0x10
   0x7ffff7ebc99a <recvmsg+10>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebc9a2 <recvmsg+18>:	test   eax,eax
   0x7ffff7ebc9a4 <recvmsg+20>:	jne    0x7ffff7ebc9c8 <recvmsg+56>
   0x7ffff7ebc9a6 <recvmsg+22>:	mov    eax,0x2f
   0x7ffff7ebc9ab <recvmsg+27>:	syscall
   0x7ffff7ebc9ad <recvmsg+29>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebc9b3 <recvmsg+35>:	ja     0x7ffff7ebca10 <recvmsg+128>
   0x7ffff7ebc9b5 <recvmsg+37>:	movsxd r12,eax
   0x7ffff7ebc9b8 <recvmsg+40>:	add    rsp,0x10
   0x7ffff7ebc9bc <recvmsg+44>:	mov    rax,r12
   0x7ffff7ebc9bf <recvmsg+47>:	pop    r12
   0x7ffff7ebc9c1 <recvmsg+49>:	ret
   0x7ffff7ebc9c2 <recvmsg+50>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebc9c8 <recvmsg+56>:	mov    DWORD PTR [rsp+0xc],edx
   0x7ffff7ebc9cc <recvmsg+60>:	mov    QWORD PTR [rsp],rsi
   0x7ffff7ebc9d0 <recvmsg+64>:	mov    DWORD PTR [rsp+0x8],edi
   0x7ffff7ebc9d4 <recvmsg+68>:	call   0x7ffff7e25a70
   0x7ffff7ebc9d9 <recvmsg+73>:	mov    edx,DWORD PTR [rsp+0xc]
   0x7ffff7ebc9dd <recvmsg+77>:	mov    rsi,QWORD PTR [rsp]
   0x7ffff7ebc9e1 <recvmsg+81>:	mov    r8d,eax
   0x7ffff7ebc9e4 <recvmsg+84>:	mov    edi,DWORD PTR [rsp+0x8]
   0x7ffff7ebc9e8 <recvmsg+88>:	mov    eax,0x2f
   0x7ffff7ebc9ed <recvmsg+93>:	syscall
   0x7ffff7ebc9ef <recvmsg+95>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebc9f5 <recvmsg+101>:	ja     0x7ffff7ebca28 <recvmsg+152>
   0x7ffff7ebc9f7 <recvmsg+103>:	movsxd r12,eax
   0x7ffff7ebc9fa <recvmsg+106>:	mov    edi,r8d
   0x7ffff7ebc9fd <recvmsg+109>:	call   0x7ffff7e25ae0
   0x7ffff7ebca02 <recvmsg+114>:	add    rsp,0x10
   0x7ffff7ebca06 <recvmsg+118>:	mov    rax,r12
   0x7ffff7ebca09 <recvmsg+121>:	pop    r12
   0x7ffff7ebca0b <recvmsg+123>:	ret
   0x7ffff7ebca0c <recvmsg+124>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebca10 <recvmsg+128>:	mov    rdx,QWORD PTR [rip+0xf13f9]        # 0x7ffff7fade10
   0x7ffff7ebca17 <recvmsg+135>:	neg    eax
   0x7ffff7ebca19 <recvmsg+137>:	mov    r12,0xffffffffffffffff
   0x7ffff7ebca20 <recvmsg+144>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebca23 <recvmsg+147>:	jmp    0x7ffff7ebc9b8 <recvmsg+40>
   0x7ffff7ebca25 <recvmsg+149>:	nop    DWORD PTR [rax]
   0x7ffff7ebca28 <recvmsg+152>:	mov    rdx,QWORD PTR [rip+0xf13e1]        # 0x7ffff7fade10
   0x7ffff7ebca2f <recvmsg+159>:	neg    eax
   0x7ffff7ebca31 <recvmsg+161>:	mov    r12,0xffffffffffffffff
   0x7ffff7ebca38 <recvmsg+168>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebca3b <recvmsg+171>:	jmp    0x7ffff7ebc9fa <recvmsg+106>
   0x7ffff7ebca3d:	nop    DWORD PTR [rax]
   0x7ffff7ebca40 <send>:	endbr64
   0x7ffff7ebca44 <send+4>:	mov    r10d,ecx
   0x7ffff7ebca47 <send+7>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebca4f <send+15>:	test   eax,eax
   0x7ffff7ebca51 <send+17>:	jne    0x7ffff7ebca70 <send+48>
   0x7ffff7ebca53 <send+19>:	xor    r9d,r9d
   0x7ffff7ebca56 <send+22>:	xor    r8d,r8d
   0x7ffff7ebca59 <send+25>:	mov    eax,0x2c
   0x7ffff7ebca5e <send+30>:	syscall
   0x7ffff7ebca60 <send+32>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebca66 <send+38>:	ja     0x7ffff7ebcad0 <send+144>
   0x7ffff7ebca68 <send+40>:	ret
   0x7ffff7ebca69 <send+41>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebca70 <send+48>:	push   r12
   0x7ffff7ebca72 <send+50>:	sub    rsp,0x20
   0x7ffff7ebca76 <send+54>:	mov    QWORD PTR [rsp+0x10],rdx
   0x7ffff7ebca7b <send+59>:	mov    QWORD PTR [rsp+0x8],rsi
   0x7ffff7ebca80 <send+64>:	mov    DWORD PTR [rsp],edi
   0x7ffff7ebca83 <send+67>:	mov    DWORD PTR [rsp+0x1c],ecx
   0x7ffff7ebca87 <send+71>:	call   0x7ffff7e25a70
   0x7ffff7ebca8c <send+76>:	mov    r10d,DWORD PTR [rsp+0x1c]
   0x7ffff7ebca91 <send+81>:	mov    edi,DWORD PTR [rsp]
   0x7ffff7ebca94 <send+84>:	xor    r9d,r9d
   0x7ffff7ebca97 <send+87>:	mov    r12d,eax
   0x7ffff7ebca9a <send+90>:	mov    rdx,QWORD PTR [rsp+0x10]
   0x7ffff7ebca9f <send+95>:	mov    rsi,QWORD PTR [rsp+0x8]
   0x7ffff7ebcaa4 <send+100>:	xor    r8d,r8d
   0x7ffff7ebcaa7 <send+103>:	mov    eax,0x2c
   0x7ffff7ebcaac <send+108>:	syscall
   0x7ffff7ebcaae <send+110>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebcab4 <send+116>:	ja     0x7ffff7ebcae8 <send+168>
   0x7ffff7ebcab6 <send+118>:	mov    edi,r12d
   0x7ffff7ebcab9 <send+121>:	mov    QWORD PTR [rsp],rax
   0x7ffff7ebcabd <send+125>:	call   0x7ffff7e25ae0
   0x7ffff7ebcac2 <send+130>:	mov    rax,QWORD PTR [rsp]
   0x7ffff7ebcac6 <send+134>:	add    rsp,0x20
   0x7ffff7ebcaca <send+138>:	pop    r12
   0x7ffff7ebcacc <send+140>:	ret
   0x7ffff7ebcacd <send+141>:	nop    DWORD PTR [rax]
   0x7ffff7ebcad0 <send+144>:	mov    rdx,QWORD PTR [rip+0xf1339]        # 0x7ffff7fade10
   0x7ffff7ebcad7 <send+151>:	neg    eax
   0x7ffff7ebcad9 <send+153>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebcadc <send+156>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebcae3 <send+163>:	ret
   0x7ffff7ebcae4 <send+164>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebcae8 <send+168>:	mov    rdx,QWORD PTR [rip+0xf1321]        # 0x7ffff7fade10
   0x7ffff7ebcaef <send+175>:	neg    eax
   0x7ffff7ebcaf1 <send+177>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebcaf4 <send+180>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebcafb <send+187>:	jmp    0x7ffff7ebcab6 <send+118>
   0x7ffff7ebcafd:	nop    DWORD PTR [rax]
   0x7ffff7ebcb00 <sendmsg>:	endbr64
   0x7ffff7ebcb04 <sendmsg+4>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebcb0c <sendmsg+12>:	test   eax,eax
   0x7ffff7ebcb0e <sendmsg+14>:	jne    0x7ffff7ebcb20 <sendmsg+32>
   0x7ffff7ebcb10 <sendmsg+16>:	mov    eax,0x2e
   0x7ffff7ebcb15 <sendmsg+21>:	syscall
   0x7ffff7ebcb17 <sendmsg+23>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebcb1d <sendmsg+29>:	ja     0x7ffff7ebcb70 <sendmsg+112>
   0x7ffff7ebcb1f <sendmsg+31>:	ret
   0x7ffff7ebcb20 <sendmsg+32>:	sub    rsp,0x28
   0x7ffff7ebcb24 <sendmsg+36>:	mov    DWORD PTR [rsp+0x1c],edx
   0x7ffff7ebcb28 <sendmsg+40>:	mov    QWORD PTR [rsp+0x10],rsi
   0x7ffff7ebcb2d <sendmsg+45>:	mov    DWORD PTR [rsp+0x8],edi
   0x7ffff7ebcb31 <sendmsg+49>:	call   0x7ffff7e25a70
   0x7ffff7ebcb36 <sendmsg+54>:	mov    edx,DWORD PTR [rsp+0x1c]
   0x7ffff7ebcb3a <sendmsg+58>:	mov    rsi,QWORD PTR [rsp+0x10]
   0x7ffff7ebcb3f <sendmsg+63>:	mov    r8d,eax
   0x7ffff7ebcb42 <sendmsg+66>:	mov    edi,DWORD PTR [rsp+0x8]
   0x7ffff7ebcb46 <sendmsg+70>:	mov    eax,0x2e
   0x7ffff7ebcb4b <sendmsg+75>:	syscall
   0x7ffff7ebcb4d <sendmsg+77>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebcb53 <sendmsg+83>:	ja     0x7ffff7ebcb88 <sendmsg+136>
   0x7ffff7ebcb55 <sendmsg+85>:	mov    edi,r8d
   0x7ffff7ebcb58 <sendmsg+88>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ebcb5d <sendmsg+93>:	call   0x7ffff7e25ae0
   0x7ffff7ebcb62 <sendmsg+98>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ebcb67 <sendmsg+103>:	add    rsp,0x28
   0x7ffff7ebcb6b <sendmsg+107>:	ret
   0x7ffff7ebcb6c <sendmsg+108>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebcb70 <sendmsg+112>:	mov    rdx,QWORD PTR [rip+0xf1299]        # 0x7ffff7fade10
   0x7ffff7ebcb77 <sendmsg+119>:	neg    eax
   0x7ffff7ebcb79 <sendmsg+121>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebcb7c <sendmsg+124>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebcb83 <sendmsg+131>:	ret
   0x7ffff7ebcb84 <sendmsg+132>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebcb88 <sendmsg+136>:	mov    rdx,QWORD PTR [rip+0xf1281]        # 0x7ffff7fade10
   0x7ffff7ebcb8f <sendmsg+143>:	neg    eax
   0x7ffff7ebcb91 <sendmsg+145>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebcb94 <sendmsg+148>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebcb9b <sendmsg+155>:	jmp    0x7ffff7ebcb55 <sendmsg+85>
   0x7ffff7ebcb9d:	nop    DWORD PTR [rax]
   0x7ffff7ebcba0 <sendto>:	endbr64
   0x7ffff7ebcba4 <sendto+4>:	mov    r10d,ecx
   0x7ffff7ebcba7 <sendto+7>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebcbaf <sendto+15>:	test   eax,eax
   0x7ffff7ebcbb1 <sendto+17>:	jne    0x7ffff7ebcbc8 <sendto+40>
   0x7ffff7ebcbb3 <sendto+19>:	mov    eax,0x2c
   0x7ffff7ebcbb8 <sendto+24>:	syscall
   0x7ffff7ebcbba <sendto+26>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebcbc0 <sendto+32>:	ja     0x7ffff7ebcc40 <sendto+160>
   0x7ffff7ebcbc2 <sendto+34>:	ret
   0x7ffff7ebcbc3 <sendto+35>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebcbc8 <sendto+40>:	push   r12
   0x7ffff7ebcbca <sendto+42>:	sub    rsp,0x30
   0x7ffff7ebcbce <sendto+46>:	mov    DWORD PTR [rsp+0x2c],r9d
   0x7ffff7ebcbd3 <sendto+51>:	mov    QWORD PTR [rsp+0x20],r8
   0x7ffff7ebcbd8 <sendto+56>:	mov    QWORD PTR [rsp+0x18],rdx
   0x7ffff7ebcbdd <sendto+61>:	mov    QWORD PTR [rsp+0x10],rsi
   0x7ffff7ebcbe2 <sendto+66>:	mov    DWORD PTR [rsp+0x8],edi
   0x7ffff7ebcbe6 <sendto+70>:	mov    DWORD PTR [rsp+0x28],ecx
   0x7ffff7ebcbea <sendto+74>:	call   0x7ffff7e25a70
   0x7ffff7ebcbef <sendto+79>:	mov    r9d,DWORD PTR [rsp+0x2c]
   0x7ffff7ebcbf4 <sendto+84>:	mov    r8,QWORD PTR [rsp+0x20]
   0x7ffff7ebcbf9 <sendto+89>:	mov    r12d,eax
   0x7ffff7ebcbfc <sendto+92>:	mov    r10d,DWORD PTR [rsp+0x28]
   0x7ffff7ebcc01 <sendto+97>:	mov    rdx,QWORD PTR [rsp+0x18]
   0x7ffff7ebcc06 <sendto+102>:	mov    eax,0x2c
   0x7ffff7ebcc0b <sendto+107>:	mov    rsi,QWORD PTR [rsp+0x10]
   0x7ffff7ebcc10 <sendto+112>:	mov    edi,DWORD PTR [rsp+0x8]
   0x7ffff7ebcc14 <sendto+116>:	syscall
   0x7ffff7ebcc16 <sendto+118>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebcc1c <sendto+124>:	ja     0x7ffff7ebcc58 <sendto+184>
   0x7ffff7ebcc1e <sendto+126>:	mov    edi,r12d
   0x7ffff7ebcc21 <sendto+129>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ebcc26 <sendto+134>:	call   0x7ffff7e25ae0
   0x7ffff7ebcc2b <sendto+139>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ebcc30 <sendto+144>:	add    rsp,0x30
   0x7ffff7ebcc34 <sendto+148>:	pop    r12
   0x7ffff7ebcc36 <sendto+150>:	ret
   0x7ffff7ebcc37 <sendto+151>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebcc40 <sendto+160>:	mov    rdx,QWORD PTR [rip+0xf11c9]        # 0x7ffff7fade10
   0x7ffff7ebcc47 <sendto+167>:	neg    eax
   0x7ffff7ebcc49 <sendto+169>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebcc4c <sendto+172>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebcc53 <sendto+179>:	ret
   0x7ffff7ebcc54 <sendto+180>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebcc58 <sendto+184>:	mov    rdx,QWORD PTR [rip+0xf11b1]        # 0x7ffff7fade10
   0x7ffff7ebcc5f <sendto+191>:	neg    eax
   0x7ffff7ebcc61 <sendto+193>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebcc64 <sendto+196>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebcc6b <sendto+203>:	jmp    0x7ffff7ebcc1e <sendto+126>
   0x7ffff7ebcc6d:	nop    DWORD PTR [rax]
   0x7ffff7ebcc70 <setsockopt>:	endbr64
   0x7ffff7ebcc74 <setsockopt+4>:	mov    r10,rcx
   0x7ffff7ebcc77 <setsockopt+7>:	mov    eax,0x36
   0x7ffff7ebcc7c <setsockopt+12>:	syscall
   0x7ffff7ebcc7e <setsockopt+14>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebcc84 <setsockopt+20>:	ja     0x7ffff7ebcc90 <setsockopt+32>
   0x7ffff7ebcc86 <setsockopt+22>:	ret
   0x7ffff7ebcc87 <setsockopt+23>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebcc90 <setsockopt+32>:	mov    rdx,QWORD PTR [rip+0xf1179]        # 0x7ffff7fade10
   0x7ffff7ebcc97 <setsockopt+39>:	neg    eax
   0x7ffff7ebcc99 <setsockopt+41>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebcc9c <setsockopt+44>:	mov    eax,0xffffffff
   0x7ffff7ebcca1 <setsockopt+49>:	ret
   0x7ffff7ebcca2:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebccac:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebccb0 <shutdown>:	endbr64
   0x7ffff7ebccb4 <shutdown+4>:	mov    eax,0x30
   0x7ffff7ebccb9 <shutdown+9>:	syscall
   0x7ffff7ebccbb <shutdown+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebccc1 <shutdown+17>:	jae    0x7ffff7ebccc4 <shutdown+20>
   0x7ffff7ebccc3 <shutdown+19>:	ret
   0x7ffff7ebccc4 <shutdown+20>:	mov    rcx,QWORD PTR [rip+0xf1145]        # 0x7ffff7fade10
   0x7ffff7ebcccb <shutdown+27>:	neg    eax
   0x7ffff7ebcccd <shutdown+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebccd0 <shutdown+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebccd4 <shutdown+36>:	ret
   0x7ffff7ebccd5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebccdf:	nop
   0x7ffff7ebcce0 <socket>:	endbr64
   0x7ffff7ebcce4 <socket+4>:	mov    eax,0x29
   0x7ffff7ebcce9 <socket+9>:	syscall
   0x7ffff7ebcceb <socket+11>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebccf1 <socket+17>:	jae    0x7ffff7ebccf4 <socket+20>
   0x7ffff7ebccf3 <socket+19>:	ret
   0x7ffff7ebccf4 <socket+20>:	mov    rcx,QWORD PTR [rip+0xf1115]        # 0x7ffff7fade10
   0x7ffff7ebccfb <socket+27>:	neg    eax
   0x7ffff7ebccfd <socket+29>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebcd00 <socket+32>:	or     rax,0xffffffffffffffff
   0x7ffff7ebcd04 <socket+36>:	ret
   0x7ffff7ebcd05:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebcd0f:	nop
   0x7ffff7ebcd10 <socketpair>:	endbr64
   0x7ffff7ebcd14 <socketpair+4>:	mov    r10,rcx
   0x7ffff7ebcd17 <socketpair+7>:	mov    eax,0x35
   0x7ffff7ebcd1c <socketpair+12>:	syscall
   0x7ffff7ebcd1e <socketpair+14>:	cmp    rax,0xfffffffffffff001
   0x7ffff7ebcd24 <socketpair+20>:	jae    0x7ffff7ebcd27 <socketpair+23>
   0x7ffff7ebcd26 <socketpair+22>:	ret
   0x7ffff7ebcd27 <socketpair+23>:	mov    rcx,QWORD PTR [rip+0xf10e2]        # 0x7ffff7fade10
   0x7ffff7ebcd2e <socketpair+30>:	neg    eax
   0x7ffff7ebcd30 <socketpair+32>:	mov    DWORD PTR fs:[rcx],eax
   0x7ffff7ebcd33 <socketpair+35>:	or     rax,0xffffffffffffffff
   0x7ffff7ebcd37 <socketpair+39>:	ret
   0x7ffff7ebcd38:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebcd40 <isfdtype>:	endbr64
   0x7ffff7ebcd44 <isfdtype+4>:	push   r12
   0x7ffff7ebcd46 <isfdtype+6>:	push   rbp
   0x7ffff7ebcd47 <isfdtype+7>:	push   rbx
   0x7ffff7ebcd48 <isfdtype+8>:	mov    ebx,esi
   0x7ffff7ebcd4a <isfdtype+10>:	sub    rsp,0xa0
   0x7ffff7ebcd51 <isfdtype+17>:	mov    rbp,QWORD PTR [rip+0xf10b8]        # 0x7ffff7fade10
   0x7ffff7ebcd58 <isfdtype+24>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ebcd61 <isfdtype+33>:	mov    QWORD PTR [rsp+0x98],rax
   0x7ffff7ebcd69 <isfdtype+41>:	xor    eax,eax
   0x7ffff7ebcd6b <isfdtype+43>:	mov    rsi,rsp
   0x7ffff7ebcd6e <isfdtype+46>:	mov    r12d,DWORD PTR fs:[rbp+0x0]
   0x7ffff7ebcd73 <isfdtype+51>:	call   0x7ffff7ea8e80 <fstat64>
   0x7ffff7ebcd78 <isfdtype+56>:	mov    DWORD PTR fs:[rbp+0x0],r12d
   0x7ffff7ebcd7d <isfdtype+61>:	test   eax,eax
   0x7ffff7ebcd7f <isfdtype+63>:	jne    0x7ffff7ebcd92 <isfdtype+82>
   0x7ffff7ebcd81 <isfdtype+65>:	mov    eax,DWORD PTR [rsp+0x18]
   0x7ffff7ebcd85 <isfdtype+69>:	and    eax,0xf000
   0x7ffff7ebcd8a <isfdtype+74>:	cmp    eax,ebx
   0x7ffff7ebcd8c <isfdtype+76>:	sete   al
   0x7ffff7ebcd8f <isfdtype+79>:	movzx  eax,al
   0x7ffff7ebcd92 <isfdtype+82>:	mov    rdx,QWORD PTR [rsp+0x98]
   0x7ffff7ebcd9a <isfdtype+90>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7ebcda3 <isfdtype+99>:	jne    0x7ffff7ebcdb1 <isfdtype+113>
   0x7ffff7ebcda5 <isfdtype+101>:	add    rsp,0xa0
   0x7ffff7ebcdac <isfdtype+108>:	pop    rbx
   0x7ffff7ebcdad <isfdtype+109>:	pop    rbp
   0x7ffff7ebcdae <isfdtype+110>:	pop    r12
   0x7ffff7ebcdb0 <isfdtype+112>:	ret
   0x7ffff7ebcdb1 <isfdtype+113>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ebcdb6:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebcdc0:	endbr64
   0x7ffff7ebcdc4:	sub    rsp,0x8
   0x7ffff7ebcdc8:	xor    edx,edx
   0x7ffff7ebcdca:	mov    esi,0x80002
   0x7ffff7ebcdcf:	mov    edi,0x1
   0x7ffff7ebcdd4:	call   0x7ffff7ebcce0 <socket>
   0x7ffff7ebcdd9:	test   eax,eax
   0x7ffff7ebcddb:	js     0x7ffff7ebcde8
   0x7ffff7ebcddd:	add    rsp,0x8
   0x7ffff7ebcde1:	ret
   0x7ffff7ebcde2:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebcde8:	xor    edx,edx
   0x7ffff7ebcdea:	mov    esi,0x80002
   0x7ffff7ebcdef:	mov    edi,0x2
   0x7ffff7ebcdf4:	call   0x7ffff7ebcce0 <socket>
   0x7ffff7ebcdf9:	test   eax,eax
   0x7ffff7ebcdfb:	jns    0x7ffff7ebcddd
   0x7ffff7ebcdfd:	xor    edx,edx
   0x7ffff7ebcdff:	mov    esi,0x80002
   0x7ffff7ebce04:	mov    edi,0xa
   0x7ffff7ebce09:	call   0x7ffff7ebcce0 <socket>
   0x7ffff7ebce0e:	test   eax,eax
   0x7ffff7ebce10:	jns    0x7ffff7ebcddd
   0x7ffff7ebce12:	mov    rdx,QWORD PTR [rip+0xf0ff7]        # 0x7ffff7fade10
   0x7ffff7ebce19:	mov    DWORD PTR fs:[rdx],0x2
   0x7ffff7ebce20:	jmp    0x7ffff7ebcddd
   0x7ffff7ebce22:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebce2c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebce30 <sockatmark>:	endbr64
   0x7ffff7ebce34 <sockatmark+4>:	sub    rsp,0x18
   0x7ffff7ebce38 <sockatmark+8>:	mov    esi,0x8905
   0x7ffff7ebce3d <sockatmark+13>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ebce46 <sockatmark+22>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ebce4b <sockatmark+27>:	xor    eax,eax
   0x7ffff7ebce4d <sockatmark+29>:	lea    rdx,[rsp+0x4]
   0x7ffff7ebce52 <sockatmark+34>:	call   0x7ffff7eafac0 <ioctl>
   0x7ffff7ebce57 <sockatmark+39>:	cmp    eax,0xffffffff
   0x7ffff7ebce5a <sockatmark+42>:	je     0x7ffff7ebce60 <sockatmark+48>
   0x7ffff7ebce5c <sockatmark+44>:	mov    eax,DWORD PTR [rsp+0x4]
   0x7ffff7ebce60 <sockatmark+48>:	mov    rdx,QWORD PTR [rsp+0x8]
   0x7ffff7ebce65 <sockatmark+53>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7ebce6e <sockatmark+62>:	jne    0x7ffff7ebce75 <sockatmark+69>
   0x7ffff7ebce70 <sockatmark+64>:	add    rsp,0x18
   0x7ffff7ebce74 <sockatmark+68>:	ret
   0x7ffff7ebce75 <sockatmark+69>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ebce7a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebce80 <accept4>:	endbr64
   0x7ffff7ebce84 <accept4+4>:	mov    r10d,ecx
   0x7ffff7ebce87 <accept4+7>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebce8f <accept4+15>:	test   eax,eax
   0x7ffff7ebce91 <accept4+17>:	jne    0x7ffff7ebcea8 <accept4+40>
   0x7ffff7ebce93 <accept4+19>:	mov    eax,0x120
   0x7ffff7ebce98 <accept4+24>:	syscall
   0x7ffff7ebce9a <accept4+26>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebcea0 <accept4+32>:	ja     0x7ffff7ebcf00 <accept4+128>
   0x7ffff7ebcea2 <accept4+34>:	ret
   0x7ffff7ebcea3 <accept4+35>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebcea8 <accept4+40>:	sub    rsp,0x28
   0x7ffff7ebceac <accept4+44>:	mov    QWORD PTR [rsp+0x10],rdx
   0x7ffff7ebceb1 <accept4+49>:	mov    QWORD PTR [rsp+0x8],rsi
   0x7ffff7ebceb6 <accept4+54>:	mov    DWORD PTR [rsp+0x18],edi
   0x7ffff7ebceba <accept4+58>:	mov    DWORD PTR [rsp+0x1c],ecx
   0x7ffff7ebcebe <accept4+62>:	call   0x7ffff7e25a70
   0x7ffff7ebcec3 <accept4+67>:	mov    r10d,DWORD PTR [rsp+0x1c]
   0x7ffff7ebcec8 <accept4+72>:	mov    rdx,QWORD PTR [rsp+0x10]
   0x7ffff7ebcecd <accept4+77>:	mov    r8d,eax
   0x7ffff7ebced0 <accept4+80>:	mov    rsi,QWORD PTR [rsp+0x8]
   0x7ffff7ebced5 <accept4+85>:	mov    edi,DWORD PTR [rsp+0x18]
   0x7ffff7ebced9 <accept4+89>:	mov    eax,0x120
   0x7ffff7ebcede <accept4+94>:	syscall
   0x7ffff7ebcee0 <accept4+96>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebcee6 <accept4+102>:	ja     0x7ffff7ebcf18 <accept4+152>
   0x7ffff7ebcee8 <accept4+104>:	mov    edi,r8d
   0x7ffff7ebceeb <accept4+107>:	mov    DWORD PTR [rsp+0x18],eax
   0x7ffff7ebceef <accept4+111>:	call   0x7ffff7e25ae0
   0x7ffff7ebcef4 <accept4+116>:	mov    eax,DWORD PTR [rsp+0x18]
   0x7ffff7ebcef8 <accept4+120>:	add    rsp,0x28
   0x7ffff7ebcefc <accept4+124>:	ret
   0x7ffff7ebcefd <accept4+125>:	nop    DWORD PTR [rax]
   0x7ffff7ebcf00 <accept4+128>:	mov    rdx,QWORD PTR [rip+0xf0f09]        # 0x7ffff7fade10
   0x7ffff7ebcf07 <accept4+135>:	neg    eax
   0x7ffff7ebcf09 <accept4+137>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebcf0c <accept4+140>:	mov    eax,0xffffffff
   0x7ffff7ebcf11 <accept4+145>:	ret
   0x7ffff7ebcf12 <accept4+146>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebcf18 <accept4+152>:	mov    rdx,QWORD PTR [rip+0xf0ef1]        # 0x7ffff7fade10
   0x7ffff7ebcf1f <accept4+159>:	neg    eax
   0x7ffff7ebcf21 <accept4+161>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebcf24 <accept4+164>:	mov    eax,0xffffffff
   0x7ffff7ebcf29 <accept4+169>:	jmp    0x7ffff7ebcee8 <accept4+104>
   0x7ffff7ebcf2b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebcf30 <recvmmsg>:	endbr64
   0x7ffff7ebcf34 <recvmmsg+4>:	mov    r10d,ecx
   0x7ffff7ebcf37 <recvmmsg+7>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebcf3f <recvmmsg+15>:	test   eax,eax
   0x7ffff7ebcf41 <recvmmsg+17>:	jne    0x7ffff7ebcf58 <recvmmsg+40>
   0x7ffff7ebcf43 <recvmmsg+19>:	mov    eax,0x12b
   0x7ffff7ebcf48 <recvmmsg+24>:	syscall
   0x7ffff7ebcf4a <recvmmsg+26>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebcf50 <recvmmsg+32>:	ja     0x7ffff7ebcfb8 <recvmmsg+136>
   0x7ffff7ebcf52 <recvmmsg+34>:	ret
   0x7ffff7ebcf53 <recvmmsg+35>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebcf58 <recvmmsg+40>:	sub    rsp,0x28
   0x7ffff7ebcf5c <recvmmsg+44>:	mov    QWORD PTR [rsp+0x18],r8
   0x7ffff7ebcf61 <recvmmsg+49>:	mov    DWORD PTR [rsp+0x10],edx
   0x7ffff7ebcf65 <recvmmsg+53>:	mov    QWORD PTR [rsp+0x8],rsi
   0x7ffff7ebcf6a <recvmmsg+58>:	mov    DWORD PTR [rsp+0x4],edi
   0x7ffff7ebcf6e <recvmmsg+62>:	mov    DWORD PTR [rsp+0x14],ecx
   0x7ffff7ebcf72 <recvmmsg+66>:	call   0x7ffff7e25a70
   0x7ffff7ebcf77 <recvmmsg+71>:	mov    r8,QWORD PTR [rsp+0x18]
   0x7ffff7ebcf7c <recvmmsg+76>:	mov    r10d,DWORD PTR [rsp+0x14]
   0x7ffff7ebcf81 <recvmmsg+81>:	mov    r9d,eax
   0x7ffff7ebcf84 <recvmmsg+84>:	mov    edx,DWORD PTR [rsp+0x10]
   0x7ffff7ebcf88 <recvmmsg+88>:	mov    rsi,QWORD PTR [rsp+0x8]
   0x7ffff7ebcf8d <recvmmsg+93>:	mov    eax,0x12b
   0x7ffff7ebcf92 <recvmmsg+98>:	mov    edi,DWORD PTR [rsp+0x4]
   0x7ffff7ebcf96 <recvmmsg+102>:	syscall
   0x7ffff7ebcf98 <recvmmsg+104>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebcf9e <recvmmsg+110>:	ja     0x7ffff7ebcfd0 <recvmmsg+160>
   0x7ffff7ebcfa0 <recvmmsg+112>:	mov    edi,r9d
   0x7ffff7ebcfa3 <recvmmsg+115>:	mov    DWORD PTR [rsp+0x4],eax
   0x7ffff7ebcfa7 <recvmmsg+119>:	call   0x7ffff7e25ae0
   0x7ffff7ebcfac <recvmmsg+124>:	mov    eax,DWORD PTR [rsp+0x4]
   0x7ffff7ebcfb0 <recvmmsg+128>:	add    rsp,0x28
   0x7ffff7ebcfb4 <recvmmsg+132>:	ret
   0x7ffff7ebcfb5 <recvmmsg+133>:	nop    DWORD PTR [rax]
   0x7ffff7ebcfb8 <recvmmsg+136>:	mov    rdx,QWORD PTR [rip+0xf0e51]        # 0x7ffff7fade10
   0x7ffff7ebcfbf <recvmmsg+143>:	neg    eax
   0x7ffff7ebcfc1 <recvmmsg+145>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebcfc4 <recvmmsg+148>:	mov    eax,0xffffffff
   0x7ffff7ebcfc9 <recvmmsg+153>:	ret
   0x7ffff7ebcfca <recvmmsg+154>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebcfd0 <recvmmsg+160>:	mov    rdx,QWORD PTR [rip+0xf0e39]        # 0x7ffff7fade10
   0x7ffff7ebcfd7 <recvmmsg+167>:	neg    eax
   0x7ffff7ebcfd9 <recvmmsg+169>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebcfdc <recvmmsg+172>:	mov    eax,0xffffffff
   0x7ffff7ebcfe1 <recvmmsg+177>:	jmp    0x7ffff7ebcfa0 <recvmmsg+112>
   0x7ffff7ebcfe3:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebcfed:	nop    DWORD PTR [rax]
   0x7ffff7ebcff0 <sendmmsg>:	endbr64
   0x7ffff7ebcff4 <sendmmsg+4>:	mov    r10d,ecx
   0x7ffff7ebcff7 <sendmmsg+7>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebcfff <sendmmsg+15>:	test   eax,eax
   0x7ffff7ebd001 <sendmmsg+17>:	jne    0x7ffff7ebd018 <sendmmsg+40>
   0x7ffff7ebd003 <sendmmsg+19>:	mov    eax,0x133
   0x7ffff7ebd008 <sendmmsg+24>:	syscall
   0x7ffff7ebd00a <sendmmsg+26>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebd010 <sendmmsg+32>:	ja     0x7ffff7ebd070 <sendmmsg+128>
   0x7ffff7ebd012 <sendmmsg+34>:	ret
   0x7ffff7ebd013 <sendmmsg+35>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd018 <sendmmsg+40>:	sub    rsp,0x28
   0x7ffff7ebd01c <sendmmsg+44>:	mov    DWORD PTR [rsp+0x18],edx
   0x7ffff7ebd020 <sendmmsg+48>:	mov    QWORD PTR [rsp+0x10],rsi
   0x7ffff7ebd025 <sendmmsg+53>:	mov    DWORD PTR [rsp+0xc],edi
   0x7ffff7ebd029 <sendmmsg+57>:	mov    DWORD PTR [rsp+0x1c],ecx
   0x7ffff7ebd02d <sendmmsg+61>:	call   0x7ffff7e25a70
   0x7ffff7ebd032 <sendmmsg+66>:	mov    r10d,DWORD PTR [rsp+0x1c]
   0x7ffff7ebd037 <sendmmsg+71>:	mov    edx,DWORD PTR [rsp+0x18]
   0x7ffff7ebd03b <sendmmsg+75>:	mov    r8d,eax
   0x7ffff7ebd03e <sendmmsg+78>:	mov    rsi,QWORD PTR [rsp+0x10]
   0x7ffff7ebd043 <sendmmsg+83>:	mov    edi,DWORD PTR [rsp+0xc]
   0x7ffff7ebd047 <sendmmsg+87>:	mov    eax,0x133
   0x7ffff7ebd04c <sendmmsg+92>:	syscall
   0x7ffff7ebd04e <sendmmsg+94>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebd054 <sendmmsg+100>:	ja     0x7ffff7ebd088 <sendmmsg+152>
   0x7ffff7ebd056 <sendmmsg+102>:	mov    edi,r8d
   0x7ffff7ebd059 <sendmmsg+105>:	mov    DWORD PTR [rsp+0xc],eax
   0x7ffff7ebd05d <sendmmsg+109>:	call   0x7ffff7e25ae0
   0x7ffff7ebd062 <sendmmsg+114>:	mov    eax,DWORD PTR [rsp+0xc]
   0x7ffff7ebd066 <sendmmsg+118>:	add    rsp,0x28
   0x7ffff7ebd06a <sendmmsg+122>:	ret
   0x7ffff7ebd06b <sendmmsg+123>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd070 <sendmmsg+128>:	mov    rdx,QWORD PTR [rip+0xf0d99]        # 0x7ffff7fade10
   0x7ffff7ebd077 <sendmmsg+135>:	neg    eax
   0x7ffff7ebd079 <sendmmsg+137>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebd07c <sendmmsg+140>:	mov    eax,0xffffffff
   0x7ffff7ebd081 <sendmmsg+145>:	ret
   0x7ffff7ebd082 <sendmmsg+146>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd088 <sendmmsg+152>:	mov    rdx,QWORD PTR [rip+0xf0d81]        # 0x7ffff7fade10
   0x7ffff7ebd08f <sendmmsg+159>:	neg    eax
   0x7ffff7ebd091 <sendmmsg+161>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebd094 <sendmmsg+164>:	mov    eax,0xffffffff
   0x7ffff7ebd099 <sendmmsg+169>:	jmp    0x7ffff7ebd056 <sendmmsg+102>
   0x7ffff7ebd09b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd0a0:	endbr64
   0x7ffff7ebd0a4:	push   rbp
   0x7ffff7ebd0a5:	mov    rbp,rsi
   0x7ffff7ebd0a8:	push   rbx
   0x7ffff7ebd0a9:	mov    rbx,rdi
   0x7ffff7ebd0ac:	mov    rdi,rsi
   0x7ffff7ebd0af:	sub    rsp,0x8
   0x7ffff7ebd0b3:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7ebd0b8:	cmp    rax,0x6b
   0x7ffff7ebd0bc:	ja     0x7ffff7ebd158
   0x7ffff7ebd0c2:	mov    edx,0x1
   0x7ffff7ebd0c7:	add    rax,0x1
   0x7ffff7ebd0cb:	mov    WORD PTR [rbx],dx
   0x7ffff7ebd0ce:	lea    rdx,[rbx+0x2]
   0x7ffff7ebd0d2:	cmp    eax,0x8
   0x7ffff7ebd0d5:	jae    0x7ffff7ebd0f8
   0x7ffff7ebd0d7:	test   al,0x4
   0x7ffff7ebd0d9:	jne    0x7ffff7ebd140
   0x7ffff7ebd0db:	test   eax,eax
   0x7ffff7ebd0dd:	je     0x7ffff7ebd0ea
   0x7ffff7ebd0df:	movzx  ecx,BYTE PTR [rbp+0x0]
   0x7ffff7ebd0e3:	mov    BYTE PTR [rbx+0x2],cl
   0x7ffff7ebd0e6:	test   al,0x2
   0x7ffff7ebd0e8:	jne    0x7ffff7ebd130
   0x7ffff7ebd0ea:	xor    eax,eax
   0x7ffff7ebd0ec:	add    rsp,0x8
   0x7ffff7ebd0f0:	pop    rbx
   0x7ffff7ebd0f1:	pop    rbp
   0x7ffff7ebd0f2:	ret
   0x7ffff7ebd0f3:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd0f8:	mov    rcx,QWORD PTR [rbp+0x0]
   0x7ffff7ebd0fc:	lea    rdi,[rbx+0xa]
   0x7ffff7ebd100:	and    rdi,0xfffffffffffffff8
   0x7ffff7ebd104:	mov    QWORD PTR [rbx+0x2],rcx
   0x7ffff7ebd108:	mov    ecx,eax
   0x7ffff7ebd10a:	mov    rsi,QWORD PTR [rbp+rcx*1-0x8]
   0x7ffff7ebd10f:	mov    QWORD PTR [rdx+rcx*1-0x8],rsi
   0x7ffff7ebd114:	sub    rdx,rdi
   0x7ffff7ebd117:	mov    rsi,rbp
   0x7ffff7ebd11a:	lea    ecx,[rax+rdx*1]
   0x7ffff7ebd11d:	sub    rsi,rdx
   0x7ffff7ebd120:	mov    eax,ecx
   0x7ffff7ebd122:	shr    eax,0x3
   0x7ffff7ebd125:	mov    ecx,eax
   0x7ffff7ebd127:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   0x7ffff7ebd12a:	jmp    0x7ffff7ebd0ea
   0x7ffff7ebd12c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd130:	mov    eax,eax
   0x7ffff7ebd132:	movzx  ecx,WORD PTR [rbp+rax*1-0x2]
   0x7ffff7ebd137:	mov    WORD PTR [rdx+rax*1-0x2],cx
   0x7ffff7ebd13c:	jmp    0x7ffff7ebd0ea
   0x7ffff7ebd13e:	xchg   ax,ax
   0x7ffff7ebd140:	mov    ecx,DWORD PTR [rbp+0x0]
   0x7ffff7ebd143:	mov    eax,eax
   0x7ffff7ebd145:	mov    DWORD PTR [rbx+0x2],ecx
   0x7ffff7ebd148:	mov    ecx,DWORD PTR [rbp+rax*1-0x4]
   0x7ffff7ebd14c:	mov    DWORD PTR [rdx+rax*1-0x4],ecx
   0x7ffff7ebd150:	jmp    0x7ffff7ebd0ea
   0x7ffff7ebd152:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd158:	mov    rax,QWORD PTR [rip+0xf0cb1]        # 0x7ffff7fade10
   0x7ffff7ebd15f:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ebd166:	mov    eax,0xffffffff
   0x7ffff7ebd16b:	jmp    0x7ffff7ebd0ec
   0x7ffff7ebd170 <__libc_sa_len>:	endbr64
   0x7ffff7ebd174 <__libc_sa_len+4>:	sub    edi,0x1
   0x7ffff7ebd177 <__libc_sa_len+7>:	xor    eax,eax
   0x7ffff7ebd179 <__libc_sa_len+9>:	cmp    di,0x12
   0x7ffff7ebd17d <__libc_sa_len+13>:	ja     0x7ffff7ebd18c <__libc_sa_len+28>
   0x7ffff7ebd17f <__libc_sa_len+15>:	movzx  edi,di
   0x7ffff7ebd182 <__libc_sa_len+18>:	lea    rax,[rip+0xae017]        # 0x7ffff7f6b1a0
   0x7ffff7ebd189 <__libc_sa_len+25>:	mov    eax,DWORD PTR [rax+rdi*4]
   0x7ffff7ebd18c <__libc_sa_len+28>:	ret
   0x7ffff7ebd18d:	nop    DWORD PTR [rax]
   0x7ffff7ebd190 <__cmsg_nxthdr>:	endbr64
   0x7ffff7ebd194 <__cmsg_nxthdr+4>:	mov    rax,QWORD PTR [rsi]
   0x7ffff7ebd197 <__cmsg_nxthdr+7>:	cmp    rax,0xf
   0x7ffff7ebd19b <__cmsg_nxthdr+11>:	jbe    0x7ffff7ebd1d8 <__cmsg_nxthdr+72>
   0x7ffff7ebd19d <__cmsg_nxthdr+13>:	add    rax,0x7
   0x7ffff7ebd1a1 <__cmsg_nxthdr+17>:	mov    rcx,QWORD PTR [rdi+0x28]
   0x7ffff7ebd1a5 <__cmsg_nxthdr+21>:	add    rcx,QWORD PTR [rdi+0x20]
   0x7ffff7ebd1a9 <__cmsg_nxthdr+25>:	and    rax,0xfffffffffffffff8
   0x7ffff7ebd1ad <__cmsg_nxthdr+29>:	add    rax,rsi
   0x7ffff7ebd1b0 <__cmsg_nxthdr+32>:	lea    rdx,[rax+0x10]
   0x7ffff7ebd1b4 <__cmsg_nxthdr+36>:	cmp    rcx,rdx
   0x7ffff7ebd1b7 <__cmsg_nxthdr+39>:	jb     0x7ffff7ebd1d8 <__cmsg_nxthdr+72>
   0x7ffff7ebd1b9 <__cmsg_nxthdr+41>:	mov    rdi,QWORD PTR [rax]
   0x7ffff7ebd1bc <__cmsg_nxthdr+44>:	lea    rdx,[rdi+0x7]
   0x7ffff7ebd1c0 <__cmsg_nxthdr+48>:	and    rdx,0xfffffffffffffff8
   0x7ffff7ebd1c4 <__cmsg_nxthdr+52>:	add    rdx,rax
   0x7ffff7ebd1c7 <__cmsg_nxthdr+55>:	cmp    rcx,rdx
   0x7ffff7ebd1ca <__cmsg_nxthdr+58>:	mov    edx,0x0
   0x7ffff7ebd1cf <__cmsg_nxthdr+63>:	cmovb  rax,rdx
   0x7ffff7ebd1d3 <__cmsg_nxthdr+67>:	ret
   0x7ffff7ebd1d4 <__cmsg_nxthdr+68>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd1d8 <__cmsg_nxthdr+72>:	xor    eax,eax
   0x7ffff7ebd1da <__cmsg_nxthdr+74>:	ret
   0x7ffff7ebd1db:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd1e0 <ftok>:	endbr64
   0x7ffff7ebd1e4 <ftok+4>:	push   rbx
   0x7ffff7ebd1e5 <ftok+5>:	mov    ebx,esi
   0x7ffff7ebd1e7 <ftok+7>:	sub    rsp,0xa0
   0x7ffff7ebd1ee <ftok+14>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ebd1f7 <ftok+23>:	mov    QWORD PTR [rsp+0x98],rax
   0x7ffff7ebd1ff <ftok+31>:	xor    eax,eax
   0x7ffff7ebd201 <ftok+33>:	mov    rsi,rsp
   0x7ffff7ebd204 <ftok+36>:	call   0x7ffff7ea8e60 <stat64>
   0x7ffff7ebd209 <ftok+41>:	test   eax,eax
   0x7ffff7ebd20b <ftok+43>:	js     0x7ffff7ebd240 <ftok+96>
   0x7ffff7ebd20d <ftok+45>:	mov    eax,DWORD PTR [rsp]
   0x7ffff7ebd210 <ftok+48>:	movzx  edx,WORD PTR [rsp+0x8]
   0x7ffff7ebd215 <ftok+53>:	shl    ebx,0x18
   0x7ffff7ebd218 <ftok+56>:	shl    eax,0x10
   0x7ffff7ebd21b <ftok+59>:	and    eax,0xff0000
   0x7ffff7ebd220 <ftok+64>:	or     eax,edx
   0x7ffff7ebd222 <ftok+66>:	or     eax,ebx
   0x7ffff7ebd224 <ftok+68>:	mov    rdx,QWORD PTR [rsp+0x98]
   0x7ffff7ebd22c <ftok+76>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7ebd235 <ftok+85>:	jne    0x7ffff7ebd247 <ftok+103>
   0x7ffff7ebd237 <ftok+87>:	add    rsp,0xa0
   0x7ffff7ebd23e <ftok+94>:	pop    rbx
   0x7ffff7ebd23f <ftok+95>:	ret
   0x7ffff7ebd240 <ftok+96>:	mov    eax,0xffffffff
   0x7ffff7ebd245 <ftok+101>:	jmp    0x7ffff7ebd224 <ftok+68>
   0x7ffff7ebd247 <ftok+103>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ebd24c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd250 <msgsnd>:	endbr64
   0x7ffff7ebd254 <msgsnd+4>:	mov    r10d,ecx
   0x7ffff7ebd257 <msgsnd+7>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebd25f <msgsnd+15>:	test   eax,eax
   0x7ffff7ebd261 <msgsnd+17>:	jne    0x7ffff7ebd278 <msgsnd+40>
   0x7ffff7ebd263 <msgsnd+19>:	mov    eax,0x45
   0x7ffff7ebd268 <msgsnd+24>:	syscall
   0x7ffff7ebd26a <msgsnd+26>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebd270 <msgsnd+32>:	ja     0x7ffff7ebd2d0 <msgsnd+128>
   0x7ffff7ebd272 <msgsnd+34>:	ret
   0x7ffff7ebd273 <msgsnd+35>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd278 <msgsnd+40>:	sub    rsp,0x28
   0x7ffff7ebd27c <msgsnd+44>:	mov    QWORD PTR [rsp+0x10],rdx
   0x7ffff7ebd281 <msgsnd+49>:	mov    QWORD PTR [rsp+0x8],rsi
   0x7ffff7ebd286 <msgsnd+54>:	mov    DWORD PTR [rsp+0x18],edi
   0x7ffff7ebd28a <msgsnd+58>:	mov    DWORD PTR [rsp+0x1c],ecx
   0x7ffff7ebd28e <msgsnd+62>:	call   0x7ffff7e25a70
   0x7ffff7ebd293 <msgsnd+67>:	mov    r10d,DWORD PTR [rsp+0x1c]
   0x7ffff7ebd298 <msgsnd+72>:	mov    rdx,QWORD PTR [rsp+0x10]
   0x7ffff7ebd29d <msgsnd+77>:	mov    r8d,eax
   0x7ffff7ebd2a0 <msgsnd+80>:	mov    rsi,QWORD PTR [rsp+0x8]
   0x7ffff7ebd2a5 <msgsnd+85>:	mov    edi,DWORD PTR [rsp+0x18]
   0x7ffff7ebd2a9 <msgsnd+89>:	mov    eax,0x45
   0x7ffff7ebd2ae <msgsnd+94>:	syscall
   0x7ffff7ebd2b0 <msgsnd+96>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebd2b6 <msgsnd+102>:	ja     0x7ffff7ebd2e8 <msgsnd+152>
   0x7ffff7ebd2b8 <msgsnd+104>:	mov    edi,r8d
   0x7ffff7ebd2bb <msgsnd+107>:	mov    DWORD PTR [rsp+0x18],eax
   0x7ffff7ebd2bf <msgsnd+111>:	call   0x7ffff7e25ae0
   0x7ffff7ebd2c4 <msgsnd+116>:	mov    eax,DWORD PTR [rsp+0x18]
   0x7ffff7ebd2c8 <msgsnd+120>:	add    rsp,0x28
   0x7ffff7ebd2cc <msgsnd+124>:	ret
   0x7ffff7ebd2cd <msgsnd+125>:	nop    DWORD PTR [rax]
   0x7ffff7ebd2d0 <msgsnd+128>:	mov    rdx,QWORD PTR [rip+0xf0b39]        # 0x7ffff7fade10
   0x7ffff7ebd2d7 <msgsnd+135>:	neg    eax
   0x7ffff7ebd2d9 <msgsnd+137>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebd2dc <msgsnd+140>:	mov    eax,0xffffffff
   0x7ffff7ebd2e1 <msgsnd+145>:	ret
   0x7ffff7ebd2e2 <msgsnd+146>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd2e8 <msgsnd+152>:	mov    rdx,QWORD PTR [rip+0xf0b21]        # 0x7ffff7fade10
   0x7ffff7ebd2ef <msgsnd+159>:	neg    eax
   0x7ffff7ebd2f1 <msgsnd+161>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebd2f4 <msgsnd+164>:	mov    eax,0xffffffff
   0x7ffff7ebd2f9 <msgsnd+169>:	jmp    0x7ffff7ebd2b8 <msgsnd+104>
   0x7ffff7ebd2fb:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd300 <msgrcv>:	endbr64
   0x7ffff7ebd304 <msgrcv+4>:	mov    r10,rcx
   0x7ffff7ebd307 <msgrcv+7>:	mov    eax,DWORD PTR fs:0x18
   0x7ffff7ebd30f <msgrcv+15>:	test   eax,eax
   0x7ffff7ebd311 <msgrcv+17>:	jne    0x7ffff7ebd328 <msgrcv+40>
   0x7ffff7ebd313 <msgrcv+19>:	mov    eax,0x46
   0x7ffff7ebd318 <msgrcv+24>:	syscall
   0x7ffff7ebd31a <msgrcv+26>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebd320 <msgrcv+32>:	ja     0x7ffff7ebd390 <msgrcv+144>
   0x7ffff7ebd322 <msgrcv+34>:	ret
   0x7ffff7ebd323 <msgrcv+35>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd328 <msgrcv+40>:	sub    rsp,0x38
   0x7ffff7ebd32c <msgrcv+44>:	mov    DWORD PTR [rsp+0x2c],r8d
   0x7ffff7ebd331 <msgrcv+49>:	mov    QWORD PTR [rsp+0x18],rdx
   0x7ffff7ebd336 <msgrcv+54>:	mov    QWORD PTR [rsp+0x10],rsi
   0x7ffff7ebd33b <msgrcv+59>:	mov    DWORD PTR [rsp+0x8],edi
   0x7ffff7ebd33f <msgrcv+63>:	mov    QWORD PTR [rsp+0x20],rcx
   0x7ffff7ebd344 <msgrcv+68>:	call   0x7ffff7e25a70
   0x7ffff7ebd349 <msgrcv+73>:	mov    r8d,DWORD PTR [rsp+0x2c]
   0x7ffff7ebd34e <msgrcv+78>:	mov    r10,QWORD PTR [rsp+0x20]
   0x7ffff7ebd353 <msgrcv+83>:	mov    r9d,eax
   0x7ffff7ebd356 <msgrcv+86>:	mov    rdx,QWORD PTR [rsp+0x18]
   0x7ffff7ebd35b <msgrcv+91>:	mov    rsi,QWORD PTR [rsp+0x10]
   0x7ffff7ebd360 <msgrcv+96>:	mov    eax,0x46
   0x7ffff7ebd365 <msgrcv+101>:	mov    edi,DWORD PTR [rsp+0x8]
   0x7ffff7ebd369 <msgrcv+105>:	syscall
   0x7ffff7ebd36b <msgrcv+107>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebd371 <msgrcv+113>:	ja     0x7ffff7ebd3a8 <msgrcv+168>
   0x7ffff7ebd373 <msgrcv+115>:	mov    edi,r9d
   0x7ffff7ebd376 <msgrcv+118>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ebd37b <msgrcv+123>:	call   0x7ffff7e25ae0
   0x7ffff7ebd380 <msgrcv+128>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ebd385 <msgrcv+133>:	add    rsp,0x38
   0x7ffff7ebd389 <msgrcv+137>:	ret
   0x7ffff7ebd38a <msgrcv+138>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd390 <msgrcv+144>:	mov    rdx,QWORD PTR [rip+0xf0a79]        # 0x7ffff7fade10
   0x7ffff7ebd397 <msgrcv+151>:	neg    eax
   0x7ffff7ebd399 <msgrcv+153>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebd39c <msgrcv+156>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebd3a3 <msgrcv+163>:	ret
   0x7ffff7ebd3a4 <msgrcv+164>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd3a8 <msgrcv+168>:	mov    rdx,QWORD PTR [rip+0xf0a61]        # 0x7ffff7fade10
   0x7ffff7ebd3af <msgrcv+175>:	neg    eax
   0x7ffff7ebd3b1 <msgrcv+177>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebd3b4 <msgrcv+180>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebd3bb <msgrcv+187>:	jmp    0x7ffff7ebd373 <msgrcv+115>
   0x7ffff7ebd3bd:	nop    DWORD PTR [rax]
   0x7ffff7ebd3c0 <msgget>:	endbr64
   0x7ffff7ebd3c4 <msgget+4>:	mov    eax,0x44
   0x7ffff7ebd3c9 <msgget+9>:	syscall
   0x7ffff7ebd3cb <msgget+11>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebd3d1 <msgget+17>:	ja     0x7ffff7ebd3d8 <msgget+24>
   0x7ffff7ebd3d3 <msgget+19>:	ret
   0x7ffff7ebd3d4 <msgget+20>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd3d8 <msgget+24>:	mov    rdx,QWORD PTR [rip+0xf0a31]        # 0x7ffff7fade10
   0x7ffff7ebd3df <msgget+31>:	neg    eax
   0x7ffff7ebd3e1 <msgget+33>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebd3e4 <msgget+36>:	mov    eax,0xffffffff
   0x7ffff7ebd3e9 <msgget+41>:	ret
   0x7ffff7ebd3ea:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd3f0 <msgctl>:	endbr64
   0x7ffff7ebd3f4 <msgctl+4>:	cmp    esi,0x3
   0x7ffff7ebd3f7 <msgctl+7>:	jg     0x7ffff7ebd418 <msgctl+40>
   0x7ffff7ebd3f9 <msgctl+9>:	test   esi,esi
   0x7ffff7ebd3fb <msgctl+11>:	jg     0x7ffff7ebd404 <msgctl+20>
   0x7ffff7ebd3fd <msgctl+13>:	mov    edx,0x0
   0x7ffff7ebd402 <msgctl+18>:	jne    0x7ffff7ebd420 <msgctl+48>
   0x7ffff7ebd404 <msgctl+20>:	mov    eax,0x47
   0x7ffff7ebd409 <msgctl+25>:	syscall
   0x7ffff7ebd40b <msgctl+27>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebd411 <msgctl+33>:	ja     0x7ffff7ebd438 <msgctl+72>
   0x7ffff7ebd413 <msgctl+35>:	ret
   0x7ffff7ebd414 <msgctl+36>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd418 <msgctl+40>:	lea    eax,[rsi-0xb]
   0x7ffff7ebd41b <msgctl+43>:	cmp    eax,0x2
   0x7ffff7ebd41e <msgctl+46>:	jbe    0x7ffff7ebd404 <msgctl+20>
   0x7ffff7ebd420 <msgctl+48>:	mov    rax,QWORD PTR [rip+0xf09e9]        # 0x7ffff7fade10
   0x7ffff7ebd427 <msgctl+55>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ebd42e <msgctl+62>:	mov    eax,0xffffffff
   0x7ffff7ebd433 <msgctl+67>:	ret
   0x7ffff7ebd434 <msgctl+68>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd438 <msgctl+72>:	mov    rdx,QWORD PTR [rip+0xf09d1]        # 0x7ffff7fade10
   0x7ffff7ebd43f <msgctl+79>:	neg    eax
   0x7ffff7ebd441 <msgctl+81>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebd444 <msgctl+84>:	mov    eax,0xffffffff
   0x7ffff7ebd449 <msgctl+89>:	ret
   0x7ffff7ebd44a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd450 <semop>:	endbr64
   0x7ffff7ebd454 <semop+4>:	xor    ecx,ecx
   0x7ffff7ebd456 <semop+6>:	jmp    0x7ffff7ebd550 <semtimedop>
   0x7ffff7ebd45b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd460 <semget>:	endbr64
   0x7ffff7ebd464 <semget+4>:	mov    eax,0x40
   0x7ffff7ebd469 <semget+9>:	syscall
   0x7ffff7ebd46b <semget+11>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebd471 <semget+17>:	ja     0x7ffff7ebd478 <semget+24>
   0x7ffff7ebd473 <semget+19>:	ret
   0x7ffff7ebd474 <semget+20>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd478 <semget+24>:	mov    rdx,QWORD PTR [rip+0xf0991]        # 0x7ffff7fade10
   0x7ffff7ebd47f <semget+31>:	neg    eax
   0x7ffff7ebd481 <semget+33>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebd484 <semget+36>:	mov    eax,0xffffffff
   0x7ffff7ebd489 <semget+41>:	ret
   0x7ffff7ebd48a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd490 <semctl>:	endbr64
   0x7ffff7ebd494 <semctl+4>:	sub    rsp,0x58
   0x7ffff7ebd498 <semctl+8>:	mov    QWORD PTR [rsp+0x38],rcx
   0x7ffff7ebd49d <semctl+13>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ebd4a6 <semctl+22>:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7ebd4ab <semctl+27>:	xor    eax,eax
   0x7ffff7ebd4ad <semctl+29>:	cmp    edx,0x14
   0x7ffff7ebd4b0 <semctl+32>:	ja     0x7ffff7ebd4ca <semctl+58>
   0x7ffff7ebd4b2 <semctl+34>:	mov    eax,0x1
   0x7ffff7ebd4b7 <semctl+39>:	mov    ecx,edx
   0x7ffff7ebd4b9 <semctl+41>:	shl    rax,cl
   0x7ffff7ebd4bc <semctl+44>:	test   eax,0x1f200e
   0x7ffff7ebd4c1 <semctl+49>:	jne    0x7ffff7ebd4f8 <semctl+104>
   0x7ffff7ebd4c3 <semctl+51>:	test   eax,0xd801
   0x7ffff7ebd4c8 <semctl+56>:	jne    0x7ffff7ebd540 <semctl+176>
   0x7ffff7ebd4ca <semctl+58>:	mov    rax,QWORD PTR [rip+0xf093f]        # 0x7ffff7fade10
   0x7ffff7ebd4d1 <semctl+65>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ebd4d8 <semctl+72>:	mov    eax,0xffffffff
   0x7ffff7ebd4dd <semctl+77>:	mov    rdx,QWORD PTR [rsp+0x18]
   0x7ffff7ebd4e2 <semctl+82>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7ebd4eb <semctl+91>:	jne    0x7ffff7ebd545 <semctl+181>
   0x7ffff7ebd4ed <semctl+93>:	add    rsp,0x58
   0x7ffff7ebd4f1 <semctl+97>:	ret
   0x7ffff7ebd4f2 <semctl+98>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd4f8 <semctl+104>:	lea    rax,[rsp+0x60]
   0x7ffff7ebd4fd <semctl+109>:	mov    DWORD PTR [rsp],0x18
   0x7ffff7ebd504 <semctl+116>:	mov    r10,QWORD PTR [rsp+0x38]
   0x7ffff7ebd509 <semctl+121>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ebd50e <semctl+126>:	lea    rax,[rsp+0x20]
   0x7ffff7ebd513 <semctl+131>:	mov    QWORD PTR [rsp+0x10],rax
   0x7ffff7ebd518 <semctl+136>:	mov    eax,0x42
   0x7ffff7ebd51d <semctl+141>:	syscall
   0x7ffff7ebd51f <semctl+143>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebd525 <semctl+149>:	jbe    0x7ffff7ebd4dd <semctl+77>
   0x7ffff7ebd527 <semctl+151>:	mov    rdx,QWORD PTR [rip+0xf08e2]        # 0x7ffff7fade10
   0x7ffff7ebd52e <semctl+158>:	neg    eax
   0x7ffff7ebd530 <semctl+160>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebd533 <semctl+163>:	mov    eax,0xffffffff
   0x7ffff7ebd538 <semctl+168>:	jmp    0x7ffff7ebd4dd <semctl+77>
   0x7ffff7ebd53a <semctl+170>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd540 <semctl+176>:	xor    r10d,r10d
   0x7ffff7ebd543 <semctl+179>:	jmp    0x7ffff7ebd518 <semctl+136>
   0x7ffff7ebd545 <semctl+181>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ebd54a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd550 <semtimedop>:	endbr64
   0x7ffff7ebd554 <semtimedop+4>:	mov    r10,rcx
   0x7ffff7ebd557 <semtimedop+7>:	mov    eax,0xdc
   0x7ffff7ebd55c <semtimedop+12>:	syscall
   0x7ffff7ebd55e <semtimedop+14>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebd564 <semtimedop+20>:	ja     0x7ffff7ebd570 <semtimedop+32>
   0x7ffff7ebd566 <semtimedop+22>:	ret
   0x7ffff7ebd567 <semtimedop+23>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd570 <semtimedop+32>:	mov    rdx,QWORD PTR [rip+0xf0899]        # 0x7ffff7fade10
   0x7ffff7ebd577 <semtimedop+39>:	neg    eax
   0x7ffff7ebd579 <semtimedop+41>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebd57c <semtimedop+44>:	mov    eax,0xffffffff
   0x7ffff7ebd581 <semtimedop+49>:	ret
   0x7ffff7ebd582:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd58c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd590 <shmat>:	endbr64
   0x7ffff7ebd594 <shmat+4>:	mov    eax,0x1e
   0x7ffff7ebd599 <shmat+9>:	syscall
   0x7ffff7ebd59b <shmat+11>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebd5a1 <shmat+17>:	ja     0x7ffff7ebd5a8 <shmat+24>
   0x7ffff7ebd5a3 <shmat+19>:	ret
   0x7ffff7ebd5a4 <shmat+20>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd5a8 <shmat+24>:	mov    rdx,QWORD PTR [rip+0xf0861]        # 0x7ffff7fade10
   0x7ffff7ebd5af <shmat+31>:	neg    eax
   0x7ffff7ebd5b1 <shmat+33>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebd5b4 <shmat+36>:	mov    rax,0xffffffffffffffff
   0x7ffff7ebd5bb <shmat+43>:	ret
   0x7ffff7ebd5bc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd5c0 <shmdt>:	endbr64
   0x7ffff7ebd5c4 <shmdt+4>:	mov    eax,0x43
   0x7ffff7ebd5c9 <shmdt+9>:	syscall
   0x7ffff7ebd5cb <shmdt+11>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebd5d1 <shmdt+17>:	ja     0x7ffff7ebd5d8 <shmdt+24>
   0x7ffff7ebd5d3 <shmdt+19>:	ret
   0x7ffff7ebd5d4 <shmdt+20>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd5d8 <shmdt+24>:	mov    rdx,QWORD PTR [rip+0xf0831]        # 0x7ffff7fade10
   0x7ffff7ebd5df <shmdt+31>:	neg    eax
   0x7ffff7ebd5e1 <shmdt+33>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebd5e4 <shmdt+36>:	mov    eax,0xffffffff
   0x7ffff7ebd5e9 <shmdt+41>:	ret
   0x7ffff7ebd5ea:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd5f0 <shmget>:	endbr64
   0x7ffff7ebd5f4 <shmget+4>:	xor    r10d,r10d
   0x7ffff7ebd5f7 <shmget+7>:	mov    eax,0x1d
   0x7ffff7ebd5fc <shmget+12>:	syscall
   0x7ffff7ebd5fe <shmget+14>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebd604 <shmget+20>:	ja     0x7ffff7ebd610 <shmget+32>
   0x7ffff7ebd606 <shmget+22>:	ret
   0x7ffff7ebd607 <shmget+23>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd610 <shmget+32>:	mov    rdx,QWORD PTR [rip+0xf07f9]        # 0x7ffff7fade10
   0x7ffff7ebd617 <shmget+39>:	neg    eax
   0x7ffff7ebd619 <shmget+41>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebd61c <shmget+44>:	mov    eax,0xffffffff
   0x7ffff7ebd621 <shmget+49>:	ret
   0x7ffff7ebd622:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd62c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd630 <shmctl>:	endbr64
   0x7ffff7ebd634 <shmctl+4>:	cmp    esi,0xc
   0x7ffff7ebd637 <shmctl+7>:	jg     0x7ffff7ebd660 <shmctl+48>
   0x7ffff7ebd639 <shmctl+9>:	cmp    esi,0xa
   0x7ffff7ebd63c <shmctl+12>:	jg     0x7ffff7ebd680 <shmctl+80>
   0x7ffff7ebd63e <shmctl+14>:	test   esi,esi
   0x7ffff7ebd640 <shmctl+16>:	je     0x7ffff7ebd680 <shmctl+80>
   0x7ffff7ebd642 <shmctl+18>:	lea    eax,[rsi-0x1]
   0x7ffff7ebd645 <shmctl+21>:	cmp    eax,0x2
   0x7ffff7ebd648 <shmctl+24>:	ja     0x7ffff7ebd668 <shmctl+56>
   0x7ffff7ebd64a <shmctl+26>:	mov    eax,0x1f
   0x7ffff7ebd64f <shmctl+31>:	syscall
   0x7ffff7ebd651 <shmctl+33>:	cmp    rax,0xfffffffffffff000
   0x7ffff7ebd657 <shmctl+39>:	ja     0x7ffff7ebd688 <shmctl+88>
   0x7ffff7ebd659 <shmctl+41>:	ret
   0x7ffff7ebd65a <shmctl+42>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd660 <shmctl+48>:	lea    eax,[rsi-0xd]
   0x7ffff7ebd663 <shmctl+51>:	cmp    eax,0x2
   0x7ffff7ebd666 <shmctl+54>:	jbe    0x7ffff7ebd64a <shmctl+26>
   0x7ffff7ebd668 <shmctl+56>:	mov    rax,QWORD PTR [rip+0xf07a1]        # 0x7ffff7fade10
   0x7ffff7ebd66f <shmctl+63>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ebd676 <shmctl+70>:	mov    eax,0xffffffff
   0x7ffff7ebd67b <shmctl+75>:	ret
   0x7ffff7ebd67c <shmctl+76>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd680 <shmctl+80>:	xor    edx,edx
   0x7ffff7ebd682 <shmctl+82>:	jmp    0x7ffff7ebd64a <shmctl+26>
   0x7ffff7ebd684 <shmctl+84>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd688 <shmctl+88>:	mov    rdx,QWORD PTR [rip+0xf0781]        # 0x7ffff7fade10
   0x7ffff7ebd68f <shmctl+95>:	neg    eax
   0x7ffff7ebd691 <shmctl+97>:	mov    DWORD PTR fs:[rdx],eax
   0x7ffff7ebd694 <shmctl+100>:	mov    eax,0xffffffff
   0x7ffff7ebd699 <shmctl+105>:	ret
   0x7ffff7ebd69a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebd6a0:	endbr64
   0x7ffff7ebd6a4:	mov    rcx,QWORD PTR [rdi+0x8]
   0x7ffff7ebd6a8:	xor    eax,eax
   0x7ffff7ebd6aa:	cmp    BYTE PTR [rcx],0x0
   0x7ffff7ebd6ad:	je     0x7ffff7ebd6b0
   0x7ffff7ebd6af:	ret
   0x7ffff7ebd6b0:	mov    rax,QWORD PTR [rdi]
   0x7ffff7ebd6b3:	mov    QWORD PTR [rdx],rax
   0x7ffff7ebd6b6:	mov    eax,0x1
   0x7ffff7ebd6bb:	ret
   0x7ffff7ebd6bc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd6c0:	push   rbp
   0x7ffff7ebd6c1:	lea    rdi,[rip+0xb2f65]        # 0x7ffff7f7062d
   0x7ffff7ebd6c8:	mov    rbp,rsp
   0x7ffff7ebd6cb:	push   r15
   0x7ffff7ebd6cd:	push   r14
   0x7ffff7ebd6cf:	push   r13
   0x7ffff7ebd6d1:	push   r12
   0x7ffff7ebd6d3:	push   rbx
   0x7ffff7ebd6d4:	sub    rsp,0x828
   0x7ffff7ebd6db:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ebd6e4:	mov    QWORD PTR [rbp-0x38],rax
   0x7ffff7ebd6e8:	xor    eax,eax
   0x7ffff7ebd6ea:	call   0x7ffff7dd9b70 <getenv>
   0x7ffff7ebd6ef:	test   rax,rax
   0x7ffff7ebd6f2:	je     0x7ffff7ebd708
   0x7ffff7ebd6f4:	mov    r12,rax
   0x7ffff7ebd6f7:	mov    rax,QWORD PTR [rip+0xf0782]        # 0x7ffff7fade80
   0x7ffff7ebd6fe:	mov    edx,DWORD PTR [rax]
   0x7ffff7ebd700:	test   edx,edx
   0x7ffff7ebd702:	je     0x7ffff7ebdbb4
   0x7ffff7ebd708:	mov    edx,0x1b6
   0x7ffff7ebd70d:	mov    esi,0x20241
   0x7ffff7ebd712:	lea    rdi,[rip+0xb2f24]        # 0x7ffff7f7063d
   0x7ffff7ebd719:	xor    eax,eax
   0x7ffff7ebd71b:	call   0x7ffff7eaeb80 <__open_nocancel>
   0x7ffff7ebd720:	mov    r12d,eax
   0x7ffff7ebd723:	test   eax,eax
   0x7ffff7ebd725:	js     0x7ffff7ebdc46
   0x7ffff7ebd72b:	lea    rsi,[rbp-0x810]
   0x7ffff7ebd732:	mov    edx,0x14
   0x7ffff7ebd737:	mov    edi,r12d
   0x7ffff7ebd73a:	mov    DWORD PTR [rbp-0x810],0x6e6f6d67
   0x7ffff7ebd744:	mov    DWORD PTR [rbp-0x80c],0x1
   0x7ffff7ebd74e:	lea    rbx,[rbp-0x830]
   0x7ffff7ebd755:	mov    QWORD PTR [rbp-0x808],0x0
   0x7ffff7ebd760:	mov    DWORD PTR [rbp-0x800],0x0
   0x7ffff7ebd76a:	call   0x7ffff7eaed40 <__write_nocancel>
   0x7ffff7ebd76f:	lea    rsi,[rbp-0x838]
   0x7ffff7ebd776:	lea    rdi,[rip+0xffffffffffffff23]        # 0x7ffff7ebd6a0
   0x7ffff7ebd77d:	mov    QWORD PTR [rbp-0x838],0x0
   0x7ffff7ebd788:	call   0x7ffff7f09d30 <dl_iterate_phdr>
   0x7ffff7ebd78d:	mov    r14,QWORD PTR [rbp-0x838]
   0x7ffff7ebd794:	mov    rax,QWORD PTR [rip+0xf0cb5]        # 0x7ffff7fae450
   0x7ffff7ebd79b:	mov    BYTE PTR [rbp-0x830],0x0
   0x7ffff7ebd7a2:	movq   xmm0,r14
   0x7ffff7ebd7a7:	punpcklqdq xmm0,xmm0
   0x7ffff7ebd7ab:	test   rax,rax
   0x7ffff7ebd7ae:	jne    0x7ffff7ebdaf6
   0x7ffff7ebd7b4:	lea    r13,[rbp-0x7f0]
   0x7ffff7ebd7bb:	lea    r9,[rbp-0x570]
   0x7ffff7ebd7c2:	mov    BYTE PTR [rbp-0x839],0x1
   0x7ffff7ebd7c9:	mov    rax,r9
   0x7ffff7ebd7cc:	mov    rdx,r13
   0x7ffff7ebd7cf:	lea    rcx,[rbp-0x170]
   0x7ffff7ebd7d6:	lea    r10,[rbp-0x839]
   0x7ffff7ebd7dd:	nop    DWORD PTR [rax]
   0x7ffff7ebd7e0:	mov    QWORD PTR [rax+0x10],rdx
   0x7ffff7ebd7e4:	add    rax,0x20
   0x7ffff7ebd7e8:	add    rdx,0x14
   0x7ffff7ebd7ec:	mov    QWORD PTR [rax-0x20],r10
   0x7ffff7ebd7f0:	mov    QWORD PTR [rax-0x18],0x1
   0x7ffff7ebd7f8:	mov    QWORD PTR [rax-0x8],0x14
   0x7ffff7ebd800:	cmp    rax,rcx
   0x7ffff7ebd803:	jne    0x7ffff7ebd7e0
   0x7ffff7ebd805:	mov    rax,QWORD PTR [rip+0xf0c54]        # 0x7ffff7fae460
   0x7ffff7ebd80c:	xor    edx,edx
   0x7ffff7ebd80e:	xor    r15d,r15d
   0x7ffff7ebd811:	shr    rax,0x3
   0x7ffff7ebd815:	je     0x7ffff7ebd8fc
   0x7ffff7ebd81b:	mov    edi,r12d
   0x7ffff7ebd81e:	mov    rsi,r9
   0x7ffff7ebd821:	mov    r12,r10
   0x7ffff7ebd824:	mov    r10,rax
   0x7ffff7ebd827:	jmp    0x7ffff7ebd83d
   0x7ffff7ebd829:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd830:	add    r15,0x1
   0x7ffff7ebd834:	cmp    r10,r15
   0x7ffff7ebd837:	je     0x7ffff7ebd8e6
   0x7ffff7ebd83d:	mov    rax,QWORD PTR [rip+0xf0c14]        # 0x7ffff7fae458
   0x7ffff7ebd844:	mov    rax,QWORD PTR [rax+r15*8]
   0x7ffff7ebd848:	test   rax,rax
   0x7ffff7ebd84b:	je     0x7ffff7ebd830
   0x7ffff7ebd84d:	mov    r8,QWORD PTR [rip+0xf0c44]        # 0x7ffff7fae498
   0x7ffff7ebd854:	mov    rcx,QWORD PTR [rip+0xf0c25]        # 0x7ffff7fae480
   0x7ffff7ebd85b:	mov    QWORD PTR [rbp-0x848],r10
   0x7ffff7ebd862:	mov    r11,QWORD PTR [rip+0xf0bff]        # 0x7ffff7fae468
   0x7ffff7ebd869:	imul   r8,r15
   0x7ffff7ebd86d:	sub    rcx,r14
   0x7ffff7ebd870:	lea    r9,[rcx+r8*8]
   0x7ffff7ebd874:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebd878:	lea    r8,[rax+rax*2]
   0x7ffff7ebd87c:	mov    QWORD PTR [rbp-0x830],r9
   0x7ffff7ebd883:	shl    r8,0x3
   0x7ffff7ebd887:	lea    rax,[r11+r8*1]
   0x7ffff7ebd88b:	mov    rcx,QWORD PTR [rax]
   0x7ffff7ebd88e:	sub    rcx,r14
   0x7ffff7ebd891:	mov    QWORD PTR [rbp-0x828],rcx
   0x7ffff7ebd898:	mov    rcx,QWORD PTR [rax+0x8]
   0x7ffff7ebd89c:	mov    DWORD PTR [rbp-0x820],ecx
   0x7ffff7ebd8a2:	movsxd rcx,edx
   0x7ffff7ebd8a5:	movdqa xmm2,XMMWORD PTR [rbx]
   0x7ffff7ebd8a9:	add    edx,0x1
   0x7ffff7ebd8ac:	mov    r10d,DWORD PTR [rbx+0x10]
   0x7ffff7ebd8b0:	lea    rcx,[rcx+rcx*4]
   0x7ffff7ebd8b4:	lea    rcx,[r13+rcx*4+0x0]
   0x7ffff7ebd8b9:	mov    DWORD PTR [rcx+0x10],r10d
   0x7ffff7ebd8bd:	movups XMMWORD PTR [rcx],xmm2
   0x7ffff7ebd8c0:	cmp    edx,0x20
   0x7ffff7ebd8c3:	je     0x7ffff7ebdac0
   0x7ffff7ebd8c9:	mov    rax,QWORD PTR [rax+0x10]
   0x7ffff7ebd8cd:	test   rax,rax
   0x7ffff7ebd8d0:	jne    0x7ffff7ebd878
   0x7ffff7ebd8d2:	mov    r10,QWORD PTR [rbp-0x848]
   0x7ffff7ebd8d9:	add    r15,0x1
   0x7ffff7ebd8dd:	cmp    r10,r15
   0x7ffff7ebd8e0:	jne    0x7ffff7ebd83d
   0x7ffff7ebd8e6:	mov    r10,r12
   0x7ffff7ebd8e9:	mov    r9,rsi
   0x7ffff7ebd8ec:	mov    r12d,edi
   0x7ffff7ebd8ef:	test   edx,edx
   0x7ffff7ebd8f1:	je     0x7ffff7ebd8fc
   0x7ffff7ebd8f3:	add    edx,edx
   0x7ffff7ebd8f5:	mov    eax,0x14
   0x7ffff7ebd8fa:	syscall
   0x7ffff7ebd8fc:	mov    r8,QWORD PTR [rip+0xf8c0d]        # 0x7ffff7fb6510
   0x7ffff7ebd903:	mov    QWORD PTR [rbp-0x7f0],r10
   0x7ffff7ebd90a:	mov    r10d,0x14
   0x7ffff7ebd910:	mov    BYTE PTR [rbp-0x839],0x2
   0x7ffff7ebd917:	mov    QWORD PTR [rbp-0x7e8],0x1
   0x7ffff7ebd922:	mov    QWORD PTR [rbp-0x7e0],rbx
   0x7ffff7ebd929:	mov    QWORD PTR [rbp-0x7d8],0x8
   0x7ffff7ebd934:	mov    QWORD PTR [rbp-0x568],0x8
   0x7ffff7ebd93f:	mov    QWORD PTR [rbp-0x558],0x8
   0x7ffff7ebd94a:	mov    QWORD PTR [rbp-0x548],0x8
   0x7ffff7ebd955:	mov    QWORD PTR [rbp-0x538],0x8
   0x7ffff7ebd960:	mov    QWORD PTR [rbp-0x528],0x8
   0x7ffff7ebd96b:	mov    QWORD PTR [rbp-0x518],0x8
   0x7ffff7ebd976:	mov    QWORD PTR [rbp-0x508],0x8
   0x7ffff7ebd981:	mov    QWORD PTR [rbp-0x4f8],0x8
   0x7ffff7ebd98c:	test   r8,r8
   0x7ffff7ebd98f:	je     0x7ffff7ebda96
   0x7ffff7ebd995:	nop    DWORD PTR [rax]
   0x7ffff7ebd998:	mov    rax,QWORD PTR [r8+0x18]
   0x7ffff7ebd99c:	mov    edx,0x2
   0x7ffff7ebd9a1:	mov    rsi,r13
   0x7ffff7ebd9a4:	mov    edi,r12d
   0x7ffff7ebd9a7:	mov    QWORD PTR [rbp-0x830],rax
   0x7ffff7ebd9ae:	mov    eax,r10d
   0x7ffff7ebd9b1:	syscall
   0x7ffff7ebd9b3:	mov    rcx,QWORD PTR [rbp-0x830]
   0x7ffff7ebd9ba:	test   rcx,rcx
   0x7ffff7ebd9bd:	je     0x7ffff7ebda89
   0x7ffff7ebd9c3:	mov    rdi,QWORD PTR [r8+0x28]
   0x7ffff7ebd9c7:	mov    rsi,QWORD PTR [r8+0x10]
   0x7ffff7ebd9cb:	mov    edx,0x2
   0x7ffff7ebd9d0:	mov    ebx,0x1
   0x7ffff7ebd9d5:	mov    QWORD PTR [rbp-0x570],rdi
   0x7ffff7ebd9dc:	mov    QWORD PTR [rbp-0x560],rsi
   0x7ffff7ebd9e3:	cmp    rcx,0x1
   0x7ffff7ebd9e7:	je     0x7ffff7ebda7e
   0x7ffff7ebd9ed:	nop    DWORD PTR [rax]
   0x7ffff7ebd9f0:	lea    rax,[rbx*8+0x0]
   0x7ffff7ebd9f8:	mov    r14,rdx
   0x7ffff7ebd9fb:	lea    r11,[rdx+0x1]
   0x7ffff7ebd9ff:	add    rdx,0x2
   0x7ffff7ebda03:	shl    r14,0x4
   0x7ffff7ebda07:	lea    r15,[rdi+rax*1]
   0x7ffff7ebda0b:	shl    r11,0x4
   0x7ffff7ebda0f:	add    rax,rsi
   0x7ffff7ebda12:	mov    QWORD PTR [rbp+r14*1-0x570],r15
   0x7ffff7ebda1a:	lea    r14,[rbx+0x1]
   0x7ffff7ebda1e:	mov    QWORD PTR [rbp+r11*1-0x570],rax
   0x7ffff7ebda26:	cmp    r14,rcx
   0x7ffff7ebda29:	jae    0x7ffff7ebda7e
   0x7ffff7ebda2b:	cmp    rdx,0x6
   0x7ffff7ebda2f:	jbe    0x7ffff7ebdc89
   0x7ffff7ebda35:	mov    rsi,r9
   0x7ffff7ebda38:	mov    edi,r12d
   0x7ffff7ebda3b:	mov    eax,r10d
   0x7ffff7ebda3e:	syscall
   0x7ffff7ebda40:	mov    rdi,QWORD PTR [r8+0x28]
   0x7ffff7ebda44:	mov    rsi,QWORD PTR [r8+0x10]
   0x7ffff7ebda48:	add    rbx,0x2
   0x7ffff7ebda4c:	lea    rax,[r14*8+0x0]
   0x7ffff7ebda54:	mov    rcx,QWORD PTR [rbp-0x830]
   0x7ffff7ebda5b:	lea    rdx,[rdi+rax*1]
   0x7ffff7ebda5f:	add    rax,rsi
   0x7ffff7ebda62:	mov    QWORD PTR [rbp-0x570],rdx
   0x7ffff7ebda69:	mov    edx,0x2
   0x7ffff7ebda6e:	mov    QWORD PTR [rbp-0x560],rax
   0x7ffff7ebda75:	cmp    rbx,rcx
   0x7ffff7ebda78:	jb     0x7ffff7ebd9f0
   0x7ffff7ebda7e:	mov    rsi,r9
   0x7ffff7ebda81:	mov    edi,r12d
   0x7ffff7ebda84:	mov    eax,r10d
   0x7ffff7ebda87:	syscall
   0x7ffff7ebda89:	mov    r8,QWORD PTR [r8+0x20]
   0x7ffff7ebda8d:	test   r8,r8
   0x7ffff7ebda90:	jne    0x7ffff7ebd998
   0x7ffff7ebda96:	mov    edi,r12d
   0x7ffff7ebda99:	call   0x7ffff7eaea10 <__close_nocancel>
   0x7ffff7ebda9e:	mov    rax,QWORD PTR [rbp-0x38]
   0x7ffff7ebdaa2:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7ebdaab:	jne    0x7ffff7ebdc84
   0x7ffff7ebdab1:	lea    rsp,[rbp-0x28]
   0x7ffff7ebdab5:	pop    rbx
   0x7ffff7ebdab6:	pop    r12
   0x7ffff7ebdab8:	pop    r13
   0x7ffff7ebdaba:	pop    r14
   0x7ffff7ebdabc:	pop    r15
   0x7ffff7ebdabe:	pop    rbp
   0x7ffff7ebdabf:	ret
   0x7ffff7ebdac0:	mov    edx,0x40
   0x7ffff7ebdac5:	mov    eax,0x14
   0x7ffff7ebdaca:	syscall
   0x7ffff7ebdacc:	mov    r11,QWORD PTR [rip+0xf0995]        # 0x7ffff7fae468
   0x7ffff7ebdad3:	mov    rax,QWORD PTR [r11+r8*1+0x10]
   0x7ffff7ebdad8:	test   rax,rax
   0x7ffff7ebdadb:	je     0x7ffff7ebdae8
   0x7ffff7ebdadd:	xor    edx,edx
   0x7ffff7ebdadf:	jmp    0x7ffff7ebd878
   0x7ffff7ebdae4:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebdae8:	mov    r10,QWORD PTR [rbp-0x848]
   0x7ffff7ebdaef:	xor    edx,edx
   0x7ffff7ebdaf1:	jmp    0x7ffff7ebd830
   0x7ffff7ebdaf6:	movdqa xmm1,XMMWORD PTR [rip+0xf0982]        # 0x7ffff7fae480
   0x7ffff7ebdafe:	mov    rdx,QWORD PTR [rip+0xf0943]        # 0x7ffff7fae448
   0x7ffff7ebdb05:	mov    QWORD PTR [rbp-0x548],rax
   0x7ffff7ebdb0c:	lea    r13,[rbp-0x7f0]
   0x7ffff7ebdb13:	shr    rax,1
   0x7ffff7ebdb16:	mov    QWORD PTR [rbp-0x570],rbx
   0x7ffff7ebdb1d:	psubq  xmm1,xmm0
   0x7ffff7ebdb21:	mov    QWORD PTR [rbp-0x550],rdx
   0x7ffff7ebdb28:	mov    QWORD PTR [rbp-0x568],0x1
   0x7ffff7ebdb33:	mov    QWORD PTR [rbp-0x560],r13
   0x7ffff7ebdb3a:	mov    QWORD PTR [rbp-0x558],0x28
   0x7ffff7ebdb45:	mov    DWORD PTR [rbp-0x7e0],eax
   0x7ffff7ebdb4b:	movaps XMMWORD PTR [rbp-0x7f0],xmm1
   0x7ffff7ebdb52:	call   0x7ffff7ebed00 <__profile_frequency>
   0x7ffff7ebdb57:	lea    r9,[rbp-0x570]
   0x7ffff7ebdb5e:	mov    edx,0x3
   0x7ffff7ebdb63:	mov    edi,r12d
   0x7ffff7ebdb66:	mov    DWORD PTR [rbp-0x7dc],eax
   0x7ffff7ebdb6c:	mov    rsi,r9
   0x7ffff7ebdb6f:	movabs rax,0x73646e6f636573
   0x7ffff7ebdb79:	mov    QWORD PTR [rbp-0x7d8],rax
   0x7ffff7ebdb80:	xor    eax,eax
   0x7ffff7ebdb82:	mov    WORD PTR [rbp-0x7cc],ax
   0x7ffff7ebdb89:	mov    eax,0x14
   0x7ffff7ebdb8e:	mov    DWORD PTR [rbp-0x7d0],0x0
   0x7ffff7ebdb98:	mov    BYTE PTR [rbp-0x7ca],0x0
   0x7ffff7ebdb9f:	mov    BYTE PTR [rbp-0x7c9],0x73
   0x7ffff7ebdba6:	syscall
   0x7ffff7ebdba8:	mov    r14,QWORD PTR [rbp-0x838]
   0x7ffff7ebdbaf:	jmp    0x7ffff7ebd7c2
   0x7ffff7ebdbb4:	mov    rdi,r12
   0x7ffff7ebdbb7:	mov    rbx,rsp
   0x7ffff7ebdbba:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7ebdbbf:	mov    rcx,rsp
   0x7ffff7ebdbc2:	lea    r13,[rax+0x14]
   0x7ffff7ebdbc6:	add    rax,0x23
   0x7ffff7ebdbca:	mov    rdx,rax
   0x7ffff7ebdbcd:	and    rax,0xfffffffffffff000
   0x7ffff7ebdbd3:	and    rdx,0xfffffffffffffff0
   0x7ffff7ebdbd7:	sub    rcx,rax
   0x7ffff7ebdbda:	cmp    rsp,rcx
   0x7ffff7ebdbdd:	je     0x7ffff7ebdbf1
   0x7ffff7ebdbdf:	sub    rsp,0x1000
   0x7ffff7ebdbe6:	or     QWORD PTR [rsp+0xff8],0x0
   0x7ffff7ebdbef:	jmp    0x7ffff7ebdbda
   0x7ffff7ebdbf1:	and    edx,0xfff
   0x7ffff7ebdbf7:	sub    rsp,rdx
   0x7ffff7ebdbfa:	test   rdx,rdx
   0x7ffff7ebdbfd:	jne    0x7ffff7ebdc79
   0x7ffff7ebdbff:	call   0x7ffff7e810b0 <getpid>
   0x7ffff7ebdc04:	mov    rcx,r12
   0x7ffff7ebdc07:	mov    rdi,rsp
   0x7ffff7ebdc0a:	mov    rsi,r13
   0x7ffff7ebdc0d:	mov    r8d,eax
   0x7ffff7ebdc10:	lea    rdx,[rip+0xb2a2f]        # 0x7ffff7f70646
   0x7ffff7ebdc17:	xor    eax,eax
   0x7ffff7ebdc19:	call   0x7ffff7df5840 <snprintf>
   0x7ffff7ebdc1e:	mov    rdi,rsp
   0x7ffff7ebdc21:	mov    edx,0x1b6
   0x7ffff7ebdc26:	xor    eax,eax
   0x7ffff7ebdc28:	mov    esi,0x20241
   0x7ffff7ebdc2d:	call   0x7ffff7eaeb80 <__open_nocancel>
   0x7ffff7ebdc32:	mov    rsp,rbx
   0x7ffff7ebdc35:	mov    r12d,eax
   0x7ffff7ebdc38:	cmp    eax,0xffffffff
   0x7ffff7ebdc3b:	jne    0x7ffff7ebd72b
   0x7ffff7ebdc41:	jmp    0x7ffff7ebd708
   0x7ffff7ebdc46:	mov    rax,QWORD PTR [rip+0xf01c3]        # 0x7ffff7fade10
   0x7ffff7ebdc4d:	lea    rsi,[rbp-0x170]
   0x7ffff7ebdc54:	mov    edx,0x12c
   0x7ffff7ebdc59:	mov    edi,DWORD PTR fs:[rax]
   0x7ffff7ebdc5c:	call   0x7ffff7e3d6a0 <strerror_r>
   0x7ffff7ebdc61:	lea    rsi,[rip+0xb29e4]        # 0x7ffff7f7064c
   0x7ffff7ebdc68:	xor    edi,edi
   0x7ffff7ebdc6a:	mov    rdx,rax
   0x7ffff7ebdc6d:	xor    eax,eax
   0x7ffff7ebdc6f:	call   0x7ffff7e13880
   0x7ffff7ebdc74:	jmp    0x7ffff7ebda9e
   0x7ffff7ebdc79:	or     QWORD PTR [rsp+rdx*1-0x8],0x0
   0x7ffff7ebdc7f:	jmp    0x7ffff7ebdbff
   0x7ffff7ebdc84:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ebdc89:	mov    rbx,r14
   0x7ffff7ebdc8c:	jmp    0x7ffff7ebd9f0
   0x7ffff7ebdc91:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebdc9c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebdca0 <moncontrol>:	endbr64
   0x7ffff7ebdca4 <moncontrol+4>:	cmp    QWORD PTR [rip+0xf0794],0x2        # 0x7ffff7fae440
   0x7ffff7ebdcac <moncontrol+12>:	je     0x7ffff7ebdd10 <moncontrol+112>
   0x7ffff7ebdcae <moncontrol+14>:	sub    rsp,0x8
   0x7ffff7ebdcb2 <moncontrol+18>:	test   edi,edi
   0x7ffff7ebdcb4 <moncontrol+20>:	jne    0x7ffff7ebdcd8 <moncontrol+56>
   0x7ffff7ebdcb6 <moncontrol+22>:	xor    ecx,ecx
   0x7ffff7ebdcb8 <moncontrol+24>:	xor    edx,edx
   0x7ffff7ebdcba <moncontrol+26>:	xor    esi,esi
   0x7ffff7ebdcbc <moncontrol+28>:	xor    edi,edi
   0x7ffff7ebdcbe <moncontrol+30>:	call   0x7ffff7ebe160 <profil>
   0x7ffff7ebdcc3 <moncontrol+35>:	mov    QWORD PTR [rip+0xf0772],0x3        # 0x7ffff7fae440
   0x7ffff7ebdcce <moncontrol+46>:	add    rsp,0x8
   0x7ffff7ebdcd2 <moncontrol+50>:	ret
   0x7ffff7ebdcd3 <moncontrol+51>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebdcd8 <moncontrol+56>:	mov    ecx,DWORD PTR [rip+0xf883a]        # 0x7ffff7fb6518
   0x7ffff7ebdcde <moncontrol+62>:	mov    rdx,QWORD PTR [rip+0xf079b]        # 0x7ffff7fae480
   0x7ffff7ebdce5 <moncontrol+69>:	mov    rsi,QWORD PTR [rip+0xf0764]        # 0x7ffff7fae450
   0x7ffff7ebdcec <moncontrol+76>:	mov    rdi,QWORD PTR [rip+0xf0755]        # 0x7ffff7fae448
   0x7ffff7ebdcf3 <moncontrol+83>:	call   0x7ffff7ebe160 <profil>
   0x7ffff7ebdcf8 <moncontrol+88>:	mov    QWORD PTR [rip+0xf073d],0x0        # 0x7ffff7fae440
   0x7ffff7ebdd03 <moncontrol+99>:	add    rsp,0x8
   0x7ffff7ebdd07 <moncontrol+103>:	ret
   0x7ffff7ebdd08 <moncontrol+104>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebdd10 <moncontrol+112>:	ret
   0x7ffff7ebdd11:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebdd1c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebdd20 <monstartup>:	endbr64
   0x7ffff7ebdd24 <monstartup+4>:	push   r13
   0x7ffff7ebdd26 <monstartup+6>:	and    rdi,0xfffffffffffffffc
   0x7ffff7ebdd2a <monstartup+10>:	push   r12
   0x7ffff7ebdd2c <monstartup+12>:	mov    r13,rdi
   0x7ffff7ebdd2f <monstartup+15>:	push   rbp
   0x7ffff7ebdd30 <monstartup+16>:	push   rbx
   0x7ffff7ebdd31 <monstartup+17>:	lea    rbx,[rsi+0x3]
   0x7ffff7ebdd35 <monstartup+21>:	and    rbx,0xfffffffffffffffc
   0x7ffff7ebdd39 <monstartup+25>:	mov    rax,rbx
   0x7ffff7ebdd3c <monstartup+28>:	sub    rax,rdi
   0x7ffff7ebdd3f <monstartup+31>:	sub    rsp,0x8
   0x7ffff7ebdd43 <monstartup+35>:	mov    QWORD PTR [rip+0xf0736],rdi        # 0x7ffff7fae480
   0x7ffff7ebdd4a <monstartup+42>:	mov    rdi,rax
   0x7ffff7ebdd4d <monstartup+45>:	lea    rcx,[rax+rax*2]
   0x7ffff7ebdd51 <monstartup+49>:	mov    QWORD PTR [rip+0xf0730],rbx        # 0x7ffff7fae488
   0x7ffff7ebdd58 <monstartup+56>:	shr    rdi,1
   0x7ffff7ebdd5b <monstartup+59>:	mov    QWORD PTR [rip+0xf072e],rax        # 0x7ffff7fae490
   0x7ffff7ebdd62 <monstartup+66>:	lea    rbp,[rdi+0x7]
   0x7ffff7ebdd66 <monstartup+70>:	mov    QWORD PTR [rip+0xf06f3],rdi        # 0x7ffff7fae460
   0x7ffff7ebdd6d <monstartup+77>:	mov    QWORD PTR [rip+0xf0720],0x2        # 0x7ffff7fae498
   0x7ffff7ebdd78 <monstartup+88>:	and    rbp,0xfffffffffffffff8
   0x7ffff7ebdd7c <monstartup+92>:	mov    QWORD PTR [rip+0xf06cd],rbp        # 0x7ffff7fae450
   0x7ffff7ebdd83 <monstartup+99>:	mov    QWORD PTR [rip+0xf0712],0x4        # 0x7ffff7fae4a0
   0x7ffff7ebdd8e <monstartup+110>:	cmp    rcx,0x1387
   0x7ffff7ebdd95 <monstartup+117>:	ja     0x7ffff7ebde60 <monstartup+320>
   0x7ffff7ebdd9b <monstartup+123>:	mov    QWORD PTR [rip+0xf06d2],0x32        # 0x7ffff7fae478
   0x7ffff7ebdda6 <monstartup+134>:	mov    r12d,0x4b0
   0x7ffff7ebddac <monstartup+140>:	add    rdi,rbp
   0x7ffff7ebddaf <monstartup+143>:	mov    esi,0x1
   0x7ffff7ebddb4 <monstartup+148>:	mov    QWORD PTR [rip+0xf06b5],r12        # 0x7ffff7fae470
   0x7ffff7ebddbb <monstartup+155>:	add    rdi,r12
   0x7ffff7ebddbe <monstartup+158>:	call   0x7ffff7dbd400 <calloc@plt>
   0x7ffff7ebddc3 <monstartup+163>:	test   rax,rax
   0x7ffff7ebddc6 <monstartup+166>:	je     0x7ffff7ebded0 <monstartup+432>
   0x7ffff7ebddcc <monstartup+172>:	lea    rdi,[rax+r12*1]
   0x7ffff7ebddd0 <monstartup+176>:	sub    ebx,r13d
   0x7ffff7ebddd3 <monstartup+179>:	mov    QWORD PTR [rip+0xf068e],rax        # 0x7ffff7fae468
   0x7ffff7ebddda <monstartup+186>:	mov    ecx,0x10000
   0x7ffff7ebdddf <monstartup+191>:	mov    QWORD PTR [rax+0x10],0x0
   0x7ffff7ebdde7 <monstartup+199>:	lea    rdx,[rdi+rbp*1]
   0x7ffff7ebddeb <monstartup+203>:	movsxd rax,ebx
   0x7ffff7ebddee <monstartup+206>:	mov    QWORD PTR [rip+0xf0653],rdi        # 0x7ffff7fae448
   0x7ffff7ebddf5 <monstartup+213>:	mov    QWORD PTR [rip+0xf065c],rdx        # 0x7ffff7fae458
   0x7ffff7ebddfc <monstartup+220>:	cmp    rbp,rax
   0x7ffff7ebddff <monstartup+223>:	jae    0x7ffff7ebde2b <monstartup+267>
   0x7ffff7ebde01 <monstartup+225>:	test   rbp,rbp
   0x7ffff7ebde04 <monstartup+228>:	js     0x7ffff7ebdeb8 <monstartup+408>
   0x7ffff7ebde0a <monstartup+234>:	pxor   xmm0,xmm0
   0x7ffff7ebde0e <monstartup+238>:	cvtsi2ss xmm0,rbp
   0x7ffff7ebde13 <monstartup+243>:	pxor   xmm1,xmm1
   0x7ffff7ebde17 <monstartup+247>:	cvtsi2ss xmm1,ebx
   0x7ffff7ebde1b <monstartup+251>:	divss  xmm0,xmm1
   0x7ffff7ebde1f <monstartup+255>:	mulss  xmm0,DWORD PTR [rip+0xb9ff5]        # 0x7ffff7f77e1c
   0x7ffff7ebde27 <monstartup+263>:	cvttss2si ecx,xmm0
   0x7ffff7ebde2b <monstartup+267>:	cmp    QWORD PTR [rip+0xf060d],0x2        # 0x7ffff7fae440
   0x7ffff7ebde33 <monstartup+275>:	mov    DWORD PTR [rip+0xf86df],ecx        # 0x7ffff7fb6518
   0x7ffff7ebde39 <monstartup+281>:	je     0x7ffff7ebde51 <monstartup+305>
   0x7ffff7ebde3b <monstartup+283>:	mov    rdx,r13
   0x7ffff7ebde3e <monstartup+286>:	mov    rsi,rbp
   0x7ffff7ebde41 <monstartup+289>:	call   0x7ffff7ebe160 <profil>
   0x7ffff7ebde46 <monstartup+294>:	mov    QWORD PTR [rip+0xf05ef],0x0        # 0x7ffff7fae440
   0x7ffff7ebde51 <monstartup+305>:	add    rsp,0x8
   0x7ffff7ebde55 <monstartup+309>:	pop    rbx
   0x7ffff7ebde56 <monstartup+310>:	pop    rbp
   0x7ffff7ebde57 <monstartup+311>:	pop    r12
   0x7ffff7ebde59 <monstartup+313>:	pop    r13
   0x7ffff7ebde5b <monstartup+315>:	ret
   0x7ffff7ebde5c <monstartup+316>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebde60 <monstartup+320>:	movabs rsi,0x28f5c28f5c28f5c3
   0x7ffff7ebde6a <monstartup+330>:	mov    rdx,rcx
   0x7ffff7ebde6d <monstartup+333>:	shr    rdx,0x2
   0x7ffff7ebde71 <monstartup+337>:	mov    rax,rdx
   0x7ffff7ebde74 <monstartup+340>:	mul    rsi
   0x7ffff7ebde77 <monstartup+343>:	shr    rdx,0x2
   0x7ffff7ebde7b <monstartup+347>:	cmp    rcx,0x6400063
   0x7ffff7ebde82 <monstartup+354>:	jbe    0x7ffff7ebdea0 <monstartup+384>
   0x7ffff7ebde84 <monstartup+356>:	mov    QWORD PTR [rip+0xf05e9],0x100000        # 0x7ffff7fae478
   0x7ffff7ebde8f <monstartup+367>:	mov    r12d,0x1800000
   0x7ffff7ebde95 <monstartup+373>:	jmp    0x7ffff7ebddac <monstartup+140>
   0x7ffff7ebde9a <monstartup+378>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebdea0 <monstartup+384>:	lea    r12,[rdx+rdx*2]
   0x7ffff7ebdea4 <monstartup+388>:	mov    QWORD PTR [rip+0xf05cd],rdx        # 0x7ffff7fae478
   0x7ffff7ebdeab <monstartup+395>:	shl    r12,0x3
   0x7ffff7ebdeaf <monstartup+399>:	jmp    0x7ffff7ebddac <monstartup+140>
   0x7ffff7ebdeb4 <monstartup+404>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebdeb8 <monstartup+408>:	mov    rax,rbp
   0x7ffff7ebdebb <monstartup+411>:	pxor   xmm0,xmm0
   0x7ffff7ebdebf <monstartup+415>:	shr    rax,1
   0x7ffff7ebdec2 <monstartup+418>:	cvtsi2ss xmm0,rax
   0x7ffff7ebdec7 <monstartup+423>:	addss  xmm0,xmm0
   0x7ffff7ebdecb <monstartup+427>:	jmp    0x7ffff7ebde13 <monstartup+243>
   0x7ffff7ebded0 <monstartup+432>:	mov    edx,0x1a
   0x7ffff7ebded5 <monstartup+437>:	lea    rsi,[rip+0xb2789]        # 0x7ffff7f70665
   0x7ffff7ebdedc <monstartup+444>:	mov    edi,0x2
   0x7ffff7ebdee1 <monstartup+449>:	call   0x7ffff7eaed40 <__write_nocancel>
   0x7ffff7ebdee6 <monstartup+454>:	mov    QWORD PTR [rip+0xf0577],0x0        # 0x7ffff7fae468
   0x7ffff7ebdef1 <monstartup+465>:	mov    QWORD PTR [rip+0xf0544],0x2        # 0x7ffff7fae440
   0x7ffff7ebdefc <monstartup+476>:	jmp    0x7ffff7ebde51 <monstartup+305>
   0x7ffff7ebdf01:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebdf0c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebdf10:	endbr64
   0x7ffff7ebdf14:	push   rbx
   0x7ffff7ebdf15:	mov    rbx,QWORD PTR [rip+0xf0524]        # 0x7ffff7fae440
   0x7ffff7ebdf1c:	mov    QWORD PTR [rip+0xf0519],0x3        # 0x7ffff7fae440
   0x7ffff7ebdf27:	test   ebx,ebx
   0x7ffff7ebdf29:	je     0x7ffff7ebdf40
   0x7ffff7ebdf2b:	movsxd rbx,ebx
   0x7ffff7ebdf2e:	mov    QWORD PTR [rip+0xf050b],rbx        # 0x7ffff7fae440
   0x7ffff7ebdf35:	pop    rbx
   0x7ffff7ebdf36:	ret
   0x7ffff7ebdf37:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebdf40:	call   0x7ffff7ebd6c0
   0x7ffff7ebdf45:	movsxd rbx,ebx
   0x7ffff7ebdf48:	mov    QWORD PTR [rip+0xf04f1],rbx        # 0x7ffff7fae440
   0x7ffff7ebdf4f:	pop    rbx
   0x7ffff7ebdf50:	ret
   0x7ffff7ebdf51:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebdf5c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebdf60 <_mcleanup>:	endbr64
   0x7ffff7ebdf64 <_mcleanup+4>:	cmp    QWORD PTR [rip+0xf04d4],0x2        # 0x7ffff7fae440
   0x7ffff7ebdf6c <_mcleanup+12>:	je     0x7ffff7ebdfa0 <_mcleanup+64>
   0x7ffff7ebdf6e <_mcleanup+14>:	sub    rsp,0x8
   0x7ffff7ebdf72 <_mcleanup+18>:	xor    edi,edi
   0x7ffff7ebdf74 <_mcleanup+20>:	xor    ecx,ecx
   0x7ffff7ebdf76 <_mcleanup+22>:	xor    edx,edx
   0x7ffff7ebdf78 <_mcleanup+24>:	xor    esi,esi
   0x7ffff7ebdf7a <_mcleanup+26>:	call   0x7ffff7ebe160 <profil>
   0x7ffff7ebdf7f <_mcleanup+31>:	mov    QWORD PTR [rip+0xf04b6],0x3        # 0x7ffff7fae440
   0x7ffff7ebdf8a <_mcleanup+42>:	call   0x7ffff7ebd6c0
   0x7ffff7ebdf8f <_mcleanup+47>:	mov    rdi,QWORD PTR [rip+0xf04d2]        # 0x7ffff7fae468
   0x7ffff7ebdf96 <_mcleanup+54>:	add    rsp,0x8
   0x7ffff7ebdf9a <_mcleanup+58>:	jmp    0x7ffff7dbd370 <free@plt>
   0x7ffff7ebdf9f <_mcleanup+63>:	nop
   0x7ffff7ebdfa0 <_mcleanup+64>:	mov    rdi,QWORD PTR [rip+0xf04c1]        # 0x7ffff7fae468
   0x7ffff7ebdfa7 <_mcleanup+71>:	jmp    0x7ffff7dbd370 <free@plt>
   0x7ffff7ebdfac:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebdfb0:	endbr64
   0x7ffff7ebdfb4:	xor    eax,eax
   0x7ffff7ebdfb6:	mov    edx,0x1
   0x7ffff7ebdfbb:	lock cmpxchg QWORD PTR [rip+0xf047c],rdx        # 0x7ffff7fae440
   0x7ffff7ebdfc4:	jne    0x7ffff7ebe0a0
   0x7ffff7ebdfca:	sub    rdi,QWORD PTR [rip+0xf04af]        # 0x7ffff7fae480
   0x7ffff7ebdfd1:	cmp    QWORD PTR [rip+0xf04b8],rdi        # 0x7ffff7fae490
   0x7ffff7ebdfd8:	jb     0x7ffff7ebe06f
   0x7ffff7ebdfde:	mov    rcx,QWORD PTR [rip+0xf04bb]        # 0x7ffff7fae4a0
   0x7ffff7ebdfe5:	mov    rax,QWORD PTR [rip+0xf046c]        # 0x7ffff7fae458
   0x7ffff7ebdfec:	shr    rdi,cl
   0x7ffff7ebdfef:	movsxd rdi,edi
   0x7ffff7ebdff2:	lea    r8,[rax+rdi*8]
   0x7ffff7ebdff6:	mov    rdi,QWORD PTR [rip+0xf046b]        # 0x7ffff7fae468
   0x7ffff7ebdffd:	mov    rax,QWORD PTR [r8]
   0x7ffff7ebe000:	test   rax,rax
   0x7ffff7ebe003:	je     0x7ffff7ebe080
   0x7ffff7ebe005:	lea    rax,[rax+rax*2]
   0x7ffff7ebe009:	lea    rcx,[rdi+rax*8]
   0x7ffff7ebe00d:	cmp    QWORD PTR [rcx],rsi
   0x7ffff7ebe010:	jne    0x7ffff7ebe034
   0x7ffff7ebe012:	jmp    0x7ffff7ebe100
   0x7ffff7ebe017:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebe020:	lea    rdx,[rax+rax*2]
   0x7ffff7ebe024:	lea    rdx,[rdi+rdx*8]
   0x7ffff7ebe028:	cmp    QWORD PTR [rdx],rsi
   0x7ffff7ebe02b:	je     0x7ffff7ebe0d8
   0x7ffff7ebe031:	mov    rcx,rdx
   0x7ffff7ebe034:	mov    rax,QWORD PTR [rcx+0x10]
   0x7ffff7ebe038:	test   rax,rax
   0x7ffff7ebe03b:	jne    0x7ffff7ebe020
   0x7ffff7ebe03d:	mov    rax,QWORD PTR [rdi+0x10]
   0x7ffff7ebe041:	add    rax,0x1
   0x7ffff7ebe045:	cmp    rax,QWORD PTR [rip+0xf042c]        # 0x7ffff7fae478
   0x7ffff7ebe04c:	mov    QWORD PTR [rdi+0x10],rax
   0x7ffff7ebe050:	jae    0x7ffff7ebe095
   0x7ffff7ebe052:	lea    rdx,[rax+rax*2]
   0x7ffff7ebe056:	lea    rdx,[rdi+rdx*8]
   0x7ffff7ebe05a:	mov    QWORD PTR [rdx],rsi
   0x7ffff7ebe05d:	mov    QWORD PTR [rdx+0x8],0x1
   0x7ffff7ebe065:	mov    rcx,QWORD PTR [r8]
   0x7ffff7ebe068:	mov    QWORD PTR [rdx+0x10],rcx
   0x7ffff7ebe06c:	mov    QWORD PTR [r8],rax
   0x7ffff7ebe06f:	mov    QWORD PTR [rip+0xf03c6],0x0        # 0x7ffff7fae440
   0x7ffff7ebe07a:	ret
   0x7ffff7ebe07b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebe080:	mov    rax,QWORD PTR [rdi+0x10]
   0x7ffff7ebe084:	add    rax,0x1
   0x7ffff7ebe088:	cmp    rax,QWORD PTR [rip+0xf03e9]        # 0x7ffff7fae478
   0x7ffff7ebe08f:	mov    QWORD PTR [rdi+0x10],rax
   0x7ffff7ebe093:	jb     0x7ffff7ebe0a8
   0x7ffff7ebe095:	mov    QWORD PTR [rip+0xf03a0],0x2        # 0x7ffff7fae440
   0x7ffff7ebe0a0:	ret
   0x7ffff7ebe0a1:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebe0a8:	mov    QWORD PTR [r8],rax
   0x7ffff7ebe0ab:	lea    rax,[rax+rax*2]
   0x7ffff7ebe0af:	lea    rax,[rdi+rax*8]
   0x7ffff7ebe0b3:	mov    QWORD PTR [rax],rsi
   0x7ffff7ebe0b6:	mov    QWORD PTR [rax+0x8],0x1
   0x7ffff7ebe0be:	mov    QWORD PTR [rax+0x10],0x0
   0x7ffff7ebe0c6:	mov    QWORD PTR [rip+0xf036f],0x0        # 0x7ffff7fae440
   0x7ffff7ebe0d1:	ret
   0x7ffff7ebe0d2:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebe0d8:	mov    rsi,QWORD PTR [rdx+0x10]
   0x7ffff7ebe0dc:	add    QWORD PTR [rdx+0x8],0x1
   0x7ffff7ebe0e1:	mov    QWORD PTR [rcx+0x10],rsi
   0x7ffff7ebe0e5:	mov    rcx,QWORD PTR [r8]
   0x7ffff7ebe0e8:	mov    QWORD PTR [rdx+0x10],rcx
   0x7ffff7ebe0ec:	mov    QWORD PTR [r8],rax
   0x7ffff7ebe0ef:	mov    QWORD PTR [rip+0xf0346],0x0        # 0x7ffff7fae440
   0x7ffff7ebe0fa:	ret
   0x7ffff7ebe0fb:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebe100:	add    QWORD PTR [rcx+0x8],0x1
   0x7ffff7ebe105:	jmp    0x7ffff7ebe06f
   0x7ffff7ebe10a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebe110:	endbr64
   0x7ffff7ebe114:	mov    rax,QWORD PTR [rdx+0xa8]
   0x7ffff7ebe11b:	sub    rax,QWORD PTR [rip+0xf84c6]        # 0x7ffff7fb65e8
   0x7ffff7ebe122:	mov    rdx,rax
   0x7ffff7ebe125:	mov    ecx,DWORD PTR [rip+0xf84b5]        # 0x7ffff7fb65e0
   0x7ffff7ebe12b:	shr    rax,0x11
   0x7ffff7ebe12f:	shr    rdx,1
   0x7ffff7ebe132:	movzx  edx,dx
   0x7ffff7ebe135:	imul   rax,rcx
   0x7ffff7ebe139:	imul   rdx,rcx
   0x7ffff7ebe13d:	shr    rdx,0x10
   0x7ffff7ebe141:	add    rax,rdx
   0x7ffff7ebe144:	cmp    rax,QWORD PTR [rip+0xf84a5]        # 0x7ffff7fb65f0
   0x7ffff7ebe14b:	jae    0x7ffff7ebe159
   0x7ffff7ebe14d:	mov    rdx,QWORD PTR [rip+0xf84a4]        # 0x7ffff7fb65f8
   0x7ffff7ebe154:	add    WORD PTR [rdx+rax*2],0x1
   0x7ffff7ebe159:	ret
   0x7ffff7ebe15a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebe160 <profil>:	endbr64
   0x7ffff7ebe164 <profil+4>:	push   r14
   0x7ffff7ebe166 <profil+6>:	push   r13
   0x7ffff7ebe168 <profil+8>:	push   r12
   0x7ffff7ebe16a <profil+10>:	push   rbp
   0x7ffff7ebe16b <profil+11>:	push   rbx
   0x7ffff7ebe16c <profil+12>:	sub    rsp,0xc0
   0x7ffff7ebe173 <profil+19>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ebe17c <profil+28>:	mov    QWORD PTR [rsp+0xb8],rax
   0x7ffff7ebe184 <profil+36>:	mov    rax,QWORD PTR [rip+0xf846d]        # 0x7ffff7fb65f8
   0x7ffff7ebe18b <profil+43>:	test   rdi,rdi
   0x7ffff7ebe18e <profil+46>:	je     0x7ffff7ebe2b8 <profil+344>
   0x7ffff7ebe194 <profil+52>:	mov    rbx,rdi
   0x7ffff7ebe197 <profil+55>:	mov    rbp,rsi
   0x7ffff7ebe19a <profil+58>:	mov    r12,rdx
   0x7ffff7ebe19d <profil+61>:	mov    r13d,ecx
   0x7ffff7ebe1a0 <profil+64>:	test   rax,rax
   0x7ffff7ebe1a3 <profil+67>:	je     0x7ffff7ebe2a8 <profil+328>
   0x7ffff7ebe1a9 <profil+73>:	xor    edx,edx
   0x7ffff7ebe1ab <profil+75>:	lea    rsi,[rip+0xf840e]        # 0x7ffff7fb65c0
   0x7ffff7ebe1b2 <profil+82>:	mov    edi,0x2
   0x7ffff7ebe1b7 <profil+87>:	call   0x7ffff7e71de0 <setitimer>
   0x7ffff7ebe1bc <profil+92>:	test   eax,eax
   0x7ffff7ebe1be <profil+94>:	js     0x7ffff7ebe320 <profil+448>
   0x7ffff7ebe1c4 <profil+100>:	lea    r14,[rip+0xf8355]        # 0x7ffff7fb6520
   0x7ffff7ebe1cb <profil+107>:	xor    edx,edx
   0x7ffff7ebe1cd <profil+109>:	mov    edi,0x1b
   0x7ffff7ebe1d2 <profil+114>:	mov    rsi,r14
   0x7ffff7ebe1d5 <profil+117>:	call   0x7ffff7dd74d0 <sigaction>
   0x7ffff7ebe1da <profil+122>:	test   eax,eax
   0x7ffff7ebe1dc <profil+124>:	js     0x7ffff7ebe320 <profil+448>
   0x7ffff7ebe1e2 <profil+130>:	mov    rsi,rbp
   0x7ffff7ebe1e5 <profil+133>:	lea    rax,[rip+0xffffffffffffff24]        # 0x7ffff7ebe110
   0x7ffff7ebe1ec <profil+140>:	mov    rdx,r14
   0x7ffff7ebe1ef <profil+143>:	mov    edi,0x1b
   0x7ffff7ebe1f4 <profil+148>:	shr    rsi,1
   0x7ffff7ebe1f7 <profil+151>:	mov    QWORD PTR [rip+0xf83fa],rbx        # 0x7ffff7fb65f8
   0x7ffff7ebe1fe <profil+158>:	mov    QWORD PTR [rip+0xf83eb],rsi        # 0x7ffff7fb65f0
   0x7ffff7ebe205 <profil+165>:	lea    rsi,[rsp+0x20]
   0x7ffff7ebe20a <profil+170>:	mov    QWORD PTR [rip+0xf83d7],r12        # 0x7ffff7fb65e8
   0x7ffff7ebe211 <profil+177>:	mov    DWORD PTR [rip+0xf83c8],r13d        # 0x7ffff7fb65e0
   0x7ffff7ebe218 <profil+184>:	mov    QWORD PTR [rsp+0x20],rax
   0x7ffff7ebe21d <profil+189>:	mov    DWORD PTR [rsp+0xa8],0x10000004
   0x7ffff7ebe228 <profil+200>:	mov    QWORD PTR [rsp+0x28],0xffffffffffffffff
   0x7ffff7ebe231 <profil+209>:	call   0x7ffff7dd74d0 <sigaction>
   0x7ffff7ebe236 <profil+214>:	test   eax,eax
   0x7ffff7ebe238 <profil+216>:	js     0x7ffff7ebe320 <profil+448>
   0x7ffff7ebe23e <profil+222>:	mov    QWORD PTR [rsp+0x10],0x0
   0x7ffff7ebe247 <profil+231>:	call   0x7ffff7ebed00 <__profile_frequency>
   0x7ffff7ebe24c <profil+236>:	mov    rsi,rsp
   0x7ffff7ebe24f <profil+239>:	mov    edi,0x2
   0x7ffff7ebe254 <profil+244>:	mov    r8d,eax
   0x7ffff7ebe257 <profil+247>:	mov    eax,0xf4240
   0x7ffff7ebe25c <profil+252>:	cdq
   0x7ffff7ebe25d <profil+253>:	idiv   r8d
   0x7ffff7ebe260 <profil+256>:	lea    rdx,[rip+0xf8359]        # 0x7ffff7fb65c0
   0x7ffff7ebe267 <profil+263>:	cdqe
   0x7ffff7ebe269 <profil+265>:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7ebe26e <profil+270>:	movdqa xmm0,XMMWORD PTR [rsp+0x10]
   0x7ffff7ebe274 <profil+276>:	movaps XMMWORD PTR [rsp],xmm0
   0x7ffff7ebe278 <profil+280>:	call   0x7ffff7e71de0 <setitimer>
   0x7ffff7ebe27d <profil+285>:	mov    rdx,QWORD PTR [rsp+0xb8]
   0x7ffff7ebe285 <profil+293>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7ebe28e <profil+302>:	jne    0x7ffff7ebe32a <profil+458>
   0x7ffff7ebe294 <profil+308>:	add    rsp,0xc0
   0x7ffff7ebe29b <profil+315>:	pop    rbx
   0x7ffff7ebe29c <profil+316>:	pop    rbp
   0x7ffff7ebe29d <profil+317>:	pop    r12
   0x7ffff7ebe29f <profil+319>:	pop    r13
   0x7ffff7ebe2a1 <profil+321>:	pop    r14
   0x7ffff7ebe2a3 <profil+323>:	ret
   0x7ffff7ebe2a4 <profil+324>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebe2a8 <profil+328>:	lea    r14,[rip+0xf8271]        # 0x7ffff7fb6520
   0x7ffff7ebe2af <profil+335>:	jmp    0x7ffff7ebe1e2 <profil+130>
   0x7ffff7ebe2b4 <profil+340>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebe2b8 <profil+344>:	test   rax,rax
   0x7ffff7ebe2bb <profil+347>:	je     0x7ffff7ebe318 <profil+440>
   0x7ffff7ebe2bd <profil+349>:	xor    edx,edx
   0x7ffff7ebe2bf <profil+351>:	lea    rsi,[rip+0xf82fa]        # 0x7ffff7fb65c0
   0x7ffff7ebe2c6 <profil+358>:	mov    edi,0x2
   0x7ffff7ebe2cb <profil+363>:	call   0x7ffff7e71de0 <setitimer>
   0x7ffff7ebe2d0 <profil+368>:	test   eax,eax
   0x7ffff7ebe2d2 <profil+370>:	js     0x7ffff7ebe320 <profil+448>
   0x7ffff7ebe2d4 <profil+372>:	mov    QWORD PTR [rip+0xf8319],0x0        # 0x7ffff7fb65f8
   0x7ffff7ebe2df <profil+383>:	mov    rax,QWORD PTR [rsp+0xb8]
   0x7ffff7ebe2e7 <profil+391>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7ebe2f0 <profil+400>:	jne    0x7ffff7ebe32a <profil+458>
   0x7ffff7ebe2f2 <profil+402>:	add    rsp,0xc0
   0x7ffff7ebe2f9 <profil+409>:	xor    edx,edx
   0x7ffff7ebe2fb <profil+411>:	mov    edi,0x1b
   0x7ffff7ebe300 <profil+416>:	pop    rbx
   0x7ffff7ebe301 <profil+417>:	lea    rsi,[rip+0xf8218]        # 0x7ffff7fb6520
   0x7ffff7ebe308 <profil+424>:	pop    rbp
   0x7ffff7ebe309 <profil+425>:	pop    r12
   0x7ffff7ebe30b <profil+427>:	pop    r13
   0x7ffff7ebe30d <profil+429>:	pop    r14
   0x7ffff7ebe30f <profil+431>:	jmp    0x7ffff7dd74d0 <sigaction>
   0x7ffff7ebe314 <profil+436>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebe318 <profil+440>:	xor    eax,eax
   0x7ffff7ebe31a <profil+442>:	jmp    0x7ffff7ebe27d <profil+285>
   0x7ffff7ebe31f <profil+447>:	nop
   0x7ffff7ebe320 <profil+448>:	mov    eax,0xffffffff
   0x7ffff7ebe325 <profil+453>:	jmp    0x7ffff7ebe27d <profil+285>
   0x7ffff7ebe32a <profil+458>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ebe32f:	nop
   0x7ffff7ebe330:	mov    rdx,QWORD PTR [rip+0xf82d9]        # 0x7ffff7fb6610
   0x7ffff7ebe337:	mov    r9d,esi
   0x7ffff7ebe33a:	cmp    QWORD PTR [rdx+0x20],rdi
   0x7ffff7ebe33e:	ja     0x7ffff7ebe349
   0x7ffff7ebe340:	mov    rax,rdx
   0x7ffff7ebe343:	cmp    QWORD PTR [rdx+0x28],rdi
   0x7ffff7ebe347:	ja     0x7ffff7ebe3a1
   0x7ffff7ebe349:	mov    eax,DWORD PTR [rip+0xf82b1]        # 0x7ffff7fb6600
   0x7ffff7ebe34f:	mov    r8,QWORD PTR [rip+0xf82b2]        # 0x7ffff7fb6608
   0x7ffff7ebe356:	xor    ecx,ecx
   0x7ffff7ebe358:	lea    esi,[rax-0x1]
   0x7ffff7ebe35b:	jmp    0x7ffff7ebe373
   0x7ffff7ebe35d:	nop    DWORD PTR [rax]
   0x7ffff7ebe360:	cmp    QWORD PTR [rax+0x28],rdi
   0x7ffff7ebe364:	ja     0x7ffff7ebe458
   0x7ffff7ebe36a:	lea    rcx,[rdx+0x1]
   0x7ffff7ebe36e:	cmp    rcx,rsi
   0x7ffff7ebe371:	ja     0x7ffff7ebe39a
   0x7ffff7ebe373:	lea    rax,[rcx+rsi*1]
   0x7ffff7ebe377:	mov    rdx,rax
   0x7ffff7ebe37a:	and    rax,0xfffffffffffffffe
   0x7ffff7ebe37e:	shr    rdx,1
   0x7ffff7ebe381:	add    rax,rdx
   0x7ffff7ebe384:	shl    rax,0x4
   0x7ffff7ebe388:	add    rax,r8
   0x7ffff7ebe38b:	cmp    QWORD PTR [rax+0x20],rdi
   0x7ffff7ebe38f:	jbe    0x7ffff7ebe360
   0x7ffff7ebe391:	lea    rsi,[rdx-0x1]
   0x7ffff7ebe395:	cmp    rcx,rsi
   0x7ffff7ebe398:	jbe    0x7ffff7ebe373
   0x7ffff7ebe39a:	mov    rdx,QWORD PTR [rip+0xf8277]        # 0x7ffff7fb6618
   0x7ffff7ebe3a1:	mov    esi,DWORD PTR [rdx+0x10]
   0x7ffff7ebe3a4:	mov    rcx,QWORD PTR [rax+0x8]
   0x7ffff7ebe3a8:	sub    rdi,QWORD PTR [rdx]
   0x7ffff7ebe3ab:	test   r9d,r9d
   0x7ffff7ebe3ae:	je     0x7ffff7ebe3f0
   0x7ffff7ebe3b0:	mov    rdx,rdi
   0x7ffff7ebe3b3:	shr    rdi,0x12
   0x7ffff7ebe3b7:	shr    rdx,0x2
   0x7ffff7ebe3bb:	imul   rdi,rsi
   0x7ffff7ebe3bf:	movzx  edx,dx
   0x7ffff7ebe3c2:	imul   rdx,rsi
   0x7ffff7ebe3c6:	shr    rdx,0x10
   0x7ffff7ebe3ca:	add    rdx,rdi
   0x7ffff7ebe3cd:	cmp    rcx,rdx
   0x7ffff7ebe3d0:	jbe    0x7ffff7ebe440
   0x7ffff7ebe3d2:	mov    rax,QWORD PTR [rax+0x18]
   0x7ffff7ebe3d6:	lea    rdx,[rax+rdx*4]
   0x7ffff7ebe3da:	mov    eax,DWORD PTR [rdx]
   0x7ffff7ebe3dc:	cmp    eax,0xffffffff
   0x7ffff7ebe3df:	je     0x7ffff7ebe450
   0x7ffff7ebe3e1:	add    eax,0x1
   0x7ffff7ebe3e4:	mov    DWORD PTR [rdx],eax
   0x7ffff7ebe3e6:	ret
   0x7ffff7ebe3e7:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebe3f0:	mov    rdx,rdi
   0x7ffff7ebe3f3:	shr    rdi,0x11
   0x7ffff7ebe3f7:	shr    rdx,1
   0x7ffff7ebe3fa:	imul   rdi,rsi
   0x7ffff7ebe3fe:	movzx  edx,dx
   0x7ffff7ebe401:	imul   rdx,rsi
   0x7ffff7ebe405:	shr    rdx,0x10
   0x7ffff7ebe409:	add    rdx,rdi
   0x7ffff7ebe40c:	cmp    rcx,rdx
   0x7ffff7ebe40f:	jbe    0x7ffff7ebe430
   0x7ffff7ebe411:	mov    rax,QWORD PTR [rax+0x18]
   0x7ffff7ebe415:	lea    rdx,[rax+rdx*2]
   0x7ffff7ebe419:	movzx  eax,WORD PTR [rdx]
   0x7ffff7ebe41c:	cmp    ax,0xffff
   0x7ffff7ebe420:	je     0x7ffff7ebe450
   0x7ffff7ebe422:	add    eax,0x1
   0x7ffff7ebe425:	mov    WORD PTR [rdx],ax
   0x7ffff7ebe428:	ret
   0x7ffff7ebe429:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebe430:	mov    rax,QWORD PTR [rip+0xf81e1]        # 0x7ffff7fb6618
   0x7ffff7ebe437:	mov    rax,QWORD PTR [rax+0x18]
   0x7ffff7ebe43b:	add    WORD PTR [rax],0x1
   0x7ffff7ebe43f:	ret
   0x7ffff7ebe440:	mov    rax,QWORD PTR [rip+0xf81d1]        # 0x7ffff7fb6618
   0x7ffff7ebe447:	mov    rax,QWORD PTR [rax+0x18]
   0x7ffff7ebe44b:	add    DWORD PTR [rax],0x1
   0x7ffff7ebe44e:	ret
   0x7ffff7ebe44f:	nop
   0x7ffff7ebe450:	ret
   0x7ffff7ebe451:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebe458:	mov    QWORD PTR [rip+0xf81b1],rax        # 0x7ffff7fb6610
   0x7ffff7ebe45f:	mov    rdx,QWORD PTR [rip+0xf81b2]        # 0x7ffff7fb6618
   0x7ffff7ebe466:	jmp    0x7ffff7ebe3a1
   0x7ffff7ebe46b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebe470:	endbr64
   0x7ffff7ebe474:	mov    rdi,QWORD PTR [rdx+0xa8]
   0x7ffff7ebe47b:	xor    esi,esi
   0x7ffff7ebe47d:	call   0x7ffff7ebe330
   0x7ffff7ebe482:	ret
   0x7ffff7ebe483:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebe48e:	xchg   ax,ax
   0x7ffff7ebe490:	endbr64
   0x7ffff7ebe494:	mov    rdi,QWORD PTR [rdx+0xa8]
   0x7ffff7ebe49b:	mov    esi,0x1
   0x7ffff7ebe4a0:	call   0x7ffff7ebe330
   0x7ffff7ebe4a5:	ret
   0x7ffff7ebe4a6:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebe4b0:	endbr64
   0x7ffff7ebe4b4:	mov    rdx,QWORD PTR [rsi]
   0x7ffff7ebe4b7:	mov    rcx,QWORD PTR [rdi]
   0x7ffff7ebe4ba:	mov    eax,0x1
   0x7ffff7ebe4bf:	mov    rdx,QWORD PTR [rdx+0x10]
   0x7ffff7ebe4c3:	cmp    QWORD PTR [rcx+0x10],rdx
   0x7ffff7ebe4c7:	jb     0x7ffff7ebe4d1
   0x7ffff7ebe4c9:	seta   al
   0x7ffff7ebe4cc:	movzx  eax,al
   0x7ffff7ebe4cf:	neg    eax
   0x7ffff7ebe4d1:	ret
   0x7ffff7ebe4d2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebe4dd:	nop    DWORD PTR [rax]
   0x7ffff7ebe4e0 <sprofil>:	endbr64
   0x7ffff7ebe4e4 <sprofil+4>:	push   rbp
   0x7ffff7ebe4e5 <sprofil+5>:	mov    rbp,rsp
   0x7ffff7ebe4e8 <sprofil+8>:	push   r15
   0x7ffff7ebe4ea <sprofil+10>:	mov    r15,rdx
   0x7ffff7ebe4ed <sprofil+13>:	push   r14
   0x7ffff7ebe4ef <sprofil+15>:	push   r13
   0x7ffff7ebe4f1 <sprofil+17>:	movsxd r13,esi
   0x7ffff7ebe4f4 <sprofil+20>:	push   r12
   0x7ffff7ebe4f6 <sprofil+22>:	mov    r12,r13
   0x7ffff7ebe4f9 <sprofil+25>:	push   rbx
   0x7ffff7ebe4fa <sprofil+26>:	mov    rbx,rdi
   0x7ffff7ebe4fd <sprofil+29>:	sub    rsp,0x118
   0x7ffff7ebe504 <sprofil+36>:	mov    DWORD PTR [rbp-0x134],ecx
   0x7ffff7ebe50a <sprofil+42>:	mov    rcx,rsp
   0x7ffff7ebe50d <sprofil+45>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ebe516 <sprofil+54>:	mov    QWORD PTR [rbp-0x38],rax
   0x7ffff7ebe51a <sprofil+58>:	xor    eax,eax
   0x7ffff7ebe51c <sprofil+60>:	lea    rax,[r13*8+0xf]
   0x7ffff7ebe524 <sprofil+68>:	mov    rdx,rax
   0x7ffff7ebe527 <sprofil+71>:	and    rax,0xfffffffffffff000
   0x7ffff7ebe52d <sprofil+77>:	sub    rcx,rax
   0x7ffff7ebe530 <sprofil+80>:	and    rdx,0xfffffffffffffff0
   0x7ffff7ebe534 <sprofil+84>:	cmp    rsp,rcx
   0x7ffff7ebe537 <sprofil+87>:	je     0x7ffff7ebe54e <sprofil+110>
   0x7ffff7ebe539 <sprofil+89>:	sub    rsp,0x1000
   0x7ffff7ebe540 <sprofil+96>:	or     QWORD PTR [rsp+0xff8],0x0
   0x7ffff7ebe549 <sprofil+105>:	cmp    rsp,rcx
   0x7ffff7ebe54c <sprofil+108>:	jne    0x7ffff7ebe539 <sprofil+89>
   0x7ffff7ebe54e <sprofil+110>:	and    edx,0xfff
   0x7ffff7ebe554 <sprofil+116>:	sub    rsp,rdx
   0x7ffff7ebe557 <sprofil+119>:	test   rdx,rdx
   0x7ffff7ebe55a <sprofil+122>:	jne    0x7ffff7ebecb9 <sprofil+2009>
   0x7ffff7ebe560 <sprofil+128>:	mov    r14,rsp
   0x7ffff7ebe563 <sprofil+131>:	test   r15,r15
   0x7ffff7ebe566 <sprofil+134>:	je     0x7ffff7ebe5ac <sprofil+204>
   0x7ffff7ebe568 <sprofil+136>:	call   0x7ffff7ebed00 <__profile_frequency>
   0x7ffff7ebe56d <sprofil+141>:	mov    r8d,eax
   0x7ffff7ebe570 <sprofil+144>:	mov    eax,0xf4240
   0x7ffff7ebe575 <sprofil+149>:	cdq
   0x7ffff7ebe576 <sprofil+150>:	idiv   r8d
   0x7ffff7ebe579 <sprofil+153>:	movabs rdx,0x431bde82d7b634db
   0x7ffff7ebe583 <sprofil+163>:	movsxd rcx,eax
   0x7ffff7ebe586 <sprofil+166>:	mov    rax,rcx
   0x7ffff7ebe589 <sprofil+169>:	mul    rdx
   0x7ffff7ebe58c <sprofil+172>:	shr    rdx,0x12
   0x7ffff7ebe590 <sprofil+176>:	imul   rax,rdx,0xf4240
   0x7ffff7ebe597 <sprofil+183>:	movq   xmm0,rdx
   0x7ffff7ebe59c <sprofil+188>:	sub    rcx,rax
   0x7ffff7ebe59f <sprofil+191>:	movq   xmm4,rcx
   0x7ffff7ebe5a4 <sprofil+196>:	punpcklqdq xmm0,xmm4
   0x7ffff7ebe5a8 <sprofil+200>:	movups XMMWORD PTR [r15],xmm0
   0x7ffff7ebe5ac <sprofil+204>:	mov    ecx,DWORD PTR [rip+0xf804e]        # 0x7ffff7fb6600
   0x7ffff7ebe5b2 <sprofil+210>:	test   ecx,ecx
   0x7ffff7ebe5b4 <sprofil+212>:	jne    0x7ffff7ebec78 <sprofil+1944>
   0x7ffff7ebe5ba <sprofil+218>:	lea    rax,[rip+0xf0f7f]        # 0x7ffff7faf540
   0x7ffff7ebe5c1 <sprofil+225>:	mov    QWORD PTR [rip+0xf803c],0x0        # 0x7ffff7fb6608
   0x7ffff7ebe5cc <sprofil+236>:	mov    QWORD PTR [rip+0xf8045],rax        # 0x7ffff7fb6618
   0x7ffff7ebe5d3 <sprofil+243>:	test   r12d,r12d
   0x7ffff7ebe5d6 <sprofil+246>:	jle    0x7ffff7ebecd7 <sprofil+2039>
   0x7ffff7ebe5dc <sprofil+252>:	lea    eax,[r12-0x1]
   0x7ffff7ebe5e1 <sprofil+257>:	cmp    eax,0x4
   0x7ffff7ebe5e4 <sprofil+260>:	jbe    0x7ffff7ebecd0 <sprofil+2032>
   0x7ffff7ebe5ea <sprofil+266>:	pxor   xmm4,xmm4
   0x7ffff7ebe5ee <sprofil+270>:	mov    edx,r12d
   0x7ffff7ebe5f1 <sprofil+273>:	movq   xmm6,rbx
   0x7ffff7ebe5f6 <sprofil+278>:	mov    rax,r14
   0x7ffff7ebe5f9 <sprofil+281>:	movdqa xmm2,XMMWORD PTR [rip+0xb8edf]        # 0x7ffff7f774e0
   0x7ffff7ebe601 <sprofil+289>:	movdqa xmm5,xmm4
   0x7ffff7ebe605 <sprofil+293>:	shr    edx,0x2
   0x7ffff7ebe608 <sprofil+296>:	movdqa xmm3,XMMWORD PTR [rip+0xb8df0]        # 0x7ffff7f77400
   0x7ffff7ebe610 <sprofil+304>:	shl    rdx,0x5
   0x7ffff7ebe614 <sprofil+308>:	movdqa xmm7,XMMWORD PTR [rip+0xb8df4]        # 0x7ffff7f77410
   0x7ffff7ebe61c <sprofil+316>:	punpcklqdq xmm6,xmm6
   0x7ffff7ebe620 <sprofil+320>:	pcmpgtd xmm5,xmm2
   0x7ffff7ebe624 <sprofil+324>:	add    rdx,r14
   0x7ffff7ebe627 <sprofil+327>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebe630 <sprofil+336>:	movdqa xmm0,xmm3
   0x7ffff7ebe634 <sprofil+340>:	movdqa xmm8,xmm4
   0x7ffff7ebe639 <sprofil+345>:	paddd  xmm3,xmm7
   0x7ffff7ebe63d <sprofil+349>:	add    rax,0x20
   0x7ffff7ebe641 <sprofil+353>:	movdqa xmm1,xmm0
   0x7ffff7ebe645 <sprofil+357>:	movdqa xmm9,xmm5
   0x7ffff7ebe64a <sprofil+362>:	punpckldq xmm1,xmm0
   0x7ffff7ebe64e <sprofil+366>:	punpckhdq xmm0,xmm0
   0x7ffff7ebe652 <sprofil+370>:	pcmpgtd xmm8,xmm1
   0x7ffff7ebe657 <sprofil+375>:	pmuludq xmm9,xmm1
   0x7ffff7ebe65c <sprofil+380>:	pmuludq xmm1,xmm2
   0x7ffff7ebe660 <sprofil+384>:	pmuludq xmm8,xmm2
   0x7ffff7ebe665 <sprofil+389>:	paddq  xmm8,xmm9
   0x7ffff7ebe66a <sprofil+394>:	psllq  xmm8,0x20
   0x7ffff7ebe670 <sprofil+400>:	paddq  xmm1,xmm8
   0x7ffff7ebe675 <sprofil+405>:	movdqa xmm8,xmm5
   0x7ffff7ebe67a <sprofil+410>:	paddq  xmm1,xmm6
   0x7ffff7ebe67e <sprofil+414>:	pmuludq xmm8,xmm0
   0x7ffff7ebe683 <sprofil+419>:	movups XMMWORD PTR [rax-0x20],xmm1
   0x7ffff7ebe687 <sprofil+423>:	movdqa xmm1,xmm4
   0x7ffff7ebe68b <sprofil+427>:	pcmpgtd xmm1,xmm0
   0x7ffff7ebe68f <sprofil+431>:	pmuludq xmm0,xmm2
   0x7ffff7ebe693 <sprofil+435>:	pmuludq xmm1,xmm2
   0x7ffff7ebe697 <sprofil+439>:	paddq  xmm1,xmm8
   0x7ffff7ebe69c <sprofil+444>:	psllq  xmm1,0x20
   0x7ffff7ebe6a1 <sprofil+449>:	paddq  xmm0,xmm1
   0x7ffff7ebe6a5 <sprofil+453>:	paddq  xmm0,xmm6
   0x7ffff7ebe6a9 <sprofil+457>:	movups XMMWORD PTR [rax-0x10],xmm0
   0x7ffff7ebe6ad <sprofil+461>:	cmp    rax,rdx
   0x7ffff7ebe6b0 <sprofil+464>:	jne    0x7ffff7ebe630 <sprofil+336>
   0x7ffff7ebe6b6 <sprofil+470>:	mov    eax,r12d
   0x7ffff7ebe6b9 <sprofil+473>:	and    eax,0xfffffffc
   0x7ffff7ebe6bc <sprofil+476>:	test   r12b,0x3
   0x7ffff7ebe6c0 <sprofil+480>:	je     0x7ffff7ebe71e <sprofil+574>
   0x7ffff7ebe6c2 <sprofil+482>:	movsxd rdx,eax
   0x7ffff7ebe6c5 <sprofil+485>:	mov    rcx,rdx
   0x7ffff7ebe6c8 <sprofil+488>:	lea    rdx,[r14+rdx*8]
   0x7ffff7ebe6cc <sprofil+492>:	shl    rcx,0x5
   0x7ffff7ebe6d0 <sprofil+496>:	lea    rsi,[rbx+rcx*1]
   0x7ffff7ebe6d4 <sprofil+500>:	mov    QWORD PTR [rdx],rsi
   0x7ffff7ebe6d7 <sprofil+503>:	lea    esi,[rax+0x1]
   0x7ffff7ebe6da <sprofil+506>:	cmp    r12d,esi
   0x7ffff7ebe6dd <sprofil+509>:	jle    0x7ffff7ebe71e <sprofil+574>
   0x7ffff7ebe6df <sprofil+511>:	lea    rsi,[rbx+rcx*1+0x20]
   0x7ffff7ebe6e4 <sprofil+516>:	mov    QWORD PTR [rdx+0x8],rsi
   0x7ffff7ebe6e8 <sprofil+520>:	lea    esi,[rax+0x2]
   0x7ffff7ebe6eb <sprofil+523>:	cmp    r12d,esi
   0x7ffff7ebe6ee <sprofil+526>:	jle    0x7ffff7ebe71e <sprofil+574>
   0x7ffff7ebe6f0 <sprofil+528>:	lea    rsi,[rbx+rcx*1+0x40]
   0x7ffff7ebe6f5 <sprofil+533>:	mov    QWORD PTR [rdx+0x10],rsi
   0x7ffff7ebe6f9 <sprofil+537>:	lea    esi,[rax+0x3]
   0x7ffff7ebe6fc <sprofil+540>:	cmp    r12d,esi
   0x7ffff7ebe6ff <sprofil+543>:	jle    0x7ffff7ebe71e <sprofil+574>
   0x7ffff7ebe701 <sprofil+545>:	lea    rsi,[rbx+rcx*1+0x60]
   0x7ffff7ebe706 <sprofil+550>:	add    eax,0x4
   0x7ffff7ebe709 <sprofil+553>:	mov    QWORD PTR [rdx+0x18],rsi
   0x7ffff7ebe70d <sprofil+557>:	cmp    r12d,eax
   0x7ffff7ebe710 <sprofil+560>:	jle    0x7ffff7ebe71e <sprofil+574>
   0x7ffff7ebe712 <sprofil+562>:	lea    rax,[rbx+rcx*1+0x80]
   0x7ffff7ebe71a <sprofil+570>:	mov    QWORD PTR [rdx+0x20],rax
   0x7ffff7ebe71e <sprofil+574>:	lea    rcx,[rip+0xfffffffffffffd8b]        # 0x7ffff7ebe4b0
   0x7ffff7ebe725 <sprofil+581>:	mov    rsi,r13
   0x7ffff7ebe728 <sprofil+584>:	mov    rdi,r14
   0x7ffff7ebe72b <sprofil+587>:	mov    r12d,r12d
   0x7ffff7ebe72e <sprofil+590>:	mov    edx,0x8
   0x7ffff7ebe733 <sprofil+595>:	call   0x7ffff7dd9b60 <qsort>
   0x7ffff7ebe738 <sprofil+600>:	mov    eax,DWORD PTR [rbp-0x134]
   0x7ffff7ebe73e <sprofil+606>:	mov    QWORD PTR [rbp-0x100],r14
   0x7ffff7ebe745 <sprofil+613>:	and    eax,0x1
   0x7ffff7ebe748 <sprofil+616>:	cmp    eax,0x1
   0x7ffff7ebe74b <sprofil+619>:	lea    rax,[r14+r12*8]
   0x7ffff7ebe74f <sprofil+623>:	sbb    rbx,rbx
   0x7ffff7ebe752 <sprofil+626>:	mov    QWORD PTR [rbp-0x120],rax
   0x7ffff7ebe759 <sprofil+633>:	and    rbx,0xfffffffffffffffe
   0x7ffff7ebe75d <sprofil+637>:	add    rbx,0x4
   0x7ffff7ebe761 <sprofil+641>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebe768 <sprofil+648>:	mov    rax,QWORD PTR [rbp-0x100]
   0x7ffff7ebe76f <sprofil+655>:	mov    r15,QWORD PTR [rax]
   0x7ffff7ebe772 <sprofil+658>:	mov    rcx,QWORD PTR [r15+0x18]
   0x7ffff7ebe776 <sprofil+662>:	cmp    rcx,0x1
   0x7ffff7ebe77a <sprofil+666>:	jbe    0x7ffff7ebeaa8 <sprofil+1480>
   0x7ffff7ebe780 <sprofil+672>:	mov    rax,QWORD PTR [r15+0x8]
   0x7ffff7ebe784 <sprofil+676>:	xor    edx,edx
   0x7ffff7ebe786 <sprofil+678>:	mov    ecx,ecx
   0x7ffff7ebe788 <sprofil+680>:	mov    r11,QWORD PTR [r15+0x10]
   0x7ffff7ebe78c <sprofil+684>:	div    rbx
   0x7ffff7ebe78f <sprofil+687>:	xor    edx,edx
   0x7ffff7ebe791 <sprofil+689>:	mov    rdi,rax
   0x7ffff7ebe794 <sprofil+692>:	mov    rax,rbx
   0x7ffff7ebe797 <sprofil+695>:	imul   rax,rdi
   0x7ffff7ebe79b <sprofil+699>:	div    rcx
   0x7ffff7ebe79e <sprofil+702>:	shl    rax,0x10
   0x7ffff7ebe7a2 <sprofil+706>:	lea    r12,[rax+r11*1]
   0x7ffff7ebe7a6 <sprofil+710>:	mov    rax,rdx
   0x7ffff7ebe7a9 <sprofil+713>:	xor    edx,edx
   0x7ffff7ebe7ab <sprofil+715>:	shl    rax,0x10
   0x7ffff7ebe7af <sprofil+719>:	div    rcx
   0x7ffff7ebe7b2 <sprofil+722>:	xor    edx,edx
   0x7ffff7ebe7b4 <sprofil+724>:	lea    r10,[r12+rax*1]
   0x7ffff7ebe7b8 <sprofil+728>:	mov    rsi,r10
   0x7ffff7ebe7bb <sprofil+731>:	mov    QWORD PTR [rbp-0xf8],r10
   0x7ffff7ebe7c2 <sprofil+738>:	sub    rsi,r11
   0x7ffff7ebe7c5 <sprofil+741>:	mov    rax,rsi
   0x7ffff7ebe7c8 <sprofil+744>:	div    rbx
   0x7ffff7ebe7cb <sprofil+747>:	movzx  edx,ax
   0x7ffff7ebe7ce <sprofil+750>:	shr    rax,0x10
   0x7ffff7ebe7d2 <sprofil+754>:	imul   rdx,rcx
   0x7ffff7ebe7d6 <sprofil+758>:	imul   rax,rcx
   0x7ffff7ebe7da <sprofil+762>:	shr    rdx,0x10
   0x7ffff7ebe7de <sprofil+766>:	add    rdx,rax
   0x7ffff7ebe7e1 <sprofil+769>:	cmp    rdi,rdx
   0x7ffff7ebe7e4 <sprofil+772>:	jbe    0x7ffff7ebeb98 <sprofil+1720>
   0x7ffff7ebe7ea <sprofil+778>:	add    r10,0x1
   0x7ffff7ebe7ee <sprofil+782>:	xor    edx,edx
   0x7ffff7ebe7f0 <sprofil+784>:	mov    rsi,r10
   0x7ffff7ebe7f3 <sprofil+787>:	mov    QWORD PTR [rbp-0xf8],r10
   0x7ffff7ebe7fa <sprofil+794>:	sub    rsi,r11
   0x7ffff7ebe7fd <sprofil+797>:	lea    rax,[rsi-0x1]
   0x7ffff7ebe801 <sprofil+801>:	div    rbx
   0x7ffff7ebe804 <sprofil+804>:	movzx  edx,ax
   0x7ffff7ebe807 <sprofil+807>:	shr    rax,0x10
   0x7ffff7ebe80b <sprofil+811>:	imul   rdx,rcx
   0x7ffff7ebe80f <sprofil+815>:	imul   rax,rcx
   0x7ffff7ebe813 <sprofil+819>:	shr    rdx,0x10
   0x7ffff7ebe817 <sprofil+823>:	add    rdx,rax
   0x7ffff7ebe81a <sprofil+826>:	cmp    rdi,rdx
   0x7ffff7ebe81d <sprofil+829>:	jbe    0x7ffff7ebebc0 <sprofil+1760>
   0x7ffff7ebe823 <sprofil+835>:	mov    rax,rsi
   0x7ffff7ebe826 <sprofil+838>:	xor    edx,edx
   0x7ffff7ebe828 <sprofil+840>:	div    rbx
   0x7ffff7ebe82b <sprofil+843>:	mov    rsi,rax
   0x7ffff7ebe82e <sprofil+846>:	movzx  edx,ax
   0x7ffff7ebe831 <sprofil+849>:	imul   rdx,rcx
   0x7ffff7ebe835 <sprofil+853>:	shr    rsi,0x10
   0x7ffff7ebe839 <sprofil+857>:	imul   rsi,rcx
   0x7ffff7ebe83d <sprofil+861>:	shr    rdx,0x10
   0x7ffff7ebe841 <sprofil+865>:	add    rdx,rsi
   0x7ffff7ebe844 <sprofil+868>:	cmp    rdi,rdx
   0x7ffff7ebe847 <sprofil+871>:	ja     0x7ffff7ebebc0 <sprofil+1760>
   0x7ffff7ebe84d <sprofil+877>:	mov    esi,DWORD PTR [rip+0xf7dad]        # 0x7ffff7fb6600
   0x7ffff7ebe853 <sprofil+883>:	mov    r8,QWORD PTR [rip+0xf7dae]        # 0x7ffff7fb6608
   0x7ffff7ebe85a <sprofil+890>:	lea    r13,[rip+0xf7d9f]        # 0x7ffff7fb6600
   0x7ffff7ebe861 <sprofil+897>:	xor    r14d,r14d
   0x7ffff7ebe864 <sprofil+900>:	test   esi,esi
   0x7ffff7ebe866 <sprofil+902>:	jne    0x7ffff7ebe91c <sprofil+1084>
   0x7ffff7ebe86c <sprofil+908>:	jmp    0x7ffff7ebebe0 <sprofil+1792>
   0x7ffff7ebe871 <sprofil+913>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebe878 <sprofil+920>:	mov    edi,0x30
   0x7ffff7ebe87d <sprofil+925>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7ebe882 <sprofil+930>:	movdqa xmm0,XMMWORD PTR [rbp-0x110]
   0x7ffff7ebe88a <sprofil+938>:	mov    r8,rax
   0x7ffff7ebe88d <sprofil+941>:	test   r8,r8
   0x7ffff7ebe890 <sprofil+944>:	je     0x7ffff7ebec4d <sprofil+1901>
   0x7ffff7ebe896 <sprofil+950>:	mov    esi,DWORD PTR [r13+0x0]
   0x7ffff7ebe89a <sprofil+954>:	movsxd rax,r14d
   0x7ffff7ebe89d <sprofil+957>:	lea    rax,[rax+rax*2]
   0x7ffff7ebe8a1 <sprofil+961>:	mov    edx,esi
   0x7ffff7ebe8a3 <sprofil+963>:	shl    rax,0x4
   0x7ffff7ebe8a7 <sprofil+967>:	sub    edx,r14d
   0x7ffff7ebe8aa <sprofil+970>:	lea    r11,[r8+rax*1]
   0x7ffff7ebe8ae <sprofil+974>:	test   rdx,rdx
   0x7ffff7ebe8b1 <sprofil+977>:	jne    0x7ffff7ebe988 <sprofil+1192>
   0x7ffff7ebe8b7 <sprofil+983>:	mov    rax,QWORD PTR [r15+0x8]
   0x7ffff7ebe8bb <sprofil+987>:	xor    edx,edx
   0x7ffff7ebe8bd <sprofil+989>:	mov    rdi,QWORD PTR [r15+0x10]
   0x7ffff7ebe8c1 <sprofil+993>:	add    esi,0x1
   0x7ffff7ebe8c4 <sprofil+996>:	div    rbx
   0x7ffff7ebe8c7 <sprofil+999>:	movq   xmm1,rdi
   0x7ffff7ebe8cc <sprofil+1004>:	movq   xmm3,rax
   0x7ffff7ebe8d1 <sprofil+1009>:	mov    rax,QWORD PTR [r15]
   0x7ffff7ebe8d4 <sprofil+1012>:	punpcklqdq xmm1,xmm3
   0x7ffff7ebe8d8 <sprofil+1016>:	movups XMMWORD PTR [r11],xmm1
   0x7ffff7ebe8dc <sprofil+1020>:	mov    rdx,QWORD PTR [r15+0x18]
   0x7ffff7ebe8e0 <sprofil+1024>:	mov    QWORD PTR [rip+0xf7d21],r8        # 0x7ffff7fb6608
   0x7ffff7ebe8e7 <sprofil+1031>:	mov    QWORD PTR [r11+0x18],rax
   0x7ffff7ebe8eb <sprofil+1035>:	lea    rax,[r8+r12*1]
   0x7ffff7ebe8ef <sprofil+1039>:	mov    DWORD PTR [r11+0x10],edx
   0x7ffff7ebe8f3 <sprofil+1043>:	mov    DWORD PTR [r13+0x0],esi
   0x7ffff7ebe8f7 <sprofil+1047>:	movups XMMWORD PTR [r11+0x20],xmm0
   0x7ffff7ebe8fc <sprofil+1052>:	test   rdi,rdi
   0x7ffff7ebe8ff <sprofil+1055>:	jne    0x7ffff7ebe90b <sprofil+1067>
   0x7ffff7ebe901 <sprofil+1057>:	cmp    rdx,0x2
   0x7ffff7ebe905 <sprofil+1061>:	je     0x7ffff7ebeb88 <sprofil+1704>
   0x7ffff7ebe90b <sprofil+1067>:	add    r14d,0x1
   0x7ffff7ebe90f <sprofil+1071>:	mov    r11,QWORD PTR [rax+0x28]
   0x7ffff7ebe913 <sprofil+1075>:	cmp    r14d,esi
   0x7ffff7ebe916 <sprofil+1078>:	jae    0x7ffff7ebe9d8 <sprofil+1272>
   0x7ffff7ebe91c <sprofil+1084>:	mov    eax,r14d
   0x7ffff7ebe91f <sprofil+1087>:	movq   xmm0,r11
   0x7ffff7ebe924 <sprofil+1092>:	lea    r9,[rax+rax*2]
   0x7ffff7ebe928 <sprofil+1096>:	shl    r9,0x4
   0x7ffff7ebe92c <sprofil+1100>:	lea    rax,[r8+r9*1]
   0x7ffff7ebe930 <sprofil+1104>:	mov    r12,r9
   0x7ffff7ebe933 <sprofil+1107>:	mov    rdx,QWORD PTR [rax+0x20]
   0x7ffff7ebe937 <sprofil+1111>:	movq   xmm7,rdx
   0x7ffff7ebe93c <sprofil+1116>:	punpcklqdq xmm0,xmm7
   0x7ffff7ebe940 <sprofil+1120>:	cmp    rdx,r11
   0x7ffff7ebe943 <sprofil+1123>:	jbe    0x7ffff7ebe90b <sprofil+1067>
   0x7ffff7ebe945 <sprofil+1125>:	cmp    rdx,QWORD PTR [rbp-0xf8]
   0x7ffff7ebe94c <sprofil+1132>:	ja     0x7ffff7ebe9d8 <sprofil+1272>
   0x7ffff7ebe952 <sprofil+1138>:	movaps XMMWORD PTR [rbp-0x110],xmm0
   0x7ffff7ebe959 <sprofil+1145>:	test   esi,esi
   0x7ffff7ebe95b <sprofil+1147>:	je     0x7ffff7ebe878 <sprofil+920>
   0x7ffff7ebe961 <sprofil+1153>:	lea    eax,[rsi+0x1]
   0x7ffff7ebe964 <sprofil+1156>:	mov    rdi,r8
   0x7ffff7ebe967 <sprofil+1159>:	lea    rsi,[rax+rax*2]
   0x7ffff7ebe96b <sprofil+1163>:	shl    rsi,0x4
   0x7ffff7ebe96f <sprofil+1167>:	call   0x7ffff7dbd3b0 <realloc@plt>
   0x7ffff7ebe974 <sprofil+1172>:	movdqa xmm0,XMMWORD PTR [rbp-0x110]
   0x7ffff7ebe97c <sprofil+1180>:	mov    r8,rax
   0x7ffff7ebe97f <sprofil+1183>:	jmp    0x7ffff7ebe88d <sprofil+941>
   0x7ffff7ebe984 <sprofil+1188>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebe988 <sprofil+1192>:	lea    rdx,[rdx+rdx*2]
   0x7ffff7ebe98c <sprofil+1196>:	mov    rsi,r11
   0x7ffff7ebe98f <sprofil+1199>:	lea    rdi,[r8+rax*1+0x30]
   0x7ffff7ebe994 <sprofil+1204>:	mov    QWORD PTR [rbp-0x118],r8
   0x7ffff7ebe99b <sprofil+1211>:	shl    rdx,0x4
   0x7ffff7ebe99f <sprofil+1215>:	mov    QWORD PTR [rbp-0x110],r11
   0x7ffff7ebe9a6 <sprofil+1222>:	movaps XMMWORD PTR [rbp-0x130],xmm0
   0x7ffff7ebe9ad <sprofil+1229>:	call   0x7ffff7dbd430 <*ABS*+0xa9620@plt>
   0x7ffff7ebe9b2 <sprofil+1234>:	mov    esi,DWORD PTR [r13+0x0]
   0x7ffff7ebe9b6 <sprofil+1238>:	movdqa xmm0,XMMWORD PTR [rbp-0x130]
   0x7ffff7ebe9be <sprofil+1246>:	mov    r8,QWORD PTR [rbp-0x118]
   0x7ffff7ebe9c5 <sprofil+1253>:	mov    r11,QWORD PTR [rbp-0x110]
   0x7ffff7ebe9cc <sprofil+1260>:	jmp    0x7ffff7ebe8b7 <sprofil+983>
   0x7ffff7ebe9d1 <sprofil+1265>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebe9d8 <sprofil+1272>:	cmp    QWORD PTR [rbp-0xf8],r11
   0x7ffff7ebe9df <sprofil+1279>:	jbe    0x7ffff7ebeaa8 <sprofil+1480>
   0x7ffff7ebe9e5 <sprofil+1285>:	movsxd r13,r14d
   0x7ffff7ebe9e8 <sprofil+1288>:	test   esi,esi
   0x7ffff7ebe9ea <sprofil+1290>:	je     0x7ffff7ebebf0 <sprofil+1808>
   0x7ffff7ebe9f0 <sprofil+1296>:	lea    eax,[rsi+0x1]
   0x7ffff7ebe9f3 <sprofil+1299>:	mov    rdi,r8
   0x7ffff7ebe9f6 <sprofil+1302>:	mov    QWORD PTR [rbp-0x110],r11
   0x7ffff7ebe9fd <sprofil+1309>:	lea    rsi,[rax+rax*2]
   0x7ffff7ebea01 <sprofil+1313>:	shl    rsi,0x4
   0x7ffff7ebea05 <sprofil+1317>:	call   0x7ffff7dbd3b0 <realloc@plt>
   0x7ffff7ebea0a <sprofil+1322>:	mov    r11,QWORD PTR [rbp-0x110]
   0x7ffff7ebea11 <sprofil+1329>:	mov    r8,rax
   0x7ffff7ebea14 <sprofil+1332>:	movq   xmm0,r11
   0x7ffff7ebea19 <sprofil+1337>:	movhps xmm0,QWORD PTR [rbp-0xf8]
   0x7ffff7ebea20 <sprofil+1344>:	test   r8,r8
   0x7ffff7ebea23 <sprofil+1347>:	je     0x7ffff7ebec4d <sprofil+1901>
   0x7ffff7ebea29 <sprofil+1353>:	mov    esi,DWORD PTR [rip+0xf7bd1]        # 0x7ffff7fb6600
   0x7ffff7ebea2f <sprofil+1359>:	lea    rax,[r13+r13*2+0x0]
   0x7ffff7ebea34 <sprofil+1364>:	shl    rax,0x4
   0x7ffff7ebea38 <sprofil+1368>:	mov    edx,esi
   0x7ffff7ebea3a <sprofil+1370>:	lea    r12,[r8+rax*1]
   0x7ffff7ebea3e <sprofil+1374>:	sub    edx,r14d
   0x7ffff7ebea41 <sprofil+1377>:	test   rdx,rdx
   0x7ffff7ebea44 <sprofil+1380>:	jne    0x7ffff7ebec10 <sprofil+1840>
   0x7ffff7ebea4a <sprofil+1386>:	mov    rax,QWORD PTR [r15+0x8]
   0x7ffff7ebea4e <sprofil+1390>:	xor    edx,edx
   0x7ffff7ebea50 <sprofil+1392>:	mov    rcx,QWORD PTR [r15+0x10]
   0x7ffff7ebea54 <sprofil+1396>:	add    esi,0x1
   0x7ffff7ebea57 <sprofil+1399>:	div    rbx
   0x7ffff7ebea5a <sprofil+1402>:	mov    rdx,QWORD PTR [r15]
   0x7ffff7ebea5d <sprofil+1405>:	movq   xmm1,rcx
   0x7ffff7ebea62 <sprofil+1410>:	movq   xmm5,rax
   0x7ffff7ebea67 <sprofil+1415>:	punpcklqdq xmm1,xmm5
   0x7ffff7ebea6b <sprofil+1419>:	movups XMMWORD PTR [r12],xmm1
   0x7ffff7ebea70 <sprofil+1424>:	mov    rax,QWORD PTR [r15+0x18]
   0x7ffff7ebea74 <sprofil+1428>:	mov    QWORD PTR [rip+0xf7b8d],r8        # 0x7ffff7fb6608
   0x7ffff7ebea7b <sprofil+1435>:	mov    DWORD PTR [r12+0x10],eax
   0x7ffff7ebea80 <sprofil+1440>:	mov    QWORD PTR [r12+0x18],rdx
   0x7ffff7ebea85 <sprofil+1445>:	mov    DWORD PTR [rip+0xf7b75],esi        # 0x7ffff7fb6600
   0x7ffff7ebea8b <sprofil+1451>:	movups XMMWORD PTR [r12+0x20],xmm0
   0x7ffff7ebea91 <sprofil+1457>:	cmp    rax,0x2
   0x7ffff7ebea95 <sprofil+1461>:	jne    0x7ffff7ebeaa8 <sprofil+1480>
   0x7ffff7ebea97 <sprofil+1463>:	test   rcx,rcx
   0x7ffff7ebea9a <sprofil+1466>:	jne    0x7ffff7ebeaa8 <sprofil+1480>
   0x7ffff7ebea9c <sprofil+1468>:	mov    QWORD PTR [rip+0xf7b75],r8        # 0x7ffff7fb6618
   0x7ffff7ebeaa3 <sprofil+1475>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebeaa8 <sprofil+1480>:	add    QWORD PTR [rbp-0x100],0x8
   0x7ffff7ebeab0 <sprofil+1488>:	mov    rax,QWORD PTR [rbp-0x100]
   0x7ffff7ebeab7 <sprofil+1495>:	cmp    rax,QWORD PTR [rbp-0x120]
   0x7ffff7ebeabe <sprofil+1502>:	jne    0x7ffff7ebe768 <sprofil+648>
   0x7ffff7ebeac4 <sprofil+1508>:	mov    edx,DWORD PTR [rip+0xf7b36]        # 0x7ffff7fb6600
   0x7ffff7ebeaca <sprofil+1514>:	xor    eax,eax
   0x7ffff7ebeacc <sprofil+1516>:	test   edx,edx
   0x7ffff7ebeace <sprofil+1518>:	je     0x7ffff7ebeb62 <sprofil+1666>
   0x7ffff7ebead4 <sprofil+1524>:	mov    rax,QWORD PTR [rip+0xf7b2d]        # 0x7ffff7fb6608
   0x7ffff7ebeadb <sprofil+1531>:	test   BYTE PTR [rbp-0x134],0x1
   0x7ffff7ebeae2 <sprofil+1538>:	lea    rdx,[rip+0xfffffffffffff987]        # 0x7ffff7ebe470
   0x7ffff7ebeae9 <sprofil+1545>:	lea    rsi,[rbp-0xd0]
   0x7ffff7ebeaf0 <sprofil+1552>:	mov    edi,0x1b
   0x7ffff7ebeaf5 <sprofil+1557>:	mov    DWORD PTR [rbp-0x48],0x10000004
   0x7ffff7ebeafc <sprofil+1564>:	mov    QWORD PTR [rip+0xf7b0d],rax        # 0x7ffff7fb6610
   0x7ffff7ebeb03 <sprofil+1571>:	lea    rax,[rip+0xfffffffffffff986]        # 0x7ffff7ebe490
   0x7ffff7ebeb0a <sprofil+1578>:	mov    QWORD PTR [rbp-0xc8],0xffffffffffffffff
   0x7ffff7ebeb15 <sprofil+1589>:	cmove  rax,rdx
   0x7ffff7ebeb19 <sprofil+1593>:	lea    rdx,[rip+0xf7b20]        # 0x7ffff7fb6640
   0x7ffff7ebeb20 <sprofil+1600>:	mov    QWORD PTR [rbp-0xd0],rax
   0x7ffff7ebeb27 <sprofil+1607>:	call   0x7ffff7dd74d0 <sigaction>
   0x7ffff7ebeb2c <sprofil+1612>:	test   eax,eax
   0x7ffff7ebeb2e <sprofil+1614>:	js     0x7ffff7ebec6e <sprofil+1934>
   0x7ffff7ebeb34 <sprofil+1620>:	movdqa xmm0,XMMWORD PTR [rip+0xb8844]        # 0x7ffff7f77380
   0x7ffff7ebeb3c <sprofil+1628>:	lea    rsi,[rbp-0xf0]
   0x7ffff7ebeb43 <sprofil+1635>:	mov    edi,0x2
   0x7ffff7ebeb48 <sprofil+1640>:	lea    rdx,[rip+0xf7ad1]        # 0x7ffff7fb6620
   0x7ffff7ebeb4f <sprofil+1647>:	movaps XMMWORD PTR [rbp-0xe0],xmm0
   0x7ffff7ebeb56 <sprofil+1654>:	movaps XMMWORD PTR [rbp-0xf0],xmm0
   0x7ffff7ebeb5d <sprofil+1661>:	call   0x7ffff7e71de0 <setitimer>
   0x7ffff7ebeb62 <sprofil+1666>:	mov    rdx,QWORD PTR [rbp-0x38]
   0x7ffff7ebeb66 <sprofil+1670>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7ebeb6f <sprofil+1679>:	jne    0x7ffff7ebecf3 <sprofil+2067>
   0x7ffff7ebeb75 <sprofil+1685>:	lea    rsp,[rbp-0x28]
   0x7ffff7ebeb79 <sprofil+1689>:	pop    rbx
   0x7ffff7ebeb7a <sprofil+1690>:	pop    r12
   0x7ffff7ebeb7c <sprofil+1692>:	pop    r13
   0x7ffff7ebeb7e <sprofil+1694>:	pop    r14
   0x7ffff7ebeb80 <sprofil+1696>:	pop    r15
   0x7ffff7ebeb82 <sprofil+1698>:	pop    rbp
   0x7ffff7ebeb83 <sprofil+1699>:	ret
   0x7ffff7ebeb84 <sprofil+1700>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebeb88 <sprofil+1704>:	mov    QWORD PTR [rip+0xf7a89],r8        # 0x7ffff7fb6618
   0x7ffff7ebeb8f <sprofil+1711>:	jmp    0x7ffff7ebe90b <sprofil+1067>
   0x7ffff7ebeb94 <sprofil+1716>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebeb98 <sprofil+1720>:	lea    rax,[rsi-0x1]
   0x7ffff7ebeb9c <sprofil+1724>:	xor    edx,edx
   0x7ffff7ebeb9e <sprofil+1726>:	div    rbx
   0x7ffff7ebeba1 <sprofil+1729>:	movzx  edx,ax
   0x7ffff7ebeba4 <sprofil+1732>:	shr    rax,0x10
   0x7ffff7ebeba8 <sprofil+1736>:	imul   rdx,rcx
   0x7ffff7ebebac <sprofil+1740>:	imul   rax,rcx
   0x7ffff7ebebb0 <sprofil+1744>:	shr    rdx,0x10
   0x7ffff7ebebb4 <sprofil+1748>:	add    rdx,rax
   0x7ffff7ebebb7 <sprofil+1751>:	cmp    rdi,rdx
   0x7ffff7ebebba <sprofil+1754>:	ja     0x7ffff7ebe84d <sprofil+877>
   0x7ffff7ebebc0 <sprofil+1760>:	lea    rcx,[rip+0xb6a29]        # 0x7ffff7f755f0
   0x7ffff7ebebc7 <sprofil+1767>:	mov    edx,0x64
   0x7ffff7ebebcc <sprofil+1772>:	lea    rsi,[rip+0xb1aad]        # 0x7ffff7f70680
   0x7ffff7ebebd3 <sprofil+1779>:	lea    rdi,[rip+0xb69ae]        # 0x7ffff7f75588
   0x7ffff7ebebda <sprofil+1786>:	call   0x7ffff7dcee50 <__assert_fail>
   0x7ffff7ebebdf <sprofil+1791>:	nop
   0x7ffff7ebebe0 <sprofil+1792>:	xor    r13d,r13d
   0x7ffff7ebebe3 <sprofil+1795>:	cmp    r11,QWORD PTR [rbp-0xf8]
   0x7ffff7ebebea <sprofil+1802>:	jae    0x7ffff7ebeaa8 <sprofil+1480>
   0x7ffff7ebebf0 <sprofil+1808>:	mov    edi,0x30
   0x7ffff7ebebf5 <sprofil+1813>:	mov    QWORD PTR [rbp-0x110],r11
   0x7ffff7ebebfc <sprofil+1820>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7ebec01 <sprofil+1825>:	mov    r11,QWORD PTR [rbp-0x110]
   0x7ffff7ebec08 <sprofil+1832>:	mov    r8,rax
   0x7ffff7ebec0b <sprofil+1835>:	jmp    0x7ffff7ebea14 <sprofil+1332>
   0x7ffff7ebec10 <sprofil+1840>:	lea    rdx,[rdx+rdx*2]
   0x7ffff7ebec14 <sprofil+1844>:	lea    rdi,[r8+rax*1+0x30]
   0x7ffff7ebec19 <sprofil+1849>:	mov    rsi,r12
   0x7ffff7ebec1c <sprofil+1852>:	mov    QWORD PTR [rbp-0xf8],r8
   0x7ffff7ebec23 <sprofil+1859>:	shl    rdx,0x4
   0x7ffff7ebec27 <sprofil+1863>:	movaps XMMWORD PTR [rbp-0x110],xmm0
   0x7ffff7ebec2e <sprofil+1870>:	call   0x7ffff7dbd430 <*ABS*+0xa9620@plt>
   0x7ffff7ebec33 <sprofil+1875>:	mov    esi,DWORD PTR [rip+0xf79c7]        # 0x7ffff7fb6600
   0x7ffff7ebec39 <sprofil+1881>:	movdqa xmm0,XMMWORD PTR [rbp-0x110]
   0x7ffff7ebec41 <sprofil+1889>:	mov    r8,QWORD PTR [rbp-0xf8]
   0x7ffff7ebec48 <sprofil+1896>:	jmp    0x7ffff7ebea4a <sprofil+1386>
   0x7ffff7ebec4d <sprofil+1901>:	mov    rdi,QWORD PTR [rip+0xf79b4]        # 0x7ffff7fb6608
   0x7ffff7ebec54 <sprofil+1908>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ebec59 <sprofil+1913>:	mov    DWORD PTR [rip+0xf799d],0x0        # 0x7ffff7fb6600
   0x7ffff7ebec63 <sprofil+1923>:	mov    QWORD PTR [rip+0xf799a],0x0        # 0x7ffff7fb6608
   0x7ffff7ebec6e <sprofil+1934>:	mov    eax,0xffffffff
   0x7ffff7ebec73 <sprofil+1939>:	jmp    0x7ffff7ebeb62 <sprofil+1666>
   0x7ffff7ebec78 <sprofil+1944>:	xor    edx,edx
   0x7ffff7ebec7a <sprofil+1946>:	lea    rsi,[rip+0xf799f]        # 0x7ffff7fb6620
   0x7ffff7ebec81 <sprofil+1953>:	mov    edi,0x2
   0x7ffff7ebec86 <sprofil+1958>:	call   0x7ffff7e71de0 <setitimer>
   0x7ffff7ebec8b <sprofil+1963>:	test   eax,eax
   0x7ffff7ebec8d <sprofil+1965>:	js     0x7ffff7ebec6e <sprofil+1934>
   0x7ffff7ebec8f <sprofil+1967>:	xor    edx,edx
   0x7ffff7ebec91 <sprofil+1969>:	lea    rsi,[rip+0xf79a8]        # 0x7ffff7fb6640
   0x7ffff7ebec98 <sprofil+1976>:	mov    edi,0x1b
   0x7ffff7ebec9d <sprofil+1981>:	call   0x7ffff7dd74d0 <sigaction>
   0x7ffff7ebeca2 <sprofil+1986>:	test   eax,eax
   0x7ffff7ebeca4 <sprofil+1988>:	js     0x7ffff7ebec6e <sprofil+1934>
   0x7ffff7ebeca6 <sprofil+1990>:	mov    rdi,QWORD PTR [rip+0xf795b]        # 0x7ffff7fb6608
   0x7ffff7ebecad <sprofil+1997>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ebecb2 <sprofil+2002>:	xor    eax,eax
   0x7ffff7ebecb4 <sprofil+2004>:	jmp    0x7ffff7ebeb62 <sprofil+1666>
   0x7ffff7ebecb9 <sprofil+2009>:	or     QWORD PTR [rsp+rdx*1-0x8],0x0
   0x7ffff7ebecbf <sprofil+2015>:	mov    r14,rsp
   0x7ffff7ebecc2 <sprofil+2018>:	test   r15,r15
   0x7ffff7ebecc5 <sprofil+2021>:	jne    0x7ffff7ebe568 <sprofil+136>
   0x7ffff7ebeccb <sprofil+2027>:	jmp    0x7ffff7ebe5ac <sprofil+204>
   0x7ffff7ebecd0 <sprofil+2032>:	xor    eax,eax
   0x7ffff7ebecd2 <sprofil+2034>:	jmp    0x7ffff7ebe6c2 <sprofil+482>
   0x7ffff7ebecd7 <sprofil+2039>:	lea    rcx,[rip+0xfffffffffffff7d2]        # 0x7ffff7ebe4b0
   0x7ffff7ebecde <sprofil+2046>:	mov    edx,0x8
   0x7ffff7ebece3 <sprofil+2051>:	mov    rsi,r13
   0x7ffff7ebece6 <sprofil+2054>:	mov    rdi,r14
   0x7ffff7ebece9 <sprofil+2057>:	call   0x7ffff7dd9b60 <qsort>
   0x7ffff7ebecee <sprofil+2062>:	jmp    0x7ffff7ebeac4 <sprofil+1508>
   0x7ffff7ebecf3 <sprofil+2067>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ebecf8:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebed00 <__profile_frequency>:	endbr64
   0x7ffff7ebed04 <__profile_frequency+4>:	mov    rax,QWORD PTR [rip+0xef1bd]        # 0x7ffff7fadec8
   0x7ffff7ebed0b <__profile_frequency+11>:	mov    eax,DWORD PTR [rax+0x40]
   0x7ffff7ebed0e <__profile_frequency+14>:	ret
   0x7ffff7ebed0f:	nop
   0x7ffff7ebed10 <mcount>:	endbr64
   0x7ffff7ebed14 <mcount+4>:	sub    rsp,0x38
   0x7ffff7ebed18 <mcount+8>:	mov    QWORD PTR [rsp],rax
   0x7ffff7ebed1c <mcount+12>:	mov    QWORD PTR [rsp+0x8],rcx
   0x7ffff7ebed21 <mcount+17>:	mov    QWORD PTR [rsp+0x10],rdx
   0x7ffff7ebed26 <mcount+22>:	mov    QWORD PTR [rsp+0x18],rsi
   0x7ffff7ebed2b <mcount+27>:	mov    QWORD PTR [rsp+0x20],rdi
   0x7ffff7ebed30 <mcount+32>:	mov    QWORD PTR [rsp+0x28],r8
   0x7ffff7ebed35 <mcount+37>:	mov    QWORD PTR [rsp+0x30],r9
   0x7ffff7ebed3a <mcount+42>:	mov    rsi,QWORD PTR [rsp+0x38]
   0x7ffff7ebed3f <mcount+47>:	mov    rdi,QWORD PTR [rbp+0x8]
   0x7ffff7ebed43 <mcount+51>:	call   0x7ffff7ebdfb0
   0x7ffff7ebed48 <mcount+56>:	mov    r9,QWORD PTR [rsp+0x30]
   0x7ffff7ebed4d <mcount+61>:	mov    r8,QWORD PTR [rsp+0x28]
   0x7ffff7ebed52 <mcount+66>:	mov    rdi,QWORD PTR [rsp+0x20]
   0x7ffff7ebed57 <mcount+71>:	mov    rsi,QWORD PTR [rsp+0x18]
   0x7ffff7ebed5c <mcount+76>:	mov    rdx,QWORD PTR [rsp+0x10]
   0x7ffff7ebed61 <mcount+81>:	mov    rcx,QWORD PTR [rsp+0x8]
   0x7ffff7ebed66 <mcount+86>:	mov    rax,QWORD PTR [rsp]
   0x7ffff7ebed6a <mcount+90>:	add    rsp,0x38
   0x7ffff7ebed6e <mcount+94>:	ret
   0x7ffff7ebed6f:	nop
   0x7ffff7ebed70 <__fentry__>:	endbr64
   0x7ffff7ebed74 <__fentry__+4>:	sub    rsp,0x40
   0x7ffff7ebed78 <__fentry__+8>:	mov    QWORD PTR [rsp],rax
   0x7ffff7ebed7c <__fentry__+12>:	mov    QWORD PTR [rsp+0x8],rcx
   0x7ffff7ebed81 <__fentry__+17>:	mov    QWORD PTR [rsp+0x10],rdx
   0x7ffff7ebed86 <__fentry__+22>:	mov    QWORD PTR [rsp+0x18],rsi
   0x7ffff7ebed8b <__fentry__+27>:	mov    QWORD PTR [rsp+0x20],rdi
   0x7ffff7ebed90 <__fentry__+32>:	mov    QWORD PTR [rsp+0x28],r8
   0x7ffff7ebed95 <__fentry__+37>:	mov    QWORD PTR [rsp+0x30],r9
   0x7ffff7ebed9a <__fentry__+42>:	mov    rsi,QWORD PTR [rsp+0x40]
   0x7ffff7ebed9f <__fentry__+47>:	mov    rdi,QWORD PTR [rsp+0x48]
   0x7ffff7ebeda4 <__fentry__+52>:	call   0x7ffff7ebdfb0
   0x7ffff7ebeda9 <__fentry__+57>:	mov    r9,QWORD PTR [rsp+0x30]
   0x7ffff7ebedae <__fentry__+62>:	mov    r8,QWORD PTR [rsp+0x28]
   0x7ffff7ebedb3 <__fentry__+67>:	mov    rdi,QWORD PTR [rsp+0x20]
   0x7ffff7ebedb8 <__fentry__+72>:	mov    rsi,QWORD PTR [rsp+0x18]
   0x7ffff7ebedbd <__fentry__+77>:	mov    rdx,QWORD PTR [rsp+0x10]
   0x7ffff7ebedc2 <__fentry__+82>:	mov    rcx,QWORD PTR [rsp+0x8]
   0x7ffff7ebedc7 <__fentry__+87>:	mov    rax,QWORD PTR [rsp]
   0x7ffff7ebedcb <__fentry__+91>:	add    rsp,0x40
   0x7ffff7ebedcf <__fentry__+95>:	ret
   0x7ffff7ebedd0 <iswalnum>:	endbr64
   0x7ffff7ebedd4 <iswalnum+4>:	mov    edx,edi
   0x7ffff7ebedd6 <iswalnum+6>:	test   edx,0xffffff80
   0x7ffff7ebeddc <iswalnum+12>:	je     0x7ffff7ebee50 <iswalnum+128>
   0x7ffff7ebedde <iswalnum+14>:	mov    rax,QWORD PTR [rip+0xef18b]        # 0x7ffff7fadf70
   0x7ffff7ebede5 <iswalnum+21>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebede9 <iswalnum+25>:	mov    rcx,QWORD PTR [rax]
   0x7ffff7ebedec <iswalnum+28>:	mov    eax,DWORD PTR [rcx+0xc8]
   0x7ffff7ebedf2 <iswalnum+34>:	add    eax,0xb
   0x7ffff7ebedf5 <iswalnum+37>:	movzx  eax,ax
   0x7ffff7ebedf8 <iswalnum+40>:	mov    rsi,QWORD PTR [rcx+rax*8+0x40]
   0x7ffff7ebedfd <iswalnum+45>:	mov    eax,edx
   0x7ffff7ebedff <iswalnum+47>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebee01 <iswalnum+49>:	shr    eax,cl
   0x7ffff7ebee03 <iswalnum+51>:	mov    ecx,eax
   0x7ffff7ebee05 <iswalnum+53>:	xor    eax,eax
   0x7ffff7ebee07 <iswalnum+55>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebee0a <iswalnum+58>:	jae    0x7ffff7ebee46 <iswalnum+118>
   0x7ffff7ebee0c <iswalnum+60>:	add    ecx,0x5
   0x7ffff7ebee0f <iswalnum+63>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebee12 <iswalnum+66>:	test   edi,edi
   0x7ffff7ebee14 <iswalnum+68>:	je     0x7ffff7ebee46 <iswalnum+118>
   0x7ffff7ebee16 <iswalnum+70>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebee19 <iswalnum+73>:	mov    r8d,edx
   0x7ffff7ebee1c <iswalnum+76>:	shr    r8d,cl
   0x7ffff7ebee1f <iswalnum+79>:	mov    ecx,r8d
   0x7ffff7ebee22 <iswalnum+82>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebee25 <iswalnum+85>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebee29 <iswalnum+89>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebee2c <iswalnum+92>:	test   ecx,ecx
   0x7ffff7ebee2e <iswalnum+94>:	je     0x7ffff7ebee46 <iswalnum+118>
   0x7ffff7ebee30 <iswalnum+96>:	mov    eax,edx
   0x7ffff7ebee32 <iswalnum+98>:	shr    eax,0x5
   0x7ffff7ebee35 <iswalnum+101>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebee38 <iswalnum+104>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebee3c <iswalnum+108>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebee3f <iswalnum+111>:	mov    ecx,edx
   0x7ffff7ebee41 <iswalnum+113>:	shr    eax,cl
   0x7ffff7ebee43 <iswalnum+115>:	and    eax,0x1
   0x7ffff7ebee46 <iswalnum+118>:	ret
   0x7ffff7ebee47 <iswalnum+119>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebee50 <iswalnum+128>:	mov    rax,QWORD PTR [rip+0xeefa1]        # 0x7ffff7faddf8
   0x7ffff7ebee57 <iswalnum+135>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebee5b <iswalnum+139>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebee5f <iswalnum+143>:	and    eax,0x8
   0x7ffff7ebee62 <iswalnum+146>:	ret
   0x7ffff7ebee63:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebee6e:	xchg   ax,ax
   0x7ffff7ebee70 <iswalpha>:	endbr64
   0x7ffff7ebee74 <iswalpha+4>:	mov    edx,edi
   0x7ffff7ebee76 <iswalpha+6>:	test   edx,0xffffff80
   0x7ffff7ebee7c <iswalpha+12>:	je     0x7ffff7ebeef0 <iswalpha+128>
   0x7ffff7ebee7e <iswalpha+14>:	mov    rax,QWORD PTR [rip+0xef0eb]        # 0x7ffff7fadf70
   0x7ffff7ebee85 <iswalpha+21>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebee89 <iswalpha+25>:	mov    rcx,QWORD PTR [rax]
   0x7ffff7ebee8c <iswalpha+28>:	mov    eax,DWORD PTR [rcx+0xc8]
   0x7ffff7ebee92 <iswalpha+34>:	add    eax,0x2
   0x7ffff7ebee95 <iswalpha+37>:	movzx  eax,ax
   0x7ffff7ebee98 <iswalpha+40>:	mov    rsi,QWORD PTR [rcx+rax*8+0x40]
   0x7ffff7ebee9d <iswalpha+45>:	mov    eax,edx
   0x7ffff7ebee9f <iswalpha+47>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebeea1 <iswalpha+49>:	shr    eax,cl
   0x7ffff7ebeea3 <iswalpha+51>:	mov    ecx,eax
   0x7ffff7ebeea5 <iswalpha+53>:	xor    eax,eax
   0x7ffff7ebeea7 <iswalpha+55>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebeeaa <iswalpha+58>:	jae    0x7ffff7ebeee6 <iswalpha+118>
   0x7ffff7ebeeac <iswalpha+60>:	add    ecx,0x5
   0x7ffff7ebeeaf <iswalpha+63>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebeeb2 <iswalpha+66>:	test   edi,edi
   0x7ffff7ebeeb4 <iswalpha+68>:	je     0x7ffff7ebeee6 <iswalpha+118>
   0x7ffff7ebeeb6 <iswalpha+70>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebeeb9 <iswalpha+73>:	mov    r8d,edx
   0x7ffff7ebeebc <iswalpha+76>:	shr    r8d,cl
   0x7ffff7ebeebf <iswalpha+79>:	mov    ecx,r8d
   0x7ffff7ebeec2 <iswalpha+82>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebeec5 <iswalpha+85>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebeec9 <iswalpha+89>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebeecc <iswalpha+92>:	test   ecx,ecx
   0x7ffff7ebeece <iswalpha+94>:	je     0x7ffff7ebeee6 <iswalpha+118>
   0x7ffff7ebeed0 <iswalpha+96>:	mov    eax,edx
   0x7ffff7ebeed2 <iswalpha+98>:	shr    eax,0x5
   0x7ffff7ebeed5 <iswalpha+101>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebeed8 <iswalpha+104>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebeedc <iswalpha+108>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebeedf <iswalpha+111>:	mov    ecx,edx
   0x7ffff7ebeee1 <iswalpha+113>:	shr    eax,cl
   0x7ffff7ebeee3 <iswalpha+115>:	and    eax,0x1
   0x7ffff7ebeee6 <iswalpha+118>:	ret
   0x7ffff7ebeee7 <iswalpha+119>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebeef0 <iswalpha+128>:	mov    rax,QWORD PTR [rip+0xeef01]        # 0x7ffff7faddf8
   0x7ffff7ebeef7 <iswalpha+135>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebeefb <iswalpha+139>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebeeff <iswalpha+143>:	and    eax,0x400
   0x7ffff7ebef04 <iswalpha+148>:	ret
   0x7ffff7ebef05:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebef10 <iswblank>:	endbr64
   0x7ffff7ebef14 <iswblank+4>:	mov    edx,edi
   0x7ffff7ebef16 <iswblank+6>:	test   edx,0xffffff80
   0x7ffff7ebef1c <iswblank+12>:	je     0x7ffff7ebef90 <iswblank+128>
   0x7ffff7ebef1e <iswblank+14>:	mov    rax,QWORD PTR [rip+0xef04b]        # 0x7ffff7fadf70
   0x7ffff7ebef25 <iswblank+21>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebef29 <iswblank+25>:	mov    rcx,QWORD PTR [rax]
   0x7ffff7ebef2c <iswblank+28>:	mov    eax,DWORD PTR [rcx+0xc8]
   0x7ffff7ebef32 <iswblank+34>:	add    eax,0x8
   0x7ffff7ebef35 <iswblank+37>:	movzx  eax,ax
   0x7ffff7ebef38 <iswblank+40>:	mov    rsi,QWORD PTR [rcx+rax*8+0x40]
   0x7ffff7ebef3d <iswblank+45>:	mov    eax,edx
   0x7ffff7ebef3f <iswblank+47>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebef41 <iswblank+49>:	shr    eax,cl
   0x7ffff7ebef43 <iswblank+51>:	mov    ecx,eax
   0x7ffff7ebef45 <iswblank+53>:	xor    eax,eax
   0x7ffff7ebef47 <iswblank+55>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebef4a <iswblank+58>:	jae    0x7ffff7ebef86 <iswblank+118>
   0x7ffff7ebef4c <iswblank+60>:	add    ecx,0x5
   0x7ffff7ebef4f <iswblank+63>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebef52 <iswblank+66>:	test   edi,edi
   0x7ffff7ebef54 <iswblank+68>:	je     0x7ffff7ebef86 <iswblank+118>
   0x7ffff7ebef56 <iswblank+70>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebef59 <iswblank+73>:	mov    r8d,edx
   0x7ffff7ebef5c <iswblank+76>:	shr    r8d,cl
   0x7ffff7ebef5f <iswblank+79>:	mov    ecx,r8d
   0x7ffff7ebef62 <iswblank+82>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebef65 <iswblank+85>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebef69 <iswblank+89>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebef6c <iswblank+92>:	test   ecx,ecx
   0x7ffff7ebef6e <iswblank+94>:	je     0x7ffff7ebef86 <iswblank+118>
   0x7ffff7ebef70 <iswblank+96>:	mov    eax,edx
   0x7ffff7ebef72 <iswblank+98>:	shr    eax,0x5
   0x7ffff7ebef75 <iswblank+101>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebef78 <iswblank+104>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebef7c <iswblank+108>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebef7f <iswblank+111>:	mov    ecx,edx
   0x7ffff7ebef81 <iswblank+113>:	shr    eax,cl
   0x7ffff7ebef83 <iswblank+115>:	and    eax,0x1
   0x7ffff7ebef86 <iswblank+118>:	ret
   0x7ffff7ebef87 <iswblank+119>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebef90 <iswblank+128>:	mov    rax,QWORD PTR [rip+0xeee61]        # 0x7ffff7faddf8
   0x7ffff7ebef97 <iswblank+135>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebef9b <iswblank+139>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebef9f <iswblank+143>:	and    eax,0x1
   0x7ffff7ebefa2 <iswblank+146>:	ret
   0x7ffff7ebefa3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebefae:	xchg   ax,ax
   0x7ffff7ebefb0 <iswcntrl>:	endbr64
   0x7ffff7ebefb4 <iswcntrl+4>:	mov    edx,edi
   0x7ffff7ebefb6 <iswcntrl+6>:	test   edx,0xffffff80
   0x7ffff7ebefbc <iswcntrl+12>:	je     0x7ffff7ebf030 <iswcntrl+128>
   0x7ffff7ebefbe <iswcntrl+14>:	mov    rax,QWORD PTR [rip+0xeefab]        # 0x7ffff7fadf70
   0x7ffff7ebefc5 <iswcntrl+21>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebefc9 <iswcntrl+25>:	mov    rcx,QWORD PTR [rax]
   0x7ffff7ebefcc <iswcntrl+28>:	mov    eax,DWORD PTR [rcx+0xc8]
   0x7ffff7ebefd2 <iswcntrl+34>:	add    eax,0x9
   0x7ffff7ebefd5 <iswcntrl+37>:	movzx  eax,ax
   0x7ffff7ebefd8 <iswcntrl+40>:	mov    rsi,QWORD PTR [rcx+rax*8+0x40]
   0x7ffff7ebefdd <iswcntrl+45>:	mov    eax,edx
   0x7ffff7ebefdf <iswcntrl+47>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebefe1 <iswcntrl+49>:	shr    eax,cl
   0x7ffff7ebefe3 <iswcntrl+51>:	mov    ecx,eax
   0x7ffff7ebefe5 <iswcntrl+53>:	xor    eax,eax
   0x7ffff7ebefe7 <iswcntrl+55>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebefea <iswcntrl+58>:	jae    0x7ffff7ebf026 <iswcntrl+118>
   0x7ffff7ebefec <iswcntrl+60>:	add    ecx,0x5
   0x7ffff7ebefef <iswcntrl+63>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebeff2 <iswcntrl+66>:	test   edi,edi
   0x7ffff7ebeff4 <iswcntrl+68>:	je     0x7ffff7ebf026 <iswcntrl+118>
   0x7ffff7ebeff6 <iswcntrl+70>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebeff9 <iswcntrl+73>:	mov    r8d,edx
   0x7ffff7ebeffc <iswcntrl+76>:	shr    r8d,cl
   0x7ffff7ebefff <iswcntrl+79>:	mov    ecx,r8d
   0x7ffff7ebf002 <iswcntrl+82>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebf005 <iswcntrl+85>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebf009 <iswcntrl+89>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebf00c <iswcntrl+92>:	test   ecx,ecx
   0x7ffff7ebf00e <iswcntrl+94>:	je     0x7ffff7ebf026 <iswcntrl+118>
   0x7ffff7ebf010 <iswcntrl+96>:	mov    eax,edx
   0x7ffff7ebf012 <iswcntrl+98>:	shr    eax,0x5
   0x7ffff7ebf015 <iswcntrl+101>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebf018 <iswcntrl+104>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebf01c <iswcntrl+108>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebf01f <iswcntrl+111>:	mov    ecx,edx
   0x7ffff7ebf021 <iswcntrl+113>:	shr    eax,cl
   0x7ffff7ebf023 <iswcntrl+115>:	and    eax,0x1
   0x7ffff7ebf026 <iswcntrl+118>:	ret
   0x7ffff7ebf027 <iswcntrl+119>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf030 <iswcntrl+128>:	mov    rax,QWORD PTR [rip+0xeedc1]        # 0x7ffff7faddf8
   0x7ffff7ebf037 <iswcntrl+135>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf03b <iswcntrl+139>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebf03f <iswcntrl+143>:	and    eax,0x2
   0x7ffff7ebf042 <iswcntrl+146>:	ret
   0x7ffff7ebf043:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf04e:	xchg   ax,ax
   0x7ffff7ebf050 <iswdigit>:	endbr64
   0x7ffff7ebf054 <iswdigit+4>:	mov    edx,edi
   0x7ffff7ebf056 <iswdigit+6>:	test   edi,0xffffff80
   0x7ffff7ebf05c <iswdigit+12>:	je     0x7ffff7ebf0d0 <iswdigit+128>
   0x7ffff7ebf05e <iswdigit+14>:	mov    rax,QWORD PTR [rip+0xeef0b]        # 0x7ffff7fadf70
   0x7ffff7ebf065 <iswdigit+21>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf069 <iswdigit+25>:	mov    rcx,QWORD PTR [rax]
   0x7ffff7ebf06c <iswdigit+28>:	mov    eax,DWORD PTR [rcx+0xc8]
   0x7ffff7ebf072 <iswdigit+34>:	add    eax,0x3
   0x7ffff7ebf075 <iswdigit+37>:	movzx  eax,ax
   0x7ffff7ebf078 <iswdigit+40>:	mov    rsi,QWORD PTR [rcx+rax*8+0x40]
   0x7ffff7ebf07d <iswdigit+45>:	mov    eax,edi
   0x7ffff7ebf07f <iswdigit+47>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebf081 <iswdigit+49>:	shr    eax,cl
   0x7ffff7ebf083 <iswdigit+51>:	mov    ecx,eax
   0x7ffff7ebf085 <iswdigit+53>:	xor    eax,eax
   0x7ffff7ebf087 <iswdigit+55>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebf08a <iswdigit+58>:	jae    0x7ffff7ebf0c6 <iswdigit+118>
   0x7ffff7ebf08c <iswdigit+60>:	add    ecx,0x5
   0x7ffff7ebf08f <iswdigit+63>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebf092 <iswdigit+66>:	test   edi,edi
   0x7ffff7ebf094 <iswdigit+68>:	je     0x7ffff7ebf0c6 <iswdigit+118>
   0x7ffff7ebf096 <iswdigit+70>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebf099 <iswdigit+73>:	mov    r8d,edx
   0x7ffff7ebf09c <iswdigit+76>:	shr    r8d,cl
   0x7ffff7ebf09f <iswdigit+79>:	mov    ecx,r8d
   0x7ffff7ebf0a2 <iswdigit+82>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebf0a5 <iswdigit+85>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebf0a9 <iswdigit+89>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebf0ac <iswdigit+92>:	test   ecx,ecx
   0x7ffff7ebf0ae <iswdigit+94>:	je     0x7ffff7ebf0c6 <iswdigit+118>
   0x7ffff7ebf0b0 <iswdigit+96>:	mov    eax,edx
   0x7ffff7ebf0b2 <iswdigit+98>:	shr    eax,0x5
   0x7ffff7ebf0b5 <iswdigit+101>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebf0b8 <iswdigit+104>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebf0bc <iswdigit+108>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebf0bf <iswdigit+111>:	mov    ecx,edx
   0x7ffff7ebf0c1 <iswdigit+113>:	shr    eax,cl
   0x7ffff7ebf0c3 <iswdigit+115>:	and    eax,0x1
   0x7ffff7ebf0c6 <iswdigit+118>:	ret
   0x7ffff7ebf0c7 <iswdigit+119>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf0d0 <iswdigit+128>:	sub    edx,0x30
   0x7ffff7ebf0d3 <iswdigit+131>:	xor    eax,eax
   0x7ffff7ebf0d5 <iswdigit+133>:	cmp    edx,0x9
   0x7ffff7ebf0d8 <iswdigit+136>:	setbe  al
   0x7ffff7ebf0db <iswdigit+139>:	ret
   0x7ffff7ebf0dc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebf0e0 <iswlower>:	endbr64
   0x7ffff7ebf0e4 <iswlower+4>:	mov    edx,edi
   0x7ffff7ebf0e6 <iswlower+6>:	test   edx,0xffffff80
   0x7ffff7ebf0ec <iswlower+12>:	je     0x7ffff7ebf160 <iswlower+128>
   0x7ffff7ebf0ee <iswlower+14>:	mov    rax,QWORD PTR [rip+0xeee7b]        # 0x7ffff7fadf70
   0x7ffff7ebf0f5 <iswlower+21>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf0f9 <iswlower+25>:	mov    rcx,QWORD PTR [rax]
   0x7ffff7ebf0fc <iswlower+28>:	mov    eax,DWORD PTR [rcx+0xc8]
   0x7ffff7ebf102 <iswlower+34>:	add    eax,0x1
   0x7ffff7ebf105 <iswlower+37>:	movzx  eax,ax
   0x7ffff7ebf108 <iswlower+40>:	mov    rsi,QWORD PTR [rcx+rax*8+0x40]
   0x7ffff7ebf10d <iswlower+45>:	mov    eax,edx
   0x7ffff7ebf10f <iswlower+47>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebf111 <iswlower+49>:	shr    eax,cl
   0x7ffff7ebf113 <iswlower+51>:	mov    ecx,eax
   0x7ffff7ebf115 <iswlower+53>:	xor    eax,eax
   0x7ffff7ebf117 <iswlower+55>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebf11a <iswlower+58>:	jae    0x7ffff7ebf156 <iswlower+118>
   0x7ffff7ebf11c <iswlower+60>:	add    ecx,0x5
   0x7ffff7ebf11f <iswlower+63>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebf122 <iswlower+66>:	test   edi,edi
   0x7ffff7ebf124 <iswlower+68>:	je     0x7ffff7ebf156 <iswlower+118>
   0x7ffff7ebf126 <iswlower+70>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebf129 <iswlower+73>:	mov    r8d,edx
   0x7ffff7ebf12c <iswlower+76>:	shr    r8d,cl
   0x7ffff7ebf12f <iswlower+79>:	mov    ecx,r8d
   0x7ffff7ebf132 <iswlower+82>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebf135 <iswlower+85>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebf139 <iswlower+89>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebf13c <iswlower+92>:	test   ecx,ecx
   0x7ffff7ebf13e <iswlower+94>:	je     0x7ffff7ebf156 <iswlower+118>
   0x7ffff7ebf140 <iswlower+96>:	mov    eax,edx
   0x7ffff7ebf142 <iswlower+98>:	shr    eax,0x5
   0x7ffff7ebf145 <iswlower+101>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebf148 <iswlower+104>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebf14c <iswlower+108>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebf14f <iswlower+111>:	mov    ecx,edx
   0x7ffff7ebf151 <iswlower+113>:	shr    eax,cl
   0x7ffff7ebf153 <iswlower+115>:	and    eax,0x1
   0x7ffff7ebf156 <iswlower+118>:	ret
   0x7ffff7ebf157 <iswlower+119>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf160 <iswlower+128>:	mov    rax,QWORD PTR [rip+0xeec91]        # 0x7ffff7faddf8
   0x7ffff7ebf167 <iswlower+135>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf16b <iswlower+139>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebf16f <iswlower+143>:	and    eax,0x200
   0x7ffff7ebf174 <iswlower+148>:	ret
   0x7ffff7ebf175:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf180 <iswgraph>:	endbr64
   0x7ffff7ebf184 <iswgraph+4>:	mov    edx,edi
   0x7ffff7ebf186 <iswgraph+6>:	test   edx,0xffffff80
   0x7ffff7ebf18c <iswgraph+12>:	je     0x7ffff7ebf200 <iswgraph+128>
   0x7ffff7ebf18e <iswgraph+14>:	mov    rax,QWORD PTR [rip+0xeeddb]        # 0x7ffff7fadf70
   0x7ffff7ebf195 <iswgraph+21>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf199 <iswgraph+25>:	mov    rcx,QWORD PTR [rax]
   0x7ffff7ebf19c <iswgraph+28>:	mov    eax,DWORD PTR [rcx+0xc8]
   0x7ffff7ebf1a2 <iswgraph+34>:	add    eax,0x7
   0x7ffff7ebf1a5 <iswgraph+37>:	movzx  eax,ax
   0x7ffff7ebf1a8 <iswgraph+40>:	mov    rsi,QWORD PTR [rcx+rax*8+0x40]
   0x7ffff7ebf1ad <iswgraph+45>:	mov    eax,edx
   0x7ffff7ebf1af <iswgraph+47>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebf1b1 <iswgraph+49>:	shr    eax,cl
   0x7ffff7ebf1b3 <iswgraph+51>:	mov    ecx,eax
   0x7ffff7ebf1b5 <iswgraph+53>:	xor    eax,eax
   0x7ffff7ebf1b7 <iswgraph+55>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebf1ba <iswgraph+58>:	jae    0x7ffff7ebf1f6 <iswgraph+118>
   0x7ffff7ebf1bc <iswgraph+60>:	add    ecx,0x5
   0x7ffff7ebf1bf <iswgraph+63>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebf1c2 <iswgraph+66>:	test   edi,edi
   0x7ffff7ebf1c4 <iswgraph+68>:	je     0x7ffff7ebf1f6 <iswgraph+118>
   0x7ffff7ebf1c6 <iswgraph+70>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebf1c9 <iswgraph+73>:	mov    r8d,edx
   0x7ffff7ebf1cc <iswgraph+76>:	shr    r8d,cl
   0x7ffff7ebf1cf <iswgraph+79>:	mov    ecx,r8d
   0x7ffff7ebf1d2 <iswgraph+82>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebf1d5 <iswgraph+85>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebf1d9 <iswgraph+89>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebf1dc <iswgraph+92>:	test   ecx,ecx
   0x7ffff7ebf1de <iswgraph+94>:	je     0x7ffff7ebf1f6 <iswgraph+118>
   0x7ffff7ebf1e0 <iswgraph+96>:	mov    eax,edx
   0x7ffff7ebf1e2 <iswgraph+98>:	shr    eax,0x5
   0x7ffff7ebf1e5 <iswgraph+101>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebf1e8 <iswgraph+104>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebf1ec <iswgraph+108>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebf1ef <iswgraph+111>:	mov    ecx,edx
   0x7ffff7ebf1f1 <iswgraph+113>:	shr    eax,cl
   0x7ffff7ebf1f3 <iswgraph+115>:	and    eax,0x1
   0x7ffff7ebf1f6 <iswgraph+118>:	ret
   0x7ffff7ebf1f7 <iswgraph+119>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf200 <iswgraph+128>:	mov    rax,QWORD PTR [rip+0xeebf1]        # 0x7ffff7faddf8
   0x7ffff7ebf207 <iswgraph+135>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf20b <iswgraph+139>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebf20f <iswgraph+143>:	and    eax,0x8000
   0x7ffff7ebf214 <iswgraph+148>:	ret
   0x7ffff7ebf215:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf220 <iswprint>:	endbr64
   0x7ffff7ebf224 <iswprint+4>:	mov    edx,edi
   0x7ffff7ebf226 <iswprint+6>:	test   edx,0xffffff80
   0x7ffff7ebf22c <iswprint+12>:	je     0x7ffff7ebf2a0 <iswprint+128>
   0x7ffff7ebf22e <iswprint+14>:	mov    rax,QWORD PTR [rip+0xeed3b]        # 0x7ffff7fadf70
   0x7ffff7ebf235 <iswprint+21>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf239 <iswprint+25>:	mov    rcx,QWORD PTR [rax]
   0x7ffff7ebf23c <iswprint+28>:	mov    eax,DWORD PTR [rcx+0xc8]
   0x7ffff7ebf242 <iswprint+34>:	add    eax,0x6
   0x7ffff7ebf245 <iswprint+37>:	movzx  eax,ax
   0x7ffff7ebf248 <iswprint+40>:	mov    rsi,QWORD PTR [rcx+rax*8+0x40]
   0x7ffff7ebf24d <iswprint+45>:	mov    eax,edx
   0x7ffff7ebf24f <iswprint+47>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebf251 <iswprint+49>:	shr    eax,cl
   0x7ffff7ebf253 <iswprint+51>:	mov    ecx,eax
   0x7ffff7ebf255 <iswprint+53>:	xor    eax,eax
   0x7ffff7ebf257 <iswprint+55>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebf25a <iswprint+58>:	jae    0x7ffff7ebf296 <iswprint+118>
   0x7ffff7ebf25c <iswprint+60>:	add    ecx,0x5
   0x7ffff7ebf25f <iswprint+63>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebf262 <iswprint+66>:	test   edi,edi
   0x7ffff7ebf264 <iswprint+68>:	je     0x7ffff7ebf296 <iswprint+118>
   0x7ffff7ebf266 <iswprint+70>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebf269 <iswprint+73>:	mov    r8d,edx
   0x7ffff7ebf26c <iswprint+76>:	shr    r8d,cl
   0x7ffff7ebf26f <iswprint+79>:	mov    ecx,r8d
   0x7ffff7ebf272 <iswprint+82>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebf275 <iswprint+85>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebf279 <iswprint+89>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebf27c <iswprint+92>:	test   ecx,ecx
   0x7ffff7ebf27e <iswprint+94>:	je     0x7ffff7ebf296 <iswprint+118>
   0x7ffff7ebf280 <iswprint+96>:	mov    eax,edx
   0x7ffff7ebf282 <iswprint+98>:	shr    eax,0x5
   0x7ffff7ebf285 <iswprint+101>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebf288 <iswprint+104>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebf28c <iswprint+108>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebf28f <iswprint+111>:	mov    ecx,edx
   0x7ffff7ebf291 <iswprint+113>:	shr    eax,cl
   0x7ffff7ebf293 <iswprint+115>:	and    eax,0x1
   0x7ffff7ebf296 <iswprint+118>:	ret
   0x7ffff7ebf297 <iswprint+119>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf2a0 <iswprint+128>:	mov    rax,QWORD PTR [rip+0xeeb51]        # 0x7ffff7faddf8
   0x7ffff7ebf2a7 <iswprint+135>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf2ab <iswprint+139>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebf2af <iswprint+143>:	and    eax,0x4000
   0x7ffff7ebf2b4 <iswprint+148>:	ret
   0x7ffff7ebf2b5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf2c0 <iswpunct>:	endbr64
   0x7ffff7ebf2c4 <iswpunct+4>:	mov    edx,edi
   0x7ffff7ebf2c6 <iswpunct+6>:	test   edx,0xffffff80
   0x7ffff7ebf2cc <iswpunct+12>:	je     0x7ffff7ebf340 <iswpunct+128>
   0x7ffff7ebf2ce <iswpunct+14>:	mov    rax,QWORD PTR [rip+0xeec9b]        # 0x7ffff7fadf70
   0x7ffff7ebf2d5 <iswpunct+21>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf2d9 <iswpunct+25>:	mov    rcx,QWORD PTR [rax]
   0x7ffff7ebf2dc <iswpunct+28>:	mov    eax,DWORD PTR [rcx+0xc8]
   0x7ffff7ebf2e2 <iswpunct+34>:	add    eax,0xa
   0x7ffff7ebf2e5 <iswpunct+37>:	movzx  eax,ax
   0x7ffff7ebf2e8 <iswpunct+40>:	mov    rsi,QWORD PTR [rcx+rax*8+0x40]
   0x7ffff7ebf2ed <iswpunct+45>:	mov    eax,edx
   0x7ffff7ebf2ef <iswpunct+47>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebf2f1 <iswpunct+49>:	shr    eax,cl
   0x7ffff7ebf2f3 <iswpunct+51>:	mov    ecx,eax
   0x7ffff7ebf2f5 <iswpunct+53>:	xor    eax,eax
   0x7ffff7ebf2f7 <iswpunct+55>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebf2fa <iswpunct+58>:	jae    0x7ffff7ebf336 <iswpunct+118>
   0x7ffff7ebf2fc <iswpunct+60>:	add    ecx,0x5
   0x7ffff7ebf2ff <iswpunct+63>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebf302 <iswpunct+66>:	test   edi,edi
   0x7ffff7ebf304 <iswpunct+68>:	je     0x7ffff7ebf336 <iswpunct+118>
   0x7ffff7ebf306 <iswpunct+70>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebf309 <iswpunct+73>:	mov    r8d,edx
   0x7ffff7ebf30c <iswpunct+76>:	shr    r8d,cl
   0x7ffff7ebf30f <iswpunct+79>:	mov    ecx,r8d
   0x7ffff7ebf312 <iswpunct+82>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebf315 <iswpunct+85>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebf319 <iswpunct+89>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebf31c <iswpunct+92>:	test   ecx,ecx
   0x7ffff7ebf31e <iswpunct+94>:	je     0x7ffff7ebf336 <iswpunct+118>
   0x7ffff7ebf320 <iswpunct+96>:	mov    eax,edx
   0x7ffff7ebf322 <iswpunct+98>:	shr    eax,0x5
   0x7ffff7ebf325 <iswpunct+101>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebf328 <iswpunct+104>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebf32c <iswpunct+108>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebf32f <iswpunct+111>:	mov    ecx,edx
   0x7ffff7ebf331 <iswpunct+113>:	shr    eax,cl
   0x7ffff7ebf333 <iswpunct+115>:	and    eax,0x1
   0x7ffff7ebf336 <iswpunct+118>:	ret
   0x7ffff7ebf337 <iswpunct+119>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf340 <iswpunct+128>:	mov    rax,QWORD PTR [rip+0xeeab1]        # 0x7ffff7faddf8
   0x7ffff7ebf347 <iswpunct+135>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf34b <iswpunct+139>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebf34f <iswpunct+143>:	and    eax,0x4
   0x7ffff7ebf352 <iswpunct+146>:	ret
   0x7ffff7ebf353:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf35e:	xchg   ax,ax
   0x7ffff7ebf360 <iswspace>:	endbr64
   0x7ffff7ebf364 <iswspace+4>:	mov    edx,edi
   0x7ffff7ebf366 <iswspace+6>:	test   edx,0xffffff80
   0x7ffff7ebf36c <iswspace+12>:	je     0x7ffff7ebf3e0 <iswspace+128>
   0x7ffff7ebf36e <iswspace+14>:	mov    rax,QWORD PTR [rip+0xeebfb]        # 0x7ffff7fadf70
   0x7ffff7ebf375 <iswspace+21>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf379 <iswspace+25>:	mov    rcx,QWORD PTR [rax]
   0x7ffff7ebf37c <iswspace+28>:	mov    eax,DWORD PTR [rcx+0xc8]
   0x7ffff7ebf382 <iswspace+34>:	add    eax,0x5
   0x7ffff7ebf385 <iswspace+37>:	movzx  eax,ax
   0x7ffff7ebf388 <iswspace+40>:	mov    rsi,QWORD PTR [rcx+rax*8+0x40]
   0x7ffff7ebf38d <iswspace+45>:	mov    eax,edx
   0x7ffff7ebf38f <iswspace+47>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebf391 <iswspace+49>:	shr    eax,cl
   0x7ffff7ebf393 <iswspace+51>:	mov    ecx,eax
   0x7ffff7ebf395 <iswspace+53>:	xor    eax,eax
   0x7ffff7ebf397 <iswspace+55>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebf39a <iswspace+58>:	jae    0x7ffff7ebf3d6 <iswspace+118>
   0x7ffff7ebf39c <iswspace+60>:	add    ecx,0x5
   0x7ffff7ebf39f <iswspace+63>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebf3a2 <iswspace+66>:	test   edi,edi
   0x7ffff7ebf3a4 <iswspace+68>:	je     0x7ffff7ebf3d6 <iswspace+118>
   0x7ffff7ebf3a6 <iswspace+70>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebf3a9 <iswspace+73>:	mov    r8d,edx
   0x7ffff7ebf3ac <iswspace+76>:	shr    r8d,cl
   0x7ffff7ebf3af <iswspace+79>:	mov    ecx,r8d
   0x7ffff7ebf3b2 <iswspace+82>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebf3b5 <iswspace+85>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebf3b9 <iswspace+89>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebf3bc <iswspace+92>:	test   ecx,ecx
   0x7ffff7ebf3be <iswspace+94>:	je     0x7ffff7ebf3d6 <iswspace+118>
   0x7ffff7ebf3c0 <iswspace+96>:	mov    eax,edx
   0x7ffff7ebf3c2 <iswspace+98>:	shr    eax,0x5
   0x7ffff7ebf3c5 <iswspace+101>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebf3c8 <iswspace+104>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebf3cc <iswspace+108>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebf3cf <iswspace+111>:	mov    ecx,edx
   0x7ffff7ebf3d1 <iswspace+113>:	shr    eax,cl
   0x7ffff7ebf3d3 <iswspace+115>:	and    eax,0x1
   0x7ffff7ebf3d6 <iswspace+118>:	ret
   0x7ffff7ebf3d7 <iswspace+119>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf3e0 <iswspace+128>:	mov    rax,QWORD PTR [rip+0xeea11]        # 0x7ffff7faddf8
   0x7ffff7ebf3e7 <iswspace+135>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf3eb <iswspace+139>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebf3ef <iswspace+143>:	and    eax,0x2000
   0x7ffff7ebf3f4 <iswspace+148>:	ret
   0x7ffff7ebf3f5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf400 <iswupper>:	endbr64
   0x7ffff7ebf404 <iswupper+4>:	mov    edx,edi
   0x7ffff7ebf406 <iswupper+6>:	test   edx,0xffffff80
   0x7ffff7ebf40c <iswupper+12>:	je     0x7ffff7ebf478 <iswupper+120>
   0x7ffff7ebf40e <iswupper+14>:	mov    rax,QWORD PTR [rip+0xeeb5b]        # 0x7ffff7fadf70
   0x7ffff7ebf415 <iswupper+21>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf419 <iswupper+25>:	mov    rax,QWORD PTR [rax]
   0x7ffff7ebf41c <iswupper+28>:	movzx  ecx,WORD PTR [rax+0xc8]
   0x7ffff7ebf423 <iswupper+35>:	mov    rsi,QWORD PTR [rax+rcx*8+0x40]
   0x7ffff7ebf428 <iswupper+40>:	mov    eax,edx
   0x7ffff7ebf42a <iswupper+42>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebf42c <iswupper+44>:	shr    eax,cl
   0x7ffff7ebf42e <iswupper+46>:	mov    ecx,eax
   0x7ffff7ebf430 <iswupper+48>:	xor    eax,eax
   0x7ffff7ebf432 <iswupper+50>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebf435 <iswupper+53>:	jae    0x7ffff7ebf471 <iswupper+113>
   0x7ffff7ebf437 <iswupper+55>:	add    ecx,0x5
   0x7ffff7ebf43a <iswupper+58>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebf43d <iswupper+61>:	test   edi,edi
   0x7ffff7ebf43f <iswupper+63>:	je     0x7ffff7ebf471 <iswupper+113>
   0x7ffff7ebf441 <iswupper+65>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebf444 <iswupper+68>:	mov    r8d,edx
   0x7ffff7ebf447 <iswupper+71>:	shr    r8d,cl
   0x7ffff7ebf44a <iswupper+74>:	mov    ecx,r8d
   0x7ffff7ebf44d <iswupper+77>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebf450 <iswupper+80>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebf454 <iswupper+84>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebf457 <iswupper+87>:	test   ecx,ecx
   0x7ffff7ebf459 <iswupper+89>:	je     0x7ffff7ebf471 <iswupper+113>
   0x7ffff7ebf45b <iswupper+91>:	mov    eax,edx
   0x7ffff7ebf45d <iswupper+93>:	shr    eax,0x5
   0x7ffff7ebf460 <iswupper+96>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebf463 <iswupper+99>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebf467 <iswupper+103>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebf46a <iswupper+106>:	mov    ecx,edx
   0x7ffff7ebf46c <iswupper+108>:	shr    eax,cl
   0x7ffff7ebf46e <iswupper+110>:	and    eax,0x1
   0x7ffff7ebf471 <iswupper+113>:	ret
   0x7ffff7ebf472 <iswupper+114>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf478 <iswupper+120>:	mov    rax,QWORD PTR [rip+0xee979]        # 0x7ffff7faddf8
   0x7ffff7ebf47f <iswupper+127>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf483 <iswupper+131>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebf487 <iswupper+135>:	and    eax,0x100
   0x7ffff7ebf48c <iswupper+140>:	ret
   0x7ffff7ebf48d:	nop    DWORD PTR [rax]
   0x7ffff7ebf490 <iswxdigit>:	endbr64
   0x7ffff7ebf494 <iswxdigit+4>:	mov    edx,edi
   0x7ffff7ebf496 <iswxdigit+6>:	test   edx,0xffffff80
   0x7ffff7ebf49c <iswxdigit+12>:	je     0x7ffff7ebf510 <iswxdigit+128>
   0x7ffff7ebf49e <iswxdigit+14>:	mov    rax,QWORD PTR [rip+0xeeacb]        # 0x7ffff7fadf70
   0x7ffff7ebf4a5 <iswxdigit+21>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf4a9 <iswxdigit+25>:	mov    rcx,QWORD PTR [rax]
   0x7ffff7ebf4ac <iswxdigit+28>:	mov    eax,DWORD PTR [rcx+0xc8]
   0x7ffff7ebf4b2 <iswxdigit+34>:	add    eax,0x4
   0x7ffff7ebf4b5 <iswxdigit+37>:	movzx  eax,ax
   0x7ffff7ebf4b8 <iswxdigit+40>:	mov    rsi,QWORD PTR [rcx+rax*8+0x40]
   0x7ffff7ebf4bd <iswxdigit+45>:	mov    eax,edx
   0x7ffff7ebf4bf <iswxdigit+47>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebf4c1 <iswxdigit+49>:	shr    eax,cl
   0x7ffff7ebf4c3 <iswxdigit+51>:	mov    ecx,eax
   0x7ffff7ebf4c5 <iswxdigit+53>:	xor    eax,eax
   0x7ffff7ebf4c7 <iswxdigit+55>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebf4ca <iswxdigit+58>:	jae    0x7ffff7ebf506 <iswxdigit+118>
   0x7ffff7ebf4cc <iswxdigit+60>:	add    ecx,0x5
   0x7ffff7ebf4cf <iswxdigit+63>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebf4d2 <iswxdigit+66>:	test   edi,edi
   0x7ffff7ebf4d4 <iswxdigit+68>:	je     0x7ffff7ebf506 <iswxdigit+118>
   0x7ffff7ebf4d6 <iswxdigit+70>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebf4d9 <iswxdigit+73>:	mov    r8d,edx
   0x7ffff7ebf4dc <iswxdigit+76>:	shr    r8d,cl
   0x7ffff7ebf4df <iswxdigit+79>:	mov    ecx,r8d
   0x7ffff7ebf4e2 <iswxdigit+82>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebf4e5 <iswxdigit+85>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebf4e9 <iswxdigit+89>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebf4ec <iswxdigit+92>:	test   ecx,ecx
   0x7ffff7ebf4ee <iswxdigit+94>:	je     0x7ffff7ebf506 <iswxdigit+118>
   0x7ffff7ebf4f0 <iswxdigit+96>:	mov    eax,edx
   0x7ffff7ebf4f2 <iswxdigit+98>:	shr    eax,0x5
   0x7ffff7ebf4f5 <iswxdigit+101>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebf4f8 <iswxdigit+104>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebf4fc <iswxdigit+108>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebf4ff <iswxdigit+111>:	mov    ecx,edx
   0x7ffff7ebf501 <iswxdigit+113>:	shr    eax,cl
   0x7ffff7ebf503 <iswxdigit+115>:	and    eax,0x1
   0x7ffff7ebf506 <iswxdigit+118>:	ret
   0x7ffff7ebf507 <iswxdigit+119>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf510 <iswxdigit+128>:	mov    rax,QWORD PTR [rip+0xee8e1]        # 0x7ffff7faddf8
   0x7ffff7ebf517 <iswxdigit+135>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf51b <iswxdigit+139>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebf51f <iswxdigit+143>:	and    eax,0x1000
   0x7ffff7ebf524 <iswxdigit+148>:	ret
   0x7ffff7ebf525:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf530 <towlower>:	endbr64
   0x7ffff7ebf534 <towlower+4>:	mov    rax,QWORD PTR [rip+0xeea35]        # 0x7ffff7fadf70
   0x7ffff7ebf53b <towlower+11>:	mov    r8d,edi
   0x7ffff7ebf53e <towlower+14>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf542 <towlower+18>:	mov    rdx,QWORD PTR [rax]
   0x7ffff7ebf545 <towlower+21>:	mov    eax,DWORD PTR [rdx+0xd0]
   0x7ffff7ebf54b <towlower+27>:	add    eax,0x1
   0x7ffff7ebf54e <towlower+30>:	movzx  eax,ax
   0x7ffff7ebf551 <towlower+33>:	mov    rax,QWORD PTR [rdx+rax*8+0x40]
   0x7ffff7ebf556 <towlower+38>:	mov    edx,edi
   0x7ffff7ebf558 <towlower+40>:	mov    ecx,DWORD PTR [rax]
   0x7ffff7ebf55a <towlower+42>:	shr    edx,cl
   0x7ffff7ebf55c <towlower+44>:	cmp    edx,DWORD PTR [rax+0x4]
   0x7ffff7ebf55f <towlower+47>:	jae    0x7ffff7ebf582 <towlower+82>
   0x7ffff7ebf561 <towlower+49>:	add    edx,0x5
   0x7ffff7ebf564 <towlower+52>:	mov    edx,DWORD PTR [rax+rdx*4]
   0x7ffff7ebf567 <towlower+55>:	test   edx,edx
   0x7ffff7ebf569 <towlower+57>:	je     0x7ffff7ebf582 <towlower+82>
   0x7ffff7ebf56b <towlower+59>:	mov    ecx,DWORD PTR [rax+0x8]
   0x7ffff7ebf56e <towlower+62>:	mov    esi,edi
   0x7ffff7ebf570 <towlower+64>:	shr    esi,cl
   0x7ffff7ebf572 <towlower+66>:	mov    ecx,esi
   0x7ffff7ebf574 <towlower+68>:	and    ecx,DWORD PTR [rax+0xc]
   0x7ffff7ebf577 <towlower+71>:	lea    rcx,[rax+rcx*4]
   0x7ffff7ebf57b <towlower+75>:	mov    edx,DWORD PTR [rcx+rdx*1]
   0x7ffff7ebf57e <towlower+78>:	test   edx,edx
   0x7ffff7ebf580 <towlower+80>:	jne    0x7ffff7ebf590 <towlower+96>
   0x7ffff7ebf582 <towlower+82>:	mov    eax,r8d
   0x7ffff7ebf585 <towlower+85>:	ret
   0x7ffff7ebf586 <towlower+86>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf590 <towlower+96>:	mov    ecx,edi
   0x7ffff7ebf592 <towlower+98>:	and    ecx,DWORD PTR [rax+0x10]
   0x7ffff7ebf595 <towlower+101>:	lea    rax,[rax+rcx*4]
   0x7ffff7ebf599 <towlower+105>:	add    r8d,DWORD PTR [rax+rdx*1]
   0x7ffff7ebf59d <towlower+109>:	jmp    0x7ffff7ebf582 <towlower+82>
   0x7ffff7ebf59f:	nop
   0x7ffff7ebf5a0 <towupper>:	endbr64
   0x7ffff7ebf5a4 <towupper+4>:	mov    rdx,QWORD PTR [rip+0xee9c5]        # 0x7ffff7fadf70
   0x7ffff7ebf5ab <towupper+11>:	mov    esi,edi
   0x7ffff7ebf5ad <towupper+13>:	mov    eax,edi
   0x7ffff7ebf5af <towupper+15>:	mov    rdx,QWORD PTR fs:[rdx]
   0x7ffff7ebf5b3 <towupper+19>:	mov    rdx,QWORD PTR [rdx]
   0x7ffff7ebf5b6 <towupper+22>:	movzx  ecx,WORD PTR [rdx+0xd0]
   0x7ffff7ebf5bd <towupper+29>:	mov    rdx,QWORD PTR [rdx+rcx*8+0x40]
   0x7ffff7ebf5c2 <towupper+34>:	mov    ecx,DWORD PTR [rdx]
   0x7ffff7ebf5c4 <towupper+36>:	shr    esi,cl
   0x7ffff7ebf5c6 <towupper+38>:	mov    ecx,esi
   0x7ffff7ebf5c8 <towupper+40>:	cmp    esi,DWORD PTR [rdx+0x4]
   0x7ffff7ebf5cb <towupper+43>:	jae    0x7ffff7ebf5ec <towupper+76>
   0x7ffff7ebf5cd <towupper+45>:	add    ecx,0x5
   0x7ffff7ebf5d0 <towupper+48>:	mov    esi,DWORD PTR [rdx+rcx*4]
   0x7ffff7ebf5d3 <towupper+51>:	test   esi,esi
   0x7ffff7ebf5d5 <towupper+53>:	je     0x7ffff7ebf5ec <towupper+76>
   0x7ffff7ebf5d7 <towupper+55>:	mov    ecx,DWORD PTR [rdx+0x8]
   0x7ffff7ebf5da <towupper+58>:	shr    edi,cl
   0x7ffff7ebf5dc <towupper+60>:	mov    ecx,edi
   0x7ffff7ebf5de <towupper+62>:	and    ecx,DWORD PTR [rdx+0xc]
   0x7ffff7ebf5e1 <towupper+65>:	lea    rcx,[rdx+rcx*4]
   0x7ffff7ebf5e5 <towupper+69>:	mov    ecx,DWORD PTR [rcx+rsi*1]
   0x7ffff7ebf5e8 <towupper+72>:	test   ecx,ecx
   0x7ffff7ebf5ea <towupper+74>:	jne    0x7ffff7ebf5f0 <towupper+80>
   0x7ffff7ebf5ec <towupper+76>:	ret
   0x7ffff7ebf5ed <towupper+77>:	nop    DWORD PTR [rax]
   0x7ffff7ebf5f0 <towupper+80>:	mov    esi,eax
   0x7ffff7ebf5f2 <towupper+82>:	and    esi,DWORD PTR [rdx+0x10]
   0x7ffff7ebf5f5 <towupper+85>:	lea    rdx,[rdx+rsi*4]
   0x7ffff7ebf5f9 <towupper+89>:	add    eax,DWORD PTR [rdx+rcx*1]
   0x7ffff7ebf5fc <towupper+92>:	ret
   0x7ffff7ebf5fd:	nop    DWORD PTR [rax]
   0x7ffff7ebf600 <wctype>:	endbr64
   0x7ffff7ebf604 <wctype+4>:	push   r15
   0x7ffff7ebf606 <wctype+6>:	push   r14
   0x7ffff7ebf608 <wctype+8>:	push   r13
   0x7ffff7ebf60a <wctype+10>:	mov    r13,rdi
   0x7ffff7ebf60d <wctype+13>:	push   r12
   0x7ffff7ebf60f <wctype+15>:	push   rbp
   0x7ffff7ebf610 <wctype+16>:	xor    ebp,ebp
   0x7ffff7ebf612 <wctype+18>:	push   rbx
   0x7ffff7ebf613 <wctype+19>:	sub    rsp,0x8
   0x7ffff7ebf617 <wctype+23>:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7ebf61c <wctype+28>:	mov    r12,rax
   0x7ffff7ebf61f <wctype+31>:	mov    rax,QWORD PTR [rip+0xee94a]        # 0x7ffff7fadf70
   0x7ffff7ebf626 <wctype+38>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf62a <wctype+42>:	mov    r14,QWORD PTR [rax]
   0x7ffff7ebf62d <wctype+45>:	mov    r15,QWORD PTR [r14+0x90]
   0x7ffff7ebf634 <wctype+52>:	jmp    0x7ffff7ebf64e <wctype+78>
   0x7ffff7ebf636 <wctype+54>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf640 <wctype+64>:	lea    r15,[r15+rbx*1+0x1]
   0x7ffff7ebf645 <wctype+69>:	cmp    BYTE PTR [r15],0x0
   0x7ffff7ebf649 <wctype+73>:	je     0x7ffff7ebf690 <wctype+144>
   0x7ffff7ebf64b <wctype+75>:	add    ebp,0x1
   0x7ffff7ebf64e <wctype+78>:	mov    rdi,r15
   0x7ffff7ebf651 <wctype+81>:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7ebf656 <wctype+86>:	mov    rbx,rax
   0x7ffff7ebf659 <wctype+89>:	cmp    r12,rax
   0x7ffff7ebf65c <wctype+92>:	jne    0x7ffff7ebf640 <wctype+64>
   0x7ffff7ebf65e <wctype+94>:	mov    rdx,r12
   0x7ffff7ebf661 <wctype+97>:	mov    rsi,r15
   0x7ffff7ebf664 <wctype+100>:	mov    rdi,r13
   0x7ffff7ebf667 <wctype+103>:	call   0x7ffff7dbd520 <*ABS*+0xa9500@plt>
   0x7ffff7ebf66c <wctype+108>:	test   eax,eax
   0x7ffff7ebf66e <wctype+110>:	jne    0x7ffff7ebf640 <wctype+64>
   0x7ffff7ebf670 <wctype+112>:	add    ebp,DWORD PTR [r14+0xc8]
   0x7ffff7ebf677 <wctype+119>:	mov    rax,QWORD PTR [r14+rbp*8+0x40]
   0x7ffff7ebf67c <wctype+124>:	add    rsp,0x8
   0x7ffff7ebf680 <wctype+128>:	pop    rbx
   0x7ffff7ebf681 <wctype+129>:	pop    rbp
   0x7ffff7ebf682 <wctype+130>:	pop    r12
   0x7ffff7ebf684 <wctype+132>:	pop    r13
   0x7ffff7ebf686 <wctype+134>:	pop    r14
   0x7ffff7ebf688 <wctype+136>:	pop    r15
   0x7ffff7ebf68a <wctype+138>:	ret
   0x7ffff7ebf68b <wctype+139>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf690 <wctype+144>:	add    rsp,0x8
   0x7ffff7ebf694 <wctype+148>:	xor    eax,eax
   0x7ffff7ebf696 <wctype+150>:	pop    rbx
   0x7ffff7ebf697 <wctype+151>:	pop    rbp
   0x7ffff7ebf698 <wctype+152>:	pop    r12
   0x7ffff7ebf69a <wctype+154>:	pop    r13
   0x7ffff7ebf69c <wctype+156>:	pop    r14
   0x7ffff7ebf69e <wctype+158>:	pop    r15
   0x7ffff7ebf6a0 <wctype+160>:	ret
   0x7ffff7ebf6a1:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf6ab:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf6b0 <iswctype>:	endbr64
   0x7ffff7ebf6b4 <iswctype+4>:	mov    rdx,rsi
   0x7ffff7ebf6b7 <iswctype+7>:	xor    eax,eax
   0x7ffff7ebf6b9 <iswctype+9>:	test   rsi,rsi
   0x7ffff7ebf6bc <iswctype+12>:	je     0x7ffff7ebf705 <iswctype+85>
   0x7ffff7ebf6be <iswctype+14>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebf6c0 <iswctype+16>:	mov    esi,edi
   0x7ffff7ebf6c2 <iswctype+18>:	shr    esi,cl
   0x7ffff7ebf6c4 <iswctype+20>:	mov    ecx,esi
   0x7ffff7ebf6c6 <iswctype+22>:	cmp    esi,DWORD PTR [rdx+0x4]
   0x7ffff7ebf6c9 <iswctype+25>:	jae    0x7ffff7ebf705 <iswctype+85>
   0x7ffff7ebf6cb <iswctype+27>:	add    ecx,0x5
   0x7ffff7ebf6ce <iswctype+30>:	mov    esi,DWORD PTR [rdx+rcx*4]
   0x7ffff7ebf6d1 <iswctype+33>:	test   esi,esi
   0x7ffff7ebf6d3 <iswctype+35>:	je     0x7ffff7ebf705 <iswctype+85>
   0x7ffff7ebf6d5 <iswctype+37>:	mov    ecx,DWORD PTR [rdx+0x8]
   0x7ffff7ebf6d8 <iswctype+40>:	mov    r8d,edi
   0x7ffff7ebf6db <iswctype+43>:	shr    r8d,cl
   0x7ffff7ebf6de <iswctype+46>:	mov    ecx,r8d
   0x7ffff7ebf6e1 <iswctype+49>:	and    ecx,DWORD PTR [rdx+0xc]
   0x7ffff7ebf6e4 <iswctype+52>:	lea    rcx,[rdx+rcx*4]
   0x7ffff7ebf6e8 <iswctype+56>:	mov    ecx,DWORD PTR [rcx+rsi*1]
   0x7ffff7ebf6eb <iswctype+59>:	test   ecx,ecx
   0x7ffff7ebf6ed <iswctype+61>:	je     0x7ffff7ebf705 <iswctype+85>
   0x7ffff7ebf6ef <iswctype+63>:	mov    eax,edi
   0x7ffff7ebf6f1 <iswctype+65>:	shr    eax,0x5
   0x7ffff7ebf6f4 <iswctype+68>:	and    eax,DWORD PTR [rdx+0x10]
   0x7ffff7ebf6f7 <iswctype+71>:	lea    rax,[rdx+rax*4]
   0x7ffff7ebf6fb <iswctype+75>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebf6fe <iswctype+78>:	mov    ecx,edi
   0x7ffff7ebf700 <iswctype+80>:	shr    eax,cl
   0x7ffff7ebf702 <iswctype+82>:	and    eax,0x1
   0x7ffff7ebf705 <iswctype+85>:	ret
   0x7ffff7ebf706:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf710 <wctrans>:	endbr64
   0x7ffff7ebf714 <wctrans+4>:	push   r13
   0x7ffff7ebf716 <wctrans+6>:	push   r12
   0x7ffff7ebf718 <wctrans+8>:	push   rbp
   0x7ffff7ebf719 <wctrans+9>:	push   rbx
   0x7ffff7ebf71a <wctrans+10>:	sub    rsp,0x8
   0x7ffff7ebf71e <wctrans+14>:	mov    rax,QWORD PTR [rip+0xee84b]        # 0x7ffff7fadf70
   0x7ffff7ebf725 <wctrans+21>:	mov    rax,QWORD PTR fs:[rax]
   0x7ffff7ebf729 <wctrans+25>:	mov    r13,QWORD PTR [rax]
   0x7ffff7ebf72c <wctrans+28>:	mov    rbx,QWORD PTR [r13+0x98]
   0x7ffff7ebf733 <wctrans+35>:	cmp    BYTE PTR [rbx],0x0
   0x7ffff7ebf736 <wctrans+38>:	je     0x7ffff7ebf788 <wctrans+120>
   0x7ffff7ebf738 <wctrans+40>:	mov    r12,rdi
   0x7ffff7ebf73b <wctrans+43>:	xor    ebp,ebp
   0x7ffff7ebf73d <wctrans+45>:	jmp    0x7ffff7ebf756 <wctrans+70>
   0x7ffff7ebf73f <wctrans+47>:	nop
   0x7ffff7ebf740 <wctrans+48>:	mov    rdi,rbx
   0x7ffff7ebf743 <wctrans+51>:	add    rbp,0x1
   0x7ffff7ebf747 <wctrans+55>:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7ebf74c <wctrans+60>:	lea    rbx,[rbx+rax*1+0x1]
   0x7ffff7ebf751 <wctrans+65>:	cmp    BYTE PTR [rbx],0x0
   0x7ffff7ebf754 <wctrans+68>:	je     0x7ffff7ebf788 <wctrans+120>
   0x7ffff7ebf756 <wctrans+70>:	mov    rsi,rbx
   0x7ffff7ebf759 <wctrans+73>:	mov    rdi,r12
   0x7ffff7ebf75c <wctrans+76>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7ebf761 <wctrans+81>:	test   eax,eax
   0x7ffff7ebf763 <wctrans+83>:	jne    0x7ffff7ebf740 <wctrans+48>
   0x7ffff7ebf765 <wctrans+85>:	mov    eax,DWORD PTR [r13+0xd0]
   0x7ffff7ebf76c <wctrans+92>:	lea    rax,[rbp+rax*1+0x8]
   0x7ffff7ebf771 <wctrans+97>:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   0x7ffff7ebf776 <wctrans+102>:	add    rsp,0x8
   0x7ffff7ebf77a <wctrans+106>:	pop    rbx
   0x7ffff7ebf77b <wctrans+107>:	pop    rbp
   0x7ffff7ebf77c <wctrans+108>:	pop    r12
   0x7ffff7ebf77e <wctrans+110>:	pop    r13
   0x7ffff7ebf780 <wctrans+112>:	ret
   0x7ffff7ebf781 <wctrans+113>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebf788 <wctrans+120>:	add    rsp,0x8
   0x7ffff7ebf78c <wctrans+124>:	xor    eax,eax
   0x7ffff7ebf78e <wctrans+126>:	pop    rbx
   0x7ffff7ebf78f <wctrans+127>:	pop    rbp
   0x7ffff7ebf790 <wctrans+128>:	pop    r12
   0x7ffff7ebf792 <wctrans+130>:	pop    r13
   0x7ffff7ebf794 <wctrans+132>:	ret
   0x7ffff7ebf795:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf79f:	nop
   0x7ffff7ebf7a0 <towctrans>:	endbr64
   0x7ffff7ebf7a4 <towctrans+4>:	mov    eax,edi
   0x7ffff7ebf7a6 <towctrans+6>:	test   rsi,rsi
   0x7ffff7ebf7a9 <towctrans+9>:	je     0x7ffff7ebf7d5 <towctrans+53>
   0x7ffff7ebf7ab <towctrans+11>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebf7ad <towctrans+13>:	mov    edx,edi
   0x7ffff7ebf7af <towctrans+15>:	shr    edx,cl
   0x7ffff7ebf7b1 <towctrans+17>:	cmp    edx,DWORD PTR [rsi+0x4]
   0x7ffff7ebf7b4 <towctrans+20>:	jae    0x7ffff7ebf7d5 <towctrans+53>
   0x7ffff7ebf7b6 <towctrans+22>:	add    edx,0x5
   0x7ffff7ebf7b9 <towctrans+25>:	mov    edx,DWORD PTR [rsi+rdx*4]
   0x7ffff7ebf7bc <towctrans+28>:	test   edx,edx
   0x7ffff7ebf7be <towctrans+30>:	je     0x7ffff7ebf7d5 <towctrans+53>
   0x7ffff7ebf7c0 <towctrans+32>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebf7c3 <towctrans+35>:	shr    edi,cl
   0x7ffff7ebf7c5 <towctrans+37>:	mov    ecx,edi
   0x7ffff7ebf7c7 <towctrans+39>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebf7ca <towctrans+42>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebf7ce <towctrans+46>:	mov    edx,DWORD PTR [rcx+rdx*1]
   0x7ffff7ebf7d1 <towctrans+49>:	test   edx,edx
   0x7ffff7ebf7d3 <towctrans+51>:	jne    0x7ffff7ebf7e0 <towctrans+64>
   0x7ffff7ebf7d5 <towctrans+53>:	ret
   0x7ffff7ebf7d6 <towctrans+54>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebf7e0 <towctrans+64>:	mov    ecx,eax
   0x7ffff7ebf7e2 <towctrans+66>:	and    ecx,DWORD PTR [rsi+0x10]
   0x7ffff7ebf7e5 <towctrans+69>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebf7e9 <towctrans+73>:	add    eax,DWORD PTR [rcx+rdx*1]
   0x7ffff7ebf7ec <towctrans+76>:	ret
   0x7ffff7ebf7ed:	nop    DWORD PTR [rax]
   0x7ffff7ebf7f0 <iswalnum_l>:	endbr64
   0x7ffff7ebf7f4 <iswalnum_l+4>:	mov    edx,edi
   0x7ffff7ebf7f6 <iswalnum_l+6>:	test   edx,0xffffff80
   0x7ffff7ebf7fc <iswalnum_l+12>:	je     0x7ffff7ebf860 <iswalnum_l+112>
   0x7ffff7ebf7fe <iswalnum_l+14>:	mov    rax,QWORD PTR [rsi]
   0x7ffff7ebf801 <iswalnum_l+17>:	mov    ecx,DWORD PTR [rax+0xc8]
   0x7ffff7ebf807 <iswalnum_l+23>:	add    ecx,0xb
   0x7ffff7ebf80a <iswalnum_l+26>:	mov    rsi,QWORD PTR [rax+rcx*8+0x40]
   0x7ffff7ebf80f <iswalnum_l+31>:	mov    eax,edx
   0x7ffff7ebf811 <iswalnum_l+33>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebf813 <iswalnum_l+35>:	shr    eax,cl
   0x7ffff7ebf815 <iswalnum_l+37>:	mov    ecx,eax
   0x7ffff7ebf817 <iswalnum_l+39>:	xor    eax,eax
   0x7ffff7ebf819 <iswalnum_l+41>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebf81c <iswalnum_l+44>:	jae    0x7ffff7ebf858 <iswalnum_l+104>
   0x7ffff7ebf81e <iswalnum_l+46>:	add    ecx,0x5
   0x7ffff7ebf821 <iswalnum_l+49>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebf824 <iswalnum_l+52>:	test   edi,edi
   0x7ffff7ebf826 <iswalnum_l+54>:	je     0x7ffff7ebf858 <iswalnum_l+104>
   0x7ffff7ebf828 <iswalnum_l+56>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebf82b <iswalnum_l+59>:	mov    r8d,edx
   0x7ffff7ebf82e <iswalnum_l+62>:	shr    r8d,cl
   0x7ffff7ebf831 <iswalnum_l+65>:	mov    ecx,r8d
   0x7ffff7ebf834 <iswalnum_l+68>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebf837 <iswalnum_l+71>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebf83b <iswalnum_l+75>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebf83e <iswalnum_l+78>:	test   ecx,ecx
   0x7ffff7ebf840 <iswalnum_l+80>:	je     0x7ffff7ebf858 <iswalnum_l+104>
   0x7ffff7ebf842 <iswalnum_l+82>:	mov    eax,edx
   0x7ffff7ebf844 <iswalnum_l+84>:	shr    eax,0x5
   0x7ffff7ebf847 <iswalnum_l+87>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebf84a <iswalnum_l+90>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebf84e <iswalnum_l+94>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebf851 <iswalnum_l+97>:	mov    ecx,edx
   0x7ffff7ebf853 <iswalnum_l+99>:	shr    eax,cl
   0x7ffff7ebf855 <iswalnum_l+101>:	and    eax,0x1
   0x7ffff7ebf858 <iswalnum_l+104>:	ret
   0x7ffff7ebf859 <iswalnum_l+105>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebf860 <iswalnum_l+112>:	mov    rax,QWORD PTR [rsi+0x68]
   0x7ffff7ebf864 <iswalnum_l+116>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebf868 <iswalnum_l+120>:	and    eax,0x8
   0x7ffff7ebf86b <iswalnum_l+123>:	ret
   0x7ffff7ebf86c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebf870 <iswalpha_l>:	endbr64
   0x7ffff7ebf874 <iswalpha_l+4>:	mov    edx,edi
   0x7ffff7ebf876 <iswalpha_l+6>:	test   edx,0xffffff80
   0x7ffff7ebf87c <iswalpha_l+12>:	je     0x7ffff7ebf8e0 <iswalpha_l+112>
   0x7ffff7ebf87e <iswalpha_l+14>:	mov    rax,QWORD PTR [rsi]
   0x7ffff7ebf881 <iswalpha_l+17>:	mov    ecx,DWORD PTR [rax+0xc8]
   0x7ffff7ebf887 <iswalpha_l+23>:	add    ecx,0x2
   0x7ffff7ebf88a <iswalpha_l+26>:	mov    rsi,QWORD PTR [rax+rcx*8+0x40]
   0x7ffff7ebf88f <iswalpha_l+31>:	mov    eax,edx
   0x7ffff7ebf891 <iswalpha_l+33>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebf893 <iswalpha_l+35>:	shr    eax,cl
   0x7ffff7ebf895 <iswalpha_l+37>:	mov    ecx,eax
   0x7ffff7ebf897 <iswalpha_l+39>:	xor    eax,eax
   0x7ffff7ebf899 <iswalpha_l+41>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebf89c <iswalpha_l+44>:	jae    0x7ffff7ebf8d8 <iswalpha_l+104>
   0x7ffff7ebf89e <iswalpha_l+46>:	add    ecx,0x5
   0x7ffff7ebf8a1 <iswalpha_l+49>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebf8a4 <iswalpha_l+52>:	test   edi,edi
   0x7ffff7ebf8a6 <iswalpha_l+54>:	je     0x7ffff7ebf8d8 <iswalpha_l+104>
   0x7ffff7ebf8a8 <iswalpha_l+56>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebf8ab <iswalpha_l+59>:	mov    r8d,edx
   0x7ffff7ebf8ae <iswalpha_l+62>:	shr    r8d,cl
   0x7ffff7ebf8b1 <iswalpha_l+65>:	mov    ecx,r8d
   0x7ffff7ebf8b4 <iswalpha_l+68>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebf8b7 <iswalpha_l+71>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebf8bb <iswalpha_l+75>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebf8be <iswalpha_l+78>:	test   ecx,ecx
   0x7ffff7ebf8c0 <iswalpha_l+80>:	je     0x7ffff7ebf8d8 <iswalpha_l+104>
   0x7ffff7ebf8c2 <iswalpha_l+82>:	mov    eax,edx
   0x7ffff7ebf8c4 <iswalpha_l+84>:	shr    eax,0x5
   0x7ffff7ebf8c7 <iswalpha_l+87>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebf8ca <iswalpha_l+90>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebf8ce <iswalpha_l+94>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebf8d1 <iswalpha_l+97>:	mov    ecx,edx
   0x7ffff7ebf8d3 <iswalpha_l+99>:	shr    eax,cl
   0x7ffff7ebf8d5 <iswalpha_l+101>:	and    eax,0x1
   0x7ffff7ebf8d8 <iswalpha_l+104>:	ret
   0x7ffff7ebf8d9 <iswalpha_l+105>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebf8e0 <iswalpha_l+112>:	mov    rax,QWORD PTR [rsi+0x68]
   0x7ffff7ebf8e4 <iswalpha_l+116>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebf8e8 <iswalpha_l+120>:	and    eax,0x400
   0x7ffff7ebf8ed <iswalpha_l+125>:	ret
   0x7ffff7ebf8ee:	xchg   ax,ax
   0x7ffff7ebf8f0 <iswblank_l>:	endbr64
   0x7ffff7ebf8f4 <iswblank_l+4>:	mov    edx,edi
   0x7ffff7ebf8f6 <iswblank_l+6>:	test   edx,0xffffff80
   0x7ffff7ebf8fc <iswblank_l+12>:	je     0x7ffff7ebf960 <iswblank_l+112>
   0x7ffff7ebf8fe <iswblank_l+14>:	mov    rax,QWORD PTR [rsi]
   0x7ffff7ebf901 <iswblank_l+17>:	mov    ecx,DWORD PTR [rax+0xc8]
   0x7ffff7ebf907 <iswblank_l+23>:	add    ecx,0x8
   0x7ffff7ebf90a <iswblank_l+26>:	mov    rsi,QWORD PTR [rax+rcx*8+0x40]
   0x7ffff7ebf90f <iswblank_l+31>:	mov    eax,edx
   0x7ffff7ebf911 <iswblank_l+33>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebf913 <iswblank_l+35>:	shr    eax,cl
   0x7ffff7ebf915 <iswblank_l+37>:	mov    ecx,eax
   0x7ffff7ebf917 <iswblank_l+39>:	xor    eax,eax
   0x7ffff7ebf919 <iswblank_l+41>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebf91c <iswblank_l+44>:	jae    0x7ffff7ebf958 <iswblank_l+104>
   0x7ffff7ebf91e <iswblank_l+46>:	add    ecx,0x5
   0x7ffff7ebf921 <iswblank_l+49>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebf924 <iswblank_l+52>:	test   edi,edi
   0x7ffff7ebf926 <iswblank_l+54>:	je     0x7ffff7ebf958 <iswblank_l+104>
   0x7ffff7ebf928 <iswblank_l+56>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebf92b <iswblank_l+59>:	mov    r8d,edx
   0x7ffff7ebf92e <iswblank_l+62>:	shr    r8d,cl
   0x7ffff7ebf931 <iswblank_l+65>:	mov    ecx,r8d
   0x7ffff7ebf934 <iswblank_l+68>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebf937 <iswblank_l+71>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebf93b <iswblank_l+75>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebf93e <iswblank_l+78>:	test   ecx,ecx
   0x7ffff7ebf940 <iswblank_l+80>:	je     0x7ffff7ebf958 <iswblank_l+104>
   0x7ffff7ebf942 <iswblank_l+82>:	mov    eax,edx
   0x7ffff7ebf944 <iswblank_l+84>:	shr    eax,0x5
   0x7ffff7ebf947 <iswblank_l+87>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebf94a <iswblank_l+90>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebf94e <iswblank_l+94>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebf951 <iswblank_l+97>:	mov    ecx,edx
   0x7ffff7ebf953 <iswblank_l+99>:	shr    eax,cl
   0x7ffff7ebf955 <iswblank_l+101>:	and    eax,0x1
   0x7ffff7ebf958 <iswblank_l+104>:	ret
   0x7ffff7ebf959 <iswblank_l+105>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebf960 <iswblank_l+112>:	mov    rax,QWORD PTR [rsi+0x68]
   0x7ffff7ebf964 <iswblank_l+116>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebf968 <iswblank_l+120>:	and    eax,0x1
   0x7ffff7ebf96b <iswblank_l+123>:	ret
   0x7ffff7ebf96c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebf970 <iswcntrl_l>:	endbr64
   0x7ffff7ebf974 <iswcntrl_l+4>:	mov    edx,edi
   0x7ffff7ebf976 <iswcntrl_l+6>:	test   edx,0xffffff80
   0x7ffff7ebf97c <iswcntrl_l+12>:	je     0x7ffff7ebf9e0 <iswcntrl_l+112>
   0x7ffff7ebf97e <iswcntrl_l+14>:	mov    rax,QWORD PTR [rsi]
   0x7ffff7ebf981 <iswcntrl_l+17>:	mov    ecx,DWORD PTR [rax+0xc8]
   0x7ffff7ebf987 <iswcntrl_l+23>:	add    ecx,0x9
   0x7ffff7ebf98a <iswcntrl_l+26>:	mov    rsi,QWORD PTR [rax+rcx*8+0x40]
   0x7ffff7ebf98f <iswcntrl_l+31>:	mov    eax,edx
   0x7ffff7ebf991 <iswcntrl_l+33>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebf993 <iswcntrl_l+35>:	shr    eax,cl
   0x7ffff7ebf995 <iswcntrl_l+37>:	mov    ecx,eax
   0x7ffff7ebf997 <iswcntrl_l+39>:	xor    eax,eax
   0x7ffff7ebf999 <iswcntrl_l+41>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebf99c <iswcntrl_l+44>:	jae    0x7ffff7ebf9d8 <iswcntrl_l+104>
   0x7ffff7ebf99e <iswcntrl_l+46>:	add    ecx,0x5
   0x7ffff7ebf9a1 <iswcntrl_l+49>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebf9a4 <iswcntrl_l+52>:	test   edi,edi
   0x7ffff7ebf9a6 <iswcntrl_l+54>:	je     0x7ffff7ebf9d8 <iswcntrl_l+104>
   0x7ffff7ebf9a8 <iswcntrl_l+56>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebf9ab <iswcntrl_l+59>:	mov    r8d,edx
   0x7ffff7ebf9ae <iswcntrl_l+62>:	shr    r8d,cl
   0x7ffff7ebf9b1 <iswcntrl_l+65>:	mov    ecx,r8d
   0x7ffff7ebf9b4 <iswcntrl_l+68>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebf9b7 <iswcntrl_l+71>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebf9bb <iswcntrl_l+75>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebf9be <iswcntrl_l+78>:	test   ecx,ecx
   0x7ffff7ebf9c0 <iswcntrl_l+80>:	je     0x7ffff7ebf9d8 <iswcntrl_l+104>
   0x7ffff7ebf9c2 <iswcntrl_l+82>:	mov    eax,edx
   0x7ffff7ebf9c4 <iswcntrl_l+84>:	shr    eax,0x5
   0x7ffff7ebf9c7 <iswcntrl_l+87>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebf9ca <iswcntrl_l+90>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebf9ce <iswcntrl_l+94>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebf9d1 <iswcntrl_l+97>:	mov    ecx,edx
   0x7ffff7ebf9d3 <iswcntrl_l+99>:	shr    eax,cl
   0x7ffff7ebf9d5 <iswcntrl_l+101>:	and    eax,0x1
   0x7ffff7ebf9d8 <iswcntrl_l+104>:	ret
   0x7ffff7ebf9d9 <iswcntrl_l+105>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebf9e0 <iswcntrl_l+112>:	mov    rax,QWORD PTR [rsi+0x68]
   0x7ffff7ebf9e4 <iswcntrl_l+116>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebf9e8 <iswcntrl_l+120>:	and    eax,0x2
   0x7ffff7ebf9eb <iswcntrl_l+123>:	ret
   0x7ffff7ebf9ec:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebf9f0 <iswdigit_l>:	endbr64
   0x7ffff7ebf9f4 <iswdigit_l+4>:	mov    edx,edi
   0x7ffff7ebf9f6 <iswdigit_l+6>:	test   edi,0xffffff80
   0x7ffff7ebf9fc <iswdigit_l+12>:	je     0x7ffff7ebfa60 <iswdigit_l+112>
   0x7ffff7ebf9fe <iswdigit_l+14>:	mov    rax,QWORD PTR [rsi]
   0x7ffff7ebfa01 <iswdigit_l+17>:	mov    ecx,DWORD PTR [rax+0xc8]
   0x7ffff7ebfa07 <iswdigit_l+23>:	add    ecx,0x3
   0x7ffff7ebfa0a <iswdigit_l+26>:	mov    rsi,QWORD PTR [rax+rcx*8+0x40]
   0x7ffff7ebfa0f <iswdigit_l+31>:	mov    eax,edi
   0x7ffff7ebfa11 <iswdigit_l+33>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebfa13 <iswdigit_l+35>:	shr    eax,cl
   0x7ffff7ebfa15 <iswdigit_l+37>:	mov    ecx,eax
   0x7ffff7ebfa17 <iswdigit_l+39>:	xor    eax,eax
   0x7ffff7ebfa19 <iswdigit_l+41>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebfa1c <iswdigit_l+44>:	jae    0x7ffff7ebfa58 <iswdigit_l+104>
   0x7ffff7ebfa1e <iswdigit_l+46>:	add    ecx,0x5
   0x7ffff7ebfa21 <iswdigit_l+49>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebfa24 <iswdigit_l+52>:	test   edi,edi
   0x7ffff7ebfa26 <iswdigit_l+54>:	je     0x7ffff7ebfa58 <iswdigit_l+104>
   0x7ffff7ebfa28 <iswdigit_l+56>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebfa2b <iswdigit_l+59>:	mov    r8d,edx
   0x7ffff7ebfa2e <iswdigit_l+62>:	shr    r8d,cl
   0x7ffff7ebfa31 <iswdigit_l+65>:	mov    ecx,r8d
   0x7ffff7ebfa34 <iswdigit_l+68>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebfa37 <iswdigit_l+71>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebfa3b <iswdigit_l+75>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebfa3e <iswdigit_l+78>:	test   ecx,ecx
   0x7ffff7ebfa40 <iswdigit_l+80>:	je     0x7ffff7ebfa58 <iswdigit_l+104>
   0x7ffff7ebfa42 <iswdigit_l+82>:	mov    eax,edx
   0x7ffff7ebfa44 <iswdigit_l+84>:	shr    eax,0x5
   0x7ffff7ebfa47 <iswdigit_l+87>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebfa4a <iswdigit_l+90>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebfa4e <iswdigit_l+94>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebfa51 <iswdigit_l+97>:	mov    ecx,edx
   0x7ffff7ebfa53 <iswdigit_l+99>:	shr    eax,cl
   0x7ffff7ebfa55 <iswdigit_l+101>:	and    eax,0x1
   0x7ffff7ebfa58 <iswdigit_l+104>:	ret
   0x7ffff7ebfa59 <iswdigit_l+105>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebfa60 <iswdigit_l+112>:	sub    edx,0x30
   0x7ffff7ebfa63 <iswdigit_l+115>:	xor    eax,eax
   0x7ffff7ebfa65 <iswdigit_l+117>:	cmp    edx,0x9
   0x7ffff7ebfa68 <iswdigit_l+120>:	setbe  al
   0x7ffff7ebfa6b <iswdigit_l+123>:	ret
   0x7ffff7ebfa6c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebfa70 <iswlower_l>:	endbr64
   0x7ffff7ebfa74 <iswlower_l+4>:	mov    edx,edi
   0x7ffff7ebfa76 <iswlower_l+6>:	test   edx,0xffffff80
   0x7ffff7ebfa7c <iswlower_l+12>:	je     0x7ffff7ebfae0 <iswlower_l+112>
   0x7ffff7ebfa7e <iswlower_l+14>:	mov    rax,QWORD PTR [rsi]
   0x7ffff7ebfa81 <iswlower_l+17>:	mov    ecx,DWORD PTR [rax+0xc8]
   0x7ffff7ebfa87 <iswlower_l+23>:	add    ecx,0x1
   0x7ffff7ebfa8a <iswlower_l+26>:	mov    rsi,QWORD PTR [rax+rcx*8+0x40]
   0x7ffff7ebfa8f <iswlower_l+31>:	mov    eax,edx
   0x7ffff7ebfa91 <iswlower_l+33>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebfa93 <iswlower_l+35>:	shr    eax,cl
   0x7ffff7ebfa95 <iswlower_l+37>:	mov    ecx,eax
   0x7ffff7ebfa97 <iswlower_l+39>:	xor    eax,eax
   0x7ffff7ebfa99 <iswlower_l+41>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebfa9c <iswlower_l+44>:	jae    0x7ffff7ebfad8 <iswlower_l+104>
   0x7ffff7ebfa9e <iswlower_l+46>:	add    ecx,0x5
   0x7ffff7ebfaa1 <iswlower_l+49>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebfaa4 <iswlower_l+52>:	test   edi,edi
   0x7ffff7ebfaa6 <iswlower_l+54>:	je     0x7ffff7ebfad8 <iswlower_l+104>
   0x7ffff7ebfaa8 <iswlower_l+56>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebfaab <iswlower_l+59>:	mov    r8d,edx
   0x7ffff7ebfaae <iswlower_l+62>:	shr    r8d,cl
   0x7ffff7ebfab1 <iswlower_l+65>:	mov    ecx,r8d
   0x7ffff7ebfab4 <iswlower_l+68>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebfab7 <iswlower_l+71>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebfabb <iswlower_l+75>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebfabe <iswlower_l+78>:	test   ecx,ecx
   0x7ffff7ebfac0 <iswlower_l+80>:	je     0x7ffff7ebfad8 <iswlower_l+104>
   0x7ffff7ebfac2 <iswlower_l+82>:	mov    eax,edx
   0x7ffff7ebfac4 <iswlower_l+84>:	shr    eax,0x5
   0x7ffff7ebfac7 <iswlower_l+87>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebfaca <iswlower_l+90>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebface <iswlower_l+94>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebfad1 <iswlower_l+97>:	mov    ecx,edx
   0x7ffff7ebfad3 <iswlower_l+99>:	shr    eax,cl
   0x7ffff7ebfad5 <iswlower_l+101>:	and    eax,0x1
   0x7ffff7ebfad8 <iswlower_l+104>:	ret
   0x7ffff7ebfad9 <iswlower_l+105>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebfae0 <iswlower_l+112>:	mov    rax,QWORD PTR [rsi+0x68]
   0x7ffff7ebfae4 <iswlower_l+116>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebfae8 <iswlower_l+120>:	and    eax,0x200
   0x7ffff7ebfaed <iswlower_l+125>:	ret
   0x7ffff7ebfaee:	xchg   ax,ax
   0x7ffff7ebfaf0 <iswgraph_l>:	endbr64
   0x7ffff7ebfaf4 <iswgraph_l+4>:	mov    edx,edi
   0x7ffff7ebfaf6 <iswgraph_l+6>:	test   edx,0xffffff80
   0x7ffff7ebfafc <iswgraph_l+12>:	je     0x7ffff7ebfb60 <iswgraph_l+112>
   0x7ffff7ebfafe <iswgraph_l+14>:	mov    rax,QWORD PTR [rsi]
   0x7ffff7ebfb01 <iswgraph_l+17>:	mov    ecx,DWORD PTR [rax+0xc8]
   0x7ffff7ebfb07 <iswgraph_l+23>:	add    ecx,0x7
   0x7ffff7ebfb0a <iswgraph_l+26>:	mov    rsi,QWORD PTR [rax+rcx*8+0x40]
   0x7ffff7ebfb0f <iswgraph_l+31>:	mov    eax,edx
   0x7ffff7ebfb11 <iswgraph_l+33>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebfb13 <iswgraph_l+35>:	shr    eax,cl
   0x7ffff7ebfb15 <iswgraph_l+37>:	mov    ecx,eax
   0x7ffff7ebfb17 <iswgraph_l+39>:	xor    eax,eax
   0x7ffff7ebfb19 <iswgraph_l+41>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebfb1c <iswgraph_l+44>:	jae    0x7ffff7ebfb58 <iswgraph_l+104>
   0x7ffff7ebfb1e <iswgraph_l+46>:	add    ecx,0x5
   0x7ffff7ebfb21 <iswgraph_l+49>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebfb24 <iswgraph_l+52>:	test   edi,edi
   0x7ffff7ebfb26 <iswgraph_l+54>:	je     0x7ffff7ebfb58 <iswgraph_l+104>
   0x7ffff7ebfb28 <iswgraph_l+56>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebfb2b <iswgraph_l+59>:	mov    r8d,edx
   0x7ffff7ebfb2e <iswgraph_l+62>:	shr    r8d,cl
   0x7ffff7ebfb31 <iswgraph_l+65>:	mov    ecx,r8d
   0x7ffff7ebfb34 <iswgraph_l+68>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebfb37 <iswgraph_l+71>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebfb3b <iswgraph_l+75>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebfb3e <iswgraph_l+78>:	test   ecx,ecx
   0x7ffff7ebfb40 <iswgraph_l+80>:	je     0x7ffff7ebfb58 <iswgraph_l+104>
   0x7ffff7ebfb42 <iswgraph_l+82>:	mov    eax,edx
   0x7ffff7ebfb44 <iswgraph_l+84>:	shr    eax,0x5
   0x7ffff7ebfb47 <iswgraph_l+87>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebfb4a <iswgraph_l+90>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebfb4e <iswgraph_l+94>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebfb51 <iswgraph_l+97>:	mov    ecx,edx
   0x7ffff7ebfb53 <iswgraph_l+99>:	shr    eax,cl
   0x7ffff7ebfb55 <iswgraph_l+101>:	and    eax,0x1
   0x7ffff7ebfb58 <iswgraph_l+104>:	ret
   0x7ffff7ebfb59 <iswgraph_l+105>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebfb60 <iswgraph_l+112>:	mov    rax,QWORD PTR [rsi+0x68]
   0x7ffff7ebfb64 <iswgraph_l+116>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebfb68 <iswgraph_l+120>:	and    eax,0x8000
   0x7ffff7ebfb6d <iswgraph_l+125>:	ret
   0x7ffff7ebfb6e:	xchg   ax,ax
   0x7ffff7ebfb70 <iswprint_l>:	endbr64
   0x7ffff7ebfb74 <iswprint_l+4>:	mov    edx,edi
   0x7ffff7ebfb76 <iswprint_l+6>:	test   edx,0xffffff80
   0x7ffff7ebfb7c <iswprint_l+12>:	je     0x7ffff7ebfbe0 <iswprint_l+112>
   0x7ffff7ebfb7e <iswprint_l+14>:	mov    rax,QWORD PTR [rsi]
   0x7ffff7ebfb81 <iswprint_l+17>:	mov    ecx,DWORD PTR [rax+0xc8]
   0x7ffff7ebfb87 <iswprint_l+23>:	add    ecx,0x6
   0x7ffff7ebfb8a <iswprint_l+26>:	mov    rsi,QWORD PTR [rax+rcx*8+0x40]
   0x7ffff7ebfb8f <iswprint_l+31>:	mov    eax,edx
   0x7ffff7ebfb91 <iswprint_l+33>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebfb93 <iswprint_l+35>:	shr    eax,cl
   0x7ffff7ebfb95 <iswprint_l+37>:	mov    ecx,eax
   0x7ffff7ebfb97 <iswprint_l+39>:	xor    eax,eax
   0x7ffff7ebfb99 <iswprint_l+41>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebfb9c <iswprint_l+44>:	jae    0x7ffff7ebfbd8 <iswprint_l+104>
   0x7ffff7ebfb9e <iswprint_l+46>:	add    ecx,0x5
   0x7ffff7ebfba1 <iswprint_l+49>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebfba4 <iswprint_l+52>:	test   edi,edi
   0x7ffff7ebfba6 <iswprint_l+54>:	je     0x7ffff7ebfbd8 <iswprint_l+104>
   0x7ffff7ebfba8 <iswprint_l+56>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebfbab <iswprint_l+59>:	mov    r8d,edx
   0x7ffff7ebfbae <iswprint_l+62>:	shr    r8d,cl
   0x7ffff7ebfbb1 <iswprint_l+65>:	mov    ecx,r8d
   0x7ffff7ebfbb4 <iswprint_l+68>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebfbb7 <iswprint_l+71>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebfbbb <iswprint_l+75>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebfbbe <iswprint_l+78>:	test   ecx,ecx
   0x7ffff7ebfbc0 <iswprint_l+80>:	je     0x7ffff7ebfbd8 <iswprint_l+104>
   0x7ffff7ebfbc2 <iswprint_l+82>:	mov    eax,edx
   0x7ffff7ebfbc4 <iswprint_l+84>:	shr    eax,0x5
   0x7ffff7ebfbc7 <iswprint_l+87>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebfbca <iswprint_l+90>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebfbce <iswprint_l+94>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebfbd1 <iswprint_l+97>:	mov    ecx,edx
   0x7ffff7ebfbd3 <iswprint_l+99>:	shr    eax,cl
   0x7ffff7ebfbd5 <iswprint_l+101>:	and    eax,0x1
   0x7ffff7ebfbd8 <iswprint_l+104>:	ret
   0x7ffff7ebfbd9 <iswprint_l+105>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebfbe0 <iswprint_l+112>:	mov    rax,QWORD PTR [rsi+0x68]
   0x7ffff7ebfbe4 <iswprint_l+116>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebfbe8 <iswprint_l+120>:	and    eax,0x4000
   0x7ffff7ebfbed <iswprint_l+125>:	ret
   0x7ffff7ebfbee:	xchg   ax,ax
   0x7ffff7ebfbf0 <iswpunct_l>:	endbr64
   0x7ffff7ebfbf4 <iswpunct_l+4>:	mov    edx,edi
   0x7ffff7ebfbf6 <iswpunct_l+6>:	test   edx,0xffffff80
   0x7ffff7ebfbfc <iswpunct_l+12>:	je     0x7ffff7ebfc60 <iswpunct_l+112>
   0x7ffff7ebfbfe <iswpunct_l+14>:	mov    rax,QWORD PTR [rsi]
   0x7ffff7ebfc01 <iswpunct_l+17>:	mov    ecx,DWORD PTR [rax+0xc8]
   0x7ffff7ebfc07 <iswpunct_l+23>:	add    ecx,0xa
   0x7ffff7ebfc0a <iswpunct_l+26>:	mov    rsi,QWORD PTR [rax+rcx*8+0x40]
   0x7ffff7ebfc0f <iswpunct_l+31>:	mov    eax,edx
   0x7ffff7ebfc11 <iswpunct_l+33>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebfc13 <iswpunct_l+35>:	shr    eax,cl
   0x7ffff7ebfc15 <iswpunct_l+37>:	mov    ecx,eax
   0x7ffff7ebfc17 <iswpunct_l+39>:	xor    eax,eax
   0x7ffff7ebfc19 <iswpunct_l+41>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebfc1c <iswpunct_l+44>:	jae    0x7ffff7ebfc58 <iswpunct_l+104>
   0x7ffff7ebfc1e <iswpunct_l+46>:	add    ecx,0x5
   0x7ffff7ebfc21 <iswpunct_l+49>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebfc24 <iswpunct_l+52>:	test   edi,edi
   0x7ffff7ebfc26 <iswpunct_l+54>:	je     0x7ffff7ebfc58 <iswpunct_l+104>
   0x7ffff7ebfc28 <iswpunct_l+56>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebfc2b <iswpunct_l+59>:	mov    r8d,edx
   0x7ffff7ebfc2e <iswpunct_l+62>:	shr    r8d,cl
   0x7ffff7ebfc31 <iswpunct_l+65>:	mov    ecx,r8d
   0x7ffff7ebfc34 <iswpunct_l+68>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebfc37 <iswpunct_l+71>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebfc3b <iswpunct_l+75>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebfc3e <iswpunct_l+78>:	test   ecx,ecx
   0x7ffff7ebfc40 <iswpunct_l+80>:	je     0x7ffff7ebfc58 <iswpunct_l+104>
   0x7ffff7ebfc42 <iswpunct_l+82>:	mov    eax,edx
   0x7ffff7ebfc44 <iswpunct_l+84>:	shr    eax,0x5
   0x7ffff7ebfc47 <iswpunct_l+87>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebfc4a <iswpunct_l+90>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebfc4e <iswpunct_l+94>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebfc51 <iswpunct_l+97>:	mov    ecx,edx
   0x7ffff7ebfc53 <iswpunct_l+99>:	shr    eax,cl
   0x7ffff7ebfc55 <iswpunct_l+101>:	and    eax,0x1
   0x7ffff7ebfc58 <iswpunct_l+104>:	ret
   0x7ffff7ebfc59 <iswpunct_l+105>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebfc60 <iswpunct_l+112>:	mov    rax,QWORD PTR [rsi+0x68]
   0x7ffff7ebfc64 <iswpunct_l+116>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebfc68 <iswpunct_l+120>:	and    eax,0x4
   0x7ffff7ebfc6b <iswpunct_l+123>:	ret
   0x7ffff7ebfc6c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebfc70 <iswspace_l>:	endbr64
   0x7ffff7ebfc74 <iswspace_l+4>:	mov    edx,edi
   0x7ffff7ebfc76 <iswspace_l+6>:	test   edx,0xffffff80
   0x7ffff7ebfc7c <iswspace_l+12>:	je     0x7ffff7ebfce0 <iswspace_l+112>
   0x7ffff7ebfc7e <iswspace_l+14>:	mov    rax,QWORD PTR [rsi]
   0x7ffff7ebfc81 <iswspace_l+17>:	mov    ecx,DWORD PTR [rax+0xc8]
   0x7ffff7ebfc87 <iswspace_l+23>:	add    ecx,0x5
   0x7ffff7ebfc8a <iswspace_l+26>:	mov    rsi,QWORD PTR [rax+rcx*8+0x40]
   0x7ffff7ebfc8f <iswspace_l+31>:	mov    eax,edx
   0x7ffff7ebfc91 <iswspace_l+33>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebfc93 <iswspace_l+35>:	shr    eax,cl
   0x7ffff7ebfc95 <iswspace_l+37>:	mov    ecx,eax
   0x7ffff7ebfc97 <iswspace_l+39>:	xor    eax,eax
   0x7ffff7ebfc99 <iswspace_l+41>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebfc9c <iswspace_l+44>:	jae    0x7ffff7ebfcd8 <iswspace_l+104>
   0x7ffff7ebfc9e <iswspace_l+46>:	add    ecx,0x5
   0x7ffff7ebfca1 <iswspace_l+49>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebfca4 <iswspace_l+52>:	test   edi,edi
   0x7ffff7ebfca6 <iswspace_l+54>:	je     0x7ffff7ebfcd8 <iswspace_l+104>
   0x7ffff7ebfca8 <iswspace_l+56>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebfcab <iswspace_l+59>:	mov    r8d,edx
   0x7ffff7ebfcae <iswspace_l+62>:	shr    r8d,cl
   0x7ffff7ebfcb1 <iswspace_l+65>:	mov    ecx,r8d
   0x7ffff7ebfcb4 <iswspace_l+68>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebfcb7 <iswspace_l+71>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebfcbb <iswspace_l+75>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebfcbe <iswspace_l+78>:	test   ecx,ecx
   0x7ffff7ebfcc0 <iswspace_l+80>:	je     0x7ffff7ebfcd8 <iswspace_l+104>
   0x7ffff7ebfcc2 <iswspace_l+82>:	mov    eax,edx
   0x7ffff7ebfcc4 <iswspace_l+84>:	shr    eax,0x5
   0x7ffff7ebfcc7 <iswspace_l+87>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebfcca <iswspace_l+90>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebfcce <iswspace_l+94>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebfcd1 <iswspace_l+97>:	mov    ecx,edx
   0x7ffff7ebfcd3 <iswspace_l+99>:	shr    eax,cl
   0x7ffff7ebfcd5 <iswspace_l+101>:	and    eax,0x1
   0x7ffff7ebfcd8 <iswspace_l+104>:	ret
   0x7ffff7ebfcd9 <iswspace_l+105>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebfce0 <iswspace_l+112>:	mov    rax,QWORD PTR [rsi+0x68]
   0x7ffff7ebfce4 <iswspace_l+116>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebfce8 <iswspace_l+120>:	and    eax,0x2000
   0x7ffff7ebfced <iswspace_l+125>:	ret
   0x7ffff7ebfcee:	xchg   ax,ax
   0x7ffff7ebfcf0 <iswupper_l>:	endbr64
   0x7ffff7ebfcf4 <iswupper_l+4>:	mov    edx,edi
   0x7ffff7ebfcf6 <iswupper_l+6>:	test   edx,0xffffff80
   0x7ffff7ebfcfc <iswupper_l+12>:	je     0x7ffff7ebfd60 <iswupper_l+112>
   0x7ffff7ebfcfe <iswupper_l+14>:	mov    rax,QWORD PTR [rsi]
   0x7ffff7ebfd01 <iswupper_l+17>:	mov    ecx,DWORD PTR [rax+0xc8]
   0x7ffff7ebfd07 <iswupper_l+23>:	mov    rsi,QWORD PTR [rax+rcx*8+0x40]
   0x7ffff7ebfd0c <iswupper_l+28>:	mov    eax,edx
   0x7ffff7ebfd0e <iswupper_l+30>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebfd10 <iswupper_l+32>:	shr    eax,cl
   0x7ffff7ebfd12 <iswupper_l+34>:	mov    ecx,eax
   0x7ffff7ebfd14 <iswupper_l+36>:	xor    eax,eax
   0x7ffff7ebfd16 <iswupper_l+38>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebfd19 <iswupper_l+41>:	jae    0x7ffff7ebfd55 <iswupper_l+101>
   0x7ffff7ebfd1b <iswupper_l+43>:	add    ecx,0x5
   0x7ffff7ebfd1e <iswupper_l+46>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebfd21 <iswupper_l+49>:	test   edi,edi
   0x7ffff7ebfd23 <iswupper_l+51>:	je     0x7ffff7ebfd55 <iswupper_l+101>
   0x7ffff7ebfd25 <iswupper_l+53>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebfd28 <iswupper_l+56>:	mov    r8d,edx
   0x7ffff7ebfd2b <iswupper_l+59>:	shr    r8d,cl
   0x7ffff7ebfd2e <iswupper_l+62>:	mov    ecx,r8d
   0x7ffff7ebfd31 <iswupper_l+65>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebfd34 <iswupper_l+68>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebfd38 <iswupper_l+72>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebfd3b <iswupper_l+75>:	test   ecx,ecx
   0x7ffff7ebfd3d <iswupper_l+77>:	je     0x7ffff7ebfd55 <iswupper_l+101>
   0x7ffff7ebfd3f <iswupper_l+79>:	mov    eax,edx
   0x7ffff7ebfd41 <iswupper_l+81>:	shr    eax,0x5
   0x7ffff7ebfd44 <iswupper_l+84>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebfd47 <iswupper_l+87>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebfd4b <iswupper_l+91>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebfd4e <iswupper_l+94>:	mov    ecx,edx
   0x7ffff7ebfd50 <iswupper_l+96>:	shr    eax,cl
   0x7ffff7ebfd52 <iswupper_l+98>:	and    eax,0x1
   0x7ffff7ebfd55 <iswupper_l+101>:	ret
   0x7ffff7ebfd56 <iswupper_l+102>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebfd60 <iswupper_l+112>:	mov    rax,QWORD PTR [rsi+0x68]
   0x7ffff7ebfd64 <iswupper_l+116>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebfd68 <iswupper_l+120>:	and    eax,0x100
   0x7ffff7ebfd6d <iswupper_l+125>:	ret
   0x7ffff7ebfd6e:	xchg   ax,ax
   0x7ffff7ebfd70 <iswxdigit_l>:	endbr64
   0x7ffff7ebfd74 <iswxdigit_l+4>:	mov    edx,edi
   0x7ffff7ebfd76 <iswxdigit_l+6>:	test   edx,0xffffff80
   0x7ffff7ebfd7c <iswxdigit_l+12>:	je     0x7ffff7ebfde0 <iswxdigit_l+112>
   0x7ffff7ebfd7e <iswxdigit_l+14>:	mov    rax,QWORD PTR [rsi]
   0x7ffff7ebfd81 <iswxdigit_l+17>:	mov    ecx,DWORD PTR [rax+0xc8]
   0x7ffff7ebfd87 <iswxdigit_l+23>:	add    ecx,0x4
   0x7ffff7ebfd8a <iswxdigit_l+26>:	mov    rsi,QWORD PTR [rax+rcx*8+0x40]
   0x7ffff7ebfd8f <iswxdigit_l+31>:	mov    eax,edx
   0x7ffff7ebfd91 <iswxdigit_l+33>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebfd93 <iswxdigit_l+35>:	shr    eax,cl
   0x7ffff7ebfd95 <iswxdigit_l+37>:	mov    ecx,eax
   0x7ffff7ebfd97 <iswxdigit_l+39>:	xor    eax,eax
   0x7ffff7ebfd99 <iswxdigit_l+41>:	cmp    ecx,DWORD PTR [rsi+0x4]
   0x7ffff7ebfd9c <iswxdigit_l+44>:	jae    0x7ffff7ebfdd8 <iswxdigit_l+104>
   0x7ffff7ebfd9e <iswxdigit_l+46>:	add    ecx,0x5
   0x7ffff7ebfda1 <iswxdigit_l+49>:	mov    edi,DWORD PTR [rsi+rcx*4]
   0x7ffff7ebfda4 <iswxdigit_l+52>:	test   edi,edi
   0x7ffff7ebfda6 <iswxdigit_l+54>:	je     0x7ffff7ebfdd8 <iswxdigit_l+104>
   0x7ffff7ebfda8 <iswxdigit_l+56>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ebfdab <iswxdigit_l+59>:	mov    r8d,edx
   0x7ffff7ebfdae <iswxdigit_l+62>:	shr    r8d,cl
   0x7ffff7ebfdb1 <iswxdigit_l+65>:	mov    ecx,r8d
   0x7ffff7ebfdb4 <iswxdigit_l+68>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ebfdb7 <iswxdigit_l+71>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ebfdbb <iswxdigit_l+75>:	mov    ecx,DWORD PTR [rcx+rdi*1]
   0x7ffff7ebfdbe <iswxdigit_l+78>:	test   ecx,ecx
   0x7ffff7ebfdc0 <iswxdigit_l+80>:	je     0x7ffff7ebfdd8 <iswxdigit_l+104>
   0x7ffff7ebfdc2 <iswxdigit_l+82>:	mov    eax,edx
   0x7ffff7ebfdc4 <iswxdigit_l+84>:	shr    eax,0x5
   0x7ffff7ebfdc7 <iswxdigit_l+87>:	and    eax,DWORD PTR [rsi+0x10]
   0x7ffff7ebfdca <iswxdigit_l+90>:	lea    rax,[rsi+rax*4]
   0x7ffff7ebfdce <iswxdigit_l+94>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebfdd1 <iswxdigit_l+97>:	mov    ecx,edx
   0x7ffff7ebfdd3 <iswxdigit_l+99>:	shr    eax,cl
   0x7ffff7ebfdd5 <iswxdigit_l+101>:	and    eax,0x1
   0x7ffff7ebfdd8 <iswxdigit_l+104>:	ret
   0x7ffff7ebfdd9 <iswxdigit_l+105>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebfde0 <iswxdigit_l+112>:	mov    rax,QWORD PTR [rsi+0x68]
   0x7ffff7ebfde4 <iswxdigit_l+116>:	movzx  eax,WORD PTR [rax+rdx*2]
   0x7ffff7ebfde8 <iswxdigit_l+120>:	and    eax,0x1000
   0x7ffff7ebfded <iswxdigit_l+125>:	ret
   0x7ffff7ebfdee:	xchg   ax,ax
   0x7ffff7ebfdf0 <towlower_l>:	endbr64
   0x7ffff7ebfdf4 <towlower_l+4>:	mov    rdx,QWORD PTR [rsi]
   0x7ffff7ebfdf7 <towlower_l+7>:	mov    eax,edi
   0x7ffff7ebfdf9 <towlower_l+9>:	mov    ecx,DWORD PTR [rdx+0xd0]
   0x7ffff7ebfdff <towlower_l+15>:	add    ecx,0x1
   0x7ffff7ebfe02 <towlower_l+18>:	mov    rdx,QWORD PTR [rdx+rcx*8+0x40]
   0x7ffff7ebfe07 <towlower_l+23>:	mov    ecx,DWORD PTR [rdx]
   0x7ffff7ebfe09 <towlower_l+25>:	shr    edi,cl
   0x7ffff7ebfe0b <towlower_l+27>:	mov    ecx,edi
   0x7ffff7ebfe0d <towlower_l+29>:	cmp    edi,DWORD PTR [rdx+0x4]
   0x7ffff7ebfe10 <towlower_l+32>:	jae    0x7ffff7ebfe33 <towlower_l+67>
   0x7ffff7ebfe12 <towlower_l+34>:	add    ecx,0x5
   0x7ffff7ebfe15 <towlower_l+37>:	mov    esi,DWORD PTR [rdx+rcx*4]
   0x7ffff7ebfe18 <towlower_l+40>:	test   esi,esi
   0x7ffff7ebfe1a <towlower_l+42>:	je     0x7ffff7ebfe33 <towlower_l+67>
   0x7ffff7ebfe1c <towlower_l+44>:	mov    ecx,DWORD PTR [rdx+0x8]
   0x7ffff7ebfe1f <towlower_l+47>:	mov    edi,eax
   0x7ffff7ebfe21 <towlower_l+49>:	shr    edi,cl
   0x7ffff7ebfe23 <towlower_l+51>:	mov    ecx,edi
   0x7ffff7ebfe25 <towlower_l+53>:	and    ecx,DWORD PTR [rdx+0xc]
   0x7ffff7ebfe28 <towlower_l+56>:	lea    rcx,[rdx+rcx*4]
   0x7ffff7ebfe2c <towlower_l+60>:	mov    ecx,DWORD PTR [rcx+rsi*1]
   0x7ffff7ebfe2f <towlower_l+63>:	test   ecx,ecx
   0x7ffff7ebfe31 <towlower_l+65>:	jne    0x7ffff7ebfe38 <towlower_l+72>
   0x7ffff7ebfe33 <towlower_l+67>:	ret
   0x7ffff7ebfe34 <towlower_l+68>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebfe38 <towlower_l+72>:	mov    esi,eax
   0x7ffff7ebfe3a <towlower_l+74>:	and    esi,DWORD PTR [rdx+0x10]
   0x7ffff7ebfe3d <towlower_l+77>:	lea    rdx,[rdx+rsi*4]
   0x7ffff7ebfe41 <towlower_l+81>:	add    eax,DWORD PTR [rdx+rcx*1]
   0x7ffff7ebfe44 <towlower_l+84>:	ret
   0x7ffff7ebfe45:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebfe50 <towupper_l>:	endbr64
   0x7ffff7ebfe54 <towupper_l+4>:	mov    rdx,QWORD PTR [rsi]
   0x7ffff7ebfe57 <towupper_l+7>:	mov    eax,edi
   0x7ffff7ebfe59 <towupper_l+9>:	mov    ecx,DWORD PTR [rdx+0xd0]
   0x7ffff7ebfe5f <towupper_l+15>:	mov    rdx,QWORD PTR [rdx+rcx*8+0x40]
   0x7ffff7ebfe64 <towupper_l+20>:	mov    ecx,DWORD PTR [rdx]
   0x7ffff7ebfe66 <towupper_l+22>:	shr    edi,cl
   0x7ffff7ebfe68 <towupper_l+24>:	mov    ecx,edi
   0x7ffff7ebfe6a <towupper_l+26>:	cmp    edi,DWORD PTR [rdx+0x4]
   0x7ffff7ebfe6d <towupper_l+29>:	jae    0x7ffff7ebfe90 <towupper_l+64>
   0x7ffff7ebfe6f <towupper_l+31>:	add    ecx,0x5
   0x7ffff7ebfe72 <towupper_l+34>:	mov    esi,DWORD PTR [rdx+rcx*4]
   0x7ffff7ebfe75 <towupper_l+37>:	test   esi,esi
   0x7ffff7ebfe77 <towupper_l+39>:	je     0x7ffff7ebfe90 <towupper_l+64>
   0x7ffff7ebfe79 <towupper_l+41>:	mov    ecx,DWORD PTR [rdx+0x8]
   0x7ffff7ebfe7c <towupper_l+44>:	mov    edi,eax
   0x7ffff7ebfe7e <towupper_l+46>:	shr    edi,cl
   0x7ffff7ebfe80 <towupper_l+48>:	mov    ecx,edi
   0x7ffff7ebfe82 <towupper_l+50>:	and    ecx,DWORD PTR [rdx+0xc]
   0x7ffff7ebfe85 <towupper_l+53>:	lea    rcx,[rdx+rcx*4]
   0x7ffff7ebfe89 <towupper_l+57>:	mov    ecx,DWORD PTR [rcx+rsi*1]
   0x7ffff7ebfe8c <towupper_l+60>:	test   ecx,ecx
   0x7ffff7ebfe8e <towupper_l+62>:	jne    0x7ffff7ebfe98 <towupper_l+72>
   0x7ffff7ebfe90 <towupper_l+64>:	ret
   0x7ffff7ebfe91 <towupper_l+65>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebfe98 <towupper_l+72>:	mov    esi,eax
   0x7ffff7ebfe9a <towupper_l+74>:	and    esi,DWORD PTR [rdx+0x10]
   0x7ffff7ebfe9d <towupper_l+77>:	lea    rdx,[rdx+rsi*4]
   0x7ffff7ebfea1 <towupper_l+81>:	add    eax,DWORD PTR [rdx+rcx*1]
   0x7ffff7ebfea4 <towupper_l+84>:	ret
   0x7ffff7ebfea5:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebfeaf:	nop
   0x7ffff7ebfeb0 <wctype_l>:	endbr64
   0x7ffff7ebfeb4 <wctype_l+4>:	push   r15
   0x7ffff7ebfeb6 <wctype_l+6>:	push   r14
   0x7ffff7ebfeb8 <wctype_l+8>:	push   r13
   0x7ffff7ebfeba <wctype_l+10>:	mov    r13,rdi
   0x7ffff7ebfebd <wctype_l+13>:	push   r12
   0x7ffff7ebfebf <wctype_l+15>:	push   rbp
   0x7ffff7ebfec0 <wctype_l+16>:	xor    ebp,ebp
   0x7ffff7ebfec2 <wctype_l+18>:	push   rbx
   0x7ffff7ebfec3 <wctype_l+19>:	mov    rbx,rsi
   0x7ffff7ebfec6 <wctype_l+22>:	sub    rsp,0x8
   0x7ffff7ebfeca <wctype_l+26>:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7ebfecf <wctype_l+31>:	mov    r14,QWORD PTR [rbx]
   0x7ffff7ebfed2 <wctype_l+34>:	mov    r12,rax
   0x7ffff7ebfed5 <wctype_l+37>:	mov    r15,QWORD PTR [r14+0x90]
   0x7ffff7ebfedc <wctype_l+44>:	jmp    0x7ffff7ebfeee <wctype_l+62>
   0x7ffff7ebfede <wctype_l+46>:	xchg   ax,ax
   0x7ffff7ebfee0 <wctype_l+48>:	lea    r15,[r15+rbx*1+0x1]
   0x7ffff7ebfee5 <wctype_l+53>:	cmp    BYTE PTR [r15],0x0
   0x7ffff7ebfee9 <wctype_l+57>:	je     0x7ffff7ebff30 <wctype_l+128>
   0x7ffff7ebfeeb <wctype_l+59>:	add    ebp,0x1
   0x7ffff7ebfeee <wctype_l+62>:	mov    rdi,r15
   0x7ffff7ebfef1 <wctype_l+65>:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7ebfef6 <wctype_l+70>:	mov    rbx,rax
   0x7ffff7ebfef9 <wctype_l+73>:	cmp    r12,rax
   0x7ffff7ebfefc <wctype_l+76>:	jne    0x7ffff7ebfee0 <wctype_l+48>
   0x7ffff7ebfefe <wctype_l+78>:	mov    rdx,r12
   0x7ffff7ebff01 <wctype_l+81>:	mov    rsi,r15
   0x7ffff7ebff04 <wctype_l+84>:	mov    rdi,r13
   0x7ffff7ebff07 <wctype_l+87>:	call   0x7ffff7dbd520 <*ABS*+0xa9500@plt>
   0x7ffff7ebff0c <wctype_l+92>:	test   eax,eax
   0x7ffff7ebff0e <wctype_l+94>:	jne    0x7ffff7ebfee0 <wctype_l+48>
   0x7ffff7ebff10 <wctype_l+96>:	add    ebp,DWORD PTR [r14+0xc8]
   0x7ffff7ebff17 <wctype_l+103>:	mov    rax,QWORD PTR [r14+rbp*8+0x40]
   0x7ffff7ebff1c <wctype_l+108>:	add    rsp,0x8
   0x7ffff7ebff20 <wctype_l+112>:	pop    rbx
   0x7ffff7ebff21 <wctype_l+113>:	pop    rbp
   0x7ffff7ebff22 <wctype_l+114>:	pop    r12
   0x7ffff7ebff24 <wctype_l+116>:	pop    r13
   0x7ffff7ebff26 <wctype_l+118>:	pop    r14
   0x7ffff7ebff28 <wctype_l+120>:	pop    r15
   0x7ffff7ebff2a <wctype_l+122>:	ret
   0x7ffff7ebff2b <wctype_l+123>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebff30 <wctype_l+128>:	add    rsp,0x8
   0x7ffff7ebff34 <wctype_l+132>:	xor    eax,eax
   0x7ffff7ebff36 <wctype_l+134>:	pop    rbx
   0x7ffff7ebff37 <wctype_l+135>:	pop    rbp
   0x7ffff7ebff38 <wctype_l+136>:	pop    r12
   0x7ffff7ebff3a <wctype_l+138>:	pop    r13
   0x7ffff7ebff3c <wctype_l+140>:	pop    r14
   0x7ffff7ebff3e <wctype_l+142>:	pop    r15
   0x7ffff7ebff40 <wctype_l+144>:	ret
   0x7ffff7ebff41:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebff4b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ebff50 <iswctype_l>:	endbr64
   0x7ffff7ebff54 <iswctype_l+4>:	mov    rdx,rsi
   0x7ffff7ebff57 <iswctype_l+7>:	xor    eax,eax
   0x7ffff7ebff59 <iswctype_l+9>:	test   rsi,rsi
   0x7ffff7ebff5c <iswctype_l+12>:	je     0x7ffff7ebffa5 <iswctype_l+85>
   0x7ffff7ebff5e <iswctype_l+14>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ebff60 <iswctype_l+16>:	mov    esi,edi
   0x7ffff7ebff62 <iswctype_l+18>:	shr    esi,cl
   0x7ffff7ebff64 <iswctype_l+20>:	mov    ecx,esi
   0x7ffff7ebff66 <iswctype_l+22>:	cmp    esi,DWORD PTR [rdx+0x4]
   0x7ffff7ebff69 <iswctype_l+25>:	jae    0x7ffff7ebffa5 <iswctype_l+85>
   0x7ffff7ebff6b <iswctype_l+27>:	add    ecx,0x5
   0x7ffff7ebff6e <iswctype_l+30>:	mov    esi,DWORD PTR [rdx+rcx*4]
   0x7ffff7ebff71 <iswctype_l+33>:	test   esi,esi
   0x7ffff7ebff73 <iswctype_l+35>:	je     0x7ffff7ebffa5 <iswctype_l+85>
   0x7ffff7ebff75 <iswctype_l+37>:	mov    ecx,DWORD PTR [rdx+0x8]
   0x7ffff7ebff78 <iswctype_l+40>:	mov    r8d,edi
   0x7ffff7ebff7b <iswctype_l+43>:	shr    r8d,cl
   0x7ffff7ebff7e <iswctype_l+46>:	mov    ecx,r8d
   0x7ffff7ebff81 <iswctype_l+49>:	and    ecx,DWORD PTR [rdx+0xc]
   0x7ffff7ebff84 <iswctype_l+52>:	lea    rcx,[rdx+rcx*4]
   0x7ffff7ebff88 <iswctype_l+56>:	mov    ecx,DWORD PTR [rcx+rsi*1]
   0x7ffff7ebff8b <iswctype_l+59>:	test   ecx,ecx
   0x7ffff7ebff8d <iswctype_l+61>:	je     0x7ffff7ebffa5 <iswctype_l+85>
   0x7ffff7ebff8f <iswctype_l+63>:	mov    eax,edi
   0x7ffff7ebff91 <iswctype_l+65>:	shr    eax,0x5
   0x7ffff7ebff94 <iswctype_l+68>:	and    eax,DWORD PTR [rdx+0x10]
   0x7ffff7ebff97 <iswctype_l+71>:	lea    rax,[rdx+rax*4]
   0x7ffff7ebff9b <iswctype_l+75>:	mov    eax,DWORD PTR [rax+rcx*1]
   0x7ffff7ebff9e <iswctype_l+78>:	mov    ecx,edi
   0x7ffff7ebffa0 <iswctype_l+80>:	shr    eax,cl
   0x7ffff7ebffa2 <iswctype_l+82>:	and    eax,0x1
   0x7ffff7ebffa5 <iswctype_l+85>:	ret
   0x7ffff7ebffa6:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ebffb0 <wctrans_l>:	endbr64
   0x7ffff7ebffb4 <wctrans_l+4>:	push   r13
   0x7ffff7ebffb6 <wctrans_l+6>:	push   r12
   0x7ffff7ebffb8 <wctrans_l+8>:	push   rbp
   0x7ffff7ebffb9 <wctrans_l+9>:	push   rbx
   0x7ffff7ebffba <wctrans_l+10>:	sub    rsp,0x8
   0x7ffff7ebffbe <wctrans_l+14>:	mov    r13,QWORD PTR [rsi]
   0x7ffff7ebffc1 <wctrans_l+17>:	mov    rbx,QWORD PTR [r13+0x98]
   0x7ffff7ebffc8 <wctrans_l+24>:	cmp    BYTE PTR [rbx],0x0
   0x7ffff7ebffcb <wctrans_l+27>:	je     0x7ffff7ec0020 <wctrans_l+112>
   0x7ffff7ebffcd <wctrans_l+29>:	mov    r12,rdi
   0x7ffff7ebffd0 <wctrans_l+32>:	xor    ebp,ebp
   0x7ffff7ebffd2 <wctrans_l+34>:	jmp    0x7ffff7ebffee <wctrans_l+62>
   0x7ffff7ebffd4 <wctrans_l+36>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ebffd8 <wctrans_l+40>:	mov    rdi,rbx
   0x7ffff7ebffdb <wctrans_l+43>:	add    rbp,0x1
   0x7ffff7ebffdf <wctrans_l+47>:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7ebffe4 <wctrans_l+52>:	lea    rbx,[rbx+rax*1+0x1]
   0x7ffff7ebffe9 <wctrans_l+57>:	cmp    BYTE PTR [rbx],0x0
   0x7ffff7ebffec <wctrans_l+60>:	je     0x7ffff7ec0020 <wctrans_l+112>
   0x7ffff7ebffee <wctrans_l+62>:	mov    rsi,rbx
   0x7ffff7ebfff1 <wctrans_l+65>:	mov    rdi,r12
   0x7ffff7ebfff4 <wctrans_l+68>:	call   0x7ffff7dbd690 <*ABS*+0xa8360@plt>
   0x7ffff7ebfff9 <wctrans_l+73>:	test   eax,eax
   0x7ffff7ebfffb <wctrans_l+75>:	jne    0x7ffff7ebffd8 <wctrans_l+40>
   0x7ffff7ebfffd <wctrans_l+77>:	mov    eax,DWORD PTR [r13+0xd0]
   0x7ffff7ec0004 <wctrans_l+84>:	lea    rax,[rbp+rax*1+0x8]
   0x7ffff7ec0009 <wctrans_l+89>:	mov    rax,QWORD PTR [r13+rax*8+0x0]
   0x7ffff7ec000e <wctrans_l+94>:	add    rsp,0x8
   0x7ffff7ec0012 <wctrans_l+98>:	pop    rbx
   0x7ffff7ec0013 <wctrans_l+99>:	pop    rbp
   0x7ffff7ec0014 <wctrans_l+100>:	pop    r12
   0x7ffff7ec0016 <wctrans_l+102>:	pop    r13
   0x7ffff7ec0018 <wctrans_l+104>:	ret
   0x7ffff7ec0019 <wctrans_l+105>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0020 <wctrans_l+112>:	add    rsp,0x8
   0x7ffff7ec0024 <wctrans_l+116>:	xor    eax,eax
   0x7ffff7ec0026 <wctrans_l+118>:	pop    rbx
   0x7ffff7ec0027 <wctrans_l+119>:	pop    rbp
   0x7ffff7ec0028 <wctrans_l+120>:	pop    r12
   0x7ffff7ec002a <wctrans_l+122>:	pop    r13
   0x7ffff7ec002c <wctrans_l+124>:	ret
   0x7ffff7ec002d:	nop    DWORD PTR [rax]
   0x7ffff7ec0030 <towctrans_l>:	endbr64
   0x7ffff7ec0034 <towctrans_l+4>:	mov    eax,edi
   0x7ffff7ec0036 <towctrans_l+6>:	test   rsi,rsi
   0x7ffff7ec0039 <towctrans_l+9>:	je     0x7ffff7ec0065 <towctrans_l+53>
   0x7ffff7ec003b <towctrans_l+11>:	mov    ecx,DWORD PTR [rsi]
   0x7ffff7ec003d <towctrans_l+13>:	mov    edx,edi
   0x7ffff7ec003f <towctrans_l+15>:	shr    edx,cl
   0x7ffff7ec0041 <towctrans_l+17>:	cmp    edx,DWORD PTR [rsi+0x4]
   0x7ffff7ec0044 <towctrans_l+20>:	jae    0x7ffff7ec0065 <towctrans_l+53>
   0x7ffff7ec0046 <towctrans_l+22>:	add    edx,0x5
   0x7ffff7ec0049 <towctrans_l+25>:	mov    edx,DWORD PTR [rsi+rdx*4]
   0x7ffff7ec004c <towctrans_l+28>:	test   edx,edx
   0x7ffff7ec004e <towctrans_l+30>:	je     0x7ffff7ec0065 <towctrans_l+53>
   0x7ffff7ec0050 <towctrans_l+32>:	mov    ecx,DWORD PTR [rsi+0x8]
   0x7ffff7ec0053 <towctrans_l+35>:	shr    edi,cl
   0x7ffff7ec0055 <towctrans_l+37>:	mov    ecx,edi
   0x7ffff7ec0057 <towctrans_l+39>:	and    ecx,DWORD PTR [rsi+0xc]
   0x7ffff7ec005a <towctrans_l+42>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ec005e <towctrans_l+46>:	mov    edx,DWORD PTR [rcx+rdx*1]
   0x7ffff7ec0061 <towctrans_l+49>:	test   edx,edx
   0x7ffff7ec0063 <towctrans_l+51>:	jne    0x7ffff7ec0070 <towctrans_l+64>
   0x7ffff7ec0065 <towctrans_l+53>:	ret
   0x7ffff7ec0066 <towctrans_l+54>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0070 <towctrans_l+64>:	mov    ecx,eax
   0x7ffff7ec0072 <towctrans_l+66>:	and    ecx,DWORD PTR [rsi+0x10]
   0x7ffff7ec0075 <towctrans_l+69>:	lea    rcx,[rsi+rcx*4]
   0x7ffff7ec0079 <towctrans_l+73>:	add    eax,DWORD PTR [rcx+rdx*1]
   0x7ffff7ec007c <towctrans_l+76>:	ret
   0x7ffff7ec007d:	nop    DWORD PTR [rax]
   0x7ffff7ec0080 <getspent>:	endbr64
   0x7ffff7ec0084 <getspent+4>:	push   rbp
   0x7ffff7ec0085 <getspent+5>:	xor    eax,eax
   0x7ffff7ec0087 <getspent+7>:	mov    edx,0x1
   0x7ffff7ec008c <getspent+12>:	push   rbx
   0x7ffff7ec008d <getspent+13>:	sub    rsp,0x18
   0x7ffff7ec0091 <getspent+17>:	lock cmpxchg DWORD PTR [rip+0xf66af],edx        # 0x7ffff7fb6748
   0x7ffff7ec0099 <getspent+25>:	jne    0x7ffff7ec00e8 <getspent+104>
   0x7ffff7ec009b <getspent+27>:	xor    r9d,r9d
   0x7ffff7ec009e <getspent+30>:	lea    r8,[rip+0xf663b]        # 0x7ffff7fb66e0
   0x7ffff7ec00a5 <getspent+37>:	mov    ecx,0x400
   0x7ffff7ec00aa <getspent+42>:	lea    rdx,[rip+0xef86f]        # 0x7ffff7faf920
   0x7ffff7ec00b1 <getspent+49>:	lea    rsi,[rip+0xf6648]        # 0x7ffff7fb6700
   0x7ffff7ec00b8 <getspent+56>:	lea    rdi,[rip+0xb51]        # 0x7ffff7ec0c10 <getspent_r>
   0x7ffff7ec00bf <getspent+63>:	call   0x7ffff7ee84b0
   0x7ffff7ec00c4 <getspent+68>:	mov    rbx,QWORD PTR [rip+0xedd45]        # 0x7ffff7fade10
   0x7ffff7ec00cb <getspent+75>:	xor    edx,edx
   0x7ffff7ec00cd <getspent+77>:	mov    ebp,DWORD PTR fs:[rbx]
   0x7ffff7ec00d0 <getspent+80>:	xchg   DWORD PTR [rip+0xf6672],edx        # 0x7ffff7fb6748
   0x7ffff7ec00d6 <getspent+86>:	cmp    edx,0x1
   0x7ffff7ec00d9 <getspent+89>:	jg     0x7ffff7ec0100 <getspent+128>
   0x7ffff7ec00db <getspent+91>:	mov    DWORD PTR fs:[rbx],ebp
   0x7ffff7ec00de <getspent+94>:	add    rsp,0x18
   0x7ffff7ec00e2 <getspent+98>:	pop    rbx
   0x7ffff7ec00e3 <getspent+99>:	pop    rbp
   0x7ffff7ec00e4 <getspent+100>:	ret
   0x7ffff7ec00e5 <getspent+101>:	nop    DWORD PTR [rax]
   0x7ffff7ec00e8 <getspent+104>:	lea    rdi,[rip+0xf6659]        # 0x7ffff7fb6748
   0x7ffff7ec00ef <getspent+111>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec00f4 <getspent+116>:	jmp    0x7ffff7ec009b <getspent+27>
   0x7ffff7ec00f6 <getspent+118>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0100 <getspent+128>:	lea    rdi,[rip+0xf6641]        # 0x7ffff7fb6748
   0x7ffff7ec0107 <getspent+135>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ec010c <getspent+140>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec0111 <getspent+145>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec0116 <getspent+150>:	mov    DWORD PTR fs:[rbx],ebp
   0x7ffff7ec0119 <getspent+153>:	add    rsp,0x18
   0x7ffff7ec011d <getspent+157>:	pop    rbx
   0x7ffff7ec011e <getspent+158>:	pop    rbp
   0x7ffff7ec011f <getspent+159>:	ret
   0x7ffff7ec0120 <getspnam>:	endbr64
   0x7ffff7ec0124 <getspnam+4>:	push   r14
   0x7ffff7ec0126 <getspnam+6>:	mov    edx,0x1
   0x7ffff7ec012b <getspnam+11>:	push   r13
   0x7ffff7ec012d <getspnam+13>:	push   r12
   0x7ffff7ec012f <getspnam+15>:	push   rbp
   0x7ffff7ec0130 <getspnam+16>:	push   rbx
   0x7ffff7ec0131 <getspnam+17>:	mov    rbx,rdi
   0x7ffff7ec0134 <getspnam+20>:	sub    rsp,0x10
   0x7ffff7ec0138 <getspnam+24>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ec0141 <getspnam+33>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ec0146 <getspnam+38>:	xor    eax,eax
   0x7ffff7ec0148 <getspnam+40>:	lock cmpxchg DWORD PTR [rip+0xf6660],edx        # 0x7ffff7fb67b0
   0x7ffff7ec0150 <getspnam+48>:	jne    0x7ffff7ec0270 <getspnam+336>
   0x7ffff7ec0156 <getspnam+54>:	mov    rdx,QWORD PTR [rip+0xef7cb]        # 0x7ffff7faf928
   0x7ffff7ec015d <getspnam+61>:	mov    r12,QWORD PTR [rip+0xf6644]        # 0x7ffff7fb67a8
   0x7ffff7ec0164 <getspnam+68>:	test   rdx,rdx
   0x7ffff7ec0167 <getspnam+71>:	je     0x7ffff7ec0238 <getspnam+280>
   0x7ffff7ec016d <getspnam+77>:	mov    r13,rsp
   0x7ffff7ec0170 <getspnam+80>:	lea    rbp,[rip+0xf65e9]        # 0x7ffff7fb6760
   0x7ffff7ec0177 <getspnam+87>:	jmp    0x7ffff7ec01b3 <getspnam+147>
   0x7ffff7ec0179 <getspnam+89>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0180 <getspnam+96>:	mov    rax,QWORD PTR [rip+0xf6621]        # 0x7ffff7fb67a8
   0x7ffff7ec0187 <getspnam+103>:	mov    r14,QWORD PTR [rip+0xef79a]        # 0x7ffff7faf928
   0x7ffff7ec018e <getspnam+110>:	lea    r12,[rax+rax*1]
   0x7ffff7ec0192 <getspnam+114>:	mov    rdi,r14
   0x7ffff7ec0195 <getspnam+117>:	mov    rsi,r12
   0x7ffff7ec0198 <getspnam+120>:	mov    QWORD PTR [rip+0xf6609],r12        # 0x7ffff7fb67a8
   0x7ffff7ec019f <getspnam+127>:	call   0x7ffff7dbd3b0 <realloc@plt>
   0x7ffff7ec01a4 <getspnam+132>:	mov    rdx,rax
   0x7ffff7ec01a7 <getspnam+135>:	test   rax,rax
   0x7ffff7ec01aa <getspnam+138>:	je     0x7ffff7ec0209 <getspnam+233>
   0x7ffff7ec01ac <getspnam+140>:	mov    QWORD PTR [rip+0xef775],rax        # 0x7ffff7faf928
   0x7ffff7ec01b3 <getspnam+147>:	mov    r8,r13
   0x7ffff7ec01b6 <getspnam+150>:	mov    rcx,r12
   0x7ffff7ec01b9 <getspnam+153>:	mov    rsi,rbp
   0x7ffff7ec01bc <getspnam+156>:	mov    rdi,rbx
   0x7ffff7ec01bf <getspnam+159>:	call   0x7ffff7ec0cf0 <getspnam_r>
   0x7ffff7ec01c4 <getspnam+164>:	cmp    eax,0x22
   0x7ffff7ec01c7 <getspnam+167>:	je     0x7ffff7ec0180 <getspnam+96>
   0x7ffff7ec01c9 <getspnam+169>:	cmp    QWORD PTR [rip+0xef757],0x0        # 0x7ffff7faf928
   0x7ffff7ec01d1 <getspnam+177>:	je     0x7ffff7ec022a <getspnam+266>
   0x7ffff7ec01d3 <getspnam+179>:	xor    eax,eax
   0x7ffff7ec01d5 <getspnam+181>:	xchg   DWORD PTR [rip+0xf65d5],eax        # 0x7ffff7fb67b0
   0x7ffff7ec01db <getspnam+187>:	cmp    eax,0x1
   0x7ffff7ec01de <getspnam+190>:	jg     0x7ffff7ec0288 <getspnam+360>
   0x7ffff7ec01e4 <getspnam+196>:	mov    rax,QWORD PTR [rsp]
   0x7ffff7ec01e8 <getspnam+200>:	mov    rdx,QWORD PTR [rsp+0x8]
   0x7ffff7ec01ed <getspnam+205>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7ec01f6 <getspnam+214>:	jne    0x7ffff7ec0299 <getspnam+377>
   0x7ffff7ec01fc <getspnam+220>:	add    rsp,0x10
   0x7ffff7ec0200 <getspnam+224>:	pop    rbx
   0x7ffff7ec0201 <getspnam+225>:	pop    rbp
   0x7ffff7ec0202 <getspnam+226>:	pop    r12
   0x7ffff7ec0204 <getspnam+228>:	pop    r13
   0x7ffff7ec0206 <getspnam+230>:	pop    r14
   0x7ffff7ec0208 <getspnam+232>:	ret
   0x7ffff7ec0209 <getspnam+233>:	mov    rdi,r14
   0x7ffff7ec020c <getspnam+236>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ec0211 <getspnam+241>:	mov    rax,QWORD PTR [rip+0xedbf8]        # 0x7ffff7fade10
   0x7ffff7ec0218 <getspnam+248>:	mov    DWORD PTR fs:[rax],0xc
   0x7ffff7ec021f <getspnam+255>:	mov    QWORD PTR [rip+0xef6fe],0x0        # 0x7ffff7faf928
   0x7ffff7ec022a <getspnam+266>:	mov    QWORD PTR [rsp],0x0
   0x7ffff7ec0232 <getspnam+274>:	jmp    0x7ffff7ec01d3 <getspnam+179>
   0x7ffff7ec0234 <getspnam+276>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0238 <getspnam+280>:	mov    edi,0x400
   0x7ffff7ec023d <getspnam+285>:	mov    r12d,0x400
   0x7ffff7ec0243 <getspnam+291>:	mov    QWORD PTR [rip+0xf655a],0x400        # 0x7ffff7fb67a8
   0x7ffff7ec024e <getspnam+302>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7ec0253 <getspnam+307>:	mov    QWORD PTR [rip+0xef6ce],rax        # 0x7ffff7faf928
   0x7ffff7ec025a <getspnam+314>:	mov    rdx,rax
   0x7ffff7ec025d <getspnam+317>:	test   rax,rax
   0x7ffff7ec0260 <getspnam+320>:	jne    0x7ffff7ec016d <getspnam+77>
   0x7ffff7ec0266 <getspnam+326>:	jmp    0x7ffff7ec022a <getspnam+266>
   0x7ffff7ec0268 <getspnam+328>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0270 <getspnam+336>:	lea    rdi,[rip+0xf6539]        # 0x7ffff7fb67b0
   0x7ffff7ec0277 <getspnam+343>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec027c <getspnam+348>:	jmp    0x7ffff7ec0156 <getspnam+54>
   0x7ffff7ec0281 <getspnam+353>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0288 <getspnam+360>:	lea    rdi,[rip+0xf6521]        # 0x7ffff7fb67b0
   0x7ffff7ec028f <getspnam+367>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec0294 <getspnam+372>:	jmp    0x7ffff7ec01e4 <getspnam+196>
   0x7ffff7ec0299 <getspnam+377>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ec029e:	xchg   ax,ax
   0x7ffff7ec02a0 <sgetspent>:	endbr64
   0x7ffff7ec02a4 <sgetspent+4>:	push   r14
   0x7ffff7ec02a6 <sgetspent+6>:	mov    edx,0x1
   0x7ffff7ec02ab <sgetspent+11>:	push   r13
   0x7ffff7ec02ad <sgetspent+13>:	push   r12
   0x7ffff7ec02af <sgetspent+15>:	push   rbp
   0x7ffff7ec02b0 <sgetspent+16>:	push   rbx
   0x7ffff7ec02b1 <sgetspent+17>:	mov    rbx,rdi
   0x7ffff7ec02b4 <sgetspent+20>:	sub    rsp,0x10
   0x7ffff7ec02b8 <sgetspent+24>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ec02c1 <sgetspent+33>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ec02c6 <sgetspent+38>:	xor    eax,eax
   0x7ffff7ec02c8 <sgetspent+40>:	lock cmpxchg DWORD PTR [rip+0xf6548],edx        # 0x7ffff7fb6818
   0x7ffff7ec02d0 <sgetspent+48>:	jne    0x7ffff7ec0408 <sgetspent+360>
   0x7ffff7ec02d6 <sgetspent+54>:	mov    rdx,QWORD PTR [rip+0xf6533]        # 0x7ffff7fb6810
   0x7ffff7ec02dd <sgetspent+61>:	mov    r12,QWORD PTR [rip+0xf6524]        # 0x7ffff7fb6808
   0x7ffff7ec02e4 <sgetspent+68>:	test   rdx,rdx
   0x7ffff7ec02e7 <sgetspent+71>:	je     0x7ffff7ec03c8 <sgetspent+296>
   0x7ffff7ec02ed <sgetspent+77>:	mov    r13,rsp
   0x7ffff7ec02f0 <sgetspent+80>:	lea    rbp,[rip+0xf64c9]        # 0x7ffff7fb67c0
   0x7ffff7ec02f7 <sgetspent+87>:	jmp    0x7ffff7ec0336 <sgetspent+150>
   0x7ffff7ec02f9 <sgetspent+89>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0300 <sgetspent+96>:	mov    rax,QWORD PTR [rip+0xf6501]        # 0x7ffff7fb6808
   0x7ffff7ec0307 <sgetspent+103>:	mov    r14,QWORD PTR [rip+0xf6502]        # 0x7ffff7fb6810
   0x7ffff7ec030e <sgetspent+110>:	lea    r12,[rax+0x400]
   0x7ffff7ec0315 <sgetspent+117>:	mov    rdi,r14
   0x7ffff7ec0318 <sgetspent+120>:	mov    rsi,r12
   0x7ffff7ec031b <sgetspent+123>:	mov    QWORD PTR [rip+0xf64e6],r12        # 0x7ffff7fb6808
   0x7ffff7ec0322 <sgetspent+130>:	call   0x7ffff7dbd3b0 <realloc@plt>
   0x7ffff7ec0327 <sgetspent+135>:	mov    rdx,rax
   0x7ffff7ec032a <sgetspent+138>:	test   rax,rax
   0x7ffff7ec032d <sgetspent+141>:	je     0x7ffff7ec0399 <sgetspent+249>
   0x7ffff7ec032f <sgetspent+143>:	mov    QWORD PTR [rip+0xf64da],rax        # 0x7ffff7fb6810
   0x7ffff7ec0336 <sgetspent+150>:	mov    r8,r13
   0x7ffff7ec0339 <sgetspent+153>:	mov    rcx,r12
   0x7ffff7ec033c <sgetspent+156>:	mov    rsi,rbp
   0x7ffff7ec033f <sgetspent+159>:	mov    rdi,rbx
   0x7ffff7ec0342 <sgetspent+162>:	call   0x7ffff7ec13d0 <sgetspent_r>
   0x7ffff7ec0347 <sgetspent+167>:	cmp    eax,0x22
   0x7ffff7ec034a <sgetspent+170>:	je     0x7ffff7ec0300 <sgetspent+96>
   0x7ffff7ec034c <sgetspent+172>:	mov    rbx,QWORD PTR [rip+0xedabd]        # 0x7ffff7fade10
   0x7ffff7ec0353 <sgetspent+179>:	cmp    QWORD PTR [rip+0xf64b5],0x0        # 0x7ffff7fb6810
   0x7ffff7ec035b <sgetspent+187>:	mov    ebp,DWORD PTR fs:[rbx]
   0x7ffff7ec035e <sgetspent+190>:	je     0x7ffff7ec03b9 <sgetspent+281>
   0x7ffff7ec0360 <sgetspent+192>:	xor    eax,eax
   0x7ffff7ec0362 <sgetspent+194>:	xchg   DWORD PTR [rip+0xf64b0],eax        # 0x7ffff7fb6818
   0x7ffff7ec0368 <sgetspent+200>:	cmp    eax,0x1
   0x7ffff7ec036b <sgetspent+203>:	jg     0x7ffff7ec0420 <sgetspent+384>
   0x7ffff7ec0371 <sgetspent+209>:	mov    DWORD PTR fs:[rbx],ebp
   0x7ffff7ec0374 <sgetspent+212>:	mov    rax,QWORD PTR [rsp]
   0x7ffff7ec0378 <sgetspent+216>:	mov    rdx,QWORD PTR [rsp+0x8]
   0x7ffff7ec037d <sgetspent+221>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7ec0386 <sgetspent+230>:	jne    0x7ffff7ec0431 <sgetspent+401>
   0x7ffff7ec038c <sgetspent+236>:	add    rsp,0x10
   0x7ffff7ec0390 <sgetspent+240>:	pop    rbx
   0x7ffff7ec0391 <sgetspent+241>:	pop    rbp
   0x7ffff7ec0392 <sgetspent+242>:	pop    r12
   0x7ffff7ec0394 <sgetspent+244>:	pop    r13
   0x7ffff7ec0396 <sgetspent+246>:	pop    r14
   0x7ffff7ec0398 <sgetspent+248>:	ret
   0x7ffff7ec0399 <sgetspent+249>:	mov    rbx,QWORD PTR [rip+0xeda70]        # 0x7ffff7fade10
   0x7ffff7ec03a0 <sgetspent+256>:	mov    rdi,r14
   0x7ffff7ec03a3 <sgetspent+259>:	mov    ebp,DWORD PTR fs:[rbx]
   0x7ffff7ec03a6 <sgetspent+262>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ec03ab <sgetspent+267>:	mov    DWORD PTR fs:[rbx],ebp
   0x7ffff7ec03ae <sgetspent+270>:	mov    QWORD PTR [rip+0xf6457],0x0        # 0x7ffff7fb6810
   0x7ffff7ec03b9 <sgetspent+281>:	mov    QWORD PTR [rsp],0x0
   0x7ffff7ec03c1 <sgetspent+289>:	jmp    0x7ffff7ec0360 <sgetspent+192>
   0x7ffff7ec03c3 <sgetspent+291>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec03c8 <sgetspent+296>:	mov    edi,0x400
   0x7ffff7ec03cd <sgetspent+301>:	mov    r12d,0x400
   0x7ffff7ec03d3 <sgetspent+307>:	mov    QWORD PTR [rip+0xf642a],0x400        # 0x7ffff7fb6808
   0x7ffff7ec03de <sgetspent+318>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7ec03e3 <sgetspent+323>:	mov    QWORD PTR [rip+0xf6426],rax        # 0x7ffff7fb6810
   0x7ffff7ec03ea <sgetspent+330>:	mov    rdx,rax
   0x7ffff7ec03ed <sgetspent+333>:	test   rax,rax
   0x7ffff7ec03f0 <sgetspent+336>:	jne    0x7ffff7ec02ed <sgetspent+77>
   0x7ffff7ec03f6 <sgetspent+342>:	mov    rbx,QWORD PTR [rip+0xeda13]        # 0x7ffff7fade10
   0x7ffff7ec03fd <sgetspent+349>:	mov    ebp,DWORD PTR fs:[rbx]
   0x7ffff7ec0400 <sgetspent+352>:	jmp    0x7ffff7ec03b9 <sgetspent+281>
   0x7ffff7ec0402 <sgetspent+354>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0408 <sgetspent+360>:	lea    rdi,[rip+0xf6409]        # 0x7ffff7fb6818
   0x7ffff7ec040f <sgetspent+367>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec0414 <sgetspent+372>:	jmp    0x7ffff7ec02d6 <sgetspent+54>
   0x7ffff7ec0419 <sgetspent+377>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0420 <sgetspent+384>:	lea    rdi,[rip+0xf63f1]        # 0x7ffff7fb6818
   0x7ffff7ec0427 <sgetspent+391>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec042c <sgetspent+396>:	jmp    0x7ffff7ec0371 <sgetspent+209>
   0x7ffff7ec0431 <sgetspent+401>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ec0436:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0440 <fgetspent>:	endbr64
   0x7ffff7ec0444 <fgetspent+4>:	push   r15
   0x7ffff7ec0446 <fgetspent+6>:	push   r14
   0x7ffff7ec0448 <fgetspent+8>:	push   r13
   0x7ffff7ec044a <fgetspent+10>:	push   r12
   0x7ffff7ec044c <fgetspent+12>:	push   rbp
   0x7ffff7ec044d <fgetspent+13>:	push   rbx
   0x7ffff7ec044e <fgetspent+14>:	mov    rbx,rdi
   0x7ffff7ec0451 <fgetspent+17>:	sub    rsp,0x38
   0x7ffff7ec0455 <fgetspent+21>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ec045e <fgetspent+30>:	mov    QWORD PTR [rsp+0x28],rax
   0x7ffff7ec0463 <fgetspent+35>:	xor    eax,eax
   0x7ffff7ec0465 <fgetspent+37>:	lea    rbp,[rsp+0x10]
   0x7ffff7ec046a <fgetspent+42>:	mov    rsi,rbp
   0x7ffff7ec046d <fgetspent+45>:	call   0x7ffff7e142a0 <fgetpos64>
   0x7ffff7ec0472 <fgetspent+50>:	xor    r8d,r8d
   0x7ffff7ec0475 <fgetspent+53>:	test   eax,eax
   0x7ffff7ec0477 <fgetspent+55>:	jne    0x7ffff7ec0544 <fgetspent+260>
   0x7ffff7ec047d <fgetspent+61>:	mov    edx,0x1
   0x7ffff7ec0482 <fgetspent+66>:	lock cmpxchg DWORD PTR [rip+0xf63e6],edx        # 0x7ffff7fb6870
   0x7ffff7ec048a <fgetspent+74>:	jne    0x7ffff7ec05c5 <fgetspent+389>
   0x7ffff7ec0490 <fgetspent+80>:	mov    rdx,QWORD PTR [rip+0xef499]        # 0x7ffff7faf930
   0x7ffff7ec0497 <fgetspent+87>:	test   rdx,rdx
   0x7ffff7ec049a <fgetspent+90>:	je     0x7ffff7ec0590 <fgetspent+336>
   0x7ffff7ec04a0 <fgetspent+96>:	mov    r13,QWORD PTR [rip+0xed969]        # 0x7ffff7fade10
   0x7ffff7ec04a7 <fgetspent+103>:	lea    r12,[rip+0xf6372]        # 0x7ffff7fb6820
   0x7ffff7ec04ae <fgetspent+110>:	jmp    0x7ffff7ec051a <fgetspent+218>
   0x7ffff7ec04b0 <fgetspent+112>:	mov    rcx,QWORD PTR [rip+0xf63b1]        # 0x7ffff7fb6868
   0x7ffff7ec04b7 <fgetspent+119>:	lea    r8,[rsp+0x8]
   0x7ffff7ec04bc <fgetspent+124>:	mov    rsi,r12
   0x7ffff7ec04bf <fgetspent+127>:	mov    rdi,rbx
   0x7ffff7ec04c2 <fgetspent+130>:	call   0x7ffff7ec1460 <fgetspent_r>
   0x7ffff7ec04c7 <fgetspent+135>:	cmp    eax,0x22
   0x7ffff7ec04ca <fgetspent+138>:	jne    0x7ffff7ec0570 <fgetspent+304>
   0x7ffff7ec04d0 <fgetspent+144>:	mov    rax,QWORD PTR [rip+0xf6391]        # 0x7ffff7fb6868
   0x7ffff7ec04d7 <fgetspent+151>:	mov    r14,QWORD PTR [rip+0xef452]        # 0x7ffff7faf930
   0x7ffff7ec04de <fgetspent+158>:	lea    rsi,[rax+0x400]
   0x7ffff7ec04e5 <fgetspent+165>:	mov    rdi,r14
   0x7ffff7ec04e8 <fgetspent+168>:	mov    QWORD PTR [rip+0xf6379],rsi        # 0x7ffff7fb6868
   0x7ffff7ec04ef <fgetspent+175>:	call   0x7ffff7dbd3b0 <realloc@plt>
   0x7ffff7ec04f4 <fgetspent+180>:	test   rax,rax
   0x7ffff7ec04f7 <fgetspent+183>:	je     0x7ffff7ec05d6 <fgetspent+406>
   0x7ffff7ec04fd <fgetspent+189>:	mov    QWORD PTR [rip+0xef42c],rax        # 0x7ffff7faf930
   0x7ffff7ec0504 <fgetspent+196>:	mov    rsi,rbp
   0x7ffff7ec0507 <fgetspent+199>:	mov    rdi,rbx
   0x7ffff7ec050a <fgetspent+202>:	call   0x7ffff7e14cb0 <fsetpos64>
   0x7ffff7ec050f <fgetspent+207>:	test   eax,eax
   0x7ffff7ec0511 <fgetspent+209>:	jne    0x7ffff7ec0580 <fgetspent+320>
   0x7ffff7ec0513 <fgetspent+211>:	mov    rdx,QWORD PTR [rip+0xef416]        # 0x7ffff7faf930
   0x7ffff7ec051a <fgetspent+218>:	test   rdx,rdx
   0x7ffff7ec051d <fgetspent+221>:	jne    0x7ffff7ec04b0 <fgetspent+112>
   0x7ffff7ec051f <fgetspent+223>:	mov    QWORD PTR [rsp+0x8],0x0
   0x7ffff7ec0528 <fgetspent+232>:	mov    ebx,DWORD PTR fs:[r13+0x0]
   0x7ffff7ec052d <fgetspent+237>:	xor    eax,eax
   0x7ffff7ec052f <fgetspent+239>:	xchg   DWORD PTR [rip+0xf633b],eax        # 0x7ffff7fb6870
   0x7ffff7ec0535 <fgetspent+245>:	cmp    eax,0x1
   0x7ffff7ec0538 <fgetspent+248>:	jg     0x7ffff7ec05b4 <fgetspent+372>
   0x7ffff7ec053a <fgetspent+250>:	mov    DWORD PTR fs:[r13+0x0],ebx
   0x7ffff7ec053f <fgetspent+255>:	mov    r8,QWORD PTR [rsp+0x8]
   0x7ffff7ec0544 <fgetspent+260>:	mov    rax,QWORD PTR [rsp+0x28]
   0x7ffff7ec0549 <fgetspent+265>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7ec0552 <fgetspent+274>:	jne    0x7ffff7ec05f8 <fgetspent+440>
   0x7ffff7ec0558 <fgetspent+280>:	add    rsp,0x38
   0x7ffff7ec055c <fgetspent+284>:	mov    rax,r8
   0x7ffff7ec055f <fgetspent+287>:	pop    rbx
   0x7ffff7ec0560 <fgetspent+288>:	pop    rbp
   0x7ffff7ec0561 <fgetspent+289>:	pop    r12
   0x7ffff7ec0563 <fgetspent+291>:	pop    r13
   0x7ffff7ec0565 <fgetspent+293>:	pop    r14
   0x7ffff7ec0567 <fgetspent+295>:	pop    r15
   0x7ffff7ec0569 <fgetspent+297>:	ret
   0x7ffff7ec056a <fgetspent+298>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0570 <fgetspent+304>:	cmp    QWORD PTR [rip+0xef3b8],0x0        # 0x7ffff7faf930
   0x7ffff7ec0578 <fgetspent+312>:	jne    0x7ffff7ec0528 <fgetspent+232>
   0x7ffff7ec057a <fgetspent+314>:	jmp    0x7ffff7ec051f <fgetspent+223>
   0x7ffff7ec057c <fgetspent+316>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0580 <fgetspent+320>:	mov    QWORD PTR [rip+0xef3a5],0x0        # 0x7ffff7faf930
   0x7ffff7ec058b <fgetspent+331>:	jmp    0x7ffff7ec051f <fgetspent+223>
   0x7ffff7ec058d <fgetspent+333>:	nop    DWORD PTR [rax]
   0x7ffff7ec0590 <fgetspent+336>:	mov    QWORD PTR [rip+0xf62cd],0x400        # 0x7ffff7fb6868
   0x7ffff7ec059b <fgetspent+347>:	mov    edi,0x400
   0x7ffff7ec05a0 <fgetspent+352>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7ec05a5 <fgetspent+357>:	mov    QWORD PTR [rip+0xef384],rax        # 0x7ffff7faf930
   0x7ffff7ec05ac <fgetspent+364>:	mov    rdx,rax
   0x7ffff7ec05af <fgetspent+367>:	jmp    0x7ffff7ec04a0 <fgetspent+96>
   0x7ffff7ec05b4 <fgetspent+372>:	lea    rdi,[rip+0xf62b5]        # 0x7ffff7fb6870
   0x7ffff7ec05bb <fgetspent+379>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec05c0 <fgetspent+384>:	jmp    0x7ffff7ec053a <fgetspent+250>
   0x7ffff7ec05c5 <fgetspent+389>:	lea    rdi,[rip+0xf62a4]        # 0x7ffff7fb6870
   0x7ffff7ec05cc <fgetspent+396>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec05d1 <fgetspent+401>:	jmp    0x7ffff7ec0490 <fgetspent+80>
   0x7ffff7ec05d6 <fgetspent+406>:	mov    r15d,DWORD PTR fs:[r13+0x0]
   0x7ffff7ec05db <fgetspent+411>:	mov    rdi,r14
   0x7ffff7ec05de <fgetspent+414>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ec05e3 <fgetspent+419>:	mov    DWORD PTR fs:[r13+0x0],r15d
   0x7ffff7ec05e8 <fgetspent+424>:	mov    QWORD PTR [rip+0xef33d],0x0        # 0x7ffff7faf930
   0x7ffff7ec05f3 <fgetspent+435>:	jmp    0x7ffff7ec0504 <fgetspent+196>
   0x7ffff7ec05f8 <fgetspent+440>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ec05fd:	nop    DWORD PTR [rax]
   0x7ffff7ec0600 <putspent>:	endbr64
   0x7ffff7ec0604 <putspent+4>:	push   r13
   0x7ffff7ec0606 <putspent+6>:	push   r12
   0x7ffff7ec0608 <putspent+8>:	push   rbp
   0x7ffff7ec0609 <putspent+9>:	mov    rbp,rdi
   0x7ffff7ec060c <putspent+12>:	push   rbx
   0x7ffff7ec060d <putspent+13>:	sub    rsp,0x18
   0x7ffff7ec0611 <putspent+17>:	mov    rdi,QWORD PTR [rdi]
   0x7ffff7ec0614 <putspent+20>:	test   rdi,rdi
   0x7ffff7ec0617 <putspent+23>:	je     0x7ffff7ec0a80 <putspent+1152>
   0x7ffff7ec061d <putspent+29>:	mov    rbx,rsi
   0x7ffff7ec0620 <putspent+32>:	call   0x7ffff7ee9590
   0x7ffff7ec0625 <putspent+37>:	test   al,al
   0x7ffff7ec0627 <putspent+39>:	je     0x7ffff7ec0a80 <putspent+1152>
   0x7ffff7ec062d <putspent+45>:	mov    rdi,QWORD PTR [rbp+0x8]
   0x7ffff7ec0631 <putspent+49>:	call   0x7ffff7ee9590
   0x7ffff7ec0636 <putspent+54>:	test   al,al
   0x7ffff7ec0638 <putspent+56>:	je     0x7ffff7ec0a80 <putspent+1152>
   0x7ffff7ec063e <putspent+62>:	mov    eax,DWORD PTR [rbx]
   0x7ffff7ec0640 <putspent+64>:	and    eax,0x8000
   0x7ffff7ec0645 <putspent+69>:	jne    0x7ffff7ec067b <putspent+123>
   0x7ffff7ec0647 <putspent+71>:	mov    r12,QWORD PTR fs:0x10
   0x7ffff7ec0650 <putspent+80>:	mov    rdi,QWORD PTR [rbx+0x88]
   0x7ffff7ec0657 <putspent+87>:	cmp    QWORD PTR [rdi+0x8],r12
   0x7ffff7ec065b <putspent+91>:	je     0x7ffff7ec0677 <putspent+119>
   0x7ffff7ec065d <putspent+93>:	mov    edx,0x1
   0x7ffff7ec0662 <putspent+98>:	lock cmpxchg DWORD PTR [rdi],edx
   0x7ffff7ec0666 <putspent+102>:	jne    0x7ffff7ec0aa0 <putspent+1184>
   0x7ffff7ec066c <putspent+108>:	mov    rdi,QWORD PTR [rbx+0x88]
   0x7ffff7ec0673 <putspent+115>:	mov    QWORD PTR [rdi+0x8],r12
   0x7ffff7ec0677 <putspent+119>:	add    DWORD PTR [rdi+0x4],0x1
   0x7ffff7ec067b <putspent+123>:	mov    rcx,QWORD PTR [rbp+0x8]
   0x7ffff7ec067f <putspent+127>:	mov    rdx,QWORD PTR [rbp+0x0]
   0x7ffff7ec0683 <putspent+131>:	mov    rdi,rbx
   0x7ffff7ec0686 <putspent+134>:	lea    rax,[rip+0xacde2]        # 0x7ffff7f6d46f
   0x7ffff7ec068d <putspent+141>:	lea    rsi,[rip+0xb0007]        # 0x7ffff7f7069b
   0x7ffff7ec0694 <putspent+148>:	test   rcx,rcx
   0x7ffff7ec0697 <putspent+151>:	cmove  rcx,rax
   0x7ffff7ec069b <putspent+155>:	xor    eax,eax
   0x7ffff7ec069d <putspent+157>:	call   0x7ffff7df56b0 <fprintf>
   0x7ffff7ec06a2 <putspent+162>:	mov    rdx,QWORD PTR [rbp+0x10]
   0x7ffff7ec06a6 <putspent+166>:	shr    eax,0x1f
   0x7ffff7ec06a9 <putspent+169>:	mov    r13d,eax
   0x7ffff7ec06ac <putspent+172>:	mov    r12d,eax
   0x7ffff7ec06af <putspent+175>:	cmp    rdx,0xffffffffffffffff
   0x7ffff7ec06b3 <putspent+179>:	jne    0x7ffff7ec0818 <putspent+536>
   0x7ffff7ec06b9 <putspent+185>:	mov    rax,QWORD PTR [rbx+0x28]
   0x7ffff7ec06bd <putspent+189>:	cmp    rax,QWORD PTR [rbx+0x30]
   0x7ffff7ec06c1 <putspent+193>:	jae    0x7ffff7ec0940 <putspent+832>
   0x7ffff7ec06c7 <putspent+199>:	lea    rdx,[rax+0x1]
   0x7ffff7ec06cb <putspent+203>:	mov    QWORD PTR [rbx+0x28],rdx
   0x7ffff7ec06cf <putspent+207>:	mov    BYTE PTR [rax],0x3a
   0x7ffff7ec06d2 <putspent+210>:	mov    rdx,QWORD PTR [rbp+0x18]
   0x7ffff7ec06d6 <putspent+214>:	cmp    rdx,0xffffffffffffffff
   0x7ffff7ec06da <putspent+218>:	jne    0x7ffff7ec084a <putspent+586>
   0x7ffff7ec06e0 <putspent+224>:	mov    rax,QWORD PTR [rbx+0x28]
   0x7ffff7ec06e4 <putspent+228>:	cmp    rax,QWORD PTR [rbx+0x30]
   0x7ffff7ec06e8 <putspent+232>:	jae    0x7ffff7ec09a0 <putspent+928>
   0x7ffff7ec06ee <putspent+238>:	lea    rdx,[rax+0x1]
   0x7ffff7ec06f2 <putspent+242>:	mov    QWORD PTR [rbx+0x28],rdx
   0x7ffff7ec06f6 <putspent+246>:	mov    BYTE PTR [rax],0x3a
   0x7ffff7ec06f9 <putspent+249>:	mov    rdx,QWORD PTR [rbp+0x20]
   0x7ffff7ec06fd <putspent+253>:	cmp    rdx,0xffffffffffffffff
   0x7ffff7ec0701 <putspent+257>:	jne    0x7ffff7ec087c <putspent+636>
   0x7ffff7ec0707 <putspent+263>:	mov    rax,QWORD PTR [rbx+0x28]
   0x7ffff7ec070b <putspent+267>:	cmp    rax,QWORD PTR [rbx+0x30]
   0x7ffff7ec070f <putspent+271>:	jae    0x7ffff7ec0970 <putspent+880>
   0x7ffff7ec0715 <putspent+277>:	lea    rdx,[rax+0x1]
   0x7ffff7ec0719 <putspent+281>:	mov    QWORD PTR [rbx+0x28],rdx
   0x7ffff7ec071d <putspent+285>:	mov    BYTE PTR [rax],0x3a
   0x7ffff7ec0720 <putspent+288>:	mov    rdx,QWORD PTR [rbp+0x28]
   0x7ffff7ec0724 <putspent+292>:	cmp    rdx,0xffffffffffffffff
   0x7ffff7ec0728 <putspent+296>:	jne    0x7ffff7ec08ae <putspent+686>
   0x7ffff7ec072e <putspent+302>:	mov    rax,QWORD PTR [rbx+0x28]
   0x7ffff7ec0732 <putspent+306>:	cmp    rax,QWORD PTR [rbx+0x30]
   0x7ffff7ec0736 <putspent+310>:	jae    0x7ffff7ec09d0 <putspent+976>
   0x7ffff7ec073c <putspent+316>:	lea    rdx,[rax+0x1]
   0x7ffff7ec0740 <putspent+320>:	mov    QWORD PTR [rbx+0x28],rdx
   0x7ffff7ec0744 <putspent+324>:	mov    BYTE PTR [rax],0x3a
   0x7ffff7ec0747 <putspent+327>:	mov    rdx,QWORD PTR [rbp+0x30]
   0x7ffff7ec074b <putspent+331>:	cmp    rdx,0xffffffffffffffff
   0x7ffff7ec074f <putspent+335>:	jne    0x7ffff7ec08e0 <putspent+736>
   0x7ffff7ec0755 <putspent+341>:	mov    rax,QWORD PTR [rbx+0x28]
   0x7ffff7ec0759 <putspent+345>:	cmp    rax,QWORD PTR [rbx+0x30]
   0x7ffff7ec075d <putspent+349>:	jae    0x7ffff7ec0a30 <putspent+1072>
   0x7ffff7ec0763 <putspent+355>:	lea    rdx,[rax+0x1]
   0x7ffff7ec0767 <putspent+359>:	mov    QWORD PTR [rbx+0x28],rdx
   0x7ffff7ec076b <putspent+363>:	mov    BYTE PTR [rax],0x3a
   0x7ffff7ec076e <putspent+366>:	mov    rdx,QWORD PTR [rbp+0x38]
   0x7ffff7ec0772 <putspent+370>:	cmp    rdx,0xffffffffffffffff
   0x7ffff7ec0776 <putspent+374>:	jne    0x7ffff7ec0912 <putspent+786>
   0x7ffff7ec077c <putspent+380>:	mov    rax,QWORD PTR [rbx+0x28]
   0x7ffff7ec0780 <putspent+384>:	cmp    rax,QWORD PTR [rbx+0x30]
   0x7ffff7ec0784 <putspent+388>:	jae    0x7ffff7ec0a00 <putspent+1024>
   0x7ffff7ec078a <putspent+394>:	lea    rdx,[rax+0x1]
   0x7ffff7ec078e <putspent+398>:	mov    QWORD PTR [rbx+0x28],rdx
   0x7ffff7ec0792 <putspent+402>:	mov    BYTE PTR [rax],0x3a
   0x7ffff7ec0795 <putspent+405>:	mov    rdx,QWORD PTR [rbp+0x40]
   0x7ffff7ec0799 <putspent+409>:	cmp    rdx,0xffffffffffffffff
   0x7ffff7ec079d <putspent+413>:	je     0x7ffff7ec07b9 <putspent+441>
   0x7ffff7ec079f <putspent+415>:	xor    eax,eax
   0x7ffff7ec07a1 <putspent+417>:	lea    rsi,[rip+0xafeff]        # 0x7ffff7f706a7
   0x7ffff7ec07a8 <putspent+424>:	mov    rdi,rbx
   0x7ffff7ec07ab <putspent+427>:	call   0x7ffff7df56b0 <fprintf>
   0x7ffff7ec07b0 <putspent+432>:	cmp    eax,0x80000000
   0x7ffff7ec07b5 <putspent+437>:	sbb    r12d,0xffffffff
   0x7ffff7ec07b9 <putspent+441>:	mov    rax,QWORD PTR [rbx+0x28]
   0x7ffff7ec07bd <putspent+445>:	cmp    rax,QWORD PTR [rbx+0x30]
   0x7ffff7ec07c1 <putspent+449>:	jae    0x7ffff7ec0a60 <putspent+1120>
   0x7ffff7ec07c7 <putspent+455>:	lea    rdx,[rax+0x1]
   0x7ffff7ec07cb <putspent+459>:	mov    QWORD PTR [rbx+0x28],rdx
   0x7ffff7ec07cf <putspent+463>:	mov    BYTE PTR [rax],0xa
   0x7ffff7ec07d2 <putspent+466>:	neg    r12d
   0x7ffff7ec07d5 <putspent+469>:	sbb    eax,eax
   0x7ffff7ec07d7 <putspent+471>:	test   DWORD PTR [rbx],0x8000
   0x7ffff7ec07dd <putspent+477>:	jne    0x7ffff7ec0806 <putspent+518>
   0x7ffff7ec07df <putspent+479>:	mov    rdi,QWORD PTR [rbx+0x88]
   0x7ffff7ec07e6 <putspent+486>:	mov    ecx,DWORD PTR [rdi+0x4]
   0x7ffff7ec07e9 <putspent+489>:	lea    edx,[rcx-0x1]
   0x7ffff7ec07ec <putspent+492>:	mov    DWORD PTR [rdi+0x4],edx
   0x7ffff7ec07ef <putspent+495>:	test   edx,edx
   0x7ffff7ec07f1 <putspent+497>:	jne    0x7ffff7ec0806 <putspent+518>
   0x7ffff7ec07f3 <putspent+499>:	mov    QWORD PTR [rdi+0x8],0x0
   0x7ffff7ec07fb <putspent+507>:	xchg   DWORD PTR [rdi],edx
   0x7ffff7ec07fd <putspent+509>:	cmp    edx,0x1
   0x7ffff7ec0800 <putspent+512>:	jg     0x7ffff7ec0ab0 <putspent+1200>
   0x7ffff7ec0806 <putspent+518>:	add    rsp,0x18
   0x7ffff7ec080a <putspent+522>:	pop    rbx
   0x7ffff7ec080b <putspent+523>:	pop    rbp
   0x7ffff7ec080c <putspent+524>:	pop    r12
   0x7ffff7ec080e <putspent+526>:	pop    r13
   0x7ffff7ec0810 <putspent+528>:	ret
   0x7ffff7ec0811 <putspent+529>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0818 <putspent+536>:	xor    eax,eax
   0x7ffff7ec081a <putspent+538>:	lea    rsi,[rip+0xafe81]        # 0x7ffff7f706a2
   0x7ffff7ec0821 <putspent+545>:	mov    rdi,rbx
   0x7ffff7ec0824 <putspent+548>:	call   0x7ffff7df56b0 <fprintf>
   0x7ffff7ec0829 <putspent+553>:	test   eax,eax
   0x7ffff7ec082b <putspent+555>:	js     0x7ffff7ec0960 <putspent+864>
   0x7ffff7ec0831 <putspent+561>:	cmp    QWORD PTR [rbp+0x10],0xffffffffffffffff
   0x7ffff7ec0836 <putspent+566>:	je     0x7ffff7ec06b9 <putspent+185>
   0x7ffff7ec083c <putspent+572>:	mov    rdx,QWORD PTR [rbp+0x18]
   0x7ffff7ec0840 <putspent+576>:	cmp    rdx,0xffffffffffffffff
   0x7ffff7ec0844 <putspent+580>:	je     0x7ffff7ec06e0 <putspent+224>
   0x7ffff7ec084a <putspent+586>:	xor    eax,eax
   0x7ffff7ec084c <putspent+588>:	lea    rsi,[rip+0xafe4f]        # 0x7ffff7f706a2
   0x7ffff7ec0853 <putspent+595>:	mov    rdi,rbx
   0x7ffff7ec0856 <putspent+598>:	call   0x7ffff7df56b0 <fprintf>
   0x7ffff7ec085b <putspent+603>:	test   eax,eax
   0x7ffff7ec085d <putspent+605>:	js     0x7ffff7ec09c0 <putspent+960>
   0x7ffff7ec0863 <putspent+611>:	cmp    QWORD PTR [rbp+0x18],0xffffffffffffffff
   0x7ffff7ec0868 <putspent+616>:	je     0x7ffff7ec06e0 <putspent+224>
   0x7ffff7ec086e <putspent+622>:	mov    rdx,QWORD PTR [rbp+0x20]
   0x7ffff7ec0872 <putspent+626>:	cmp    rdx,0xffffffffffffffff
   0x7ffff7ec0876 <putspent+630>:	je     0x7ffff7ec0707 <putspent+263>
   0x7ffff7ec087c <putspent+636>:	xor    eax,eax
   0x7ffff7ec087e <putspent+638>:	lea    rsi,[rip+0xafe1d]        # 0x7ffff7f706a2
   0x7ffff7ec0885 <putspent+645>:	mov    rdi,rbx
   0x7ffff7ec0888 <putspent+648>:	call   0x7ffff7df56b0 <fprintf>
   0x7ffff7ec088d <putspent+653>:	test   eax,eax
   0x7ffff7ec088f <putspent+655>:	js     0x7ffff7ec0990 <putspent+912>
   0x7ffff7ec0895 <putspent+661>:	cmp    QWORD PTR [rbp+0x20],0xffffffffffffffff
   0x7ffff7ec089a <putspent+666>:	je     0x7ffff7ec0707 <putspent+263>
   0x7ffff7ec08a0 <putspent+672>:	mov    rdx,QWORD PTR [rbp+0x28]
   0x7ffff7ec08a4 <putspent+676>:	cmp    rdx,0xffffffffffffffff
   0x7ffff7ec08a8 <putspent+680>:	je     0x7ffff7ec072e <putspent+302>
   0x7ffff7ec08ae <putspent+686>:	xor    eax,eax
   0x7ffff7ec08b0 <putspent+688>:	lea    rsi,[rip+0xafdeb]        # 0x7ffff7f706a2
   0x7ffff7ec08b7 <putspent+695>:	mov    rdi,rbx
   0x7ffff7ec08ba <putspent+698>:	call   0x7ffff7df56b0 <fprintf>
   0x7ffff7ec08bf <putspent+703>:	test   eax,eax
   0x7ffff7ec08c1 <putspent+705>:	js     0x7ffff7ec09f0 <putspent+1008>
   0x7ffff7ec08c7 <putspent+711>:	cmp    QWORD PTR [rbp+0x28],0xffffffffffffffff
   0x7ffff7ec08cc <putspent+716>:	je     0x7ffff7ec072e <putspent+302>
   0x7ffff7ec08d2 <putspent+722>:	mov    rdx,QWORD PTR [rbp+0x30]
   0x7ffff7ec08d6 <putspent+726>:	cmp    rdx,0xffffffffffffffff
   0x7ffff7ec08da <putspent+730>:	je     0x7ffff7ec0755 <putspent+341>
   0x7ffff7ec08e0 <putspent+736>:	xor    eax,eax
   0x7ffff7ec08e2 <putspent+738>:	lea    rsi,[rip+0xafdb9]        # 0x7ffff7f706a2
   0x7ffff7ec08e9 <putspent+745>:	mov    rdi,rbx
   0x7ffff7ec08ec <putspent+748>:	call   0x7ffff7df56b0 <fprintf>
   0x7ffff7ec08f1 <putspent+753>:	test   eax,eax
   0x7ffff7ec08f3 <putspent+755>:	js     0x7ffff7ec0a50 <putspent+1104>
   0x7ffff7ec08f9 <putspent+761>:	cmp    QWORD PTR [rbp+0x30],0xffffffffffffffff
   0x7ffff7ec08fe <putspent+766>:	je     0x7ffff7ec0755 <putspent+341>
   0x7ffff7ec0904 <putspent+772>:	mov    rdx,QWORD PTR [rbp+0x38]
   0x7ffff7ec0908 <putspent+776>:	cmp    rdx,0xffffffffffffffff
   0x7ffff7ec090c <putspent+780>:	je     0x7ffff7ec077c <putspent+380>
   0x7ffff7ec0912 <putspent+786>:	xor    eax,eax
   0x7ffff7ec0914 <putspent+788>:	lea    rsi,[rip+0xafd87]        # 0x7ffff7f706a2
   0x7ffff7ec091b <putspent+795>:	mov    rdi,rbx
   0x7ffff7ec091e <putspent+798>:	call   0x7ffff7df56b0 <fprintf>
   0x7ffff7ec0923 <putspent+803>:	test   eax,eax
   0x7ffff7ec0925 <putspent+805>:	js     0x7ffff7ec0a20 <putspent+1056>
   0x7ffff7ec092b <putspent+811>:	cmp    QWORD PTR [rbp+0x38],0xffffffffffffffff
   0x7ffff7ec0930 <putspent+816>:	jne    0x7ffff7ec0795 <putspent+405>
   0x7ffff7ec0936 <putspent+822>:	jmp    0x7ffff7ec077c <putspent+380>
   0x7ffff7ec093b <putspent+827>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0940 <putspent+832>:	mov    esi,0x3a
   0x7ffff7ec0945 <putspent+837>:	mov    rdi,rbx
   0x7ffff7ec0948 <putspent+840>:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7ec094d <putspent+845>:	cmp    eax,0xffffffff
   0x7ffff7ec0950 <putspent+848>:	jne    0x7ffff7ec06d2 <putspent+210>
   0x7ffff7ec0956 <putspent+854>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0960 <putspent+864>:	lea    r12d,[r13+0x1]
   0x7ffff7ec0964 <putspent+868>:	jmp    0x7ffff7ec06d2 <putspent+210>
   0x7ffff7ec0969 <putspent+873>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0970 <putspent+880>:	mov    esi,0x3a
   0x7ffff7ec0975 <putspent+885>:	mov    rdi,rbx
   0x7ffff7ec0978 <putspent+888>:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7ec097d <putspent+893>:	cmp    eax,0xffffffff
   0x7ffff7ec0980 <putspent+896>:	jne    0x7ffff7ec0720 <putspent+288>
   0x7ffff7ec0986 <putspent+902>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0990 <putspent+912>:	add    r12d,0x1
   0x7ffff7ec0994 <putspent+916>:	jmp    0x7ffff7ec0720 <putspent+288>
   0x7ffff7ec0999 <putspent+921>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec09a0 <putspent+928>:	mov    esi,0x3a
   0x7ffff7ec09a5 <putspent+933>:	mov    rdi,rbx
   0x7ffff7ec09a8 <putspent+936>:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7ec09ad <putspent+941>:	cmp    eax,0xffffffff
   0x7ffff7ec09b0 <putspent+944>:	jne    0x7ffff7ec06f9 <putspent+249>
   0x7ffff7ec09b6 <putspent+950>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec09c0 <putspent+960>:	add    r12d,0x1
   0x7ffff7ec09c4 <putspent+964>:	jmp    0x7ffff7ec06f9 <putspent+249>
   0x7ffff7ec09c9 <putspent+969>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec09d0 <putspent+976>:	mov    esi,0x3a
   0x7ffff7ec09d5 <putspent+981>:	mov    rdi,rbx
   0x7ffff7ec09d8 <putspent+984>:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7ec09dd <putspent+989>:	cmp    eax,0xffffffff
   0x7ffff7ec09e0 <putspent+992>:	jne    0x7ffff7ec0747 <putspent+327>
   0x7ffff7ec09e6 <putspent+998>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec09f0 <putspent+1008>:	add    r12d,0x1
   0x7ffff7ec09f4 <putspent+1012>:	jmp    0x7ffff7ec0747 <putspent+327>
   0x7ffff7ec09f9 <putspent+1017>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0a00 <putspent+1024>:	mov    esi,0x3a
   0x7ffff7ec0a05 <putspent+1029>:	mov    rdi,rbx
   0x7ffff7ec0a08 <putspent+1032>:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7ec0a0d <putspent+1037>:	cmp    eax,0xffffffff
   0x7ffff7ec0a10 <putspent+1040>:	jne    0x7ffff7ec0795 <putspent+405>
   0x7ffff7ec0a16 <putspent+1046>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0a20 <putspent+1056>:	add    r12d,0x1
   0x7ffff7ec0a24 <putspent+1060>:	jmp    0x7ffff7ec0795 <putspent+405>
   0x7ffff7ec0a29 <putspent+1065>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0a30 <putspent+1072>:	mov    esi,0x3a
   0x7ffff7ec0a35 <putspent+1077>:	mov    rdi,rbx
   0x7ffff7ec0a38 <putspent+1080>:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7ec0a3d <putspent+1085>:	cmp    eax,0xffffffff
   0x7ffff7ec0a40 <putspent+1088>:	jne    0x7ffff7ec076e <putspent+366>
   0x7ffff7ec0a46 <putspent+1094>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0a50 <putspent+1104>:	add    r12d,0x1
   0x7ffff7ec0a54 <putspent+1108>:	jmp    0x7ffff7ec076e <putspent+366>
   0x7ffff7ec0a59 <putspent+1113>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0a60 <putspent+1120>:	mov    esi,0xa
   0x7ffff7ec0a65 <putspent+1125>:	mov    rdi,rbx
   0x7ffff7ec0a68 <putspent+1128>:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7ec0a6d <putspent+1133>:	cmp    eax,0xffffffff
   0x7ffff7ec0a70 <putspent+1136>:	jne    0x7ffff7ec07d2 <putspent+466>
   0x7ffff7ec0a76 <putspent+1142>:	jmp    0x7ffff7ec07d7 <putspent+471>
   0x7ffff7ec0a7b <putspent+1147>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0a80 <putspent+1152>:	mov    rax,QWORD PTR [rip+0xed389]        # 0x7ffff7fade10
   0x7ffff7ec0a87 <putspent+1159>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ec0a8e <putspent+1166>:	mov    eax,0xffffffff
   0x7ffff7ec0a93 <putspent+1171>:	jmp    0x7ffff7ec0806 <putspent+518>
   0x7ffff7ec0a98 <putspent+1176>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0aa0 <putspent+1184>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec0aa5 <putspent+1189>:	jmp    0x7ffff7ec066c <putspent+108>
   0x7ffff7ec0aaa <putspent+1194>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0ab0 <putspent+1200>:	mov    DWORD PTR [rsp+0xc],eax
   0x7ffff7ec0ab4 <putspent+1204>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec0ab9 <putspent+1209>:	mov    eax,DWORD PTR [rsp+0xc]
   0x7ffff7ec0abd <putspent+1213>:	jmp    0x7ffff7ec0806 <putspent+518>
   0x7ffff7ec0ac2:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0acc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0ad0 <setspent>:	endbr64
   0x7ffff7ec0ad4 <setspent+4>:	push   rbp
   0x7ffff7ec0ad5 <setspent+5>:	xor    eax,eax
   0x7ffff7ec0ad7 <setspent+7>:	mov    edx,0x1
   0x7ffff7ec0adc <setspent+12>:	push   rbx
   0x7ffff7ec0add <setspent+13>:	sub    rsp,0x8
   0x7ffff7ec0ae1 <setspent+17>:	lock cmpxchg DWORD PTR [rip+0xf5d8f],edx        # 0x7ffff7fb6878
   0x7ffff7ec0ae9 <setspent+25>:	jne    0x7ffff7ec0b40 <setspent+112>
   0x7ffff7ec0aeb <setspent+27>:	push   0x0
   0x7ffff7ec0aed <setspent+29>:	xor    r9d,r9d
   0x7ffff7ec0af0 <setspent+32>:	lea    r8,[rip+0xf5d91]        # 0x7ffff7fb6888
   0x7ffff7ec0af7 <setspent+39>:	lea    rcx,[rip+0xf5d82]        # 0x7ffff7fb6880
   0x7ffff7ec0afe <setspent+46>:	push   0x0
   0x7ffff7ec0b00 <setspent+48>:	lea    rdx,[rip+0xf5d89]        # 0x7ffff7fb6890
   0x7ffff7ec0b07 <setspent+55>:	lea    rsi,[rip+0x28f22]        # 0x7ffff7ee9a30
   0x7ffff7ec0b0e <setspent+62>:	lea    rdi,[rip+0xafb96]        # 0x7ffff7f706ab
   0x7ffff7ec0b15 <setspent+69>:	call   0x7ffff7ee85f0
   0x7ffff7ec0b1a <setspent+74>:	mov    rbx,QWORD PTR [rip+0xed2ef]        # 0x7ffff7fade10
   0x7ffff7ec0b21 <setspent+81>:	xor    eax,eax
   0x7ffff7ec0b23 <setspent+83>:	mov    ebp,DWORD PTR fs:[rbx]
   0x7ffff7ec0b26 <setspent+86>:	xchg   DWORD PTR [rip+0xf5d4c],eax        # 0x7ffff7fb6878
   0x7ffff7ec0b2c <setspent+92>:	pop    rdx
   0x7ffff7ec0b2d <setspent+93>:	pop    rcx
   0x7ffff7ec0b2e <setspent+94>:	cmp    eax,0x1
   0x7ffff7ec0b31 <setspent+97>:	jg     0x7ffff7ec0b50 <setspent+128>
   0x7ffff7ec0b33 <setspent+99>:	mov    DWORD PTR fs:[rbx],ebp
   0x7ffff7ec0b36 <setspent+102>:	add    rsp,0x8
   0x7ffff7ec0b3a <setspent+106>:	pop    rbx
   0x7ffff7ec0b3b <setspent+107>:	pop    rbp
   0x7ffff7ec0b3c <setspent+108>:	ret
   0x7ffff7ec0b3d <setspent+109>:	nop    DWORD PTR [rax]
   0x7ffff7ec0b40 <setspent+112>:	lea    rdi,[rip+0xf5d31]        # 0x7ffff7fb6878
   0x7ffff7ec0b47 <setspent+119>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec0b4c <setspent+124>:	jmp    0x7ffff7ec0aeb <setspent+27>
   0x7ffff7ec0b4e <setspent+126>:	xchg   ax,ax
   0x7ffff7ec0b50 <setspent+128>:	lea    rdi,[rip+0xf5d21]        # 0x7ffff7fb6878
   0x7ffff7ec0b57 <setspent+135>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec0b5c <setspent+140>:	mov    DWORD PTR fs:[rbx],ebp
   0x7ffff7ec0b5f <setspent+143>:	add    rsp,0x8
   0x7ffff7ec0b63 <setspent+147>:	pop    rbx
   0x7ffff7ec0b64 <setspent+148>:	pop    rbp
   0x7ffff7ec0b65 <setspent+149>:	ret
   0x7ffff7ec0b66:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0b70 <endspent>:	endbr64
   0x7ffff7ec0b74 <endspent+4>:	cmp    QWORD PTR [rip+0xf5d04],0x0        # 0x7ffff7fb6880
   0x7ffff7ec0b7c <endspent+12>:	je     0x7ffff7ec0be8 <endspent+120>
   0x7ffff7ec0b7e <endspent+14>:	push   rbp
   0x7ffff7ec0b7f <endspent+15>:	xor    eax,eax
   0x7ffff7ec0b81 <endspent+17>:	mov    edx,0x1
   0x7ffff7ec0b86 <endspent+22>:	push   rbx
   0x7ffff7ec0b87 <endspent+23>:	sub    rsp,0x8
   0x7ffff7ec0b8b <endspent+27>:	lock cmpxchg DWORD PTR [rip+0xf5ce5],edx        # 0x7ffff7fb6878
   0x7ffff7ec0b93 <endspent+35>:	jne    0x7ffff7ec0c00 <endspent+144>
   0x7ffff7ec0b95 <endspent+37>:	xor    r9d,r9d
   0x7ffff7ec0b98 <endspent+40>:	lea    r8,[rip+0xf5ce9]        # 0x7ffff7fb6888
   0x7ffff7ec0b9f <endspent+47>:	lea    rcx,[rip+0xf5cda]        # 0x7ffff7fb6880
   0x7ffff7ec0ba6 <endspent+54>:	lea    rdx,[rip+0xf5ce3]        # 0x7ffff7fb6890
   0x7ffff7ec0bad <endspent+61>:	lea    rsi,[rip+0x28e7c]        # 0x7ffff7ee9a30
   0x7ffff7ec0bb4 <endspent+68>:	lea    rdi,[rip+0xafaf9]        # 0x7ffff7f706b4
   0x7ffff7ec0bbb <endspent+75>:	call   0x7ffff7ee87e0
   0x7ffff7ec0bc0 <endspent+80>:	mov    rbx,QWORD PTR [rip+0xed249]        # 0x7ffff7fade10
   0x7ffff7ec0bc7 <endspent+87>:	xor    eax,eax
   0x7ffff7ec0bc9 <endspent+89>:	mov    ebp,DWORD PTR fs:[rbx]
   0x7ffff7ec0bcc <endspent+92>:	xchg   DWORD PTR [rip+0xf5ca6],eax        # 0x7ffff7fb6878
   0x7ffff7ec0bd2 <endspent+98>:	cmp    eax,0x1
   0x7ffff7ec0bd5 <endspent+101>:	jg     0x7ffff7ec0bf0 <endspent+128>
   0x7ffff7ec0bd7 <endspent+103>:	mov    DWORD PTR fs:[rbx],ebp
   0x7ffff7ec0bda <endspent+106>:	add    rsp,0x8
   0x7ffff7ec0bde <endspent+110>:	pop    rbx
   0x7ffff7ec0bdf <endspent+111>:	pop    rbp
   0x7ffff7ec0be0 <endspent+112>:	ret
   0x7ffff7ec0be1 <endspent+113>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0be8 <endspent+120>:	ret
   0x7ffff7ec0be9 <endspent+121>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0bf0 <endspent+128>:	lea    rdi,[rip+0xf5c81]        # 0x7ffff7fb6878
   0x7ffff7ec0bf7 <endspent+135>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec0bfc <endspent+140>:	jmp    0x7ffff7ec0bd7 <endspent+103>
   0x7ffff7ec0bfe <endspent+142>:	xchg   ax,ax
   0x7ffff7ec0c00 <endspent+144>:	lea    rdi,[rip+0xf5c71]        # 0x7ffff7fb6878
   0x7ffff7ec0c07 <endspent+151>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec0c0c <endspent+156>:	jmp    0x7ffff7ec0b95 <endspent+37>
   0x7ffff7ec0c0e:	xchg   ax,ax
   0x7ffff7ec0c10 <getspent_r>:	endbr64
   0x7ffff7ec0c14 <getspent_r+4>:	push   r12
   0x7ffff7ec0c16 <getspent_r+6>:	xor    eax,eax
   0x7ffff7ec0c18 <getspent_r+8>:	mov    r12,rdx
   0x7ffff7ec0c1b <getspent_r+11>:	mov    edx,0x1
   0x7ffff7ec0c20 <getspent_r+16>:	push   rbp
   0x7ffff7ec0c21 <getspent_r+17>:	push   rbx
   0x7ffff7ec0c22 <getspent_r+18>:	mov    rbx,rdi
   0x7ffff7ec0c25 <getspent_r+21>:	sub    rsp,0x10
   0x7ffff7ec0c29 <getspent_r+25>:	lock cmpxchg DWORD PTR [rip+0xf5c47],edx        # 0x7ffff7fb6878
   0x7ffff7ec0c31 <getspent_r+33>:	jne    0x7ffff7ec0ca0 <getspent_r+144>
   0x7ffff7ec0c33 <getspent_r+35>:	sub    rsp,0x8
   0x7ffff7ec0c37 <getspent_r+39>:	lea    r9,[rip+0xf5c4a]        # 0x7ffff7fb6888
   0x7ffff7ec0c3e <getspent_r+46>:	lea    r8,[rip+0xf5c3b]        # 0x7ffff7fb6880
   0x7ffff7ec0c45 <getspent_r+53>:	push   0x0
   0x7ffff7ec0c47 <getspent_r+55>:	lea    rdx,[rip+0x28de2]        # 0x7ffff7ee9a30
   0x7ffff7ec0c4e <getspent_r+62>:	lea    rdi,[rip+0xafa68]        # 0x7ffff7f706bd
   0x7ffff7ec0c55 <getspent_r+69>:	push   rcx
   0x7ffff7ec0c56 <getspent_r+70>:	lea    rcx,[rip+0xf5c33]        # 0x7ffff7fb6890
   0x7ffff7ec0c5d <getspent_r+77>:	push   r12
   0x7ffff7ec0c5f <getspent_r+79>:	push   rsi
   0x7ffff7ec0c60 <getspent_r+80>:	lea    rsi,[rip+0xafa44]        # 0x7ffff7f706ab
   0x7ffff7ec0c67 <getspent_r+87>:	push   rbx
   0x7ffff7ec0c68 <getspent_r+88>:	push   0x0
   0x7ffff7ec0c6a <getspent_r+90>:	push   0x0
   0x7ffff7ec0c6c <getspent_r+92>:	call   0x7ffff7ee88f0
   0x7ffff7ec0c71 <getspent_r+97>:	mov    rbx,QWORD PTR [rip+0xed198]        # 0x7ffff7fade10
   0x7ffff7ec0c78 <getspent_r+104>:	xor    edx,edx
   0x7ffff7ec0c7a <getspent_r+106>:	mov    ebp,DWORD PTR fs:[rbx]
   0x7ffff7ec0c7d <getspent_r+109>:	xchg   DWORD PTR [rip+0xf5bf5],edx        # 0x7ffff7fb6878
   0x7ffff7ec0c83 <getspent_r+115>:	add    rsp,0x40
   0x7ffff7ec0c87 <getspent_r+119>:	cmp    edx,0x1
   0x7ffff7ec0c8a <getspent_r+122>:	jg     0x7ffff7ec0cc8 <getspent_r+184>
   0x7ffff7ec0c8c <getspent_r+124>:	mov    DWORD PTR fs:[rbx],ebp
   0x7ffff7ec0c8f <getspent_r+127>:	add    rsp,0x10
   0x7ffff7ec0c93 <getspent_r+131>:	pop    rbx
   0x7ffff7ec0c94 <getspent_r+132>:	pop    rbp
   0x7ffff7ec0c95 <getspent_r+133>:	pop    r12
   0x7ffff7ec0c97 <getspent_r+135>:	ret
   0x7ffff7ec0c98 <getspent_r+136>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0ca0 <getspent_r+144>:	lea    rdi,[rip+0xf5bd1]        # 0x7ffff7fb6878
   0x7ffff7ec0ca7 <getspent_r+151>:	mov    QWORD PTR [rsp+0x8],rcx
   0x7ffff7ec0cac <getspent_r+156>:	mov    QWORD PTR [rsp],rsi
   0x7ffff7ec0cb0 <getspent_r+160>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec0cb5 <getspent_r+165>:	mov    rcx,QWORD PTR [rsp+0x8]
   0x7ffff7ec0cba <getspent_r+170>:	mov    rsi,QWORD PTR [rsp]
   0x7ffff7ec0cbe <getspent_r+174>:	jmp    0x7ffff7ec0c33 <getspent_r+35>
   0x7ffff7ec0cc3 <getspent_r+179>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0cc8 <getspent_r+184>:	lea    rdi,[rip+0xf5ba9]        # 0x7ffff7fb6878
   0x7ffff7ec0ccf <getspent_r+191>:	mov    DWORD PTR [rsp],eax
   0x7ffff7ec0cd2 <getspent_r+194>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec0cd7 <getspent_r+199>:	mov    eax,DWORD PTR [rsp]
   0x7ffff7ec0cda <getspent_r+202>:	mov    DWORD PTR fs:[rbx],ebp
   0x7ffff7ec0cdd <getspent_r+205>:	add    rsp,0x10
   0x7ffff7ec0ce1 <getspent_r+209>:	pop    rbx
   0x7ffff7ec0ce2 <getspent_r+210>:	pop    rbp
   0x7ffff7ec0ce3 <getspent_r+211>:	pop    r12
   0x7ffff7ec0ce5 <getspent_r+213>:	ret
   0x7ffff7ec0ce6:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0cf0 <getspnam_r>:	endbr64
   0x7ffff7ec0cf4 <getspnam_r+4>:	push   r15
   0x7ffff7ec0cf6 <getspnam_r+6>:	push   r14
   0x7ffff7ec0cf8 <getspnam_r+8>:	push   r13
   0x7ffff7ec0cfa <getspnam_r+10>:	lea    r13,[rip+0xaf9c7]        # 0x7ffff7f706c8
   0x7ffff7ec0d01 <getspnam_r+17>:	push   r12
   0x7ffff7ec0d03 <getspnam_r+19>:	mov    r12,rsi
   0x7ffff7ec0d06 <getspnam_r+22>:	mov    rsi,r13
   0x7ffff7ec0d09 <getspnam_r+25>:	push   rbp
   0x7ffff7ec0d0a <getspnam_r+26>:	mov    rbp,rcx
   0x7ffff7ec0d0d <getspnam_r+29>:	push   rbx
   0x7ffff7ec0d0e <getspnam_r+30>:	sub    rsp,0x68
   0x7ffff7ec0d12 <getspnam_r+34>:	mov    QWORD PTR [rsp+0x10],rdi
   0x7ffff7ec0d17 <getspnam_r+39>:	lea    r15,[rsp+0x50]
   0x7ffff7ec0d1c <getspnam_r+44>:	lea    r14,[rsp+0x48]
   0x7ffff7ec0d21 <getspnam_r+49>:	mov    QWORD PTR [rsp+0x18],rdx
   0x7ffff7ec0d26 <getspnam_r+54>:	mov    rcx,r15
   0x7ffff7ec0d29 <getspnam_r+57>:	xor    edx,edx
   0x7ffff7ec0d2b <getspnam_r+59>:	mov    rdi,r14
   0x7ffff7ec0d2e <getspnam_r+62>:	mov    QWORD PTR [rsp+0x38],r8
   0x7ffff7ec0d33 <getspnam_r+67>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ec0d3c <getspnam_r+76>:	mov    QWORD PTR [rsp+0x58],rax
   0x7ffff7ec0d41 <getspnam_r+81>:	xor    eax,eax
   0x7ffff7ec0d43 <getspnam_r+83>:	call   0x7ffff7ee9a30
   0x7ffff7ec0d48 <getspnam_r+88>:	mov    DWORD PTR [rsp+0x34],eax
   0x7ffff7ec0d4c <getspnam_r+92>:	test   eax,eax
   0x7ffff7ec0d4e <getspnam_r+94>:	jne    0x7ffff7ec0f78 <getspnam_r+648>
   0x7ffff7ec0d54 <getspnam_r+100>:	mov    rax,QWORD PTR [rip+0xed0b5]        # 0x7ffff7fade10
   0x7ffff7ec0d5b <getspnam_r+107>:	xor    ebx,ebx
   0x7ffff7ec0d5d <getspnam_r+109>:	mov    QWORD PTR [rsp+0x28],0x0
   0x7ffff7ec0d66 <getspnam_r+118>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ec0d6b <getspnam_r+123>:	add    rax,QWORD PTR fs:0x0
   0x7ffff7ec0d74 <getspnam_r+132>:	mov    QWORD PTR [rsp+0x20],rax
   0x7ffff7ec0d79 <getspnam_r+137>:	jmp    0x7ffff7ec0dcd <getspnam_r+221>
   0x7ffff7ec0d7b <getspnam_r+139>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0d80 <getspnam_r+144>:	test   ebx,ebx
   0x7ffff7ec0d82 <getspnam_r+146>:	je     0x7ffff7ec0e58 <getspnam_r+360>
   0x7ffff7ec0d88 <getspnam_r+152>:	cmp    eax,0x1
   0x7ffff7ec0d8b <getspnam_r+155>:	jne    0x7ffff7ec0e0b <getspnam_r+283>
   0x7ffff7ec0d8d <getspnam_r+157>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec0d92 <getspnam_r+162>:	xor    ebx,ebx
   0x7ffff7ec0d94 <getspnam_r+164>:	mov    r8d,0xffffffff
   0x7ffff7ec0d9a <getspnam_r+170>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ec0da1 <getspnam_r+177>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0da8 <getspnam_r+184>:	xor    r9d,r9d
   0x7ffff7ec0dab <getspnam_r+187>:	xor    edx,edx
   0x7ffff7ec0dad <getspnam_r+189>:	mov    rcx,r15
   0x7ffff7ec0db0 <getspnam_r+192>:	mov    rsi,r13
   0x7ffff7ec0db3 <getspnam_r+195>:	mov    rdi,r14
   0x7ffff7ec0db6 <getspnam_r+198>:	mov    DWORD PTR [rsp+0x30],r8d
   0x7ffff7ec0dbb <getspnam_r+203>:	call   0x7ffff7ee8310 <__nss_next2>
   0x7ffff7ec0dc0 <getspnam_r+208>:	mov    r8d,DWORD PTR [rsp+0x30]
   0x7ffff7ec0dc5 <getspnam_r+213>:	test   eax,eax
   0x7ffff7ec0dc7 <getspnam_r+215>:	jne    0x7ffff7ec0e90 <getspnam_r+416>
   0x7ffff7ec0dcd <getspnam_r+221>:	mov    rdi,QWORD PTR [rsp+0x50]
   0x7ffff7ec0dd2 <getspnam_r+226>:	call   0x7ffff7f0a4d0 <_dl_mcount_wrapper_check>
   0x7ffff7ec0dd7 <getspnam_r+231>:	mov    r8,QWORD PTR [rsp+0x20]
   0x7ffff7ec0ddc <getspnam_r+236>:	mov    rcx,rbp
   0x7ffff7ec0ddf <getspnam_r+239>:	mov    rsi,r12
   0x7ffff7ec0de2 <getspnam_r+242>:	mov    rdx,QWORD PTR [rsp+0x18]
   0x7ffff7ec0de7 <getspnam_r+247>:	mov    rdi,QWORD PTR [rsp+0x10]
   0x7ffff7ec0dec <getspnam_r+252>:	call   QWORD PTR [rsp+0x50]
   0x7ffff7ec0df0 <getspnam_r+256>:	mov    r8d,eax
   0x7ffff7ec0df3 <getspnam_r+259>:	cmp    eax,0xfffffffe
   0x7ffff7ec0df6 <getspnam_r+262>:	jne    0x7ffff7ec0d80 <getspnam_r+144>
   0x7ffff7ec0df8 <getspnam_r+264>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec0dfd <getspnam_r+269>:	cmp    DWORD PTR fs:[rax],0x22
   0x7ffff7ec0e01 <getspnam_r+273>:	je     0x7ffff7ec0f58 <getspnam_r+616>
   0x7ffff7ec0e07 <getspnam_r+279>:	test   ebx,ebx
   0x7ffff7ec0e09 <getspnam_r+281>:	je     0x7ffff7ec0e58 <getspnam_r+360>
   0x7ffff7ec0e0b <getspnam_r+283>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec0e10 <getspnam_r+288>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ec0e17 <getspnam_r+295>:	mov    rax,QWORD PTR [rsp+0x48]
   0x7ffff7ec0e1c <getspnam_r+300>:	mov    eax,DWORD PTR [rax+0x8]
   0x7ffff7ec0e1f <getspnam_r+303>:	shr    eax,0x6
   0x7ffff7ec0e22 <getspnam_r+306>:	and    eax,0x3
   0x7ffff7ec0e25 <getspnam_r+309>:	cmp    eax,0x2
   0x7ffff7ec0e28 <getspnam_r+312>:	jne    0x7ffff7ec0e80 <getspnam_r+400>
   0x7ffff7ec0e2a <getspnam_r+314>:	cmp    QWORD PTR [rsp+0x28],0x0
   0x7ffff7ec0e30 <getspnam_r+320>:	je     0x7ffff7ec0ee0 <getspnam_r+496>
   0x7ffff7ec0e36 <getspnam_r+326>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec0e3b <getspnam_r+331>:	mov    r8d,0xffffffff
   0x7ffff7ec0e41 <getspnam_r+337>:	mov    ebx,0x1
   0x7ffff7ec0e46 <getspnam_r+342>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ec0e4d <getspnam_r+349>:	jmp    0x7ffff7ec0da8 <getspnam_r+184>
   0x7ffff7ec0e52 <getspnam_r+354>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0e58 <getspnam_r+360>:	mov    rax,QWORD PTR [rsp+0x48]
   0x7ffff7ec0e5d <getspnam_r+365>:	lea    ecx,[r8+r8*1+0x4]
   0x7ffff7ec0e62 <getspnam_r+370>:	mov    eax,DWORD PTR [rax+0x8]
   0x7ffff7ec0e65 <getspnam_r+373>:	shr    eax,cl
   0x7ffff7ec0e67 <getspnam_r+375>:	and    eax,0x3
   0x7ffff7ec0e6a <getspnam_r+378>:	cmp    eax,0x2
   0x7ffff7ec0e6d <getspnam_r+381>:	jne    0x7ffff7ec0e75 <getspnam_r+389>
   0x7ffff7ec0e6f <getspnam_r+383>:	cmp    r8d,0x1
   0x7ffff7ec0e73 <getspnam_r+387>:	je     0x7ffff7ec0e2a <getspnam_r+314>
   0x7ffff7ec0e75 <getspnam_r+389>:	xor    ebx,ebx
   0x7ffff7ec0e77 <getspnam_r+391>:	jmp    0x7ffff7ec0da8 <getspnam_r+184>
   0x7ffff7ec0e7c <getspnam_r+396>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0e80 <getspnam_r+400>:	mov    r8d,0x1
   0x7ffff7ec0e86 <getspnam_r+406>:	mov    ebx,0x1
   0x7ffff7ec0e8b <getspnam_r+411>:	jmp    0x7ffff7ec0da8 <getspnam_r+184>
   0x7ffff7ec0e90 <getspnam_r+416>:	mov    rdi,QWORD PTR [rsp+0x28]
   0x7ffff7ec0e95 <getspnam_r+421>:	mov    DWORD PTR [rsp+0x30],r8d
   0x7ffff7ec0e9a <getspnam_r+426>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ec0e9f <getspnam_r+431>:	mov    r8d,DWORD PTR [rsp+0x30]
   0x7ffff7ec0ea4 <getspnam_r+436>:	mov    rax,QWORD PTR [rsp+0x38]
   0x7ffff7ec0ea9 <getspnam_r+441>:	cmp    r8d,0x1
   0x7ffff7ec0ead <getspnam_r+445>:	je     0x7ffff7ec0f20 <getspnam_r+560>
   0x7ffff7ec0eaf <getspnam_r+447>:	mov    QWORD PTR [rax],0x0
   0x7ffff7ec0eb6 <getspnam_r+454>:	jbe    0x7ffff7ec0f23 <getspnam_r+563>
   0x7ffff7ec0eb8 <getspnam_r+456>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec0ebd <getspnam_r+461>:	mov    eax,DWORD PTR fs:[rax]
   0x7ffff7ec0ec0 <getspnam_r+464>:	mov    DWORD PTR [rsp+0x34],eax
   0x7ffff7ec0ec4 <getspnam_r+468>:	cmp    eax,0x22
   0x7ffff7ec0ec7 <getspnam_r+471>:	jne    0x7ffff7ec0f2f <getspnam_r+575>
   0x7ffff7ec0ec9 <getspnam_r+473>:	cmp    r8d,0xfffffffe
   0x7ffff7ec0ecd <getspnam_r+477>:	je     0x7ffff7ec0f2f <getspnam_r+575>
   0x7ffff7ec0ecf <getspnam_r+479>:	mov    DWORD PTR [rsp+0x34],0x16
   0x7ffff7ec0ed7 <getspnam_r+487>:	jmp    0x7ffff7ec0f23 <getspnam_r+563>
   0x7ffff7ec0ed9 <getspnam_r+489>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec0ee0 <getspnam_r+496>:	mov    rdi,rbp
   0x7ffff7ec0ee3 <getspnam_r+499>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7ec0ee8 <getspnam_r+504>:	mov    QWORD PTR [rsp+0x28],rax
   0x7ffff7ec0eed <getspnam_r+509>:	test   rax,rax
   0x7ffff7ec0ef0 <getspnam_r+512>:	jne    0x7ffff7ec0e36 <getspnam_r+326>
   0x7ffff7ec0ef6 <getspnam_r+518>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec0efb <getspnam_r+523>:	mov    DWORD PTR fs:[rax],0xc
   0x7ffff7ec0f02 <getspnam_r+530>:	mov    rax,QWORD PTR [rsp+0x38]
   0x7ffff7ec0f07 <getspnam_r+535>:	mov    DWORD PTR [rsp+0x34],0xc
   0x7ffff7ec0f0f <getspnam_r+543>:	mov    QWORD PTR [rax],0x0
   0x7ffff7ec0f16 <getspnam_r+550>:	jmp    0x7ffff7ec0f2f <getspnam_r+575>
   0x7ffff7ec0f18 <getspnam_r+552>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0f20 <getspnam_r+560>:	mov    QWORD PTR [rax],r12
   0x7ffff7ec0f23 <getspnam_r+563>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec0f28 <getspnam_r+568>:	mov    ebx,DWORD PTR [rsp+0x34]
   0x7ffff7ec0f2c <getspnam_r+572>:	mov    DWORD PTR fs:[rax],ebx
   0x7ffff7ec0f2f <getspnam_r+575>:	mov    rax,QWORD PTR [rsp+0x58]
   0x7ffff7ec0f34 <getspnam_r+580>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7ec0f3d <getspnam_r+589>:	jne    0x7ffff7ec0fa2 <getspnam_r+690>
   0x7ffff7ec0f3f <getspnam_r+591>:	mov    eax,DWORD PTR [rsp+0x34]
   0x7ffff7ec0f43 <getspnam_r+595>:	add    rsp,0x68
   0x7ffff7ec0f47 <getspnam_r+599>:	pop    rbx
   0x7ffff7ec0f48 <getspnam_r+600>:	pop    rbp
   0x7ffff7ec0f49 <getspnam_r+601>:	pop    r12
   0x7ffff7ec0f4b <getspnam_r+603>:	pop    r13
   0x7ffff7ec0f4d <getspnam_r+605>:	pop    r14
   0x7ffff7ec0f4f <getspnam_r+607>:	pop    r15
   0x7ffff7ec0f51 <getspnam_r+609>:	ret
   0x7ffff7ec0f52 <getspnam_r+610>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0f58 <getspnam_r+616>:	mov    rdi,QWORD PTR [rsp+0x28]
   0x7ffff7ec0f5d <getspnam_r+621>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ec0f62 <getspnam_r+626>:	mov    rax,QWORD PTR [rsp+0x38]
   0x7ffff7ec0f67 <getspnam_r+631>:	mov    DWORD PTR [rsp+0x34],0x22
   0x7ffff7ec0f6f <getspnam_r+639>:	mov    QWORD PTR [rax],0x0
   0x7ffff7ec0f76 <getspnam_r+646>:	jmp    0x7ffff7ec0f2f <getspnam_r+575>
   0x7ffff7ec0f78 <getspnam_r+648>:	mov    rax,QWORD PTR [rsp+0x38]
   0x7ffff7ec0f7d <getspnam_r+653>:	mov    QWORD PTR [rax],0x0
   0x7ffff7ec0f84 <getspnam_r+660>:	mov    rax,QWORD PTR [rip+0xece85]        # 0x7ffff7fade10
   0x7ffff7ec0f8b <getspnam_r+667>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ec0f90 <getspnam_r+672>:	mov    eax,DWORD PTR fs:[rax]
   0x7ffff7ec0f93 <getspnam_r+675>:	mov    DWORD PTR [rsp+0x34],eax
   0x7ffff7ec0f97 <getspnam_r+679>:	cmp    eax,0x22
   0x7ffff7ec0f9a <getspnam_r+682>:	je     0x7ffff7ec0ecf <getspnam_r+479>
   0x7ffff7ec0fa0 <getspnam_r+688>:	jmp    0x7ffff7ec0f2f <getspnam_r+575>
   0x7ffff7ec0fa2 <getspnam_r+690>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ec0fa7:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec0fb0 <_nss_files_parse_spent>:	endbr64
   0x7ffff7ec0fb4 <_nss_files_parse_spent+4>:	push   r14
   0x7ffff7ec0fb6 <_nss_files_parse_spent+6>:	push   r13
   0x7ffff7ec0fb8 <_nss_files_parse_spent+8>:	push   r12
   0x7ffff7ec0fba <_nss_files_parse_spent+10>:	push   rbp
   0x7ffff7ec0fbb <_nss_files_parse_spent+11>:	mov    rbp,rsi
   0x7ffff7ec0fbe <_nss_files_parse_spent+14>:	mov    esi,0xa
   0x7ffff7ec0fc3 <_nss_files_parse_spent+19>:	push   rbx
   0x7ffff7ec0fc4 <_nss_files_parse_spent+20>:	mov    rbx,rdi
   0x7ffff7ec0fc7 <_nss_files_parse_spent+23>:	sub    rsp,0x10
   0x7ffff7ec0fcb <_nss_files_parse_spent+27>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ec0fd4 <_nss_files_parse_spent+36>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ec0fd9 <_nss_files_parse_spent+41>:	xor    eax,eax
   0x7ffff7ec0fdb <_nss_files_parse_spent+43>:	call   0x7ffff7dbd600 <*ABS*+0xa82e0@plt>
   0x7ffff7ec0fe0 <_nss_files_parse_spent+48>:	test   rax,rax
   0x7ffff7ec0fe3 <_nss_files_parse_spent+51>:	je     0x7ffff7ec0fe8 <_nss_files_parse_spent+56>
   0x7ffff7ec0fe5 <_nss_files_parse_spent+53>:	mov    BYTE PTR [rax],0x0
   0x7ffff7ec0fe8 <_nss_files_parse_spent+56>:	mov    QWORD PTR [rbp+0x0],rbx
   0x7ffff7ec0fec <_nss_files_parse_spent+60>:	movzx  eax,BYTE PTR [rbx]
   0x7ffff7ec0fef <_nss_files_parse_spent+63>:	test   al,al
   0x7ffff7ec0ff1 <_nss_files_parse_spent+65>:	jne    0x7ffff7ec1010 <_nss_files_parse_spent+96>
   0x7ffff7ec0ff3 <_nss_files_parse_spent+67>:	jmp    0x7ffff7ec11c0 <_nss_files_parse_spent+528>
   0x7ffff7ec0ff8 <_nss_files_parse_spent+72>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec1000 <_nss_files_parse_spent+80>:	movzx  eax,BYTE PTR [rbx+0x1]
   0x7ffff7ec1004 <_nss_files_parse_spent+84>:	add    rbx,0x1
   0x7ffff7ec1008 <_nss_files_parse_spent+88>:	test   al,al
   0x7ffff7ec100a <_nss_files_parse_spent+90>:	je     0x7ffff7ec11c0 <_nss_files_parse_spent+528>
   0x7ffff7ec1010 <_nss_files_parse_spent+96>:	cmp    al,0x3a
   0x7ffff7ec1012 <_nss_files_parse_spent+98>:	jne    0x7ffff7ec1000 <_nss_files_parse_spent+80>
   0x7ffff7ec1014 <_nss_files_parse_spent+100>:	test   al,al
   0x7ffff7ec1016 <_nss_files_parse_spent+102>:	je     0x7ffff7ec11c0 <_nss_files_parse_spent+528>
   0x7ffff7ec101c <_nss_files_parse_spent+108>:	cmp    BYTE PTR [rbx+0x1],0x0
   0x7ffff7ec1020 <_nss_files_parse_spent+112>:	mov    BYTE PTR [rbx],0x0
   0x7ffff7ec1023 <_nss_files_parse_spent+115>:	lea    rax,[rbx+0x1]
   0x7ffff7ec1027 <_nss_files_parse_spent+119>:	je     0x7ffff7ec11bd <_nss_files_parse_spent+525>
   0x7ffff7ec102d <_nss_files_parse_spent+125>:	mov    QWORD PTR [rbp+0x8],rax
   0x7ffff7ec1031 <_nss_files_parse_spent+129>:	movzx  edx,BYTE PTR [rax]
   0x7ffff7ec1034 <_nss_files_parse_spent+132>:	test   dl,dl
   0x7ffff7ec1036 <_nss_files_parse_spent+134>:	jne    0x7ffff7ec1050 <_nss_files_parse_spent+160>
   0x7ffff7ec1038 <_nss_files_parse_spent+136>:	jmp    0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec103d <_nss_files_parse_spent+141>:	nop    DWORD PTR [rax]
   0x7ffff7ec1040 <_nss_files_parse_spent+144>:	movzx  edx,BYTE PTR [rax+0x1]
   0x7ffff7ec1044 <_nss_files_parse_spent+148>:	add    rax,0x1
   0x7ffff7ec1048 <_nss_files_parse_spent+152>:	test   dl,dl
   0x7ffff7ec104a <_nss_files_parse_spent+154>:	je     0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec1050 <_nss_files_parse_spent+160>:	cmp    dl,0x3a
   0x7ffff7ec1053 <_nss_files_parse_spent+163>:	jne    0x7ffff7ec1040 <_nss_files_parse_spent+144>
   0x7ffff7ec1055 <_nss_files_parse_spent+165>:	test   dl,dl
   0x7ffff7ec1057 <_nss_files_parse_spent+167>:	je     0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec105d <_nss_files_parse_spent+173>:	cmp    BYTE PTR [rax+0x1],0x0
   0x7ffff7ec1061 <_nss_files_parse_spent+177>:	mov    BYTE PTR [rax],0x0
   0x7ffff7ec1064 <_nss_files_parse_spent+180>:	lea    r12,[rax+0x1]
   0x7ffff7ec1068 <_nss_files_parse_spent+184>:	je     0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec106e <_nss_files_parse_spent+190>:	mov    r13,rsp
   0x7ffff7ec1071 <_nss_files_parse_spent+193>:	xor    ecx,ecx
   0x7ffff7ec1073 <_nss_files_parse_spent+195>:	mov    edx,0xa
   0x7ffff7ec1078 <_nss_files_parse_spent+200>:	mov    rdi,r12
   0x7ffff7ec107b <_nss_files_parse_spent+203>:	mov    rsi,r13
   0x7ffff7ec107e <_nss_files_parse_spent+206>:	call   0x7ffff7ddc500 <__strtoull_internal>
   0x7ffff7ec1083 <_nss_files_parse_spent+211>:	mov    rcx,rax
   0x7ffff7ec1086 <_nss_files_parse_spent+214>:	shr    rcx,0x20
   0x7ffff7ec108a <_nss_files_parse_spent+218>:	jne    0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec1090 <_nss_files_parse_spent+224>:	mov    rbx,QWORD PTR [rsp]
   0x7ffff7ec1094 <_nss_files_parse_spent+228>:	cdqe
   0x7ffff7ec1096 <_nss_files_parse_spent+230>:	mov    rdx,0xffffffffffffffff
   0x7ffff7ec109d <_nss_files_parse_spent+237>:	cmp    rbx,r12
   0x7ffff7ec10a0 <_nss_files_parse_spent+240>:	cmove  rax,rdx
   0x7ffff7ec10a4 <_nss_files_parse_spent+244>:	mov    QWORD PTR [rbp+0x10],rax
   0x7ffff7ec10a8 <_nss_files_parse_spent+248>:	movzx  eax,BYTE PTR [rbx]
   0x7ffff7ec10ab <_nss_files_parse_spent+251>:	cmp    al,0x3a
   0x7ffff7ec10ad <_nss_files_parse_spent+253>:	je     0x7ffff7ec1270 <_nss_files_parse_spent+704>
   0x7ffff7ec10b3 <_nss_files_parse_spent+259>:	test   al,al
   0x7ffff7ec10b5 <_nss_files_parse_spent+261>:	jne    0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec10bb <_nss_files_parse_spent+267>:	cmp    BYTE PTR [rbx],0x0
   0x7ffff7ec10be <_nss_files_parse_spent+270>:	je     0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec10c4 <_nss_files_parse_spent+276>:	xor    ecx,ecx
   0x7ffff7ec10c6 <_nss_files_parse_spent+278>:	mov    edx,0xa
   0x7ffff7ec10cb <_nss_files_parse_spent+283>:	mov    rsi,r13
   0x7ffff7ec10ce <_nss_files_parse_spent+286>:	mov    rdi,rbx
   0x7ffff7ec10d1 <_nss_files_parse_spent+289>:	call   0x7ffff7ddc500 <__strtoull_internal>
   0x7ffff7ec10d6 <_nss_files_parse_spent+294>:	mov    rcx,rax
   0x7ffff7ec10d9 <_nss_files_parse_spent+297>:	shr    rcx,0x20
   0x7ffff7ec10dd <_nss_files_parse_spent+301>:	jne    0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec10e3 <_nss_files_parse_spent+307>:	mov    r12,QWORD PTR [rsp]
   0x7ffff7ec10e7 <_nss_files_parse_spent+311>:	cdqe
   0x7ffff7ec10e9 <_nss_files_parse_spent+313>:	mov    rdx,0xffffffffffffffff
   0x7ffff7ec10f0 <_nss_files_parse_spent+320>:	cmp    r12,rbx
   0x7ffff7ec10f3 <_nss_files_parse_spent+323>:	cmove  rax,rdx
   0x7ffff7ec10f7 <_nss_files_parse_spent+327>:	mov    QWORD PTR [rbp+0x18],rax
   0x7ffff7ec10fb <_nss_files_parse_spent+331>:	movzx  eax,BYTE PTR [r12]
   0x7ffff7ec1100 <_nss_files_parse_spent+336>:	cmp    al,0x3a
   0x7ffff7ec1102 <_nss_files_parse_spent+338>:	je     0x7ffff7ec1279 <_nss_files_parse_spent+713>
   0x7ffff7ec1108 <_nss_files_parse_spent+344>:	test   al,al
   0x7ffff7ec110a <_nss_files_parse_spent+346>:	jne    0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec1110 <_nss_files_parse_spent+352>:	cmp    BYTE PTR [r12],0x0
   0x7ffff7ec1115 <_nss_files_parse_spent+357>:	je     0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec111b <_nss_files_parse_spent+363>:	xor    ecx,ecx
   0x7ffff7ec111d <_nss_files_parse_spent+365>:	mov    edx,0xa
   0x7ffff7ec1122 <_nss_files_parse_spent+370>:	mov    rsi,r13
   0x7ffff7ec1125 <_nss_files_parse_spent+373>:	mov    rdi,r12
   0x7ffff7ec1128 <_nss_files_parse_spent+376>:	call   0x7ffff7ddc500 <__strtoull_internal>
   0x7ffff7ec112d <_nss_files_parse_spent+381>:	mov    rcx,rax
   0x7ffff7ec1130 <_nss_files_parse_spent+384>:	shr    rcx,0x20
   0x7ffff7ec1134 <_nss_files_parse_spent+388>:	jne    0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec113a <_nss_files_parse_spent+394>:	mov    rbx,QWORD PTR [rsp]
   0x7ffff7ec113e <_nss_files_parse_spent+398>:	cdqe
   0x7ffff7ec1140 <_nss_files_parse_spent+400>:	mov    rdx,0xffffffffffffffff
   0x7ffff7ec1147 <_nss_files_parse_spent+407>:	cmp    rbx,r12
   0x7ffff7ec114a <_nss_files_parse_spent+410>:	cmove  rax,rdx
   0x7ffff7ec114e <_nss_files_parse_spent+414>:	mov    QWORD PTR [rbp+0x20],rax
   0x7ffff7ec1152 <_nss_files_parse_spent+418>:	movzx  eax,BYTE PTR [rbx]
   0x7ffff7ec1155 <_nss_files_parse_spent+421>:	cmp    al,0x3a
   0x7ffff7ec1157 <_nss_files_parse_spent+423>:	je     0x7ffff7ec1282 <_nss_files_parse_spent+722>
   0x7ffff7ec115d <_nss_files_parse_spent+429>:	test   al,al
   0x7ffff7ec115f <_nss_files_parse_spent+431>:	jne    0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec1165 <_nss_files_parse_spent+437>:	mov    rax,QWORD PTR [rip+0xecc8c]        # 0x7ffff7faddf8
   0x7ffff7ec116c <_nss_files_parse_spent+444>:	movsx  rdx,BYTE PTR [rbx]
   0x7ffff7ec1170 <_nss_files_parse_spent+448>:	mov    rcx,QWORD PTR fs:[rax]
   0x7ffff7ec1174 <_nss_files_parse_spent+452>:	mov    rax,rdx
   0x7ffff7ec1177 <_nss_files_parse_spent+455>:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
   0x7ffff7ec117c <_nss_files_parse_spent+460>:	je     0x7ffff7ec1193 <_nss_files_parse_spent+483>
   0x7ffff7ec117e <_nss_files_parse_spent+462>:	xchg   ax,ax
   0x7ffff7ec1180 <_nss_files_parse_spent+464>:	movsx  rdx,BYTE PTR [rbx+0x1]
   0x7ffff7ec1185 <_nss_files_parse_spent+469>:	add    rbx,0x1
   0x7ffff7ec1189 <_nss_files_parse_spent+473>:	mov    rax,rdx
   0x7ffff7ec118c <_nss_files_parse_spent+476>:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
   0x7ffff7ec1191 <_nss_files_parse_spent+481>:	jne    0x7ffff7ec1180 <_nss_files_parse_spent+464>
   0x7ffff7ec1193 <_nss_files_parse_spent+483>:	test   al,al
   0x7ffff7ec1195 <_nss_files_parse_spent+485>:	jne    0x7ffff7ec128b <_nss_files_parse_spent+731>
   0x7ffff7ec119b <_nss_files_parse_spent+491>:	pcmpeqd xmm0,xmm0
   0x7ffff7ec119f <_nss_files_parse_spent+495>:	mov    QWORD PTR [rbp+0x38],0xffffffffffffffff
   0x7ffff7ec11a7 <_nss_files_parse_spent+503>:	mov    eax,0x1
   0x7ffff7ec11ac <_nss_files_parse_spent+508>:	mov    QWORD PTR [rbp+0x40],0xffffffffffffffff
   0x7ffff7ec11b4 <_nss_files_parse_spent+516>:	movups XMMWORD PTR [rbp+0x28],xmm0
   0x7ffff7ec11b8 <_nss_files_parse_spent+520>:	jmp    0x7ffff7ec1242 <_nss_files_parse_spent+658>
   0x7ffff7ec11bd <_nss_files_parse_spent+525>:	mov    rbx,rax
   0x7ffff7ec11c0 <_nss_files_parse_spent+528>:	mov    rax,QWORD PTR [rbp+0x0]
   0x7ffff7ec11c4 <_nss_files_parse_spent+532>:	movzx  eax,BYTE PTR [rax]
   0x7ffff7ec11c7 <_nss_files_parse_spent+535>:	sub    eax,0x2b
   0x7ffff7ec11ca <_nss_files_parse_spent+538>:	test   al,0xfd
   0x7ffff7ec11cc <_nss_files_parse_spent+540>:	jne    0x7ffff7ec1268 <_nss_files_parse_spent+696>
   0x7ffff7ec11d2 <_nss_files_parse_spent+546>:	pxor   xmm0,xmm0
   0x7ffff7ec11d6 <_nss_files_parse_spent+550>:	mov    QWORD PTR [rbp+0x8],0x0
   0x7ffff7ec11de <_nss_files_parse_spent+558>:	mov    eax,0x1
   0x7ffff7ec11e3 <_nss_files_parse_spent+563>:	movups XMMWORD PTR [rbp+0x10],xmm0
   0x7ffff7ec11e7 <_nss_files_parse_spent+567>:	movdqa xmm0,XMMWORD PTR [rip+0xb6171]        # 0x7ffff7f77360
   0x7ffff7ec11ef <_nss_files_parse_spent+575>:	mov    QWORD PTR [rbp+0x40],0xffffffffffffffff
   0x7ffff7ec11f7 <_nss_files_parse_spent+583>:	movups XMMWORD PTR [rbp+0x20],xmm0
   0x7ffff7ec11fb <_nss_files_parse_spent+587>:	pcmpeqd xmm0,xmm0
   0x7ffff7ec11ff <_nss_files_parse_spent+591>:	movups XMMWORD PTR [rbp+0x30],xmm0
   0x7ffff7ec1203 <_nss_files_parse_spent+595>:	jmp    0x7ffff7ec1242 <_nss_files_parse_spent+658>
   0x7ffff7ec1205 <_nss_files_parse_spent+597>:	mov    edx,0xa
   0x7ffff7ec120a <_nss_files_parse_spent+602>:	xor    ecx,ecx
   0x7ffff7ec120c <_nss_files_parse_spent+604>:	mov    rsi,r13
   0x7ffff7ec120f <_nss_files_parse_spent+607>:	mov    rdi,r12
   0x7ffff7ec1212 <_nss_files_parse_spent+610>:	call   0x7ffff7ddc500 <__strtoull_internal>
   0x7ffff7ec1217 <_nss_files_parse_spent+615>:	mov    edx,0xffffffff
   0x7ffff7ec121c <_nss_files_parse_spent+620>:	cmp    rax,rdx
   0x7ffff7ec121f <_nss_files_parse_spent+623>:	ja     0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec1221 <_nss_files_parse_spent+625>:	mov    rdx,QWORD PTR [rsp]
   0x7ffff7ec1225 <_nss_files_parse_spent+629>:	mov    rcx,0xffffffffffffffff
   0x7ffff7ec122c <_nss_files_parse_spent+636>:	cmp    rdx,r12
   0x7ffff7ec122f <_nss_files_parse_spent+639>:	cmove  rax,rcx
   0x7ffff7ec1233 <_nss_files_parse_spent+643>:	mov    QWORD PTR [rbp+0x40],rax
   0x7ffff7ec1237 <_nss_files_parse_spent+647>:	cmp    BYTE PTR [rdx],0x0
   0x7ffff7ec123a <_nss_files_parse_spent+650>:	je     0x7ffff7ec1385 <_nss_files_parse_spent+981>
   0x7ffff7ec1240 <_nss_files_parse_spent+656>:	xor    eax,eax
   0x7ffff7ec1242 <_nss_files_parse_spent+658>:	mov    rdx,QWORD PTR [rsp+0x8]
   0x7ffff7ec1247 <_nss_files_parse_spent+663>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7ec1250 <_nss_files_parse_spent+672>:	jne    0x7ffff7ec1398 <_nss_files_parse_spent+1000>
   0x7ffff7ec1256 <_nss_files_parse_spent+678>:	add    rsp,0x10
   0x7ffff7ec125a <_nss_files_parse_spent+682>:	pop    rbx
   0x7ffff7ec125b <_nss_files_parse_spent+683>:	pop    rbp
   0x7ffff7ec125c <_nss_files_parse_spent+684>:	pop    r12
   0x7ffff7ec125e <_nss_files_parse_spent+686>:	pop    r13
   0x7ffff7ec1260 <_nss_files_parse_spent+688>:	pop    r14
   0x7ffff7ec1262 <_nss_files_parse_spent+690>:	ret
   0x7ffff7ec1263 <_nss_files_parse_spent+691>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec1268 <_nss_files_parse_spent+696>:	mov    rax,rbx
   0x7ffff7ec126b <_nss_files_parse_spent+699>:	jmp    0x7ffff7ec102d <_nss_files_parse_spent+125>
   0x7ffff7ec1270 <_nss_files_parse_spent+704>:	add    rbx,0x1
   0x7ffff7ec1274 <_nss_files_parse_spent+708>:	jmp    0x7ffff7ec10bb <_nss_files_parse_spent+267>
   0x7ffff7ec1279 <_nss_files_parse_spent+713>:	add    r12,0x1
   0x7ffff7ec127d <_nss_files_parse_spent+717>:	jmp    0x7ffff7ec1110 <_nss_files_parse_spent+352>
   0x7ffff7ec1282 <_nss_files_parse_spent+722>:	add    rbx,0x1
   0x7ffff7ec1286 <_nss_files_parse_spent+726>:	jmp    0x7ffff7ec1165 <_nss_files_parse_spent+437>
   0x7ffff7ec128b <_nss_files_parse_spent+731>:	xor    ecx,ecx
   0x7ffff7ec128d <_nss_files_parse_spent+733>:	mov    edx,0xa
   0x7ffff7ec1292 <_nss_files_parse_spent+738>:	mov    rsi,r13
   0x7ffff7ec1295 <_nss_files_parse_spent+741>:	mov    rdi,rbx
   0x7ffff7ec1298 <_nss_files_parse_spent+744>:	call   0x7ffff7ddc500 <__strtoull_internal>
   0x7ffff7ec129d <_nss_files_parse_spent+749>:	mov    rcx,rax
   0x7ffff7ec12a0 <_nss_files_parse_spent+752>:	shr    rcx,0x20
   0x7ffff7ec12a4 <_nss_files_parse_spent+756>:	jne    0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec12a6 <_nss_files_parse_spent+758>:	mov    r14,QWORD PTR [rsp]
   0x7ffff7ec12aa <_nss_files_parse_spent+762>:	cdqe
   0x7ffff7ec12ac <_nss_files_parse_spent+764>:	mov    rdx,0xffffffffffffffff
   0x7ffff7ec12b3 <_nss_files_parse_spent+771>:	cmp    r14,rbx
   0x7ffff7ec12b6 <_nss_files_parse_spent+774>:	cmove  rax,rdx
   0x7ffff7ec12ba <_nss_files_parse_spent+778>:	mov    QWORD PTR [rbp+0x28],rax
   0x7ffff7ec12be <_nss_files_parse_spent+782>:	movzx  eax,BYTE PTR [r14]
   0x7ffff7ec12c2 <_nss_files_parse_spent+786>:	cmp    al,0x3a
   0x7ffff7ec12c4 <_nss_files_parse_spent+788>:	je     0x7ffff7ec138f <_nss_files_parse_spent+991>
   0x7ffff7ec12ca <_nss_files_parse_spent+794>:	test   al,al
   0x7ffff7ec12cc <_nss_files_parse_spent+796>:	jne    0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec12d2 <_nss_files_parse_spent+802>:	cmp    BYTE PTR [r14],0x0
   0x7ffff7ec12d6 <_nss_files_parse_spent+806>:	je     0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec12dc <_nss_files_parse_spent+812>:	mov    edx,0xa
   0x7ffff7ec12e1 <_nss_files_parse_spent+817>:	xor    ecx,ecx
   0x7ffff7ec12e3 <_nss_files_parse_spent+819>:	mov    rsi,r13
   0x7ffff7ec12e6 <_nss_files_parse_spent+822>:	mov    rdi,r14
   0x7ffff7ec12e9 <_nss_files_parse_spent+825>:	call   0x7ffff7ddc500 <__strtoull_internal>
   0x7ffff7ec12ee <_nss_files_parse_spent+830>:	mov    edx,0xffffffff
   0x7ffff7ec12f3 <_nss_files_parse_spent+835>:	cmp    rax,rdx
   0x7ffff7ec12f6 <_nss_files_parse_spent+838>:	ja     0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec12fc <_nss_files_parse_spent+844>:	mov    r12,QWORD PTR [rsp]
   0x7ffff7ec1300 <_nss_files_parse_spent+848>:	cmp    r12,r14
   0x7ffff7ec1303 <_nss_files_parse_spent+851>:	je     0x7ffff7ec13ba <_nss_files_parse_spent+1034>
   0x7ffff7ec1309 <_nss_files_parse_spent+857>:	cdqe
   0x7ffff7ec130b <_nss_files_parse_spent+859>:	mov    QWORD PTR [rbp+0x30],rax
   0x7ffff7ec130f <_nss_files_parse_spent+863>:	movzx  eax,BYTE PTR [r12]
   0x7ffff7ec1314 <_nss_files_parse_spent+868>:	cmp    al,0x3a
   0x7ffff7ec1316 <_nss_files_parse_spent+870>:	je     0x7ffff7ec13ad <_nss_files_parse_spent+1021>
   0x7ffff7ec131c <_nss_files_parse_spent+876>:	test   al,al
   0x7ffff7ec131e <_nss_files_parse_spent+878>:	jne    0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec1324 <_nss_files_parse_spent+884>:	cmp    BYTE PTR [r12],0x0
   0x7ffff7ec1329 <_nss_files_parse_spent+889>:	mov    rbx,r12
   0x7ffff7ec132c <_nss_files_parse_spent+892>:	je     0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec1332 <_nss_files_parse_spent+898>:	mov    edx,0xa
   0x7ffff7ec1337 <_nss_files_parse_spent+903>:	xor    ecx,ecx
   0x7ffff7ec1339 <_nss_files_parse_spent+905>:	mov    rsi,r13
   0x7ffff7ec133c <_nss_files_parse_spent+908>:	mov    rdi,r12
   0x7ffff7ec133f <_nss_files_parse_spent+911>:	call   0x7ffff7ddc500 <__strtoull_internal>
   0x7ffff7ec1344 <_nss_files_parse_spent+916>:	mov    edx,0xffffffff
   0x7ffff7ec1349 <_nss_files_parse_spent+921>:	cmp    rax,rdx
   0x7ffff7ec134c <_nss_files_parse_spent+924>:	ja     0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec1352 <_nss_files_parse_spent+930>:	mov    r12,QWORD PTR [rsp]
   0x7ffff7ec1356 <_nss_files_parse_spent+934>:	cmp    r12,rbx
   0x7ffff7ec1359 <_nss_files_parse_spent+937>:	je     0x7ffff7ec13a7 <_nss_files_parse_spent+1015>
   0x7ffff7ec135b <_nss_files_parse_spent+939>:	cdqe
   0x7ffff7ec135d <_nss_files_parse_spent+941>:	mov    QWORD PTR [rbp+0x38],rax
   0x7ffff7ec1361 <_nss_files_parse_spent+945>:	movzx  eax,BYTE PTR [r12]
   0x7ffff7ec1366 <_nss_files_parse_spent+950>:	cmp    al,0x3a
   0x7ffff7ec1368 <_nss_files_parse_spent+952>:	je     0x7ffff7ec139d <_nss_files_parse_spent+1005>
   0x7ffff7ec136a <_nss_files_parse_spent+954>:	test   al,al
   0x7ffff7ec136c <_nss_files_parse_spent+956>:	jne    0x7ffff7ec1240 <_nss_files_parse_spent+656>
   0x7ffff7ec1372 <_nss_files_parse_spent+962>:	cmp    BYTE PTR [r12],0x0
   0x7ffff7ec1377 <_nss_files_parse_spent+967>:	jne    0x7ffff7ec1205 <_nss_files_parse_spent+597>
   0x7ffff7ec137d <_nss_files_parse_spent+973>:	mov    QWORD PTR [rbp+0x40],0xffffffffffffffff
   0x7ffff7ec1385 <_nss_files_parse_spent+981>:	mov    eax,0x1
   0x7ffff7ec138a <_nss_files_parse_spent+986>:	jmp    0x7ffff7ec1242 <_nss_files_parse_spent+658>
   0x7ffff7ec138f <_nss_files_parse_spent+991>:	add    r14,0x1
   0x7ffff7ec1393 <_nss_files_parse_spent+995>:	jmp    0x7ffff7ec12d2 <_nss_files_parse_spent+802>
   0x7ffff7ec1398 <_nss_files_parse_spent+1000>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ec139d <_nss_files_parse_spent+1005>:	add    r12,0x1
   0x7ffff7ec13a1 <_nss_files_parse_spent+1009>:	mov    QWORD PTR [rsp],r12
   0x7ffff7ec13a5 <_nss_files_parse_spent+1013>:	jmp    0x7ffff7ec1372 <_nss_files_parse_spent+962>
   0x7ffff7ec13a7 <_nss_files_parse_spent+1015>:	or     rax,0xffffffffffffffff
   0x7ffff7ec13ab <_nss_files_parse_spent+1019>:	jmp    0x7ffff7ec135d <_nss_files_parse_spent+941>
   0x7ffff7ec13ad <_nss_files_parse_spent+1021>:	add    r12,0x1
   0x7ffff7ec13b1 <_nss_files_parse_spent+1025>:	mov    QWORD PTR [rsp],r12
   0x7ffff7ec13b5 <_nss_files_parse_spent+1029>:	jmp    0x7ffff7ec1324 <_nss_files_parse_spent+884>
   0x7ffff7ec13ba <_nss_files_parse_spent+1034>:	or     rax,0xffffffffffffffff
   0x7ffff7ec13be <_nss_files_parse_spent+1038>:	jmp    0x7ffff7ec130b <_nss_files_parse_spent+859>
   0x7ffff7ec13c3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec13ce:	xchg   ax,ax
   0x7ffff7ec13d0 <sgetspent_r>:	endbr64
   0x7ffff7ec13d4 <sgetspent_r+4>:	mov    r9,rdi
   0x7ffff7ec13d7 <sgetspent_r+7>:	mov    rdi,rdx
   0x7ffff7ec13da <sgetspent_r+10>:	push   r12
   0x7ffff7ec13dc <sgetspent_r+12>:	mov    rdx,rcx
   0x7ffff7ec13df <sgetspent_r+15>:	lea    r12,[rdi+rcx*1-0x1]
   0x7ffff7ec13e4 <sgetspent_r+20>:	push   rbp
   0x7ffff7ec13e5 <sgetspent_r+21>:	mov    rbp,r8
   0x7ffff7ec13e8 <sgetspent_r+24>:	push   rbx
   0x7ffff7ec13e9 <sgetspent_r+25>:	mov    rbx,rsi
   0x7ffff7ec13ec <sgetspent_r+28>:	mov    rsi,r9
   0x7ffff7ec13ef <sgetspent_r+31>:	mov    BYTE PTR [r12],0x0
   0x7ffff7ec13f4 <sgetspent_r+36>:	call   0x7ffff7dbd480 <*ABS*+0xa8950@plt>
   0x7ffff7ec13f9 <sgetspent_r+41>:	cmp    BYTE PTR [r12],0x0
   0x7ffff7ec13fe <sgetspent_r+46>:	mov    rdi,rax
   0x7ffff7ec1401 <sgetspent_r+49>:	mov    eax,0x22
   0x7ffff7ec1406 <sgetspent_r+54>:	jne    0x7ffff7ec1436 <sgetspent_r+102>
   0x7ffff7ec1408 <sgetspent_r+56>:	mov    r12,QWORD PTR [rip+0xeca01]        # 0x7ffff7fade10
   0x7ffff7ec140f <sgetspent_r+63>:	xor    ecx,ecx
   0x7ffff7ec1411 <sgetspent_r+65>:	xor    edx,edx
   0x7ffff7ec1413 <sgetspent_r+67>:	mov    rsi,rbx
   0x7ffff7ec1416 <sgetspent_r+70>:	mov    r8,QWORD PTR fs:0x0
   0x7ffff7ec141f <sgetspent_r+79>:	add    r8,r12
   0x7ffff7ec1422 <sgetspent_r+82>:	call   0x7ffff7ec0fb0 <_nss_files_parse_spent>
   0x7ffff7ec1427 <sgetspent_r+87>:	test   eax,eax
   0x7ffff7ec1429 <sgetspent_r+89>:	jle    0x7ffff7ec1440 <sgetspent_r+112>
   0x7ffff7ec142b <sgetspent_r+91>:	mov    QWORD PTR [rbp+0x0],rbx
   0x7ffff7ec142f <sgetspent_r+95>:	xor    eax,eax
   0x7ffff7ec1431 <sgetspent_r+97>:	test   rbx,rbx
   0x7ffff7ec1434 <sgetspent_r+100>:	je     0x7ffff7ec1448 <sgetspent_r+120>
   0x7ffff7ec1436 <sgetspent_r+102>:	pop    rbx
   0x7ffff7ec1437 <sgetspent_r+103>:	pop    rbp
   0x7ffff7ec1438 <sgetspent_r+104>:	pop    r12
   0x7ffff7ec143a <sgetspent_r+106>:	ret
   0x7ffff7ec143b <sgetspent_r+107>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec1440 <sgetspent_r+112>:	mov    QWORD PTR [rbp+0x0],0x0
   0x7ffff7ec1448 <sgetspent_r+120>:	mov    eax,DWORD PTR fs:[r12]
   0x7ffff7ec144d <sgetspent_r+125>:	pop    rbx
   0x7ffff7ec144e <sgetspent_r+126>:	pop    rbp
   0x7ffff7ec144f <sgetspent_r+127>:	pop    r12
   0x7ffff7ec1451 <sgetspent_r+129>:	ret
   0x7ffff7ec1452:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec145c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec1460 <fgetspent_r>:	endbr64
   0x7ffff7ec1464 <fgetspent_r+4>:	push   rbp
   0x7ffff7ec1465 <fgetspent_r+5>:	mov    rbp,r8
   0x7ffff7ec1468 <fgetspent_r+8>:	lea    r8,[rip+0xfffffffffffffb41]        # 0x7ffff7ec0fb0 <_nss_files_parse_spent>
   0x7ffff7ec146f <fgetspent_r+15>:	push   rbx
   0x7ffff7ec1470 <fgetspent_r+16>:	mov    rbx,rsi
   0x7ffff7ec1473 <fgetspent_r+19>:	sub    rsp,0x8
   0x7ffff7ec1477 <fgetspent_r+23>:	call   0x7ffff7eea0b0
   0x7ffff7ec147c <fgetspent_r+28>:	xor    edx,edx
   0x7ffff7ec147e <fgetspent_r+30>:	test   eax,eax
   0x7ffff7ec1480 <fgetspent_r+32>:	cmovne rbx,rdx
   0x7ffff7ec1484 <fgetspent_r+36>:	mov    QWORD PTR [rbp+0x0],rbx
   0x7ffff7ec1488 <fgetspent_r+40>:	add    rsp,0x8
   0x7ffff7ec148c <fgetspent_r+44>:	pop    rbx
   0x7ffff7ec148d <fgetspent_r+45>:	pop    rbp
   0x7ffff7ec148e <fgetspent_r+46>:	ret
   0x7ffff7ec148f:	nop
   0x7ffff7ec1490:	endbr64
   0x7ffff7ec1494:	ret
   0x7ffff7ec1495:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec14a0 <lckpwdf>:	endbr64
   0x7ffff7ec14a4 <lckpwdf+4>:	push   r13
   0x7ffff7ec14a6 <lckpwdf+6>:	push   r12
   0x7ffff7ec14a8 <lckpwdf+8>:	push   rbp
   0x7ffff7ec14a9 <lckpwdf+9>:	sub    rsp,0x260
   0x7ffff7ec14b0 <lckpwdf+16>:	mov    r12d,DWORD PTR [rip+0xecff1]        # 0x7ffff7fae4a8
   0x7ffff7ec14b7 <lckpwdf+23>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ec14c0 <lckpwdf+32>:	mov    QWORD PTR [rsp+0x258],rax
   0x7ffff7ec14c8 <lckpwdf+40>:	xor    eax,eax
   0x7ffff7ec14ca <lckpwdf+42>:	cmp    r12d,0xffffffff
   0x7ffff7ec14ce <lckpwdf+46>:	jne    0x7ffff7ec16b0 <lckpwdf+528>
   0x7ffff7ec14d4 <lckpwdf+52>:	xor    eax,eax
   0x7ffff7ec14d6 <lckpwdf+54>:	mov    edx,0x1
   0x7ffff7ec14db <lckpwdf+59>:	lock cmpxchg DWORD PTR [rip+0xf53b5],edx        # 0x7ffff7fb6898
   0x7ffff7ec14e3 <lckpwdf+67>:	jne    0x7ffff7ec1698 <lckpwdf+504>
   0x7ffff7ec14e9 <lckpwdf+73>:	mov    edx,0x180
   0x7ffff7ec14ee <lckpwdf+78>:	mov    esi,0x80041
   0x7ffff7ec14f3 <lckpwdf+83>:	lea    rdi,[rip+0xaf1d9]        # 0x7ffff7f706d3
   0x7ffff7ec14fa <lckpwdf+90>:	xor    eax,eax
   0x7ffff7ec14fc <lckpwdf+92>:	call   0x7ffff7ea9690 <open64>
   0x7ffff7ec1501 <lckpwdf+97>:	mov    DWORD PTR [rip+0xecfa1],eax        # 0x7ffff7fae4a8
   0x7ffff7ec1507 <lckpwdf+103>:	cmp    eax,0xffffffff
   0x7ffff7ec150a <lckpwdf+106>:	je     0x7ffff7ec1673 <lckpwdf+467>
   0x7ffff7ec1510 <lckpwdf+112>:	lea    rdx,[rsp+0x1d0]
   0x7ffff7ec1518 <lckpwdf+120>:	xor    eax,eax
   0x7ffff7ec151a <lckpwdf+122>:	mov    ecx,0x11
   0x7ffff7ec151f <lckpwdf+127>:	mov    QWORD PTR [rsp+0x1c8],0xffffffffffffffff
   0x7ffff7ec152b <lckpwdf+139>:	mov    rdi,rdx
   0x7ffff7ec152e <lckpwdf+142>:	lea    rbp,[rsp+0x120]
   0x7ffff7ec1536 <lckpwdf+150>:	lea    rsi,[rsp+0x1c0]
   0x7ffff7ec153e <lckpwdf+158>:	rep stos QWORD PTR es:[rdi],rax
   0x7ffff7ec1541 <lckpwdf+161>:	mov    rdx,rbp
   0x7ffff7ec1544 <lckpwdf+164>:	lea    rax,[rip+0xffffffffffffff45]        # 0x7ffff7ec1490
   0x7ffff7ec154b <lckpwdf+171>:	mov    edi,0xe
   0x7ffff7ec1550 <lckpwdf+176>:	mov    QWORD PTR [rsp+0x1c0],rax
   0x7ffff7ec1558 <lckpwdf+184>:	call   0x7ffff7dd74d0 <sigaction>
   0x7ffff7ec155d <lckpwdf+189>:	test   eax,eax
   0x7ffff7ec155f <lckpwdf+191>:	js     0x7ffff7ec165a <lckpwdf+442>
   0x7ffff7ec1565 <lckpwdf+197>:	lea    r13,[rsp+0x20]
   0x7ffff7ec156a <lckpwdf+202>:	lea    rsi,[rsp+0xa0]
   0x7ffff7ec1572 <lckpwdf+210>:	mov    edi,0x1
   0x7ffff7ec1577 <lckpwdf+215>:	mov    QWORD PTR [rsp+0xa0],0x2000
   0x7ffff7ec1583 <lckpwdf+227>:	mov    rdx,r13
   0x7ffff7ec1586 <lckpwdf+230>:	call   0x7ffff7dd7710 <sigprocmask>
   0x7ffff7ec158b <lckpwdf+235>:	test   eax,eax
   0x7ffff7ec158d <lckpwdf+237>:	js     0x7ffff7ec164b <lckpwdf+427>
   0x7ffff7ec1593 <lckpwdf+243>:	mov    edi,0xf
   0x7ffff7ec1598 <lckpwdf+248>:	call   0x7ffff7e7f5b0 <alarm>
   0x7ffff7ec159d <lckpwdf+253>:	pxor   xmm0,xmm0
   0x7ffff7ec15a1 <lckpwdf+257>:	mov    eax,0x1
   0x7ffff7ec15a6 <lckpwdf+262>:	mov    rdx,rsp
   0x7ffff7ec15a9 <lckpwdf+265>:	mov    edi,DWORD PTR [rip+0xecef9]        # 0x7ffff7fae4a8
   0x7ffff7ec15af <lckpwdf+271>:	movaps XMMWORD PTR [rsp],xmm0
   0x7ffff7ec15b3 <lckpwdf+275>:	mov    esi,0x7
   0x7ffff7ec15b8 <lckpwdf+280>:	mov    WORD PTR [rsp],ax
   0x7ffff7ec15bc <lckpwdf+284>:	xor    eax,eax
   0x7ffff7ec15be <lckpwdf+286>:	movaps XMMWORD PTR [rsp+0x10],xmm0
   0x7ffff7ec15c3 <lckpwdf+291>:	call   0x7ffff7ea9ea0 <fcntl64>
   0x7ffff7ec15c8 <lckpwdf+296>:	xor    edi,edi
   0x7ffff7ec15ca <lckpwdf+298>:	mov    r12d,eax
   0x7ffff7ec15cd <lckpwdf+301>:	call   0x7ffff7e7f5b0 <alarm>
   0x7ffff7ec15d2 <lckpwdf+306>:	xor    edx,edx
   0x7ffff7ec15d4 <lckpwdf+308>:	mov    rsi,r13
   0x7ffff7ec15d7 <lckpwdf+311>:	mov    edi,0x2
   0x7ffff7ec15dc <lckpwdf+316>:	call   0x7ffff7dd7710 <sigprocmask>
   0x7ffff7ec15e1 <lckpwdf+321>:	xor    edx,edx
   0x7ffff7ec15e3 <lckpwdf+323>:	mov    rsi,rbp
   0x7ffff7ec15e6 <lckpwdf+326>:	mov    edi,0xe
   0x7ffff7ec15eb <lckpwdf+331>:	call   0x7ffff7dd74d0 <sigaction>
   0x7ffff7ec15f0 <lckpwdf+336>:	test   r12d,r12d
   0x7ffff7ec15f3 <lckpwdf+339>:	js     0x7ffff7ec1630 <lckpwdf+400>
   0x7ffff7ec15f5 <lckpwdf+341>:	xor    eax,eax
   0x7ffff7ec15f7 <lckpwdf+343>:	xchg   DWORD PTR [rip+0xf529b],eax        # 0x7ffff7fb6898
   0x7ffff7ec15fd <lckpwdf+349>:	cmp    eax,0x1
   0x7ffff7ec1600 <lckpwdf+352>:	jg     0x7ffff7ec1680 <lckpwdf+480>
   0x7ffff7ec1602 <lckpwdf+354>:	mov    rax,QWORD PTR [rsp+0x258]
   0x7ffff7ec160a <lckpwdf+362>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7ec1613 <lckpwdf+371>:	jne    0x7ffff7ec16bb <lckpwdf+539>
   0x7ffff7ec1619 <lckpwdf+377>:	add    rsp,0x260
   0x7ffff7ec1620 <lckpwdf+384>:	mov    eax,r12d
   0x7ffff7ec1623 <lckpwdf+387>:	pop    rbp
   0x7ffff7ec1624 <lckpwdf+388>:	pop    r12
   0x7ffff7ec1626 <lckpwdf+390>:	pop    r13
   0x7ffff7ec1628 <lckpwdf+392>:	ret
   0x7ffff7ec1629 <lckpwdf+393>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec1630 <lckpwdf+400>:	mov    edi,DWORD PTR [rip+0xece72]        # 0x7ffff7fae4a8
   0x7ffff7ec1636 <lckpwdf+406>:	test   edi,edi
   0x7ffff7ec1638 <lckpwdf+408>:	js     0x7ffff7ec15f5 <lckpwdf+341>
   0x7ffff7ec163a <lckpwdf+410>:	call   0x7ffff7eaa100 <close>
   0x7ffff7ec163f <lckpwdf+415>:	mov    DWORD PTR [rip+0xece5f],0xffffffff        # 0x7ffff7fae4a8
   0x7ffff7ec1649 <lckpwdf+425>:	jmp    0x7ffff7ec15f5 <lckpwdf+341>
   0x7ffff7ec164b <lckpwdf+427>:	xor    edx,edx
   0x7ffff7ec164d <lckpwdf+429>:	mov    rsi,rbp
   0x7ffff7ec1650 <lckpwdf+432>:	mov    edi,0xe
   0x7ffff7ec1655 <lckpwdf+437>:	call   0x7ffff7dd74d0 <sigaction>
   0x7ffff7ec165a <lckpwdf+442>:	mov    edi,DWORD PTR [rip+0xece48]        # 0x7ffff7fae4a8
   0x7ffff7ec1660 <lckpwdf+448>:	test   edi,edi
   0x7ffff7ec1662 <lckpwdf+450>:	js     0x7ffff7ec1673 <lckpwdf+467>
   0x7ffff7ec1664 <lckpwdf+452>:	call   0x7ffff7eaa100 <close>
   0x7ffff7ec1669 <lckpwdf+457>:	mov    DWORD PTR [rip+0xece35],0xffffffff        # 0x7ffff7fae4a8
   0x7ffff7ec1673 <lckpwdf+467>:	xor    eax,eax
   0x7ffff7ec1675 <lckpwdf+469>:	xchg   DWORD PTR [rip+0xf521d],eax        # 0x7ffff7fb6898
   0x7ffff7ec167b <lckpwdf+475>:	cmp    eax,0x1
   0x7ffff7ec167e <lckpwdf+478>:	jle    0x7ffff7ec16b0 <lckpwdf+528>
   0x7ffff7ec1680 <lckpwdf+480>:	lea    rdi,[rip+0xf5211]        # 0x7ffff7fb6898
   0x7ffff7ec1687 <lckpwdf+487>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec168c <lckpwdf+492>:	jmp    0x7ffff7ec1602 <lckpwdf+354>
   0x7ffff7ec1691 <lckpwdf+497>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec1698 <lckpwdf+504>:	lea    rdi,[rip+0xf51f9]        # 0x7ffff7fb6898
   0x7ffff7ec169f <lckpwdf+511>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec16a4 <lckpwdf+516>:	jmp    0x7ffff7ec14e9 <lckpwdf+73>
   0x7ffff7ec16a9 <lckpwdf+521>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec16b0 <lckpwdf+528>:	mov    r12d,0xffffffff
   0x7ffff7ec16b6 <lckpwdf+534>:	jmp    0x7ffff7ec1602 <lckpwdf+354>
   0x7ffff7ec16bb <lckpwdf+539>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ec16c0 <ulckpwdf>:	endbr64
   0x7ffff7ec16c4 <ulckpwdf+4>:	mov    eax,DWORD PTR [rip+0xecdde]        # 0x7ffff7fae4a8
   0x7ffff7ec16ca <ulckpwdf+10>:	cmp    eax,0xffffffff
   0x7ffff7ec16cd <ulckpwdf+13>:	je     0x7ffff7ec1740 <ulckpwdf+128>
   0x7ffff7ec16cf <ulckpwdf+15>:	sub    rsp,0x18
   0x7ffff7ec16d3 <ulckpwdf+19>:	xor    eax,eax
   0x7ffff7ec16d5 <ulckpwdf+21>:	mov    edx,0x1
   0x7ffff7ec16da <ulckpwdf+26>:	lock cmpxchg DWORD PTR [rip+0xf51b6],edx        # 0x7ffff7fb6898
   0x7ffff7ec16e2 <ulckpwdf+34>:	jne    0x7ffff7ec1710 <ulckpwdf+80>
   0x7ffff7ec16e4 <ulckpwdf+36>:	mov    edi,DWORD PTR [rip+0xecdbe]        # 0x7ffff7fae4a8
   0x7ffff7ec16ea <ulckpwdf+42>:	call   0x7ffff7eaa100 <close>
   0x7ffff7ec16ef <ulckpwdf+47>:	xor    edx,edx
   0x7ffff7ec16f1 <ulckpwdf+49>:	mov    DWORD PTR [rip+0xecdad],0xffffffff        # 0x7ffff7fae4a8
   0x7ffff7ec16fb <ulckpwdf+59>:	xchg   DWORD PTR [rip+0xf5197],edx        # 0x7ffff7fb6898
   0x7ffff7ec1701 <ulckpwdf+65>:	cmp    edx,0x1
   0x7ffff7ec1704 <ulckpwdf+68>:	jg     0x7ffff7ec1720 <ulckpwdf+96>
   0x7ffff7ec1706 <ulckpwdf+70>:	add    rsp,0x18
   0x7ffff7ec170a <ulckpwdf+74>:	ret
   0x7ffff7ec170b <ulckpwdf+75>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec1710 <ulckpwdf+80>:	lea    rdi,[rip+0xf5181]        # 0x7ffff7fb6898
   0x7ffff7ec1717 <ulckpwdf+87>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec171c <ulckpwdf+92>:	jmp    0x7ffff7ec16e4 <ulckpwdf+36>
   0x7ffff7ec171e <ulckpwdf+94>:	xchg   ax,ax
   0x7ffff7ec1720 <ulckpwdf+96>:	lea    rdi,[rip+0xf5171]        # 0x7ffff7fb6898
   0x7ffff7ec1727 <ulckpwdf+103>:	mov    DWORD PTR [rsp+0xc],eax
   0x7ffff7ec172b <ulckpwdf+107>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec1730 <ulckpwdf+112>:	mov    eax,DWORD PTR [rsp+0xc]
   0x7ffff7ec1734 <ulckpwdf+116>:	jmp    0x7ffff7ec1706 <ulckpwdf+70>
   0x7ffff7ec1736 <ulckpwdf+118>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec1740 <ulckpwdf+128>:	ret
   0x7ffff7ec1741:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec174b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec1750 <getsgent>:	endbr64
   0x7ffff7ec1754 <getsgent+4>:	push   rbp
   0x7ffff7ec1755 <getsgent+5>:	xor    eax,eax
   0x7ffff7ec1757 <getsgent+7>:	mov    edx,0x1
   0x7ffff7ec175c <getsgent+12>:	push   rbx
   0x7ffff7ec175d <getsgent+13>:	sub    rsp,0x18
   0x7ffff7ec1761 <getsgent+17>:	lock cmpxchg DWORD PTR [rip+0xf5177],edx        # 0x7ffff7fb68e0
   0x7ffff7ec1769 <getsgent+25>:	jne    0x7ffff7ec17b8 <getsgent+104>
   0x7ffff7ec176b <getsgent+27>:	xor    r9d,r9d
   0x7ffff7ec176e <getsgent+30>:	lea    r8,[rip+0xf512b]        # 0x7ffff7fb68a0
   0x7ffff7ec1775 <getsgent+37>:	mov    ecx,0x400
   0x7ffff7ec177a <getsgent+42>:	lea    rdx,[rip+0xee1b7]        # 0x7ffff7faf938
   0x7ffff7ec1781 <getsgent+49>:	lea    rsi,[rip+0xf5138]        # 0x7ffff7fb68c0
   0x7ffff7ec1788 <getsgent+56>:	lea    rdi,[rip+0x921]        # 0x7ffff7ec20b0 <getsgent_r>
   0x7ffff7ec178f <getsgent+63>:	call   0x7ffff7ee84b0
   0x7ffff7ec1794 <getsgent+68>:	mov    rbx,QWORD PTR [rip+0xec675]        # 0x7ffff7fade10
   0x7ffff7ec179b <getsgent+75>:	xor    edx,edx
   0x7ffff7ec179d <getsgent+77>:	mov    ebp,DWORD PTR fs:[rbx]
   0x7ffff7ec17a0 <getsgent+80>:	xchg   DWORD PTR [rip+0xf513a],edx        # 0x7ffff7fb68e0
   0x7ffff7ec17a6 <getsgent+86>:	cmp    edx,0x1
   0x7ffff7ec17a9 <getsgent+89>:	jg     0x7ffff7ec17d0 <getsgent+128>
   0x7ffff7ec17ab <getsgent+91>:	mov    DWORD PTR fs:[rbx],ebp
   0x7ffff7ec17ae <getsgent+94>:	add    rsp,0x18
   0x7ffff7ec17b2 <getsgent+98>:	pop    rbx
   0x7ffff7ec17b3 <getsgent+99>:	pop    rbp
   0x7ffff7ec17b4 <getsgent+100>:	ret
   0x7ffff7ec17b5 <getsgent+101>:	nop    DWORD PTR [rax]
   0x7ffff7ec17b8 <getsgent+104>:	lea    rdi,[rip+0xf5121]        # 0x7ffff7fb68e0
   0x7ffff7ec17bf <getsgent+111>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec17c4 <getsgent+116>:	jmp    0x7ffff7ec176b <getsgent+27>
   0x7ffff7ec17c6 <getsgent+118>:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec17d0 <getsgent+128>:	lea    rdi,[rip+0xf5109]        # 0x7ffff7fb68e0
   0x7ffff7ec17d7 <getsgent+135>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ec17dc <getsgent+140>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec17e1 <getsgent+145>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec17e6 <getsgent+150>:	mov    DWORD PTR fs:[rbx],ebp
   0x7ffff7ec17e9 <getsgent+153>:	add    rsp,0x18
   0x7ffff7ec17ed <getsgent+157>:	pop    rbx
   0x7ffff7ec17ee <getsgent+158>:	pop    rbp
   0x7ffff7ec17ef <getsgent+159>:	ret
   0x7ffff7ec17f0 <getsgnam>:	endbr64
   0x7ffff7ec17f4 <getsgnam+4>:	push   r14
   0x7ffff7ec17f6 <getsgnam+6>:	mov    edx,0x1
   0x7ffff7ec17fb <getsgnam+11>:	push   r13
   0x7ffff7ec17fd <getsgnam+13>:	push   r12
   0x7ffff7ec17ff <getsgnam+15>:	push   rbp
   0x7ffff7ec1800 <getsgnam+16>:	push   rbx
   0x7ffff7ec1801 <getsgnam+17>:	mov    rbx,rdi
   0x7ffff7ec1804 <getsgnam+20>:	sub    rsp,0x10
   0x7ffff7ec1808 <getsgnam+24>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ec1811 <getsgnam+33>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ec1816 <getsgnam+38>:	xor    eax,eax
   0x7ffff7ec1818 <getsgnam+40>:	lock cmpxchg DWORD PTR [rip+0xf5108],edx        # 0x7ffff7fb6928
   0x7ffff7ec1820 <getsgnam+48>:	jne    0x7ffff7ec1940 <getsgnam+336>
   0x7ffff7ec1826 <getsgnam+54>:	mov    rdx,QWORD PTR [rip+0xee113]        # 0x7ffff7faf940
   0x7ffff7ec182d <getsgnam+61>:	mov    r12,QWORD PTR [rip+0xf50ec]        # 0x7ffff7fb6920
   0x7ffff7ec1834 <getsgnam+68>:	test   rdx,rdx
   0x7ffff7ec1837 <getsgnam+71>:	je     0x7ffff7ec1908 <getsgnam+280>
   0x7ffff7ec183d <getsgnam+77>:	mov    r13,rsp
   0x7ffff7ec1840 <getsgnam+80>:	lea    rbp,[rip+0xf50b9]        # 0x7ffff7fb6900
   0x7ffff7ec1847 <getsgnam+87>:	jmp    0x7ffff7ec1883 <getsgnam+147>
   0x7ffff7ec1849 <getsgnam+89>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec1850 <getsgnam+96>:	mov    rax,QWORD PTR [rip+0xf50c9]        # 0x7ffff7fb6920
   0x7ffff7ec1857 <getsgnam+103>:	mov    r14,QWORD PTR [rip+0xee0e2]        # 0x7ffff7faf940
   0x7ffff7ec185e <getsgnam+110>:	lea    r12,[rax+rax*1]
   0x7ffff7ec1862 <getsgnam+114>:	mov    rdi,r14
   0x7ffff7ec1865 <getsgnam+117>:	mov    rsi,r12
   0x7ffff7ec1868 <getsgnam+120>:	mov    QWORD PTR [rip+0xf50b1],r12        # 0x7ffff7fb6920
   0x7ffff7ec186f <getsgnam+127>:	call   0x7ffff7dbd3b0 <realloc@plt>
   0x7ffff7ec1874 <getsgnam+132>:	mov    rdx,rax
   0x7ffff7ec1877 <getsgnam+135>:	test   rax,rax
   0x7ffff7ec187a <getsgnam+138>:	je     0x7ffff7ec18d9 <getsgnam+233>
   0x7ffff7ec187c <getsgnam+140>:	mov    QWORD PTR [rip+0xee0bd],rax        # 0x7ffff7faf940
   0x7ffff7ec1883 <getsgnam+147>:	mov    r8,r13
   0x7ffff7ec1886 <getsgnam+150>:	mov    rcx,r12
   0x7ffff7ec1889 <getsgnam+153>:	mov    rsi,rbp
   0x7ffff7ec188c <getsgnam+156>:	mov    rdi,rbx
   0x7ffff7ec188f <getsgnam+159>:	call   0x7ffff7ec2190 <getsgnam_r>
   0x7ffff7ec1894 <getsgnam+164>:	cmp    eax,0x22
   0x7ffff7ec1897 <getsgnam+167>:	je     0x7ffff7ec1850 <getsgnam+96>
   0x7ffff7ec1899 <getsgnam+169>:	cmp    QWORD PTR [rip+0xee09f],0x0        # 0x7ffff7faf940
   0x7ffff7ec18a1 <getsgnam+177>:	je     0x7ffff7ec18fa <getsgnam+266>
   0x7ffff7ec18a3 <getsgnam+179>:	xor    eax,eax
   0x7ffff7ec18a5 <getsgnam+181>:	xchg   DWORD PTR [rip+0xf507d],eax        # 0x7ffff7fb6928
   0x7ffff7ec18ab <getsgnam+187>:	cmp    eax,0x1
   0x7ffff7ec18ae <getsgnam+190>:	jg     0x7ffff7ec1958 <getsgnam+360>
   0x7ffff7ec18b4 <getsgnam+196>:	mov    rax,QWORD PTR [rsp]
   0x7ffff7ec18b8 <getsgnam+200>:	mov    rdx,QWORD PTR [rsp+0x8]
   0x7ffff7ec18bd <getsgnam+205>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7ec18c6 <getsgnam+214>:	jne    0x7ffff7ec1969 <getsgnam+377>
   0x7ffff7ec18cc <getsgnam+220>:	add    rsp,0x10
   0x7ffff7ec18d0 <getsgnam+224>:	pop    rbx
   0x7ffff7ec18d1 <getsgnam+225>:	pop    rbp
   0x7ffff7ec18d2 <getsgnam+226>:	pop    r12
   0x7ffff7ec18d4 <getsgnam+228>:	pop    r13
   0x7ffff7ec18d6 <getsgnam+230>:	pop    r14
   0x7ffff7ec18d8 <getsgnam+232>:	ret
   0x7ffff7ec18d9 <getsgnam+233>:	mov    rdi,r14
   0x7ffff7ec18dc <getsgnam+236>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ec18e1 <getsgnam+241>:	mov    rax,QWORD PTR [rip+0xec528]        # 0x7ffff7fade10
   0x7ffff7ec18e8 <getsgnam+248>:	mov    DWORD PTR fs:[rax],0xc
   0x7ffff7ec18ef <getsgnam+255>:	mov    QWORD PTR [rip+0xee046],0x0        # 0x7ffff7faf940
   0x7ffff7ec18fa <getsgnam+266>:	mov    QWORD PTR [rsp],0x0
   0x7ffff7ec1902 <getsgnam+274>:	jmp    0x7ffff7ec18a3 <getsgnam+179>
   0x7ffff7ec1904 <getsgnam+276>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec1908 <getsgnam+280>:	mov    edi,0x400
   0x7ffff7ec190d <getsgnam+285>:	mov    r12d,0x400
   0x7ffff7ec1913 <getsgnam+291>:	mov    QWORD PTR [rip+0xf5002],0x400        # 0x7ffff7fb6920
   0x7ffff7ec191e <getsgnam+302>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7ec1923 <getsgnam+307>:	mov    QWORD PTR [rip+0xee016],rax        # 0x7ffff7faf940
   0x7ffff7ec192a <getsgnam+314>:	mov    rdx,rax
   0x7ffff7ec192d <getsgnam+317>:	test   rax,rax
   0x7ffff7ec1930 <getsgnam+320>:	jne    0x7ffff7ec183d <getsgnam+77>
   0x7ffff7ec1936 <getsgnam+326>:	jmp    0x7ffff7ec18fa <getsgnam+266>
   0x7ffff7ec1938 <getsgnam+328>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec1940 <getsgnam+336>:	lea    rdi,[rip+0xf4fe1]        # 0x7ffff7fb6928
   0x7ffff7ec1947 <getsgnam+343>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec194c <getsgnam+348>:	jmp    0x7ffff7ec1826 <getsgnam+54>
   0x7ffff7ec1951 <getsgnam+353>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec1958 <getsgnam+360>:	lea    rdi,[rip+0xf4fc9]        # 0x7ffff7fb6928
   0x7ffff7ec195f <getsgnam+367>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec1964 <getsgnam+372>:	jmp    0x7ffff7ec18b4 <getsgnam+196>
   0x7ffff7ec1969 <getsgnam+377>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ec196e:	xchg   ax,ax
   0x7ffff7ec1970 <sgetsgent>:	endbr64
   0x7ffff7ec1974 <sgetsgent+4>:	push   r15
   0x7ffff7ec1976 <sgetsgent+6>:	mov    edx,0x1
   0x7ffff7ec197b <sgetsgent+11>:	push   r14
   0x7ffff7ec197d <sgetsgent+13>:	push   r13
   0x7ffff7ec197f <sgetsgent+15>:	push   r12
   0x7ffff7ec1981 <sgetsgent+17>:	push   rbp
   0x7ffff7ec1982 <sgetsgent+18>:	push   rbx
   0x7ffff7ec1983 <sgetsgent+19>:	mov    rbx,rdi
   0x7ffff7ec1986 <sgetsgent+22>:	sub    rsp,0x18
   0x7ffff7ec198a <sgetsgent+26>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ec1993 <sgetsgent+35>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ec1998 <sgetsgent+40>:	xor    eax,eax
   0x7ffff7ec199a <sgetsgent+42>:	lock cmpxchg DWORD PTR [rip+0xf4fce],edx        # 0x7ffff7fb6970
   0x7ffff7ec19a2 <sgetsgent+50>:	jne    0x7ffff7ec1ae0 <sgetsgent+368>
   0x7ffff7ec19a8 <sgetsgent+56>:	mov    rdx,QWORD PTR [rip+0xf4fb9]        # 0x7ffff7fb6968
   0x7ffff7ec19af <sgetsgent+63>:	mov    r14,QWORD PTR [rip+0xf4faa]        # 0x7ffff7fb6960
   0x7ffff7ec19b6 <sgetsgent+70>:	test   rdx,rdx
   0x7ffff7ec19b9 <sgetsgent+73>:	je     0x7ffff7ec1aa0 <sgetsgent+304>
   0x7ffff7ec19bf <sgetsgent+79>:	mov    rbp,QWORD PTR [rip+0xec44a]        # 0x7ffff7fade10
   0x7ffff7ec19c6 <sgetsgent+86>:	mov    r13,rsp
   0x7ffff7ec19c9 <sgetsgent+89>:	lea    r12,[rip+0xf4f70]        # 0x7ffff7fb6940
   0x7ffff7ec19d0 <sgetsgent+96>:	jmp    0x7ffff7ec1a14 <sgetsgent+164>
   0x7ffff7ec19d2 <sgetsgent+98>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec19d8 <sgetsgent+104>:	mov    r15,QWORD PTR [rip+0xf4f89]        # 0x7ffff7fb6968
   0x7ffff7ec19df <sgetsgent+111>:	cmp    r14d,0x22
   0x7ffff7ec19e3 <sgetsgent+115>:	jne    0x7ffff7ec1a2e <sgetsgent+190>
   0x7ffff7ec19e5 <sgetsgent+117>:	mov    rax,QWORD PTR [rip+0xf4f74]        # 0x7ffff7fb6960
   0x7ffff7ec19ec <sgetsgent+124>:	mov    rdi,r15
   0x7ffff7ec19ef <sgetsgent+127>:	lea    r14,[rax+0x400]
   0x7ffff7ec19f6 <sgetsgent+134>:	mov    rsi,r14
   0x7ffff7ec19f9 <sgetsgent+137>:	mov    QWORD PTR [rip+0xf4f60],r14        # 0x7ffff7fb6960
   0x7ffff7ec1a00 <sgetsgent+144>:	call   0x7ffff7dbd3b0 <realloc@plt>
   0x7ffff7ec1a05 <sgetsgent+149>:	mov    rdx,rax
   0x7ffff7ec1a08 <sgetsgent+152>:	test   rax,rax
   0x7ffff7ec1a0b <sgetsgent+155>:	je     0x7ffff7ec1a75 <sgetsgent+261>
   0x7ffff7ec1a0d <sgetsgent+157>:	mov    QWORD PTR [rip+0xf4f54],rax        # 0x7ffff7fb6968
   0x7ffff7ec1a14 <sgetsgent+164>:	mov    rcx,r14
   0x7ffff7ec1a17 <sgetsgent+167>:	mov    r8,r13
   0x7ffff7ec1a1a <sgetsgent+170>:	mov    rsi,r12
   0x7ffff7ec1a1d <sgetsgent+173>:	mov    rdi,rbx
   0x7ffff7ec1a20 <sgetsgent+176>:	call   0x7ffff7ec27c0 <sgetsgent_r>
   0x7ffff7ec1a25 <sgetsgent+181>:	mov    r14d,DWORD PTR fs:[rbp+0x0]
   0x7ffff7ec1a2a <sgetsgent+186>:	test   eax,eax
   0x7ffff7ec1a2c <sgetsgent+188>:	jne    0x7ffff7ec19d8 <sgetsgent+104>
   0x7ffff7ec1a2e <sgetsgent+190>:	cmp    QWORD PTR [rip+0xf4f32],0x0        # 0x7ffff7fb6968
   0x7ffff7ec1a36 <sgetsgent+198>:	je     0x7ffff7ec1a92 <sgetsgent+290>
   0x7ffff7ec1a38 <sgetsgent+200>:	xor    eax,eax
   0x7ffff7ec1a3a <sgetsgent+202>:	xchg   DWORD PTR [rip+0xf4f30],eax        # 0x7ffff7fb6970
   0x7ffff7ec1a40 <sgetsgent+208>:	cmp    eax,0x1
   0x7ffff7ec1a43 <sgetsgent+211>:	jg     0x7ffff7ec1af8 <sgetsgent+392>
   0x7ffff7ec1a49 <sgetsgent+217>:	mov    DWORD PTR fs:[rbp+0x0],r14d
   0x7ffff7ec1a4e <sgetsgent+222>:	mov    rax,QWORD PTR [rsp]
   0x7ffff7ec1a52 <sgetsgent+226>:	mov    rdx,QWORD PTR [rsp+0x8]
   0x7ffff7ec1a57 <sgetsgent+231>:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7ec1a60 <sgetsgent+240>:	jne    0x7ffff7ec1b09 <sgetsgent+409>
   0x7ffff7ec1a66 <sgetsgent+246>:	add    rsp,0x18
   0x7ffff7ec1a6a <sgetsgent+250>:	pop    rbx
   0x7ffff7ec1a6b <sgetsgent+251>:	pop    rbp
   0x7ffff7ec1a6c <sgetsgent+252>:	pop    r12
   0x7ffff7ec1a6e <sgetsgent+254>:	pop    r13
   0x7ffff7ec1a70 <sgetsgent+256>:	pop    r14
   0x7ffff7ec1a72 <sgetsgent+258>:	pop    r15
   0x7ffff7ec1a74 <sgetsgent+260>:	ret
   0x7ffff7ec1a75 <sgetsgent+261>:	mov    r14d,DWORD PTR fs:[rbp+0x0]
   0x7ffff7ec1a7a <sgetsgent+266>:	mov    rdi,r15
   0x7ffff7ec1a7d <sgetsgent+269>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ec1a82 <sgetsgent+274>:	mov    DWORD PTR fs:[rbp+0x0],r14d
   0x7ffff7ec1a87 <sgetsgent+279>:	mov    QWORD PTR [rip+0xf4ed6],0x0        # 0x7ffff7fb6968
   0x7ffff7ec1a92 <sgetsgent+290>:	mov    QWORD PTR [rsp],0x0
   0x7ffff7ec1a9a <sgetsgent+298>:	jmp    0x7ffff7ec1a38 <sgetsgent+200>
   0x7ffff7ec1a9c <sgetsgent+300>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec1aa0 <sgetsgent+304>:	mov    edi,0x400
   0x7ffff7ec1aa5 <sgetsgent+309>:	mov    r14d,0x400
   0x7ffff7ec1aab <sgetsgent+315>:	mov    QWORD PTR [rip+0xf4eaa],0x400        # 0x7ffff7fb6960
   0x7ffff7ec1ab6 <sgetsgent+326>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7ec1abb <sgetsgent+331>:	mov    QWORD PTR [rip+0xf4ea6],rax        # 0x7ffff7fb6968
   0x7ffff7ec1ac2 <sgetsgent+338>:	mov    rdx,rax
   0x7ffff7ec1ac5 <sgetsgent+341>:	test   rax,rax
   0x7ffff7ec1ac8 <sgetsgent+344>:	jne    0x7ffff7ec19bf <sgetsgent+79>
   0x7ffff7ec1ace <sgetsgent+350>:	mov    rbp,QWORD PTR [rip+0xec33b]        # 0x7ffff7fade10
   0x7ffff7ec1ad5 <sgetsgent+357>:	mov    r14d,DWORD PTR fs:[rbp+0x0]
   0x7ffff7ec1ada <sgetsgent+362>:	jmp    0x7ffff7ec1a92 <sgetsgent+290>
   0x7ffff7ec1adc <sgetsgent+364>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec1ae0 <sgetsgent+368>:	lea    rdi,[rip+0xf4e89]        # 0x7ffff7fb6970
   0x7ffff7ec1ae7 <sgetsgent+375>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec1aec <sgetsgent+380>:	jmp    0x7ffff7ec19a8 <sgetsgent+56>
   0x7ffff7ec1af1 <sgetsgent+385>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec1af8 <sgetsgent+392>:	lea    rdi,[rip+0xf4e71]        # 0x7ffff7fb6970
   0x7ffff7ec1aff <sgetsgent+399>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec1b04 <sgetsgent+404>:	jmp    0x7ffff7ec1a49 <sgetsgent+217>
   0x7ffff7ec1b09 <sgetsgent+409>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ec1b0e:	xchg   ax,ax
   0x7ffff7ec1b10 <fgetsgent>:	endbr64
   0x7ffff7ec1b14 <fgetsgent+4>:	push   r15
   0x7ffff7ec1b16 <fgetsgent+6>:	push   r14
   0x7ffff7ec1b18 <fgetsgent+8>:	push   r13
   0x7ffff7ec1b1a <fgetsgent+10>:	push   r12
   0x7ffff7ec1b1c <fgetsgent+12>:	push   rbp
   0x7ffff7ec1b1d <fgetsgent+13>:	push   rbx
   0x7ffff7ec1b1e <fgetsgent+14>:	mov    rbx,rdi
   0x7ffff7ec1b21 <fgetsgent+17>:	sub    rsp,0x38
   0x7ffff7ec1b25 <fgetsgent+21>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ec1b2e <fgetsgent+30>:	mov    QWORD PTR [rsp+0x28],rax
   0x7ffff7ec1b33 <fgetsgent+35>:	xor    eax,eax
   0x7ffff7ec1b35 <fgetsgent+37>:	lea    rbp,[rsp+0x10]
   0x7ffff7ec1b3a <fgetsgent+42>:	mov    rsi,rbp
   0x7ffff7ec1b3d <fgetsgent+45>:	call   0x7ffff7e142a0 <fgetpos64>
   0x7ffff7ec1b42 <fgetsgent+50>:	xor    r8d,r8d
   0x7ffff7ec1b45 <fgetsgent+53>:	test   eax,eax
   0x7ffff7ec1b47 <fgetsgent+55>:	jne    0x7ffff7ec1c14 <fgetsgent+260>
   0x7ffff7ec1b4d <fgetsgent+61>:	mov    edx,0x1
   0x7ffff7ec1b52 <fgetsgent+66>:	lock cmpxchg DWORD PTR [rip+0xf4e4e],edx        # 0x7ffff7fb69a8
   0x7ffff7ec1b5a <fgetsgent+74>:	jne    0x7ffff7ec1c95 <fgetsgent+389>
   0x7ffff7ec1b60 <fgetsgent+80>:	mov    rdx,QWORD PTR [rip+0xedde1]        # 0x7ffff7faf948
   0x7ffff7ec1b67 <fgetsgent+87>:	test   rdx,rdx
   0x7ffff7ec1b6a <fgetsgent+90>:	je     0x7ffff7ec1c60 <fgetsgent+336>
   0x7ffff7ec1b70 <fgetsgent+96>:	mov    r13,QWORD PTR [rip+0xec299]        # 0x7ffff7fade10
   0x7ffff7ec1b77 <fgetsgent+103>:	lea    r12,[rip+0xf4e02]        # 0x7ffff7fb6980
   0x7ffff7ec1b7e <fgetsgent+110>:	jmp    0x7ffff7ec1bea <fgetsgent+218>
   0x7ffff7ec1b80 <fgetsgent+112>:	mov    rcx,QWORD PTR [rip+0xf4e19]        # 0x7ffff7fb69a0
   0x7ffff7ec1b87 <fgetsgent+119>:	lea    r8,[rsp+0x8]
   0x7ffff7ec1b8c <fgetsgent+124>:	mov    rsi,r12
   0x7ffff7ec1b8f <fgetsgent+127>:	mov    rdi,rbx
   0x7ffff7ec1b92 <fgetsgent+130>:	call   0x7ffff7ec2870 <fgetsgent_r>
   0x7ffff7ec1b97 <fgetsgent+135>:	cmp    eax,0x22
   0x7ffff7ec1b9a <fgetsgent+138>:	jne    0x7ffff7ec1c40 <fgetsgent+304>
   0x7ffff7ec1ba0 <fgetsgent+144>:	mov    rax,QWORD PTR [rip+0xf4df9]        # 0x7ffff7fb69a0
   0x7ffff7ec1ba7 <fgetsgent+151>:	mov    r14,QWORD PTR [rip+0xedd9a]        # 0x7ffff7faf948
   0x7ffff7ec1bae <fgetsgent+158>:	lea    rsi,[rax+0x400]
   0x7ffff7ec1bb5 <fgetsgent+165>:	mov    rdi,r14
   0x7ffff7ec1bb8 <fgetsgent+168>:	mov    QWORD PTR [rip+0xf4de1],rsi        # 0x7ffff7fb69a0
   0x7ffff7ec1bbf <fgetsgent+175>:	call   0x7ffff7dbd3b0 <realloc@plt>
   0x7ffff7ec1bc4 <fgetsgent+180>:	test   rax,rax
   0x7ffff7ec1bc7 <fgetsgent+183>:	je     0x7ffff7ec1ca6 <fgetsgent+406>
   0x7ffff7ec1bcd <fgetsgent+189>:	mov    QWORD PTR [rip+0xedd74],rax        # 0x7ffff7faf948
   0x7ffff7ec1bd4 <fgetsgent+196>:	mov    rsi,rbp
   0x7ffff7ec1bd7 <fgetsgent+199>:	mov    rdi,rbx
   0x7ffff7ec1bda <fgetsgent+202>:	call   0x7ffff7e14cb0 <fsetpos64>
   0x7ffff7ec1bdf <fgetsgent+207>:	test   eax,eax
   0x7ffff7ec1be1 <fgetsgent+209>:	jne    0x7ffff7ec1c50 <fgetsgent+320>
   0x7ffff7ec1be3 <fgetsgent+211>:	mov    rdx,QWORD PTR [rip+0xedd5e]        # 0x7ffff7faf948
   0x7ffff7ec1bea <fgetsgent+218>:	test   rdx,rdx
   0x7ffff7ec1bed <fgetsgent+221>:	jne    0x7ffff7ec1b80 <fgetsgent+112>
   0x7ffff7ec1bef <fgetsgent+223>:	mov    QWORD PTR [rsp+0x8],0x0
   0x7ffff7ec1bf8 <fgetsgent+232>:	mov    ebx,DWORD PTR fs:[r13+0x0]
   0x7ffff7ec1bfd <fgetsgent+237>:	xor    eax,eax
   0x7ffff7ec1bff <fgetsgent+239>:	xchg   DWORD PTR [rip+0xf4da3],eax        # 0x7ffff7fb69a8
   0x7ffff7ec1c05 <fgetsgent+245>:	cmp    eax,0x1
   0x7ffff7ec1c08 <fgetsgent+248>:	jg     0x7ffff7ec1c84 <fgetsgent+372>
   0x7ffff7ec1c0a <fgetsgent+250>:	mov    DWORD PTR fs:[r13+0x0],ebx
   0x7ffff7ec1c0f <fgetsgent+255>:	mov    r8,QWORD PTR [rsp+0x8]
   0x7ffff7ec1c14 <fgetsgent+260>:	mov    rax,QWORD PTR [rsp+0x28]
   0x7ffff7ec1c19 <fgetsgent+265>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7ec1c22 <fgetsgent+274>:	jne    0x7ffff7ec1cc8 <fgetsgent+440>
   0x7ffff7ec1c28 <fgetsgent+280>:	add    rsp,0x38
   0x7ffff7ec1c2c <fgetsgent+284>:	mov    rax,r8
   0x7ffff7ec1c2f <fgetsgent+287>:	pop    rbx
   0x7ffff7ec1c30 <fgetsgent+288>:	pop    rbp
   0x7ffff7ec1c31 <fgetsgent+289>:	pop    r12
   0x7ffff7ec1c33 <fgetsgent+291>:	pop    r13
   0x7ffff7ec1c35 <fgetsgent+293>:	pop    r14
   0x7ffff7ec1c37 <fgetsgent+295>:	pop    r15
   0x7ffff7ec1c39 <fgetsgent+297>:	ret
   0x7ffff7ec1c3a <fgetsgent+298>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec1c40 <fgetsgent+304>:	cmp    QWORD PTR [rip+0xedd00],0x0        # 0x7ffff7faf948
   0x7ffff7ec1c48 <fgetsgent+312>:	jne    0x7ffff7ec1bf8 <fgetsgent+232>
   0x7ffff7ec1c4a <fgetsgent+314>:	jmp    0x7ffff7ec1bef <fgetsgent+223>
   0x7ffff7ec1c4c <fgetsgent+316>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec1c50 <fgetsgent+320>:	mov    QWORD PTR [rip+0xedced],0x0        # 0x7ffff7faf948
   0x7ffff7ec1c5b <fgetsgent+331>:	jmp    0x7ffff7ec1bef <fgetsgent+223>
   0x7ffff7ec1c5d <fgetsgent+333>:	nop    DWORD PTR [rax]
   0x7ffff7ec1c60 <fgetsgent+336>:	mov    QWORD PTR [rip+0xf4d35],0x400        # 0x7ffff7fb69a0
   0x7ffff7ec1c6b <fgetsgent+347>:	mov    edi,0x400
   0x7ffff7ec1c70 <fgetsgent+352>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7ec1c75 <fgetsgent+357>:	mov    QWORD PTR [rip+0xedccc],rax        # 0x7ffff7faf948
   0x7ffff7ec1c7c <fgetsgent+364>:	mov    rdx,rax
   0x7ffff7ec1c7f <fgetsgent+367>:	jmp    0x7ffff7ec1b70 <fgetsgent+96>
   0x7ffff7ec1c84 <fgetsgent+372>:	lea    rdi,[rip+0xf4d1d]        # 0x7ffff7fb69a8
   0x7ffff7ec1c8b <fgetsgent+379>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec1c90 <fgetsgent+384>:	jmp    0x7ffff7ec1c0a <fgetsgent+250>
   0x7ffff7ec1c95 <fgetsgent+389>:	lea    rdi,[rip+0xf4d0c]        # 0x7ffff7fb69a8
   0x7ffff7ec1c9c <fgetsgent+396>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec1ca1 <fgetsgent+401>:	jmp    0x7ffff7ec1b60 <fgetsgent+80>
   0x7ffff7ec1ca6 <fgetsgent+406>:	mov    r15d,DWORD PTR fs:[r13+0x0]
   0x7ffff7ec1cab <fgetsgent+411>:	mov    rdi,r14
   0x7ffff7ec1cae <fgetsgent+414>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ec1cb3 <fgetsgent+419>:	mov    DWORD PTR fs:[r13+0x0],r15d
   0x7ffff7ec1cb8 <fgetsgent+424>:	mov    QWORD PTR [rip+0xedc85],0x0        # 0x7ffff7faf948
   0x7ffff7ec1cc3 <fgetsgent+435>:	jmp    0x7ffff7ec1bd4 <fgetsgent+196>
   0x7ffff7ec1cc8 <fgetsgent+440>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ec1ccd:	nop    DWORD PTR [rax]
   0x7ffff7ec1cd0 <putsgent>:	endbr64
   0x7ffff7ec1cd4 <putsgent+4>:	push   r15
   0x7ffff7ec1cd6 <putsgent+6>:	push   r14
   0x7ffff7ec1cd8 <putsgent+8>:	push   r13
   0x7ffff7ec1cda <putsgent+10>:	push   r12
   0x7ffff7ec1cdc <putsgent+12>:	push   rbp
   0x7ffff7ec1cdd <putsgent+13>:	mov    rbp,rdi
   0x7ffff7ec1ce0 <putsgent+16>:	push   rbx
   0x7ffff7ec1ce1 <putsgent+17>:	sub    rsp,0x18
   0x7ffff7ec1ce5 <putsgent+21>:	mov    rdi,QWORD PTR [rdi]
   0x7ffff7ec1ce8 <putsgent+24>:	test   rdi,rdi
   0x7ffff7ec1ceb <putsgent+27>:	je     0x7ffff7ec1f30 <putsgent+608>
   0x7ffff7ec1cf1 <putsgent+33>:	mov    rbx,rsi
   0x7ffff7ec1cf4 <putsgent+36>:	call   0x7ffff7ee9590
   0x7ffff7ec1cf9 <putsgent+41>:	test   al,al
   0x7ffff7ec1cfb <putsgent+43>:	je     0x7ffff7ec1f30 <putsgent+608>
   0x7ffff7ec1d01 <putsgent+49>:	mov    rdi,QWORD PTR [rbp+0x8]
   0x7ffff7ec1d05 <putsgent+53>:	call   0x7ffff7ee9590
   0x7ffff7ec1d0a <putsgent+58>:	test   al,al
   0x7ffff7ec1d0c <putsgent+60>:	je     0x7ffff7ec1f30 <putsgent+608>
   0x7ffff7ec1d12 <putsgent+66>:	mov    rdi,QWORD PTR [rbp+0x10]
   0x7ffff7ec1d16 <putsgent+70>:	call   0x7ffff7ee95c0
   0x7ffff7ec1d1b <putsgent+75>:	test   al,al
   0x7ffff7ec1d1d <putsgent+77>:	je     0x7ffff7ec1f30 <putsgent+608>
   0x7ffff7ec1d23 <putsgent+83>:	mov    rdi,QWORD PTR [rbp+0x18]
   0x7ffff7ec1d27 <putsgent+87>:	call   0x7ffff7ee95c0
   0x7ffff7ec1d2c <putsgent+92>:	mov    r14d,eax
   0x7ffff7ec1d2f <putsgent+95>:	test   al,al
   0x7ffff7ec1d31 <putsgent+97>:	je     0x7ffff7ec1f30 <putsgent+608>
   0x7ffff7ec1d37 <putsgent+103>:	mov    eax,DWORD PTR [rbx]
   0x7ffff7ec1d39 <putsgent+105>:	and    eax,0x8000
   0x7ffff7ec1d3e <putsgent+110>:	je     0x7ffff7ec1e90 <putsgent+448>
   0x7ffff7ec1d44 <putsgent+116>:	mov    rcx,QWORD PTR [rbp+0x8]
   0x7ffff7ec1d48 <putsgent+120>:	mov    rdx,QWORD PTR [rbp+0x0]
   0x7ffff7ec1d4c <putsgent+124>:	mov    rdi,rbx
   0x7ffff7ec1d4f <putsgent+127>:	lea    r13,[rip+0xab719]        # 0x7ffff7f6d46f
   0x7ffff7ec1d56 <putsgent+134>:	lea    rsi,[rip+0xae93e]        # 0x7ffff7f7069b
   0x7ffff7ec1d5d <putsgent+141>:	lea    r12,[rip+0xac6ee]        # 0x7ffff7f6e452
   0x7ffff7ec1d64 <putsgent+148>:	test   rcx,rcx
   0x7ffff7ec1d67 <putsgent+151>:	cmove  rcx,r13
   0x7ffff7ec1d6b <putsgent+155>:	xor    eax,eax
   0x7ffff7ec1d6d <putsgent+157>:	call   0x7ffff7df56b0 <fprintf>
   0x7ffff7ec1d72 <putsgent+162>:	mov    r15,QWORD PTR [rbp+0x10]
   0x7ffff7ec1d76 <putsgent+166>:	shr    eax,0x1f
   0x7ffff7ec1d79 <putsgent+169>:	mov    DWORD PTR [rsp+0xc],eax
   0x7ffff7ec1d7d <putsgent+173>:	mov    DWORD PTR [rsp+0x8],eax
   0x7ffff7ec1d81 <putsgent+177>:	mov    eax,r14d
   0x7ffff7ec1d84 <putsgent+180>:	test   r15,r15
   0x7ffff7ec1d87 <putsgent+183>:	jne    0x7ffff7ec1db9 <putsgent+233>
   0x7ffff7ec1d89 <putsgent+185>:	jmp    0x7ffff7ec1dc1 <putsgent+241>
   0x7ffff7ec1d8b <putsgent+187>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec1d90 <putsgent+192>:	add    r15,0x8
   0x7ffff7ec1d94 <putsgent+196>:	mov    rdx,r13
   0x7ffff7ec1d97 <putsgent+199>:	test   al,al
   0x7ffff7ec1d99 <putsgent+201>:	jne    0x7ffff7ec1da2 <putsgent+210>
   0x7ffff7ec1d9b <putsgent+203>:	lea    rdx,[rip+0xaf34a]        # 0x7ffff7f710ec
   0x7ffff7ec1da2 <putsgent+210>:	xor    eax,eax
   0x7ffff7ec1da4 <putsgent+212>:	mov    rsi,r12
   0x7ffff7ec1da7 <putsgent+215>:	mov    rdi,rbx
   0x7ffff7ec1daa <putsgent+218>:	call   0x7ffff7df56b0 <fprintf>
   0x7ffff7ec1daf <putsgent+223>:	test   eax,eax
   0x7ffff7ec1db1 <putsgent+225>:	js     0x7ffff7ec1ee0 <putsgent+528>
   0x7ffff7ec1db7 <putsgent+231>:	xor    eax,eax
   0x7ffff7ec1db9 <putsgent+233>:	mov    rcx,QWORD PTR [r15]
   0x7ffff7ec1dbc <putsgent+236>:	test   rcx,rcx
   0x7ffff7ec1dbf <putsgent+239>:	jne    0x7ffff7ec1d90 <putsgent+192>
   0x7ffff7ec1dc1 <putsgent+241>:	mov    rax,QWORD PTR [rbx+0x28]
   0x7ffff7ec1dc5 <putsgent+245>:	cmp    rax,QWORD PTR [rbx+0x30]
   0x7ffff7ec1dc9 <putsgent+249>:	jae    0x7ffff7ec1f10 <putsgent+576>
   0x7ffff7ec1dcf <putsgent+255>:	lea    rdx,[rax+0x1]
   0x7ffff7ec1dd3 <putsgent+259>:	mov    QWORD PTR [rbx+0x28],rdx
   0x7ffff7ec1dd7 <putsgent+263>:	mov    BYTE PTR [rax],0x3a
   0x7ffff7ec1dda <putsgent+266>:	mov    rbp,QWORD PTR [rbp+0x18]
   0x7ffff7ec1dde <putsgent+270>:	lea    r15,[rip+0xaf307]        # 0x7ffff7f710ec
   0x7ffff7ec1de5 <putsgent+277>:	lea    r12,[rip+0xac666]        # 0x7ffff7f6e452
   0x7ffff7ec1dec <putsgent+284>:	lea    r13,[rip+0xab67c]        # 0x7ffff7f6d46f
   0x7ffff7ec1df3 <putsgent+291>:	test   rbp,rbp
   0x7ffff7ec1df6 <putsgent+294>:	jne    0x7ffff7ec1e27 <putsgent+343>
   0x7ffff7ec1df8 <putsgent+296>:	jmp    0x7ffff7ec1e30 <putsgent+352>
   0x7ffff7ec1dfa <putsgent+298>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec1e00 <putsgent+304>:	add    rbp,0x8
   0x7ffff7ec1e04 <putsgent+308>:	mov    rdx,r13
   0x7ffff7ec1e07 <putsgent+311>:	test   r14b,r14b
   0x7ffff7ec1e0a <putsgent+314>:	jne    0x7ffff7ec1e0f <putsgent+319>
   0x7ffff7ec1e0c <putsgent+316>:	mov    rdx,r15
   0x7ffff7ec1e0f <putsgent+319>:	xor    eax,eax
   0x7ffff7ec1e11 <putsgent+321>:	mov    rsi,r12
   0x7ffff7ec1e14 <putsgent+324>:	mov    rdi,rbx
   0x7ffff7ec1e17 <putsgent+327>:	call   0x7ffff7df56b0 <fprintf>
   0x7ffff7ec1e1c <putsgent+332>:	test   eax,eax
   0x7ffff7ec1e1e <putsgent+334>:	js     0x7ffff7ec1ed0 <putsgent+512>
   0x7ffff7ec1e24 <putsgent+340>:	xor    r14d,r14d
   0x7ffff7ec1e27 <putsgent+343>:	mov    rcx,QWORD PTR [rbp+0x0]
   0x7ffff7ec1e2b <putsgent+347>:	test   rcx,rcx
   0x7ffff7ec1e2e <putsgent+350>:	jne    0x7ffff7ec1e00 <putsgent+304>
   0x7ffff7ec1e30 <putsgent+352>:	mov    rax,QWORD PTR [rbx+0x28]
   0x7ffff7ec1e34 <putsgent+356>:	cmp    rax,QWORD PTR [rbx+0x30]
   0x7ffff7ec1e38 <putsgent+360>:	jae    0x7ffff7ec1ef0 <putsgent+544>
   0x7ffff7ec1e3e <putsgent+366>:	lea    rdx,[rax+0x1]
   0x7ffff7ec1e42 <putsgent+370>:	mov    QWORD PTR [rbx+0x28],rdx
   0x7ffff7ec1e46 <putsgent+374>:	mov    BYTE PTR [rax],0xa
   0x7ffff7ec1e49 <putsgent+377>:	mov    eax,DWORD PTR [rsp+0x8]
   0x7ffff7ec1e4d <putsgent+381>:	neg    eax
   0x7ffff7ec1e4f <putsgent+383>:	sbb    eax,eax
   0x7ffff7ec1e51 <putsgent+385>:	test   DWORD PTR [rbx],0x8000
   0x7ffff7ec1e57 <putsgent+391>:	jne    0x7ffff7ec1e80 <putsgent+432>
   0x7ffff7ec1e59 <putsgent+393>:	mov    rdi,QWORD PTR [rbx+0x88]
   0x7ffff7ec1e60 <putsgent+400>:	mov    esi,DWORD PTR [rdi+0x4]
   0x7ffff7ec1e63 <putsgent+403>:	lea    edx,[rsi-0x1]
   0x7ffff7ec1e66 <putsgent+406>:	mov    DWORD PTR [rdi+0x4],edx
   0x7ffff7ec1e69 <putsgent+409>:	test   edx,edx
   0x7ffff7ec1e6b <putsgent+411>:	jne    0x7ffff7ec1e80 <putsgent+432>
   0x7ffff7ec1e6d <putsgent+413>:	mov    QWORD PTR [rdi+0x8],0x0
   0x7ffff7ec1e75 <putsgent+421>:	xchg   DWORD PTR [rdi],edx
   0x7ffff7ec1e77 <putsgent+423>:	cmp    edx,0x1
   0x7ffff7ec1e7a <putsgent+426>:	jg     0x7ffff7ec1f48 <putsgent+632>
   0x7ffff7ec1e80 <putsgent+432>:	add    rsp,0x18
   0x7ffff7ec1e84 <putsgent+436>:	pop    rbx
   0x7ffff7ec1e85 <putsgent+437>:	pop    rbp
   0x7ffff7ec1e86 <putsgent+438>:	pop    r12
   0x7ffff7ec1e88 <putsgent+440>:	pop    r13
   0x7ffff7ec1e8a <putsgent+442>:	pop    r14
   0x7ffff7ec1e8c <putsgent+444>:	pop    r15
   0x7ffff7ec1e8e <putsgent+446>:	ret
   0x7ffff7ec1e8f <putsgent+447>:	nop
   0x7ffff7ec1e90 <putsgent+448>:	mov    r12,QWORD PTR fs:0x10
   0x7ffff7ec1e99 <putsgent+457>:	mov    rdi,QWORD PTR [rbx+0x88]
   0x7ffff7ec1ea0 <putsgent+464>:	cmp    QWORD PTR [rdi+0x8],r12
   0x7ffff7ec1ea4 <putsgent+468>:	je     0x7ffff7ec1ec0 <putsgent+496>
   0x7ffff7ec1ea6 <putsgent+470>:	mov    edx,0x1
   0x7ffff7ec1eab <putsgent+475>:	lock cmpxchg DWORD PTR [rdi],edx
   0x7ffff7ec1eaf <putsgent+479>:	jne    0x7ffff7ec1f5a <putsgent+650>
   0x7ffff7ec1eb5 <putsgent+485>:	mov    rdi,QWORD PTR [rbx+0x88]
   0x7ffff7ec1ebc <putsgent+492>:	mov    QWORD PTR [rdi+0x8],r12
   0x7ffff7ec1ec0 <putsgent+496>:	add    DWORD PTR [rdi+0x4],0x1
   0x7ffff7ec1ec4 <putsgent+500>:	jmp    0x7ffff7ec1d44 <putsgent+116>
   0x7ffff7ec1ec9 <putsgent+505>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec1ed0 <putsgent+512>:	add    DWORD PTR [rsp+0x8],0x1
   0x7ffff7ec1ed5 <putsgent+517>:	jmp    0x7ffff7ec1e30 <putsgent+352>
   0x7ffff7ec1eda <putsgent+522>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec1ee0 <putsgent+528>:	mov    eax,DWORD PTR [rsp+0xc]
   0x7ffff7ec1ee4 <putsgent+532>:	add    eax,0x1
   0x7ffff7ec1ee7 <putsgent+535>:	mov    DWORD PTR [rsp+0x8],eax
   0x7ffff7ec1eeb <putsgent+539>:	jmp    0x7ffff7ec1dc1 <putsgent+241>
   0x7ffff7ec1ef0 <putsgent+544>:	mov    esi,0xa
   0x7ffff7ec1ef5 <putsgent+549>:	mov    rdi,rbx
   0x7ffff7ec1ef8 <putsgent+552>:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7ec1efd <putsgent+557>:	cmp    eax,0xffffffff
   0x7ffff7ec1f00 <putsgent+560>:	jne    0x7ffff7ec1e49 <putsgent+377>
   0x7ffff7ec1f06 <putsgent+566>:	jmp    0x7ffff7ec1e51 <putsgent+385>
   0x7ffff7ec1f0b <putsgent+571>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec1f10 <putsgent+576>:	mov    esi,0x3a
   0x7ffff7ec1f15 <putsgent+581>:	mov    rdi,rbx
   0x7ffff7ec1f18 <putsgent+584>:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7ec1f1d <putsgent+589>:	cmp    eax,0xffffffff
   0x7ffff7ec1f20 <putsgent+592>:	sete   al
   0x7ffff7ec1f23 <putsgent+595>:	movzx  eax,al
   0x7ffff7ec1f26 <putsgent+598>:	add    DWORD PTR [rsp+0x8],eax
   0x7ffff7ec1f2a <putsgent+602>:	jmp    0x7ffff7ec1dda <putsgent+266>
   0x7ffff7ec1f2f <putsgent+607>:	nop
   0x7ffff7ec1f30 <putsgent+608>:	mov    rax,QWORD PTR [rip+0xebed9]        # 0x7ffff7fade10
   0x7ffff7ec1f37 <putsgent+615>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ec1f3e <putsgent+622>:	mov    eax,0xffffffff
   0x7ffff7ec1f43 <putsgent+627>:	jmp    0x7ffff7ec1e80 <putsgent+432>
   0x7ffff7ec1f48 <putsgent+632>:	mov    DWORD PTR [rsp+0x8],eax
   0x7ffff7ec1f4c <putsgent+636>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec1f51 <putsgent+641>:	mov    eax,DWORD PTR [rsp+0x8]
   0x7ffff7ec1f55 <putsgent+645>:	jmp    0x7ffff7ec1e80 <putsgent+432>
   0x7ffff7ec1f5a <putsgent+650>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec1f5f <putsgent+655>:	jmp    0x7ffff7ec1eb5 <putsgent+485>
   0x7ffff7ec1f64:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec1f6e:	xchg   ax,ax
   0x7ffff7ec1f70 <setsgent>:	endbr64
   0x7ffff7ec1f74 <setsgent+4>:	push   rbp
   0x7ffff7ec1f75 <setsgent+5>:	xor    eax,eax
   0x7ffff7ec1f77 <setsgent+7>:	mov    edx,0x1
   0x7ffff7ec1f7c <setsgent+12>:	push   rbx
   0x7ffff7ec1f7d <setsgent+13>:	sub    rsp,0x8
   0x7ffff7ec1f81 <setsgent+17>:	lock cmpxchg DWORD PTR [rip+0xf4a27],edx        # 0x7ffff7fb69b0
   0x7ffff7ec1f89 <setsgent+25>:	jne    0x7ffff7ec1fe0 <setsgent+112>
   0x7ffff7ec1f8b <setsgent+27>:	push   0x0
   0x7ffff7ec1f8d <setsgent+29>:	xor    r9d,r9d
   0x7ffff7ec1f90 <setsgent+32>:	lea    r8,[rip+0xf4a29]        # 0x7ffff7fb69c0
   0x7ffff7ec1f97 <setsgent+39>:	lea    rcx,[rip+0xf4a1a]        # 0x7ffff7fb69b8
   0x7ffff7ec1f9e <setsgent+46>:	push   0x0
   0x7ffff7ec1fa0 <setsgent+48>:	lea    rdx,[rip+0xf4a21]        # 0x7ffff7fb69c8
   0x7ffff7ec1fa7 <setsgent+55>:	lea    rsi,[rip+0x27bf2]        # 0x7ffff7ee9ba0
   0x7ffff7ec1fae <setsgent+62>:	lea    rdi,[rip+0xae72d]        # 0x7ffff7f706e2
   0x7ffff7ec1fb5 <setsgent+69>:	call   0x7ffff7ee85f0
   0x7ffff7ec1fba <setsgent+74>:	mov    rbx,QWORD PTR [rip+0xebe4f]        # 0x7ffff7fade10
   0x7ffff7ec1fc1 <setsgent+81>:	xor    eax,eax
   0x7ffff7ec1fc3 <setsgent+83>:	mov    ebp,DWORD PTR fs:[rbx]
   0x7ffff7ec1fc6 <setsgent+86>:	xchg   DWORD PTR [rip+0xf49e4],eax        # 0x7ffff7fb69b0
   0x7ffff7ec1fcc <setsgent+92>:	pop    rdx
   0x7ffff7ec1fcd <setsgent+93>:	pop    rcx
   0x7ffff7ec1fce <setsgent+94>:	cmp    eax,0x1
   0x7ffff7ec1fd1 <setsgent+97>:	jg     0x7ffff7ec1ff0 <setsgent+128>
   0x7ffff7ec1fd3 <setsgent+99>:	mov    DWORD PTR fs:[rbx],ebp
   0x7ffff7ec1fd6 <setsgent+102>:	add    rsp,0x8
   0x7ffff7ec1fda <setsgent+106>:	pop    rbx
   0x7ffff7ec1fdb <setsgent+107>:	pop    rbp
   0x7ffff7ec1fdc <setsgent+108>:	ret
   0x7ffff7ec1fdd <setsgent+109>:	nop    DWORD PTR [rax]
   0x7ffff7ec1fe0 <setsgent+112>:	lea    rdi,[rip+0xf49c9]        # 0x7ffff7fb69b0
   0x7ffff7ec1fe7 <setsgent+119>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec1fec <setsgent+124>:	jmp    0x7ffff7ec1f8b <setsgent+27>
   0x7ffff7ec1fee <setsgent+126>:	xchg   ax,ax
   0x7ffff7ec1ff0 <setsgent+128>:	lea    rdi,[rip+0xf49b9]        # 0x7ffff7fb69b0
   0x7ffff7ec1ff7 <setsgent+135>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec1ffc <setsgent+140>:	mov    DWORD PTR fs:[rbx],ebp
   0x7ffff7ec1fff <setsgent+143>:	add    rsp,0x8
   0x7ffff7ec2003 <setsgent+147>:	pop    rbx
   0x7ffff7ec2004 <setsgent+148>:	pop    rbp
   0x7ffff7ec2005 <setsgent+149>:	ret
   0x7ffff7ec2006:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2010 <endsgent>:	endbr64
   0x7ffff7ec2014 <endsgent+4>:	cmp    QWORD PTR [rip+0xf499c],0x0        # 0x7ffff7fb69b8
   0x7ffff7ec201c <endsgent+12>:	je     0x7ffff7ec2088 <endsgent+120>
   0x7ffff7ec201e <endsgent+14>:	push   rbp
   0x7ffff7ec201f <endsgent+15>:	xor    eax,eax
   0x7ffff7ec2021 <endsgent+17>:	mov    edx,0x1
   0x7ffff7ec2026 <endsgent+22>:	push   rbx
   0x7ffff7ec2027 <endsgent+23>:	sub    rsp,0x8
   0x7ffff7ec202b <endsgent+27>:	lock cmpxchg DWORD PTR [rip+0xf497d],edx        # 0x7ffff7fb69b0
   0x7ffff7ec2033 <endsgent+35>:	jne    0x7ffff7ec20a0 <endsgent+144>
   0x7ffff7ec2035 <endsgent+37>:	xor    r9d,r9d
   0x7ffff7ec2038 <endsgent+40>:	lea    r8,[rip+0xf4981]        # 0x7ffff7fb69c0
   0x7ffff7ec203f <endsgent+47>:	lea    rcx,[rip+0xf4972]        # 0x7ffff7fb69b8
   0x7ffff7ec2046 <endsgent+54>:	lea    rdx,[rip+0xf497b]        # 0x7ffff7fb69c8
   0x7ffff7ec204d <endsgent+61>:	lea    rsi,[rip+0x27b4c]        # 0x7ffff7ee9ba0
   0x7ffff7ec2054 <endsgent+68>:	lea    rdi,[rip+0xae690]        # 0x7ffff7f706eb
   0x7ffff7ec205b <endsgent+75>:	call   0x7ffff7ee87e0
   0x7ffff7ec2060 <endsgent+80>:	mov    rbx,QWORD PTR [rip+0xebda9]        # 0x7ffff7fade10
   0x7ffff7ec2067 <endsgent+87>:	xor    eax,eax
   0x7ffff7ec2069 <endsgent+89>:	mov    ebp,DWORD PTR fs:[rbx]
   0x7ffff7ec206c <endsgent+92>:	xchg   DWORD PTR [rip+0xf493e],eax        # 0x7ffff7fb69b0
   0x7ffff7ec2072 <endsgent+98>:	cmp    eax,0x1
   0x7ffff7ec2075 <endsgent+101>:	jg     0x7ffff7ec2090 <endsgent+128>
   0x7ffff7ec2077 <endsgent+103>:	mov    DWORD PTR fs:[rbx],ebp
   0x7ffff7ec207a <endsgent+106>:	add    rsp,0x8
   0x7ffff7ec207e <endsgent+110>:	pop    rbx
   0x7ffff7ec207f <endsgent+111>:	pop    rbp
   0x7ffff7ec2080 <endsgent+112>:	ret
   0x7ffff7ec2081 <endsgent+113>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec2088 <endsgent+120>:	ret
   0x7ffff7ec2089 <endsgent+121>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec2090 <endsgent+128>:	lea    rdi,[rip+0xf4919]        # 0x7ffff7fb69b0
   0x7ffff7ec2097 <endsgent+135>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec209c <endsgent+140>:	jmp    0x7ffff7ec2077 <endsgent+103>
   0x7ffff7ec209e <endsgent+142>:	xchg   ax,ax
   0x7ffff7ec20a0 <endsgent+144>:	lea    rdi,[rip+0xf4909]        # 0x7ffff7fb69b0
   0x7ffff7ec20a7 <endsgent+151>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec20ac <endsgent+156>:	jmp    0x7ffff7ec2035 <endsgent+37>
   0x7ffff7ec20ae:	xchg   ax,ax
   0x7ffff7ec20b0 <getsgent_r>:	endbr64
   0x7ffff7ec20b4 <getsgent_r+4>:	push   r12
   0x7ffff7ec20b6 <getsgent_r+6>:	xor    eax,eax
   0x7ffff7ec20b8 <getsgent_r+8>:	mov    r12,rdx
   0x7ffff7ec20bb <getsgent_r+11>:	mov    edx,0x1
   0x7ffff7ec20c0 <getsgent_r+16>:	push   rbp
   0x7ffff7ec20c1 <getsgent_r+17>:	push   rbx
   0x7ffff7ec20c2 <getsgent_r+18>:	mov    rbx,rdi
   0x7ffff7ec20c5 <getsgent_r+21>:	sub    rsp,0x10
   0x7ffff7ec20c9 <getsgent_r+25>:	lock cmpxchg DWORD PTR [rip+0xf48df],edx        # 0x7ffff7fb69b0
   0x7ffff7ec20d1 <getsgent_r+33>:	jne    0x7ffff7ec2140 <getsgent_r+144>
   0x7ffff7ec20d3 <getsgent_r+35>:	sub    rsp,0x8
   0x7ffff7ec20d7 <getsgent_r+39>:	lea    r9,[rip+0xf48e2]        # 0x7ffff7fb69c0
   0x7ffff7ec20de <getsgent_r+46>:	lea    r8,[rip+0xf48d3]        # 0x7ffff7fb69b8
   0x7ffff7ec20e5 <getsgent_r+53>:	push   0x0
   0x7ffff7ec20e7 <getsgent_r+55>:	lea    rdx,[rip+0x27ab2]        # 0x7ffff7ee9ba0
   0x7ffff7ec20ee <getsgent_r+62>:	lea    rdi,[rip+0xae5ff]        # 0x7ffff7f706f4
   0x7ffff7ec20f5 <getsgent_r+69>:	push   rcx
   0x7ffff7ec20f6 <getsgent_r+70>:	lea    rcx,[rip+0xf48cb]        # 0x7ffff7fb69c8
   0x7ffff7ec20fd <getsgent_r+77>:	push   r12
   0x7ffff7ec20ff <getsgent_r+79>:	push   rsi
   0x7ffff7ec2100 <getsgent_r+80>:	lea    rsi,[rip+0xae5db]        # 0x7ffff7f706e2
   0x7ffff7ec2107 <getsgent_r+87>:	push   rbx
   0x7ffff7ec2108 <getsgent_r+88>:	push   0x0
   0x7ffff7ec210a <getsgent_r+90>:	push   0x0
   0x7ffff7ec210c <getsgent_r+92>:	call   0x7ffff7ee88f0
   0x7ffff7ec2111 <getsgent_r+97>:	mov    rbx,QWORD PTR [rip+0xebcf8]        # 0x7ffff7fade10
   0x7ffff7ec2118 <getsgent_r+104>:	xor    edx,edx
   0x7ffff7ec211a <getsgent_r+106>:	mov    ebp,DWORD PTR fs:[rbx]
   0x7ffff7ec211d <getsgent_r+109>:	xchg   DWORD PTR [rip+0xf488d],edx        # 0x7ffff7fb69b0
   0x7ffff7ec2123 <getsgent_r+115>:	add    rsp,0x40
   0x7ffff7ec2127 <getsgent_r+119>:	cmp    edx,0x1
   0x7ffff7ec212a <getsgent_r+122>:	jg     0x7ffff7ec2168 <getsgent_r+184>
   0x7ffff7ec212c <getsgent_r+124>:	mov    DWORD PTR fs:[rbx],ebp
   0x7ffff7ec212f <getsgent_r+127>:	add    rsp,0x10
   0x7ffff7ec2133 <getsgent_r+131>:	pop    rbx
   0x7ffff7ec2134 <getsgent_r+132>:	pop    rbp
   0x7ffff7ec2135 <getsgent_r+133>:	pop    r12
   0x7ffff7ec2137 <getsgent_r+135>:	ret
   0x7ffff7ec2138 <getsgent_r+136>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2140 <getsgent_r+144>:	lea    rdi,[rip+0xf4869]        # 0x7ffff7fb69b0
   0x7ffff7ec2147 <getsgent_r+151>:	mov    QWORD PTR [rsp+0x8],rcx
   0x7ffff7ec214c <getsgent_r+156>:	mov    QWORD PTR [rsp],rsi
   0x7ffff7ec2150 <getsgent_r+160>:	call   0x7ffff7e262b0 <__lll_lock_wait_private>
   0x7ffff7ec2155 <getsgent_r+165>:	mov    rcx,QWORD PTR [rsp+0x8]
   0x7ffff7ec215a <getsgent_r+170>:	mov    rsi,QWORD PTR [rsp]
   0x7ffff7ec215e <getsgent_r+174>:	jmp    0x7ffff7ec20d3 <getsgent_r+35>
   0x7ffff7ec2163 <getsgent_r+179>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2168 <getsgent_r+184>:	lea    rdi,[rip+0xf4841]        # 0x7ffff7fb69b0
   0x7ffff7ec216f <getsgent_r+191>:	mov    DWORD PTR [rsp],eax
   0x7ffff7ec2172 <getsgent_r+194>:	call   0x7ffff7e26380 <__lll_lock_wake_private>
   0x7ffff7ec2177 <getsgent_r+199>:	mov    eax,DWORD PTR [rsp]
   0x7ffff7ec217a <getsgent_r+202>:	mov    DWORD PTR fs:[rbx],ebp
   0x7ffff7ec217d <getsgent_r+205>:	add    rsp,0x10
   0x7ffff7ec2181 <getsgent_r+209>:	pop    rbx
   0x7ffff7ec2182 <getsgent_r+210>:	pop    rbp
   0x7ffff7ec2183 <getsgent_r+211>:	pop    r12
   0x7ffff7ec2185 <getsgent_r+213>:	ret
   0x7ffff7ec2186:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2190 <getsgnam_r>:	endbr64
   0x7ffff7ec2194 <getsgnam_r+4>:	push   r15
   0x7ffff7ec2196 <getsgnam_r+6>:	push   r14
   0x7ffff7ec2198 <getsgnam_r+8>:	push   r13
   0x7ffff7ec219a <getsgnam_r+10>:	lea    r13,[rip+0xae55e]        # 0x7ffff7f706ff
   0x7ffff7ec21a1 <getsgnam_r+17>:	push   r12
   0x7ffff7ec21a3 <getsgnam_r+19>:	mov    r12,rsi
   0x7ffff7ec21a6 <getsgnam_r+22>:	mov    rsi,r13
   0x7ffff7ec21a9 <getsgnam_r+25>:	push   rbp
   0x7ffff7ec21aa <getsgnam_r+26>:	mov    rbp,rcx
   0x7ffff7ec21ad <getsgnam_r+29>:	push   rbx
   0x7ffff7ec21ae <getsgnam_r+30>:	sub    rsp,0x68
   0x7ffff7ec21b2 <getsgnam_r+34>:	mov    QWORD PTR [rsp+0x10],rdi
   0x7ffff7ec21b7 <getsgnam_r+39>:	lea    r15,[rsp+0x50]
   0x7ffff7ec21bc <getsgnam_r+44>:	lea    r14,[rsp+0x48]
   0x7ffff7ec21c1 <getsgnam_r+49>:	mov    QWORD PTR [rsp+0x18],rdx
   0x7ffff7ec21c6 <getsgnam_r+54>:	mov    rcx,r15
   0x7ffff7ec21c9 <getsgnam_r+57>:	xor    edx,edx
   0x7ffff7ec21cb <getsgnam_r+59>:	mov    rdi,r14
   0x7ffff7ec21ce <getsgnam_r+62>:	mov    QWORD PTR [rsp+0x38],r8
   0x7ffff7ec21d3 <getsgnam_r+67>:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ec21dc <getsgnam_r+76>:	mov    QWORD PTR [rsp+0x58],rax
   0x7ffff7ec21e1 <getsgnam_r+81>:	xor    eax,eax
   0x7ffff7ec21e3 <getsgnam_r+83>:	call   0x7ffff7ee9ba0
   0x7ffff7ec21e8 <getsgnam_r+88>:	mov    DWORD PTR [rsp+0x34],eax
   0x7ffff7ec21ec <getsgnam_r+92>:	test   eax,eax
   0x7ffff7ec21ee <getsgnam_r+94>:	jne    0x7ffff7ec2418 <getsgnam_r+648>
   0x7ffff7ec21f4 <getsgnam_r+100>:	mov    rax,QWORD PTR [rip+0xebc15]        # 0x7ffff7fade10
   0x7ffff7ec21fb <getsgnam_r+107>:	xor    ebx,ebx
   0x7ffff7ec21fd <getsgnam_r+109>:	mov    QWORD PTR [rsp+0x28],0x0
   0x7ffff7ec2206 <getsgnam_r+118>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ec220b <getsgnam_r+123>:	add    rax,QWORD PTR fs:0x0
   0x7ffff7ec2214 <getsgnam_r+132>:	mov    QWORD PTR [rsp+0x20],rax
   0x7ffff7ec2219 <getsgnam_r+137>:	jmp    0x7ffff7ec226d <getsgnam_r+221>
   0x7ffff7ec221b <getsgnam_r+139>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2220 <getsgnam_r+144>:	test   ebx,ebx
   0x7ffff7ec2222 <getsgnam_r+146>:	je     0x7ffff7ec22f8 <getsgnam_r+360>
   0x7ffff7ec2228 <getsgnam_r+152>:	cmp    eax,0x1
   0x7ffff7ec222b <getsgnam_r+155>:	jne    0x7ffff7ec22ab <getsgnam_r+283>
   0x7ffff7ec222d <getsgnam_r+157>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec2232 <getsgnam_r+162>:	xor    ebx,ebx
   0x7ffff7ec2234 <getsgnam_r+164>:	mov    r8d,0xffffffff
   0x7ffff7ec223a <getsgnam_r+170>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ec2241 <getsgnam_r+177>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec2248 <getsgnam_r+184>:	xor    r9d,r9d
   0x7ffff7ec224b <getsgnam_r+187>:	xor    edx,edx
   0x7ffff7ec224d <getsgnam_r+189>:	mov    rcx,r15
   0x7ffff7ec2250 <getsgnam_r+192>:	mov    rsi,r13
   0x7ffff7ec2253 <getsgnam_r+195>:	mov    rdi,r14
   0x7ffff7ec2256 <getsgnam_r+198>:	mov    DWORD PTR [rsp+0x30],r8d
   0x7ffff7ec225b <getsgnam_r+203>:	call   0x7ffff7ee8310 <__nss_next2>
   0x7ffff7ec2260 <getsgnam_r+208>:	mov    r8d,DWORD PTR [rsp+0x30]
   0x7ffff7ec2265 <getsgnam_r+213>:	test   eax,eax
   0x7ffff7ec2267 <getsgnam_r+215>:	jne    0x7ffff7ec2330 <getsgnam_r+416>
   0x7ffff7ec226d <getsgnam_r+221>:	mov    rdi,QWORD PTR [rsp+0x50]
   0x7ffff7ec2272 <getsgnam_r+226>:	call   0x7ffff7f0a4d0 <_dl_mcount_wrapper_check>
   0x7ffff7ec2277 <getsgnam_r+231>:	mov    r8,QWORD PTR [rsp+0x20]
   0x7ffff7ec227c <getsgnam_r+236>:	mov    rcx,rbp
   0x7ffff7ec227f <getsgnam_r+239>:	mov    rsi,r12
   0x7ffff7ec2282 <getsgnam_r+242>:	mov    rdx,QWORD PTR [rsp+0x18]
   0x7ffff7ec2287 <getsgnam_r+247>:	mov    rdi,QWORD PTR [rsp+0x10]
   0x7ffff7ec228c <getsgnam_r+252>:	call   QWORD PTR [rsp+0x50]
   0x7ffff7ec2290 <getsgnam_r+256>:	mov    r8d,eax
   0x7ffff7ec2293 <getsgnam_r+259>:	cmp    eax,0xfffffffe
   0x7ffff7ec2296 <getsgnam_r+262>:	jne    0x7ffff7ec2220 <getsgnam_r+144>
   0x7ffff7ec2298 <getsgnam_r+264>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec229d <getsgnam_r+269>:	cmp    DWORD PTR fs:[rax],0x22
   0x7ffff7ec22a1 <getsgnam_r+273>:	je     0x7ffff7ec23f8 <getsgnam_r+616>
   0x7ffff7ec22a7 <getsgnam_r+279>:	test   ebx,ebx
   0x7ffff7ec22a9 <getsgnam_r+281>:	je     0x7ffff7ec22f8 <getsgnam_r+360>
   0x7ffff7ec22ab <getsgnam_r+283>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec22b0 <getsgnam_r+288>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ec22b7 <getsgnam_r+295>:	mov    rax,QWORD PTR [rsp+0x48]
   0x7ffff7ec22bc <getsgnam_r+300>:	mov    eax,DWORD PTR [rax+0x8]
   0x7ffff7ec22bf <getsgnam_r+303>:	shr    eax,0x6
   0x7ffff7ec22c2 <getsgnam_r+306>:	and    eax,0x3
   0x7ffff7ec22c5 <getsgnam_r+309>:	cmp    eax,0x2
   0x7ffff7ec22c8 <getsgnam_r+312>:	jne    0x7ffff7ec2320 <getsgnam_r+400>
   0x7ffff7ec22ca <getsgnam_r+314>:	cmp    QWORD PTR [rsp+0x28],0x0
   0x7ffff7ec22d0 <getsgnam_r+320>:	je     0x7ffff7ec2380 <getsgnam_r+496>
   0x7ffff7ec22d6 <getsgnam_r+326>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec22db <getsgnam_r+331>:	mov    r8d,0xffffffff
   0x7ffff7ec22e1 <getsgnam_r+337>:	mov    ebx,0x1
   0x7ffff7ec22e6 <getsgnam_r+342>:	mov    DWORD PTR fs:[rax],0x16
   0x7ffff7ec22ed <getsgnam_r+349>:	jmp    0x7ffff7ec2248 <getsgnam_r+184>
   0x7ffff7ec22f2 <getsgnam_r+354>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec22f8 <getsgnam_r+360>:	mov    rax,QWORD PTR [rsp+0x48]
   0x7ffff7ec22fd <getsgnam_r+365>:	lea    ecx,[r8+r8*1+0x4]
   0x7ffff7ec2302 <getsgnam_r+370>:	mov    eax,DWORD PTR [rax+0x8]
   0x7ffff7ec2305 <getsgnam_r+373>:	shr    eax,cl
   0x7ffff7ec2307 <getsgnam_r+375>:	and    eax,0x3
   0x7ffff7ec230a <getsgnam_r+378>:	cmp    eax,0x2
   0x7ffff7ec230d <getsgnam_r+381>:	jne    0x7ffff7ec2315 <getsgnam_r+389>
   0x7ffff7ec230f <getsgnam_r+383>:	cmp    r8d,0x1
   0x7ffff7ec2313 <getsgnam_r+387>:	je     0x7ffff7ec22ca <getsgnam_r+314>
   0x7ffff7ec2315 <getsgnam_r+389>:	xor    ebx,ebx
   0x7ffff7ec2317 <getsgnam_r+391>:	jmp    0x7ffff7ec2248 <getsgnam_r+184>
   0x7ffff7ec231c <getsgnam_r+396>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec2320 <getsgnam_r+400>:	mov    r8d,0x1
   0x7ffff7ec2326 <getsgnam_r+406>:	mov    ebx,0x1
   0x7ffff7ec232b <getsgnam_r+411>:	jmp    0x7ffff7ec2248 <getsgnam_r+184>
   0x7ffff7ec2330 <getsgnam_r+416>:	mov    rdi,QWORD PTR [rsp+0x28]
   0x7ffff7ec2335 <getsgnam_r+421>:	mov    DWORD PTR [rsp+0x30],r8d
   0x7ffff7ec233a <getsgnam_r+426>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ec233f <getsgnam_r+431>:	mov    r8d,DWORD PTR [rsp+0x30]
   0x7ffff7ec2344 <getsgnam_r+436>:	mov    rax,QWORD PTR [rsp+0x38]
   0x7ffff7ec2349 <getsgnam_r+441>:	cmp    r8d,0x1
   0x7ffff7ec234d <getsgnam_r+445>:	je     0x7ffff7ec23c0 <getsgnam_r+560>
   0x7ffff7ec234f <getsgnam_r+447>:	mov    QWORD PTR [rax],0x0
   0x7ffff7ec2356 <getsgnam_r+454>:	jbe    0x7ffff7ec23c3 <getsgnam_r+563>
   0x7ffff7ec2358 <getsgnam_r+456>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec235d <getsgnam_r+461>:	mov    eax,DWORD PTR fs:[rax]
   0x7ffff7ec2360 <getsgnam_r+464>:	mov    DWORD PTR [rsp+0x34],eax
   0x7ffff7ec2364 <getsgnam_r+468>:	cmp    eax,0x22
   0x7ffff7ec2367 <getsgnam_r+471>:	jne    0x7ffff7ec23cf <getsgnam_r+575>
   0x7ffff7ec2369 <getsgnam_r+473>:	cmp    r8d,0xfffffffe
   0x7ffff7ec236d <getsgnam_r+477>:	je     0x7ffff7ec23cf <getsgnam_r+575>
   0x7ffff7ec236f <getsgnam_r+479>:	mov    DWORD PTR [rsp+0x34],0x16
   0x7ffff7ec2377 <getsgnam_r+487>:	jmp    0x7ffff7ec23c3 <getsgnam_r+563>
   0x7ffff7ec2379 <getsgnam_r+489>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec2380 <getsgnam_r+496>:	mov    rdi,rbp
   0x7ffff7ec2383 <getsgnam_r+499>:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7ec2388 <getsgnam_r+504>:	mov    QWORD PTR [rsp+0x28],rax
   0x7ffff7ec238d <getsgnam_r+509>:	test   rax,rax
   0x7ffff7ec2390 <getsgnam_r+512>:	jne    0x7ffff7ec22d6 <getsgnam_r+326>
   0x7ffff7ec2396 <getsgnam_r+518>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec239b <getsgnam_r+523>:	mov    DWORD PTR fs:[rax],0xc
   0x7ffff7ec23a2 <getsgnam_r+530>:	mov    rax,QWORD PTR [rsp+0x38]
   0x7ffff7ec23a7 <getsgnam_r+535>:	mov    DWORD PTR [rsp+0x34],0xc
   0x7ffff7ec23af <getsgnam_r+543>:	mov    QWORD PTR [rax],0x0
   0x7ffff7ec23b6 <getsgnam_r+550>:	jmp    0x7ffff7ec23cf <getsgnam_r+575>
   0x7ffff7ec23b8 <getsgnam_r+552>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec23c0 <getsgnam_r+560>:	mov    QWORD PTR [rax],r12
   0x7ffff7ec23c3 <getsgnam_r+563>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec23c8 <getsgnam_r+568>:	mov    ebx,DWORD PTR [rsp+0x34]
   0x7ffff7ec23cc <getsgnam_r+572>:	mov    DWORD PTR fs:[rax],ebx
   0x7ffff7ec23cf <getsgnam_r+575>:	mov    rax,QWORD PTR [rsp+0x58]
   0x7ffff7ec23d4 <getsgnam_r+580>:	sub    rax,QWORD PTR fs:0x28
   0x7ffff7ec23dd <getsgnam_r+589>:	jne    0x7ffff7ec2442 <getsgnam_r+690>
   0x7ffff7ec23df <getsgnam_r+591>:	mov    eax,DWORD PTR [rsp+0x34]
   0x7ffff7ec23e3 <getsgnam_r+595>:	add    rsp,0x68
   0x7ffff7ec23e7 <getsgnam_r+599>:	pop    rbx
   0x7ffff7ec23e8 <getsgnam_r+600>:	pop    rbp
   0x7ffff7ec23e9 <getsgnam_r+601>:	pop    r12
   0x7ffff7ec23eb <getsgnam_r+603>:	pop    r13
   0x7ffff7ec23ed <getsgnam_r+605>:	pop    r14
   0x7ffff7ec23ef <getsgnam_r+607>:	pop    r15
   0x7ffff7ec23f1 <getsgnam_r+609>:	ret
   0x7ffff7ec23f2 <getsgnam_r+610>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec23f8 <getsgnam_r+616>:	mov    rdi,QWORD PTR [rsp+0x28]
   0x7ffff7ec23fd <getsgnam_r+621>:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ec2402 <getsgnam_r+626>:	mov    rax,QWORD PTR [rsp+0x38]
   0x7ffff7ec2407 <getsgnam_r+631>:	mov    DWORD PTR [rsp+0x34],0x22
   0x7ffff7ec240f <getsgnam_r+639>:	mov    QWORD PTR [rax],0x0
   0x7ffff7ec2416 <getsgnam_r+646>:	jmp    0x7ffff7ec23cf <getsgnam_r+575>
   0x7ffff7ec2418 <getsgnam_r+648>:	mov    rax,QWORD PTR [rsp+0x38]
   0x7ffff7ec241d <getsgnam_r+653>:	mov    QWORD PTR [rax],0x0
   0x7ffff7ec2424 <getsgnam_r+660>:	mov    rax,QWORD PTR [rip+0xeb9e5]        # 0x7ffff7fade10
   0x7ffff7ec242b <getsgnam_r+667>:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ec2430 <getsgnam_r+672>:	mov    eax,DWORD PTR fs:[rax]
   0x7ffff7ec2433 <getsgnam_r+675>:	mov    DWORD PTR [rsp+0x34],eax
   0x7ffff7ec2437 <getsgnam_r+679>:	cmp    eax,0x22
   0x7ffff7ec243a <getsgnam_r+682>:	je     0x7ffff7ec236f <getsgnam_r+479>
   0x7ffff7ec2440 <getsgnam_r+688>:	jmp    0x7ffff7ec23cf <getsgnam_r+575>
   0x7ffff7ec2442 <getsgnam_r+690>:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ec2447:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2450 <_nss_files_parse_sgent>:	endbr64
   0x7ffff7ec2454 <_nss_files_parse_sgent+4>:	push   r15
   0x7ffff7ec2456 <_nss_files_parse_sgent+6>:	lea    r15,[rdx+rcx*1]
   0x7ffff7ec245a <_nss_files_parse_sgent+10>:	push   r14
   0x7ffff7ec245c <_nss_files_parse_sgent+12>:	mov    r14,rdx
   0x7ffff7ec245f <_nss_files_parse_sgent+15>:	push   r13
   0x7ffff7ec2461 <_nss_files_parse_sgent+17>:	push   r12
   0x7ffff7ec2463 <_nss_files_parse_sgent+19>:	mov    r12,rsi
   0x7ffff7ec2466 <_nss_files_parse_sgent+22>:	push   rbp
   0x7ffff7ec2467 <_nss_files_parse_sgent+23>:	mov    rbp,rdx
   0x7ffff7ec246a <_nss_files_parse_sgent+26>:	push   rbx
   0x7ffff7ec246b <_nss_files_parse_sgent+27>:	mov    rbx,rdi
   0x7ffff7ec246e <_nss_files_parse_sgent+30>:	sub    rsp,0x18
   0x7ffff7ec2472 <_nss_files_parse_sgent+34>:	mov    QWORD PTR [rsp+0x8],r8
   0x7ffff7ec2477 <_nss_files_parse_sgent+39>:	cmp    rdx,rdi
   0x7ffff7ec247a <_nss_files_parse_sgent+42>:	ja     0x7ffff7ec2485 <_nss_files_parse_sgent+53>
   0x7ffff7ec247c <_nss_files_parse_sgent+44>:	cmp    r15,rdi
   0x7ffff7ec247f <_nss_files_parse_sgent+47>:	ja     0x7ffff7ec2712 <_nss_files_parse_sgent+706>
   0x7ffff7ec2485 <_nss_files_parse_sgent+53>:	mov    r13,rbp
   0x7ffff7ec2488 <_nss_files_parse_sgent+56>:	mov    esi,0xa
   0x7ffff7ec248d <_nss_files_parse_sgent+61>:	mov    rdi,rbx
   0x7ffff7ec2490 <_nss_files_parse_sgent+64>:	call   0x7ffff7dbd600 <*ABS*+0xa82e0@plt>
   0x7ffff7ec2495 <_nss_files_parse_sgent+69>:	test   rax,rax
   0x7ffff7ec2498 <_nss_files_parse_sgent+72>:	je     0x7ffff7ec249d <_nss_files_parse_sgent+77>
   0x7ffff7ec249a <_nss_files_parse_sgent+74>:	mov    BYTE PTR [rax],0x0
   0x7ffff7ec249d <_nss_files_parse_sgent+77>:	mov    QWORD PTR [r12],rbx
   0x7ffff7ec24a1 <_nss_files_parse_sgent+81>:	movzx  eax,BYTE PTR [rbx]
   0x7ffff7ec24a4 <_nss_files_parse_sgent+84>:	test   al,al
   0x7ffff7ec24a6 <_nss_files_parse_sgent+86>:	jne    0x7ffff7ec24c0 <_nss_files_parse_sgent+112>
   0x7ffff7ec24a8 <_nss_files_parse_sgent+88>:	jmp    0x7ffff7ec25eb <_nss_files_parse_sgent+411>
   0x7ffff7ec24ad <_nss_files_parse_sgent+93>:	nop    DWORD PTR [rax]
   0x7ffff7ec24b0 <_nss_files_parse_sgent+96>:	movzx  eax,BYTE PTR [rbx+0x1]
   0x7ffff7ec24b4 <_nss_files_parse_sgent+100>:	add    rbx,0x1
   0x7ffff7ec24b8 <_nss_files_parse_sgent+104>:	test   al,al
   0x7ffff7ec24ba <_nss_files_parse_sgent+106>:	je     0x7ffff7ec25eb <_nss_files_parse_sgent+411>
   0x7ffff7ec24c0 <_nss_files_parse_sgent+112>:	cmp    al,0x3a
   0x7ffff7ec24c2 <_nss_files_parse_sgent+114>:	jne    0x7ffff7ec24b0 <_nss_files_parse_sgent+96>
   0x7ffff7ec24c4 <_nss_files_parse_sgent+116>:	test   al,al
   0x7ffff7ec24c6 <_nss_files_parse_sgent+118>:	je     0x7ffff7ec25eb <_nss_files_parse_sgent+411>
   0x7ffff7ec24cc <_nss_files_parse_sgent+124>:	cmp    BYTE PTR [rbx+0x1],0x0
   0x7ffff7ec24d0 <_nss_files_parse_sgent+128>:	mov    BYTE PTR [rbx],0x0
   0x7ffff7ec24d3 <_nss_files_parse_sgent+131>:	lea    rcx,[rbx+0x1]
   0x7ffff7ec24d7 <_nss_files_parse_sgent+135>:	je     0x7ffff7ec25e8 <_nss_files_parse_sgent+408>
   0x7ffff7ec24dd <_nss_files_parse_sgent+141>:	mov    QWORD PTR [r12+0x8],rcx
   0x7ffff7ec24e2 <_nss_files_parse_sgent+146>:	movzx  eax,BYTE PTR [rcx]
   0x7ffff7ec24e5 <_nss_files_parse_sgent+149>:	cmp    al,0x3a
   0x7ffff7ec24e7 <_nss_files_parse_sgent+151>:	je     0x7ffff7ec2787 <_nss_files_parse_sgent+823>
   0x7ffff7ec24ed <_nss_files_parse_sgent+157>:	test   al,al
   0x7ffff7ec24ef <_nss_files_parse_sgent+159>:	jne    0x7ffff7ec2500 <_nss_files_parse_sgent+176>
   0x7ffff7ec24f1 <_nss_files_parse_sgent+161>:	jmp    0x7ffff7ec250c <_nss_files_parse_sgent+188>
   0x7ffff7ec24f3 <_nss_files_parse_sgent+163>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec24f8 <_nss_files_parse_sgent+168>:	cmp    al,0x3a
   0x7ffff7ec24fa <_nss_files_parse_sgent+170>:	je     0x7ffff7ec2787 <_nss_files_parse_sgent+823>
   0x7ffff7ec2500 <_nss_files_parse_sgent+176>:	movzx  eax,BYTE PTR [rcx+0x1]
   0x7ffff7ec2504 <_nss_files_parse_sgent+180>:	add    rcx,0x1
   0x7ffff7ec2508 <_nss_files_parse_sgent+184>:	test   al,al
   0x7ffff7ec250a <_nss_files_parse_sgent+186>:	jne    0x7ffff7ec24f8 <_nss_files_parse_sgent+168>
   0x7ffff7ec250c <_nss_files_parse_sgent+188>:	movabs rdi,0xfbffeffffffffffe
   0x7ffff7ec2516 <_nss_files_parse_sgent+198>:	add    r13,0x7
   0x7ffff7ec251a <_nss_files_parse_sgent+202>:	and    r13,0xfffffffffffffff8
   0x7ffff7ec251e <_nss_files_parse_sgent+206>:	lea    rax,[r13+0x10]
   0x7ffff7ec2522 <_nss_files_parse_sgent+210>:	mov    r8,r13
   0x7ffff7ec2525 <_nss_files_parse_sgent+213>:	cmp    r15,rax
   0x7ffff7ec2528 <_nss_files_parse_sgent+216>:	jb     0x7ffff7ec25c9 <_nss_files_parse_sgent+377>
   0x7ffff7ec252e <_nss_files_parse_sgent+222>:	xchg   ax,ax
   0x7ffff7ec2530 <_nss_files_parse_sgent+224>:	movzx  eax,BYTE PTR [rcx]
   0x7ffff7ec2533 <_nss_files_parse_sgent+227>:	test   al,al
   0x7ffff7ec2535 <_nss_files_parse_sgent+229>:	je     0x7ffff7ec2751 <_nss_files_parse_sgent+769>
   0x7ffff7ec253b <_nss_files_parse_sgent+235>:	cmp    al,0x3a
   0x7ffff7ec253d <_nss_files_parse_sgent+237>:	je     0x7ffff7ec274d <_nss_files_parse_sgent+765>
   0x7ffff7ec2543 <_nss_files_parse_sgent+243>:	mov    rdx,QWORD PTR [rip+0xeb8ae]        # 0x7ffff7faddf8
   0x7ffff7ec254a <_nss_files_parse_sgent+250>:	mov    rsi,QWORD PTR fs:[rdx]
   0x7ffff7ec254e <_nss_files_parse_sgent+254>:	movsx  rdx,al
   0x7ffff7ec2552 <_nss_files_parse_sgent+258>:	test   BYTE PTR [rsi+rdx*2+0x1],0x20
   0x7ffff7ec2557 <_nss_files_parse_sgent+263>:	je     0x7ffff7ec2573 <_nss_files_parse_sgent+291>
   0x7ffff7ec2559 <_nss_files_parse_sgent+265>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec2560 <_nss_files_parse_sgent+272>:	movsx  rdx,BYTE PTR [rcx+0x1]
   0x7ffff7ec2565 <_nss_files_parse_sgent+277>:	add    rcx,0x1
   0x7ffff7ec2569 <_nss_files_parse_sgent+281>:	mov    rax,rdx
   0x7ffff7ec256c <_nss_files_parse_sgent+284>:	test   BYTE PTR [rsi+rdx*2+0x1],0x20
   0x7ffff7ec2571 <_nss_files_parse_sgent+289>:	jne    0x7ffff7ec2560 <_nss_files_parse_sgent+272>
   0x7ffff7ec2573 <_nss_files_parse_sgent+291>:	mov    rdx,rcx
   0x7ffff7ec2576 <_nss_files_parse_sgent+294>:	cmp    al,0x3a
   0x7ffff7ec2578 <_nss_files_parse_sgent+296>:	ja     0x7ffff7ec2580 <_nss_files_parse_sgent+304>
   0x7ffff7ec257a <_nss_files_parse_sgent+298>:	bt     rdi,rax
   0x7ffff7ec257e <_nss_files_parse_sgent+302>:	jae    0x7ffff7ec25a5 <_nss_files_parse_sgent+341>
   0x7ffff7ec2580 <_nss_files_parse_sgent+304>:	mov    rsi,rdx
   0x7ffff7ec2583 <_nss_files_parse_sgent+307>:	movzx  eax,BYTE PTR [rdx+0x1]
   0x7ffff7ec2587 <_nss_files_parse_sgent+311>:	add    rdx,0x1
   0x7ffff7ec258b <_nss_files_parse_sgent+315>:	cmp    al,0x3a
   0x7ffff7ec258d <_nss_files_parse_sgent+317>:	ja     0x7ffff7ec2580 <_nss_files_parse_sgent+304>
   0x7ffff7ec258f <_nss_files_parse_sgent+319>:	bt     rdi,rax
   0x7ffff7ec2593 <_nss_files_parse_sgent+323>:	jb     0x7ffff7ec2580 <_nss_files_parse_sgent+304>
   0x7ffff7ec2595 <_nss_files_parse_sgent+325>:	cmp    rcx,rdx
   0x7ffff7ec2598 <_nss_files_parse_sgent+328>:	jae    0x7ffff7ec25a5 <_nss_files_parse_sgent+341>
   0x7ffff7ec259a <_nss_files_parse_sgent+330>:	mov    QWORD PTR [r8],rcx
   0x7ffff7ec259d <_nss_files_parse_sgent+333>:	movzx  eax,BYTE PTR [rsi+0x1]
   0x7ffff7ec25a1 <_nss_files_parse_sgent+337>:	add    r8,0x8
   0x7ffff7ec25a5 <_nss_files_parse_sgent+341>:	test   al,al
   0x7ffff7ec25a7 <_nss_files_parse_sgent+343>:	je     0x7ffff7ec2730 <_nss_files_parse_sgent+736>
   0x7ffff7ec25ad <_nss_files_parse_sgent+349>:	mov    BYTE PTR [rdx],0x0
   0x7ffff7ec25b0 <_nss_files_parse_sgent+352>:	lea    rcx,[rdx+0x1]
   0x7ffff7ec25b4 <_nss_files_parse_sgent+356>:	cmp    al,0x3a
   0x7ffff7ec25b6 <_nss_files_parse_sgent+358>:	je     0x7ffff7ec2751 <_nss_files_parse_sgent+769>
   0x7ffff7ec25bc <_nss_files_parse_sgent+364>:	lea    rax,[r8+0x10]
   0x7ffff7ec25c0 <_nss_files_parse_sgent+368>:	cmp    r15,rax
   0x7ffff7ec25c3 <_nss_files_parse_sgent+371>:	jae    0x7ffff7ec2530 <_nss_files_parse_sgent+224>
   0x7ffff7ec25c9 <_nss_files_parse_sgent+377>:	mov    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec25ce <_nss_files_parse_sgent+382>:	mov    DWORD PTR [rax],0x22
   0x7ffff7ec25d4 <_nss_files_parse_sgent+388>:	add    rsp,0x18
   0x7ffff7ec25d8 <_nss_files_parse_sgent+392>:	mov    eax,0xffffffff
   0x7ffff7ec25dd <_nss_files_parse_sgent+397>:	pop    rbx
   0x7ffff7ec25de <_nss_files_parse_sgent+398>:	pop    rbp
   0x7ffff7ec25df <_nss_files_parse_sgent+399>:	pop    r12
   0x7ffff7ec25e1 <_nss_files_parse_sgent+401>:	pop    r13
   0x7ffff7ec25e3 <_nss_files_parse_sgent+403>:	pop    r14
   0x7ffff7ec25e5 <_nss_files_parse_sgent+405>:	pop    r15
   0x7ffff7ec25e7 <_nss_files_parse_sgent+407>:	ret
   0x7ffff7ec25e8 <_nss_files_parse_sgent+408>:	mov    rbx,rcx
   0x7ffff7ec25eb <_nss_files_parse_sgent+411>:	mov    rax,QWORD PTR [r12]
   0x7ffff7ec25ef <_nss_files_parse_sgent+415>:	movzx  eax,BYTE PTR [rax]
   0x7ffff7ec25f2 <_nss_files_parse_sgent+418>:	sub    eax,0x2b
   0x7ffff7ec25f5 <_nss_files_parse_sgent+421>:	test   al,0xfd
   0x7ffff7ec25f7 <_nss_files_parse_sgent+423>:	jne    0x7ffff7ec2721 <_nss_files_parse_sgent+721>
   0x7ffff7ec25fd <_nss_files_parse_sgent+429>:	mov    QWORD PTR [r12+0x18],0x0
   0x7ffff7ec2606 <_nss_files_parse_sgent+438>:	pxor   xmm0,xmm0
   0x7ffff7ec260a <_nss_files_parse_sgent+442>:	movups XMMWORD PTR [r12+0x8],xmm0
   0x7ffff7ec2610 <_nss_files_parse_sgent+448>:	test   r13,r13
   0x7ffff7ec2613 <_nss_files_parse_sgent+451>:	jne    0x7ffff7ec27af <_nss_files_parse_sgent+863>
   0x7ffff7ec2619 <_nss_files_parse_sgent+457>:	cmp    rbp,rbx
   0x7ffff7ec261c <_nss_files_parse_sgent+460>:	ja     0x7ffff7ec2630 <_nss_files_parse_sgent+480>
   0x7ffff7ec261e <_nss_files_parse_sgent+462>:	cmp    r15,rbx
   0x7ffff7ec2621 <_nss_files_parse_sgent+465>:	jbe    0x7ffff7ec2630 <_nss_files_parse_sgent+480>
   0x7ffff7ec2623 <_nss_files_parse_sgent+467>:	mov    rdi,rbx
   0x7ffff7ec2626 <_nss_files_parse_sgent+470>:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7ec262b <_nss_files_parse_sgent+475>:	lea    r14,[rbx+rax*1+0x1]
   0x7ffff7ec2630 <_nss_files_parse_sgent+480>:	add    r14,0x7
   0x7ffff7ec2634 <_nss_files_parse_sgent+484>:	and    r14,0xfffffffffffffff8
   0x7ffff7ec2638 <_nss_files_parse_sgent+488>:	lea    rax,[r14+0x10]
   0x7ffff7ec263c <_nss_files_parse_sgent+492>:	cmp    r15,rax
   0x7ffff7ec263f <_nss_files_parse_sgent+495>:	jb     0x7ffff7ec25c9 <_nss_files_parse_sgent+377>
   0x7ffff7ec2641 <_nss_files_parse_sgent+497>:	movzx  eax,BYTE PTR [rbx]
   0x7ffff7ec2644 <_nss_files_parse_sgent+500>:	mov    rsi,r14
   0x7ffff7ec2647 <_nss_files_parse_sgent+503>:	test   al,al
   0x7ffff7ec2649 <_nss_files_parse_sgent+505>:	je     0x7ffff7ec26e9 <_nss_files_parse_sgent+665>
   0x7ffff7ec264f <_nss_files_parse_sgent+511>:	nop
   0x7ffff7ec2650 <_nss_files_parse_sgent+512>:	mov    rdx,QWORD PTR [rip+0xeb7a1]        # 0x7ffff7faddf8
   0x7ffff7ec2657 <_nss_files_parse_sgent+519>:	mov    rcx,QWORD PTR fs:[rdx]
   0x7ffff7ec265b <_nss_files_parse_sgent+523>:	movsx  rdx,al
   0x7ffff7ec265f <_nss_files_parse_sgent+527>:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
   0x7ffff7ec2664 <_nss_files_parse_sgent+532>:	je     0x7ffff7ec2738 <_nss_files_parse_sgent+744>
   0x7ffff7ec266a <_nss_files_parse_sgent+538>:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2670 <_nss_files_parse_sgent+544>:	movsx  rdx,BYTE PTR [rbx+0x1]
   0x7ffff7ec2675 <_nss_files_parse_sgent+549>:	add    rbx,0x1
   0x7ffff7ec2679 <_nss_files_parse_sgent+553>:	mov    rax,rdx
   0x7ffff7ec267c <_nss_files_parse_sgent+556>:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
   0x7ffff7ec2681 <_nss_files_parse_sgent+561>:	jne    0x7ffff7ec2670 <_nss_files_parse_sgent+544>
   0x7ffff7ec2683 <_nss_files_parse_sgent+563>:	test   dl,dl
   0x7ffff7ec2685 <_nss_files_parse_sgent+565>:	je     0x7ffff7ec2745 <_nss_files_parse_sgent+757>
   0x7ffff7ec268b <_nss_files_parse_sgent+571>:	cmp    dl,0x2c
   0x7ffff7ec268e <_nss_files_parse_sgent+574>:	je     0x7ffff7ec2745 <_nss_files_parse_sgent+757>
   0x7ffff7ec2694 <_nss_files_parse_sgent+580>:	mov    rdx,rbx
   0x7ffff7ec2697 <_nss_files_parse_sgent+583>:	jmp    0x7ffff7ec26a4 <_nss_files_parse_sgent+596>
   0x7ffff7ec2699 <_nss_files_parse_sgent+585>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec26a0 <_nss_files_parse_sgent+592>:	cmp    al,0x2c
   0x7ffff7ec26a2 <_nss_files_parse_sgent+594>:	je     0x7ffff7ec26b3 <_nss_files_parse_sgent+611>
   0x7ffff7ec26a4 <_nss_files_parse_sgent+596>:	mov    rcx,rdx
   0x7ffff7ec26a7 <_nss_files_parse_sgent+599>:	movzx  eax,BYTE PTR [rdx+0x1]
   0x7ffff7ec26ab <_nss_files_parse_sgent+603>:	add    rdx,0x1
   0x7ffff7ec26af <_nss_files_parse_sgent+607>:	test   al,al
   0x7ffff7ec26b1 <_nss_files_parse_sgent+609>:	jne    0x7ffff7ec26a0 <_nss_files_parse_sgent+592>
   0x7ffff7ec26b3 <_nss_files_parse_sgent+611>:	cmp    rdx,rbx
   0x7ffff7ec26b6 <_nss_files_parse_sgent+614>:	jbe    0x7ffff7ec26c3 <_nss_files_parse_sgent+627>
   0x7ffff7ec26b8 <_nss_files_parse_sgent+616>:	mov    QWORD PTR [rsi],rbx
   0x7ffff7ec26bb <_nss_files_parse_sgent+619>:	movzx  eax,BYTE PTR [rcx+0x1]
   0x7ffff7ec26bf <_nss_files_parse_sgent+623>:	add    rsi,0x8
   0x7ffff7ec26c3 <_nss_files_parse_sgent+627>:	mov    rbx,rdx
   0x7ffff7ec26c6 <_nss_files_parse_sgent+630>:	test   al,al
   0x7ffff7ec26c8 <_nss_files_parse_sgent+632>:	je     0x7ffff7ec26d1 <_nss_files_parse_sgent+641>
   0x7ffff7ec26ca <_nss_files_parse_sgent+634>:	mov    BYTE PTR [rdx],0x0
   0x7ffff7ec26cd <_nss_files_parse_sgent+637>:	lea    rbx,[rdx+0x1]
   0x7ffff7ec26d1 <_nss_files_parse_sgent+641>:	lea    rax,[rsi+0x10]
   0x7ffff7ec26d5 <_nss_files_parse_sgent+645>:	cmp    r15,rax
   0x7ffff7ec26d8 <_nss_files_parse_sgent+648>:	jb     0x7ffff7ec25c9 <_nss_files_parse_sgent+377>
   0x7ffff7ec26de <_nss_files_parse_sgent+654>:	movzx  eax,BYTE PTR [rbx]
   0x7ffff7ec26e1 <_nss_files_parse_sgent+657>:	test   al,al
   0x7ffff7ec26e3 <_nss_files_parse_sgent+659>:	jne    0x7ffff7ec2650 <_nss_files_parse_sgent+512>
   0x7ffff7ec26e9 <_nss_files_parse_sgent+665>:	mov    QWORD PTR [rsi],0x0
   0x7ffff7ec26f0 <_nss_files_parse_sgent+672>:	test   r14,r14
   0x7ffff7ec26f3 <_nss_files_parse_sgent+675>:	je     0x7ffff7ec279b <_nss_files_parse_sgent+843>
   0x7ffff7ec26f9 <_nss_files_parse_sgent+681>:	mov    QWORD PTR [r12+0x18],r14
   0x7ffff7ec26fe <_nss_files_parse_sgent+686>:	add    rsp,0x18
   0x7ffff7ec2702 <_nss_files_parse_sgent+690>:	mov    eax,0x1
   0x7ffff7ec2707 <_nss_files_parse_sgent+695>:	pop    rbx
   0x7ffff7ec2708 <_nss_files_parse_sgent+696>:	pop    rbp
   0x7ffff7ec2709 <_nss_files_parse_sgent+697>:	pop    r12
   0x7ffff7ec270b <_nss_files_parse_sgent+699>:	pop    r13
   0x7ffff7ec270d <_nss_files_parse_sgent+701>:	pop    r14
   0x7ffff7ec270f <_nss_files_parse_sgent+703>:	pop    r15
   0x7ffff7ec2711 <_nss_files_parse_sgent+705>:	ret
   0x7ffff7ec2712 <_nss_files_parse_sgent+706>:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7ec2717 <_nss_files_parse_sgent+711>:	lea    r13,[rbx+rax*1+0x1]
   0x7ffff7ec271c <_nss_files_parse_sgent+716>:	jmp    0x7ffff7ec2488 <_nss_files_parse_sgent+56>
   0x7ffff7ec2721 <_nss_files_parse_sgent+721>:	mov    rcx,rbx
   0x7ffff7ec2724 <_nss_files_parse_sgent+724>:	jmp    0x7ffff7ec24dd <_nss_files_parse_sgent+141>
   0x7ffff7ec2729 <_nss_files_parse_sgent+729>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec2730 <_nss_files_parse_sgent+736>:	mov    rcx,rdx
   0x7ffff7ec2733 <_nss_files_parse_sgent+739>:	jmp    0x7ffff7ec25bc <_nss_files_parse_sgent+364>
   0x7ffff7ec2738 <_nss_files_parse_sgent+744>:	cmp    al,0x2c
   0x7ffff7ec273a <_nss_files_parse_sgent+746>:	jne    0x7ffff7ec2694 <_nss_files_parse_sgent+580>
   0x7ffff7ec2740 <_nss_files_parse_sgent+752>:	mov    rdx,rbx
   0x7ffff7ec2743 <_nss_files_parse_sgent+755>:	jmp    0x7ffff7ec26ca <_nss_files_parse_sgent+634>
   0x7ffff7ec2745 <_nss_files_parse_sgent+757>:	mov    rdx,rbx
   0x7ffff7ec2748 <_nss_files_parse_sgent+760>:	jmp    0x7ffff7ec26c3 <_nss_files_parse_sgent+627>
   0x7ffff7ec274d <_nss_files_parse_sgent+765>:	add    rcx,0x1
   0x7ffff7ec2751 <_nss_files_parse_sgent+769>:	mov    QWORD PTR [r8],0x0
   0x7ffff7ec2758 <_nss_files_parse_sgent+776>:	test   r13,r13
   0x7ffff7ec275b <_nss_files_parse_sgent+779>:	je     0x7ffff7ec279b <_nss_files_parse_sgent+843>
   0x7ffff7ec275d <_nss_files_parse_sgent+781>:	cmp    QWORD PTR [r13+0x0],0x0
   0x7ffff7ec2762 <_nss_files_parse_sgent+786>:	mov    QWORD PTR [r12+0x10],r13
   0x7ffff7ec2767 <_nss_files_parse_sgent+791>:	je     0x7ffff7ec277b <_nss_files_parse_sgent+811>
   0x7ffff7ec2769 <_nss_files_parse_sgent+793>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec2770 <_nss_files_parse_sgent+800>:	add    r13,0x8
   0x7ffff7ec2774 <_nss_files_parse_sgent+804>:	cmp    QWORD PTR [r13+0x0],0x0
   0x7ffff7ec2779 <_nss_files_parse_sgent+809>:	jne    0x7ffff7ec2770 <_nss_files_parse_sgent+800>
   0x7ffff7ec277b <_nss_files_parse_sgent+811>:	lea    r14,[r13+0x8]
   0x7ffff7ec277f <_nss_files_parse_sgent+815>:	mov    rbx,rcx
   0x7ffff7ec2782 <_nss_files_parse_sgent+818>:	jmp    0x7ffff7ec2630 <_nss_files_parse_sgent+480>
   0x7ffff7ec2787 <_nss_files_parse_sgent+823>:	test   al,al
   0x7ffff7ec2789 <_nss_files_parse_sgent+825>:	je     0x7ffff7ec250c <_nss_files_parse_sgent+188>
   0x7ffff7ec278f <_nss_files_parse_sgent+831>:	mov    BYTE PTR [rcx],0x0
   0x7ffff7ec2792 <_nss_files_parse_sgent+834>:	add    rcx,0x1
   0x7ffff7ec2796 <_nss_files_parse_sgent+838>:	jmp    0x7ffff7ec250c <_nss_files_parse_sgent+188>
   0x7ffff7ec279b <_nss_files_parse_sgent+843>:	add    rsp,0x18
   0x7ffff7ec279f <_nss_files_parse_sgent+847>:	mov    eax,0xffffffff
   0x7ffff7ec27a4 <_nss_files_parse_sgent+852>:	pop    rbx
   0x7ffff7ec27a5 <_nss_files_parse_sgent+853>:	pop    rbp
   0x7ffff7ec27a6 <_nss_files_parse_sgent+854>:	pop    r12
   0x7ffff7ec27a8 <_nss_files_parse_sgent+856>:	pop    r13
   0x7ffff7ec27aa <_nss_files_parse_sgent+858>:	pop    r14
   0x7ffff7ec27ac <_nss_files_parse_sgent+860>:	pop    r15
   0x7ffff7ec27ae <_nss_files_parse_sgent+862>:	ret
   0x7ffff7ec27af <_nss_files_parse_sgent+863>:	mov    r14,r13
   0x7ffff7ec27b2 <_nss_files_parse_sgent+866>:	jmp    0x7ffff7ec2630 <_nss_files_parse_sgent+480>
   0x7ffff7ec27b7:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec27c0 <sgetsgent_r>:	endbr64
   0x7ffff7ec27c4 <sgetsgent_r+4>:	push   r13
   0x7ffff7ec27c6 <sgetsgent_r+6>:	mov    r9,rdx
   0x7ffff7ec27c9 <sgetsgent_r+9>:	push   r12
   0x7ffff7ec27cb <sgetsgent_r+11>:	mov    r12,rcx
   0x7ffff7ec27ce <sgetsgent_r+14>:	push   rbp
   0x7ffff7ec27cf <sgetsgent_r+15>:	mov    rbp,r8
   0x7ffff7ec27d2 <sgetsgent_r+18>:	push   rbx
   0x7ffff7ec27d3 <sgetsgent_r+19>:	mov    rbx,rsi
   0x7ffff7ec27d6 <sgetsgent_r+22>:	sub    rsp,0x8
   0x7ffff7ec27da <sgetsgent_r+26>:	cmp    rdi,rdx
   0x7ffff7ec27dd <sgetsgent_r+29>:	jb     0x7ffff7ec2828 <sgetsgent_r+104>
   0x7ffff7ec27df <sgetsgent_r+31>:	lea    rax,[rdx+rcx*1]
   0x7ffff7ec27e3 <sgetsgent_r+35>:	cmp    rdi,rax
   0x7ffff7ec27e6 <sgetsgent_r+38>:	jae    0x7ffff7ec2828 <sgetsgent_r+104>
   0x7ffff7ec27e8 <sgetsgent_r+40>:	mov    r13,QWORD PTR [rip+0xeb621]        # 0x7ffff7fade10
   0x7ffff7ec27ef <sgetsgent_r+47>:	mov    rcx,r12
   0x7ffff7ec27f2 <sgetsgent_r+50>:	mov    rdx,r9
   0x7ffff7ec27f5 <sgetsgent_r+53>:	mov    rsi,rbx
   0x7ffff7ec27f8 <sgetsgent_r+56>:	mov    r8,QWORD PTR fs:0x0
   0x7ffff7ec2801 <sgetsgent_r+65>:	add    r8,r13
   0x7ffff7ec2804 <sgetsgent_r+68>:	call   0x7ffff7ec2450 <_nss_files_parse_sgent>
   0x7ffff7ec2809 <sgetsgent_r+73>:	test   eax,eax
   0x7ffff7ec280b <sgetsgent_r+75>:	jle    0x7ffff7ec2858 <sgetsgent_r+152>
   0x7ffff7ec280d <sgetsgent_r+77>:	mov    QWORD PTR [rbp+0x0],rbx
   0x7ffff7ec2811 <sgetsgent_r+81>:	xor    eax,eax
   0x7ffff7ec2813 <sgetsgent_r+83>:	test   rbx,rbx
   0x7ffff7ec2816 <sgetsgent_r+86>:	je     0x7ffff7ec2860 <sgetsgent_r+160>
   0x7ffff7ec2818 <sgetsgent_r+88>:	add    rsp,0x8
   0x7ffff7ec281c <sgetsgent_r+92>:	pop    rbx
   0x7ffff7ec281d <sgetsgent_r+93>:	pop    rbp
   0x7ffff7ec281e <sgetsgent_r+94>:	pop    r12
   0x7ffff7ec2820 <sgetsgent_r+96>:	pop    r13
   0x7ffff7ec2822 <sgetsgent_r+98>:	ret
   0x7ffff7ec2823 <sgetsgent_r+99>:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2828 <sgetsgent_r+104>:	lea    r13,[r9+r12*1-0x1]
   0x7ffff7ec282d <sgetsgent_r+109>:	mov    rsi,rdi
   0x7ffff7ec2830 <sgetsgent_r+112>:	mov    rdx,r12
   0x7ffff7ec2833 <sgetsgent_r+115>:	mov    rdi,r9
   0x7ffff7ec2836 <sgetsgent_r+118>:	mov    BYTE PTR [r13+0x0],0x0
   0x7ffff7ec283b <sgetsgent_r+123>:	call   0x7ffff7dbd480 <*ABS*+0xa8950@plt>
   0x7ffff7ec2840 <sgetsgent_r+128>:	cmp    BYTE PTR [r13+0x0],0x0
   0x7ffff7ec2845 <sgetsgent_r+133>:	mov    r9,rax
   0x7ffff7ec2848 <sgetsgent_r+136>:	mov    rdi,rax
   0x7ffff7ec284b <sgetsgent_r+139>:	mov    eax,0x22
   0x7ffff7ec2850 <sgetsgent_r+144>:	je     0x7ffff7ec27e8 <sgetsgent_r+40>
   0x7ffff7ec2852 <sgetsgent_r+146>:	jmp    0x7ffff7ec2818 <sgetsgent_r+88>
   0x7ffff7ec2854 <sgetsgent_r+148>:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec2858 <sgetsgent_r+152>:	mov    QWORD PTR [rbp+0x0],0x0
   0x7ffff7ec2860 <sgetsgent_r+160>:	mov    eax,DWORD PTR fs:[r13+0x0]
   0x7ffff7ec2865 <sgetsgent_r+165>:	add    rsp,0x8
   0x7ffff7ec2869 <sgetsgent_r+169>:	pop    rbx
   0x7ffff7ec286a <sgetsgent_r+170>:	pop    rbp
   0x7ffff7ec286b <sgetsgent_r+171>:	pop    r12
   0x7ffff7ec286d <sgetsgent_r+173>:	pop    r13
   0x7ffff7ec286f <sgetsgent_r+175>:	ret
   0x7ffff7ec2870 <fgetsgent_r>:	endbr64
   0x7ffff7ec2874 <fgetsgent_r+4>:	push   rbp
   0x7ffff7ec2875 <fgetsgent_r+5>:	mov    rbp,r8
   0x7ffff7ec2878 <fgetsgent_r+8>:	lea    r8,[rip+0xfffffffffffffbd1]        # 0x7ffff7ec2450 <_nss_files_parse_sgent>
   0x7ffff7ec287f <fgetsgent_r+15>:	push   rbx
   0x7ffff7ec2880 <fgetsgent_r+16>:	mov    rbx,rsi
   0x7ffff7ec2883 <fgetsgent_r+19>:	sub    rsp,0x8
   0x7ffff7ec2887 <fgetsgent_r+23>:	call   0x7ffff7eea0b0
   0x7ffff7ec288c <fgetsgent_r+28>:	xor    edx,edx
   0x7ffff7ec288e <fgetsgent_r+30>:	test   eax,eax
   0x7ffff7ec2890 <fgetsgent_r+32>:	cmovne rbx,rdx
   0x7ffff7ec2894 <fgetsgent_r+36>:	mov    QWORD PTR [rbp+0x0],rbx
   0x7ffff7ec2898 <fgetsgent_r+40>:	add    rsp,0x8
   0x7ffff7ec289c <fgetsgent_r+44>:	pop    rbx
   0x7ffff7ec289d <fgetsgent_r+45>:	pop    rbp
   0x7ffff7ec289e <fgetsgent_r+46>:	ret
   0x7ffff7ec289f:	nop
   0x7ffff7ec28a0:	endbr64
   0x7ffff7ec28a4:	push   r12
   0x7ffff7ec28a6:	movq   xmm1,rsi
   0x7ffff7ec28ab:	movq   xmm2,rdx
   0x7ffff7ec28b0:	push   rbp
   0x7ffff7ec28b1:	punpcklqdq xmm1,xmm2
   0x7ffff7ec28b5:	mov    rbp,rdi
   0x7ffff7ec28b8:	mov    edi,0x48
   0x7ffff7ec28bd:	push   rbx
   0x7ffff7ec28be:	mov    rbx,rcx
   0x7ffff7ec28c1:	sub    rsp,0x10
   0x7ffff7ec28c5:	movaps XMMWORD PTR [rsp],xmm1
   0x7ffff7ec28c9:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7ec28ce:	mov    r12,rax
   0x7ffff7ec28d1:	test   rax,rax
   0x7ffff7ec28d4:	je     0x7ffff7ec2925
   0x7ffff7ec28d6:	movdqa xmm1,XMMWORD PTR [rsp]
   0x7ffff7ec28db:	mov    QWORD PTR [rax],rbp
   0x7ffff7ec28de:	mov    edi,0xc8
   0x7ffff7ec28e3:	mov    QWORD PTR [rax+0x18],rbx
   0x7ffff7ec28e7:	mov    QWORD PTR [rax+0x28],0x0
   0x7ffff7ec28ef:	mov    QWORD PTR [rax+0x20],0x0
   0x7ffff7ec28f7:	movups XMMWORD PTR [rax+0x8],xmm1
   0x7ffff7ec28fb:	call   0x7ffff7dbd380 <malloc@plt>
   0x7ffff7ec2900:	mov    QWORD PTR [r12+0x30],rax
   0x7ffff7ec2905:	test   rax,rax
   0x7ffff7ec2908:	je     0x7ffff7ec2931
   0x7ffff7ec290a:	lea    rdx,[rax+0xc8]
   0x7ffff7ec2911:	movq   xmm0,rax
   0x7ffff7ec2916:	movq   xmm3,rdx
   0x7ffff7ec291b:	punpcklqdq xmm0,xmm3
   0x7ffff7ec291f:	movups XMMWORD PTR [r12+0x38],xmm0
   0x7ffff7ec2925:	add    rsp,0x10
   0x7ffff7ec2929:	mov    rax,r12
   0x7ffff7ec292c:	pop    rbx
   0x7ffff7ec292d:	pop    rbp
   0x7ffff7ec292e:	pop    r12
   0x7ffff7ec2930:	ret
   0x7ffff7ec2931:	mov    rdi,r12
   0x7ffff7ec2934:	xor    r12d,r12d
   0x7ffff7ec2937:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ec293c:	jmp    0x7ffff7ec2925
   0x7ffff7ec293e:	xchg   ax,ax
   0x7ffff7ec2940:	endbr64
   0x7ffff7ec2944:	push   r15
   0x7ffff7ec2946:	push   r14
   0x7ffff7ec2948:	push   r13
   0x7ffff7ec294a:	push   r12
   0x7ffff7ec294c:	push   rbp
   0x7ffff7ec294d:	push   rbx
   0x7ffff7ec294e:	mov    rbx,rdi
   0x7ffff7ec2951:	sub    rsp,0x18
   0x7ffff7ec2955:	mov    rax,QWORD PTR [rdi+0x30]
   0x7ffff7ec2959:	mov    rbp,QWORD PTR [rdi+0x20]
   0x7ffff7ec295d:	mov    r14,QWORD PTR [rdi+0x38]
   0x7ffff7ec2961:	add    rbp,rax
   0x7ffff7ec2964:	cmp    rbp,r14
   0x7ffff7ec2967:	jae    0x7ffff7ec2bdc
   0x7ffff7ec296d:	mov    r15,QWORD PTR [rdi+0x28]
   0x7ffff7ec2971:	jmp    0x7ffff7ec29ef
   0x7ffff7ec2973:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2978:	mov    rax,r13
   0x7ffff7ec297b:	sub    rax,rbp
   0x7ffff7ec297e:	add    rax,r15
   0x7ffff7ec2981:	cmp    rax,r9
   0x7ffff7ec2984:	jl     0x7ffff7ec2d00
   0x7ffff7ec298a:	mov    rsi,QWORD PTR [rbx+0x18]
   0x7ffff7ec298e:	mov    QWORD PTR [rsp],r9
   0x7ffff7ec2992:	lea    r12,[r9-0x1]
   0x7ffff7ec2996:	test   rsi,rsi
   0x7ffff7ec2999:	jns    0x7ffff7ec2aa7
   0x7ffff7ec299f:	cmp    r14,r13
   0x7ffff7ec29a2:	jbe    0x7ffff7ec2eb0
   0x7ffff7ec29a8:	mov    rdi,r12
   0x7ffff7ec29ab:	mov    rdx,r14
   0x7ffff7ec29ae:	mov    rsi,r13
   0x7ffff7ec29b1:	sub    rdi,r15
   0x7ffff7ec29b4:	sub    rdx,r13
   0x7ffff7ec29b7:	xor    r15d,r15d
   0x7ffff7ec29ba:	add    rdi,rbp
   0x7ffff7ec29bd:	call   0x7ffff7dbd430 <*ABS*+0xa9620@plt>
   0x7ffff7ec29c2:	sub    r12,QWORD PTR [rbx+0x28]
   0x7ffff7ec29c6:	add    r13,QWORD PTR [rbx+0x38]
   0x7ffff7ec29ca:	mov    QWORD PTR [rbx+0x28],0x0
   0x7ffff7ec29d2:	add    r12,rbp
   0x7ffff7ec29d5:	mov    r14,r13
   0x7ffff7ec29d8:	mov    r9,QWORD PTR [rsp]
   0x7ffff7ec29dc:	sub    r14,r12
   0x7ffff7ec29df:	mov    QWORD PTR [rbx+0x38],r14
   0x7ffff7ec29e3:	add    rbp,r9
   0x7ffff7ec29e6:	cmp    rbp,r14
   0x7ffff7ec29e9:	jae    0x7ffff7ec2bd8
   0x7ffff7ec29ef:	test   r15,r15
   0x7ffff7ec29f2:	jne    0x7ffff7ec2a44
   0x7ffff7ec29f4:	mov    r12,QWORD PTR [rbx+0x8]
   0x7ffff7ec29f8:	test   r12,r12
   0x7ffff7ec29fb:	je     0x7ffff7ec2cd8
   0x7ffff7ec2a01:	lea    rax,[r14+r12*1]
   0x7ffff7ec2a05:	cmp    QWORD PTR [rbx+0x40],rax
   0x7ffff7ec2a09:	jbe    0x7ffff7ec2da0
   0x7ffff7ec2a0f:	lea    r13,[rbp+r12*1+0x0]
   0x7ffff7ec2a14:	mov    rdx,r14
   0x7ffff7ec2a17:	mov    rsi,rbp
   0x7ffff7ec2a1a:	sub    rdx,rbp
   0x7ffff7ec2a1d:	mov    rdi,r13
   0x7ffff7ec2a20:	call   0x7ffff7dbd430 <*ABS*+0xa9620@plt>
   0x7ffff7ec2a25:	add    QWORD PTR [rbx+0x38],r12
   0x7ffff7ec2a29:	mov    rdi,rbp
   0x7ffff7ec2a2c:	mov    rdx,r12
   0x7ffff7ec2a2f:	mov    esi,0x20
   0x7ffff7ec2a34:	mov    rbp,r13
   0x7ffff7ec2a37:	call   0x7ffff7dbd670 <*ABS*+0xa9750@plt>
   0x7ffff7ec2a3c:	mov    QWORD PTR [rbx+0x28],r12
   0x7ffff7ec2a40:	mov    r14,QWORD PTR [rbx+0x38]
   0x7ffff7ec2a44:	mov    r8,r14
   0x7ffff7ec2a47:	mov    esi,0xa
   0x7ffff7ec2a4c:	mov    rdi,rbp
   0x7ffff7ec2a4f:	sub    r8,rbp
   0x7ffff7ec2a52:	mov    rdx,r8
   0x7ffff7ec2a55:	mov    QWORD PTR [rsp],r8
   0x7ffff7ec2a59:	call   0x7ffff7dbd420 <*ABS*+0xa9470@plt>
   0x7ffff7ec2a5e:	mov    r15,QWORD PTR [rbx+0x28]
   0x7ffff7ec2a62:	mov    r8,QWORD PTR [rsp]
   0x7ffff7ec2a66:	mov    r13,rax
   0x7ffff7ec2a69:	test   r15,r15
   0x7ffff7ec2a6c:	jns    0x7ffff7ec2a79
   0x7ffff7ec2a6e:	mov    QWORD PTR [rbx+0x28],0x0
   0x7ffff7ec2a76:	xor    r15d,r15d
   0x7ffff7ec2a79:	mov    r9,QWORD PTR [rbx+0x10]
   0x7ffff7ec2a7d:	test   r13,r13
   0x7ffff7ec2a80:	jne    0x7ffff7ec2978
   0x7ffff7ec2a86:	lea    rax,[r15+r8*1]
   0x7ffff7ec2a8a:	cmp    rax,r9
   0x7ffff7ec2a8d:	jb     0x7ffff7ec2ecb
   0x7ffff7ec2a93:	mov    rsi,QWORD PTR [rbx+0x18]
   0x7ffff7ec2a97:	lea    r12,[r9-0x1]
   0x7ffff7ec2a9b:	test   rsi,rsi
   0x7ffff7ec2a9e:	js     0x7ffff7ec2eb4
   0x7ffff7ec2aa4:	mov    r13,r14
   0x7ffff7ec2aa7:	mov    rax,rbp
   0x7ffff7ec2aaa:	sub    rax,r15
   0x7ffff7ec2aad:	lea    r15,[rax+r12*1+0x1]
   0x7ffff7ec2ab2:	cmp    rbp,r15
   0x7ffff7ec2ab5:	ja     0x7ffff7ec2d18
   0x7ffff7ec2abb:	mov    rax,QWORD PTR [rip+0xeb336]        # 0x7ffff7faddf8
   0x7ffff7ec2ac2:	mov    r12,r15
   0x7ffff7ec2ac5:	mov    rdx,QWORD PTR fs:[rax]
   0x7ffff7ec2ac9:	jmp    0x7ffff7ec2ae1
   0x7ffff7ec2acb:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2ad0:	lea    rax,[r12-0x1]
   0x7ffff7ec2ad5:	cmp    rbp,rax
   0x7ffff7ec2ad8:	ja     0x7ffff7ec2d20
   0x7ffff7ec2ade:	mov    r12,rax
   0x7ffff7ec2ae1:	movsx  rax,BYTE PTR [r12]
   0x7ffff7ec2ae6:	test   BYTE PTR [rdx+rax*2],0x1
   0x7ffff7ec2aea:	je     0x7ffff7ec2ad0
   0x7ffff7ec2aec:	lea    rcx,[r12+0x1]
   0x7ffff7ec2af1:	cmp    rbp,rcx
   0x7ffff7ec2af4:	jae    0x7ffff7ec2baa
   0x7ffff7ec2afa:	cmp    rbp,r12
   0x7ffff7ec2afd:	jbe    0x7ffff7ec2b13
   0x7ffff7ec2aff:	jmp    0x7ffff7ec2e50
   0x7ffff7ec2b04:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec2b08:	movsx  rax,BYTE PTR [r12]
   0x7ffff7ec2b0d:	test   BYTE PTR [rdx+rax*2],0x1
   0x7ffff7ec2b11:	je     0x7ffff7ec2b1f
   0x7ffff7ec2b13:	mov    r15,r12
   0x7ffff7ec2b16:	sub    r12,0x1
   0x7ffff7ec2b1a:	cmp    rbp,r12
   0x7ffff7ec2b1d:	jbe    0x7ffff7ec2b08
   0x7ffff7ec2b1f:	mov    r12,rcx
   0x7ffff7ec2b22:	lea    rax,[rbp+r8*1+0x1]
   0x7ffff7ec2b27:	cmp    r12,rax
   0x7ffff7ec2b2a:	je     0x7ffff7ec2c20
   0x7ffff7ec2b30:	lea    rdx,[r15+0x1]
   0x7ffff7ec2b34:	mov    rax,r12
   0x7ffff7ec2b37:	sub    rax,rdx
   0x7ffff7ec2b3a:	cmp    rax,rsi
   0x7ffff7ec2b3d:	jge    0x7ffff7ec2c3a
   0x7ffff7ec2b43:	cmp    r14,r12
   0x7ffff7ec2b46:	jbe    0x7ffff7ec2c30
   0x7ffff7ec2b4c:	mov    rax,QWORD PTR [rbx+0x40]
   0x7ffff7ec2b50:	add    rsi,0x1
   0x7ffff7ec2b54:	sub    rax,r14
   0x7ffff7ec2b57:	cmp    rax,rsi
   0x7ffff7ec2b5a:	jle    0x7ffff7ec2e70
   0x7ffff7ec2b60:	sub    r14,r12
   0x7ffff7ec2b63:	lea    rdi,[r15+rsi*1]
   0x7ffff7ec2b67:	mov    rsi,r12
   0x7ffff7ec2b6a:	mov    r13,rbp
   0x7ffff7ec2b6d:	mov    rdx,r14
   0x7ffff7ec2b70:	call   0x7ffff7dbd430 <*ABS*+0xa9620@plt>
   0x7ffff7ec2b75:	mov    rax,QWORD PTR [rbx+0x18]
   0x7ffff7ec2b79:	mov    BYTE PTR [r15],0xa
   0x7ffff7ec2b7d:	lea    r12,[r15+rax*1+0x1]
   0x7ffff7ec2b82:	add    r14,r12
   0x7ffff7ec2b85:	mov    rcx,r12
   0x7ffff7ec2b88:	sub    r14,rbp
   0x7ffff7ec2b8b:	sub    rcx,rbp
   0x7ffff7ec2b8e:	lea    rbp,[r15+0x1]
   0x7ffff7ec2b92:	mov    QWORD PTR [rsp+0x8],rcx
   0x7ffff7ec2b97:	mov    r8,r14
   0x7ffff7ec2b9a:	jmp    0x7ffff7ec2c4f
   0x7ffff7ec2b9f:	nop
   0x7ffff7ec2ba0:	movsx  rax,BYTE PTR [r15]
   0x7ffff7ec2ba4:	test   BYTE PTR [rdx+rax*2],0x1
   0x7ffff7ec2ba8:	jne    0x7ffff7ec2bf8
   0x7ffff7ec2baa:	add    r15,0x1
   0x7ffff7ec2bae:	cmp    r15,r13
   0x7ffff7ec2bb1:	jb     0x7ffff7ec2ba0
   0x7ffff7ec2bb3:	jne    0x7ffff7ec2bf8
   0x7ffff7ec2bb5:	mov    r14,QWORD PTR [rbx+0x38]
   0x7ffff7ec2bb9:	lea    rbp,[r15+0x1]
   0x7ffff7ec2bbd:	mov    QWORD PTR [rbx+0x28],0x0
   0x7ffff7ec2bc5:	xor    r15d,r15d
   0x7ffff7ec2bc8:	cmp    rbp,r14
   0x7ffff7ec2bcb:	jb     0x7ffff7ec29ef
   0x7ffff7ec2bd1:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec2bd8:	mov    rax,QWORD PTR [rbx+0x30]
   0x7ffff7ec2bdc:	sub    r14,rax
   0x7ffff7ec2bdf:	mov    QWORD PTR [rbx+0x20],r14
   0x7ffff7ec2be3:	add    rsp,0x18
   0x7ffff7ec2be7:	pop    rbx
   0x7ffff7ec2be8:	pop    rbp
   0x7ffff7ec2be9:	pop    r12
   0x7ffff7ec2beb:	pop    r13
   0x7ffff7ec2bed:	pop    r14
   0x7ffff7ec2bef:	pop    r15
   0x7ffff7ec2bf1:	ret
   0x7ffff7ec2bf2:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2bf8:	mov    r12,r15
   0x7ffff7ec2bfb:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2c00:	movsx  rax,BYTE PTR [r12+0x1]
   0x7ffff7ec2c06:	add    r12,0x1
   0x7ffff7ec2c0a:	test   BYTE PTR [rdx+rax*2],0x1
   0x7ffff7ec2c0e:	jne    0x7ffff7ec2c00
   0x7ffff7ec2c10:	lea    rax,[rbp+r8*1+0x1]
   0x7ffff7ec2c15:	cmp    r12,rax
   0x7ffff7ec2c18:	jne    0x7ffff7ec2b30
   0x7ffff7ec2c1e:	xchg   ax,ax
   0x7ffff7ec2c20:	mov    rax,QWORD PTR [rbx+0x40]
   0x7ffff7ec2c24:	sub    rax,r15
   0x7ffff7ec2c27:	cmp    rax,rsi
   0x7ffff7ec2c2a:	jle    0x7ffff7ec2b43
   0x7ffff7ec2c30:	lea    rdx,[r15+0x1]
   0x7ffff7ec2c34:	mov    rax,r12
   0x7ffff7ec2c37:	sub    rax,rdx
   0x7ffff7ec2c3a:	mov    rcx,r12
   0x7ffff7ec2c3d:	mov    BYTE PTR [r15],0xa
   0x7ffff7ec2c41:	mov    r13,rbp
   0x7ffff7ec2c44:	sub    rcx,rbp
   0x7ffff7ec2c47:	mov    rbp,rdx
   0x7ffff7ec2c4a:	mov    QWORD PTR [rsp+0x8],rcx
   0x7ffff7ec2c4f:	mov    r15,QWORD PTR [rbx+0x18]
   0x7ffff7ec2c53:	cmp    r15,rax
   0x7ffff7ec2c56:	jle    0x7ffff7ec2c76
   0x7ffff7ec2c58:	lea    rax,[r13+r8*1+0x1]
   0x7ffff7ec2c5d:	cmp    r12,rax
   0x7ffff7ec2c60:	jne    0x7ffff7ec2d38
   0x7ffff7ec2c66:	mov    rax,QWORD PTR [rbx+0x40]
   0x7ffff7ec2c6a:	sub    rax,r12
   0x7ffff7ec2c6d:	cmp    r15,rax
   0x7ffff7ec2c70:	jg     0x7ffff7ec2d38
   0x7ffff7ec2c76:	test   r15,r15
   0x7ffff7ec2c79:	jle    0x7ffff7ec2ca1
   0x7ffff7ec2c7b:	lea    rax,[rbp+0x1]
   0x7ffff7ec2c7f:	nop
   0x7ffff7ec2c80:	mov    BYTE PTR [rax-0x1],0x20
   0x7ffff7ec2c84:	mov    rsi,rax
   0x7ffff7ec2c87:	add    rax,0x1
   0x7ffff7ec2c8b:	mov    r15,QWORD PTR [rbx+0x18]
   0x7ffff7ec2c8f:	mov    rdx,rax
   0x7ffff7ec2c92:	sub    rdx,rbp
   0x7ffff7ec2c95:	sub    rdx,0x1
   0x7ffff7ec2c99:	cmp    r15,rdx
   0x7ffff7ec2c9c:	jg     0x7ffff7ec2c80
   0x7ffff7ec2c9e:	mov    rbp,rsi
   0x7ffff7ec2ca1:	cmp    rbp,r12
   0x7ffff7ec2ca4:	jb     0x7ffff7ec2df0
   0x7ffff7ec2caa:	mov    rax,r8
   0x7ffff7ec2cad:	sub    rax,QWORD PTR [rsp+0x8]
   0x7ffff7ec2cb2:	test   r15,r15
   0x7ffff7ec2cb5:	lea    r14,[rbp+rax*1+0x0]
   0x7ffff7ec2cba:	mov    rax,0xffffffffffffffff
   0x7ffff7ec2cc1:	cmove  r15,rax
   0x7ffff7ec2cc5:	mov    QWORD PTR [rbx+0x38],r14
   0x7ffff7ec2cc9:	mov    QWORD PTR [rbx+0x28],r15
   0x7ffff7ec2ccd:	jmp    0x7ffff7ec29e6
   0x7ffff7ec2cd2:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2cd8:	mov    r8,r14
   0x7ffff7ec2cdb:	mov    esi,0xa
   0x7ffff7ec2ce0:	mov    rdi,rbp
   0x7ffff7ec2ce3:	sub    r8,rbp
   0x7ffff7ec2ce6:	mov    rdx,r8
   0x7ffff7ec2ce9:	mov    QWORD PTR [rsp],r8
   0x7ffff7ec2ced:	call   0x7ffff7dbd420 <*ABS*+0xa9470@plt>
   0x7ffff7ec2cf2:	mov    r8,QWORD PTR [rsp]
   0x7ffff7ec2cf6:	mov    r13,rax
   0x7ffff7ec2cf9:	jmp    0x7ffff7ec2a79
   0x7ffff7ec2cfe:	xchg   ax,ax
   0x7ffff7ec2d00:	mov    QWORD PTR [rbx+0x28],0x0
   0x7ffff7ec2d08:	mov    r14,QWORD PTR [rbx+0x38]
   0x7ffff7ec2d0c:	lea    rbp,[r13+0x1]
   0x7ffff7ec2d10:	xor    r15d,r15d
   0x7ffff7ec2d13:	jmp    0x7ffff7ec29e6
   0x7ffff7ec2d18:	lea    r12,[r15+0x1]
   0x7ffff7ec2d1c:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec2d20:	cmp    rbp,r12
   0x7ffff7ec2d23:	jae    0x7ffff7ec2e60
   0x7ffff7ec2d29:	mov    r15,r12
   0x7ffff7ec2d2c:	jmp    0x7ffff7ec2b22
   0x7ffff7ec2d31:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec2d38:	xor    r14d,r14d
   0x7ffff7ec2d3b:	test   r15,r15
   0x7ffff7ec2d3e:	jg     0x7ffff7ec2d72
   0x7ffff7ec2d40:	jmp    0x7ffff7ec2ca1
   0x7ffff7ec2d45:	nop    DWORD PTR [rax]
   0x7ffff7ec2d48:	mov    rax,QWORD PTR [r9+0x28]
   0x7ffff7ec2d4c:	cmp    rax,QWORD PTR [r9+0x30]
   0x7ffff7ec2d50:	jae    0x7ffff7ec2e18
   0x7ffff7ec2d56:	lea    rcx,[rax+0x1]
   0x7ffff7ec2d5a:	mov    QWORD PTR [r9+0x28],rcx
   0x7ffff7ec2d5e:	mov    BYTE PTR [rax],0x20
   0x7ffff7ec2d61:	mov    r15,QWORD PTR [rbx+0x18]
   0x7ffff7ec2d65:	add    r14,0x1
   0x7ffff7ec2d69:	cmp    r15,r14
   0x7ffff7ec2d6c:	jle    0x7ffff7ec2ca1
   0x7ffff7ec2d72:	mov    r9,QWORD PTR [rbx]
   0x7ffff7ec2d75:	mov    eax,DWORD PTR [r9+0xc0]
   0x7ffff7ec2d7c:	test   eax,eax
   0x7ffff7ec2d7e:	jle    0x7ffff7ec2d48
   0x7ffff7ec2d80:	mov    rsi,r9
   0x7ffff7ec2d83:	mov    edi,0x20
   0x7ffff7ec2d88:	mov    QWORD PTR [rsp],r8
   0x7ffff7ec2d8c:	call   0x7ffff7e17860 <putwc_unlocked>
   0x7ffff7ec2d91:	mov    r8,QWORD PTR [rsp]
   0x7ffff7ec2d95:	jmp    0x7ffff7ec2d61
   0x7ffff7ec2d97:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2da0:	xor    r13d,r13d
   0x7ffff7ec2da3:	jmp    0x7ffff7ec2dce
   0x7ffff7ec2da5:	nop    DWORD PTR [rax]
   0x7ffff7ec2da8:	mov    rax,QWORD PTR [r8+0x28]
   0x7ffff7ec2dac:	cmp    rax,QWORD PTR [r8+0x30]
   0x7ffff7ec2db0:	jae    0x7ffff7ec2e38
   0x7ffff7ec2db6:	lea    rdx,[rax+0x1]
   0x7ffff7ec2dba:	mov    QWORD PTR [r8+0x28],rdx
   0x7ffff7ec2dbe:	mov    BYTE PTR [rax],0x20
   0x7ffff7ec2dc1:	add    r13,0x1
   0x7ffff7ec2dc5:	cmp    r12,r13
   0x7ffff7ec2dc8:	je     0x7ffff7ec2a3c
   0x7ffff7ec2dce:	mov    r8,QWORD PTR [rbx]
   0x7ffff7ec2dd1:	mov    edx,DWORD PTR [r8+0xc0]
   0x7ffff7ec2dd8:	test   edx,edx
   0x7ffff7ec2dda:	jle    0x7ffff7ec2da8
   0x7ffff7ec2ddc:	mov    rsi,r8
   0x7ffff7ec2ddf:	mov    edi,0x20
   0x7ffff7ec2de4:	call   0x7ffff7e17860 <putwc_unlocked>
   0x7ffff7ec2de9:	jmp    0x7ffff7ec2dc1
   0x7ffff7ec2deb:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2df0:	lea    rdx,[r13+r8*1+0x0]
   0x7ffff7ec2df5:	mov    rsi,r12
   0x7ffff7ec2df8:	mov    rdi,rbp
   0x7ffff7ec2dfb:	mov    QWORD PTR [rsp],r8
   0x7ffff7ec2dff:	sub    rdx,r12
   0x7ffff7ec2e02:	call   0x7ffff7dbd430 <*ABS*+0xa9620@plt>
   0x7ffff7ec2e07:	mov    r15,QWORD PTR [rbx+0x18]
   0x7ffff7ec2e0b:	mov    r8,QWORD PTR [rsp]
   0x7ffff7ec2e0f:	jmp    0x7ffff7ec2caa
   0x7ffff7ec2e14:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec2e18:	mov    esi,0x20
   0x7ffff7ec2e1d:	mov    rdi,r9
   0x7ffff7ec2e20:	mov    QWORD PTR [rsp],r8
   0x7ffff7ec2e24:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7ec2e29:	mov    r8,QWORD PTR [rsp]
   0x7ffff7ec2e2d:	jmp    0x7ffff7ec2d61
   0x7ffff7ec2e32:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2e38:	mov    esi,0x20
   0x7ffff7ec2e3d:	mov    rdi,r8
   0x7ffff7ec2e40:	call   0x7ffff7e22880 <__overflow>
   0x7ffff7ec2e45:	jmp    0x7ffff7ec2dc1
   0x7ffff7ec2e4a:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2e50:	mov    r15,rcx
   0x7ffff7ec2e53:	mov    r12,rcx
   0x7ffff7ec2e56:	jmp    0x7ffff7ec2b22
   0x7ffff7ec2e5b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2e60:	mov    rax,QWORD PTR [rip+0xeaf91]        # 0x7ffff7faddf8
   0x7ffff7ec2e67:	mov    rdx,QWORD PTR fs:[rax]
   0x7ffff7ec2e6b:	jmp    0x7ffff7ec2baa
   0x7ffff7ec2e70:	mov    rcx,QWORD PTR [rbx+0x30]
   0x7ffff7ec2e74:	mov    rdi,QWORD PTR [rbx]
   0x7ffff7ec2e77:	mov    edx,r15d
   0x7ffff7ec2e7a:	xor    eax,eax
   0x7ffff7ec2e7c:	sub    edx,DWORD PTR [rbx+0x30]
   0x7ffff7ec2e7f:	lea    rsi,[rip+0xad884]        # 0x7ffff7f7070a
   0x7ffff7ec2e86:	mov    QWORD PTR [rsp],r8
   0x7ffff7ec2e8a:	call   0x7ffff7e13880
   0x7ffff7ec2e8f:	mov    r13,QWORD PTR [rbx+0x30]
   0x7ffff7ec2e93:	mov    r8,QWORD PTR [rsp]
   0x7ffff7ec2e97:	mov    rax,r12
   0x7ffff7ec2e9a:	sub    rbp,r13
   0x7ffff7ec2e9d:	sub    rax,r13
   0x7ffff7ec2ea0:	add    r8,rbp
   0x7ffff7ec2ea3:	mov    QWORD PTR [rsp+0x8],rax
   0x7ffff7ec2ea8:	mov    rbp,r13
   0x7ffff7ec2eab:	jmp    0x7ffff7ec2c4f
   0x7ffff7ec2eb0:	lea    rax,[r8+r15*1]
   0x7ffff7ec2eb4:	sub    r12,rax
   0x7ffff7ec2eb7:	mov    QWORD PTR [rbx+0x28],rax
   0x7ffff7ec2ebb:	mov    rax,QWORD PTR [rbx+0x30]
   0x7ffff7ec2ebf:	add    r14,r12
   0x7ffff7ec2ec2:	mov    QWORD PTR [rbx+0x38],r14
   0x7ffff7ec2ec6:	jmp    0x7ffff7ec2bdc
   0x7ffff7ec2ecb:	mov    QWORD PTR [rbx+0x28],rax
   0x7ffff7ec2ecf:	mov    r14,QWORD PTR [rbx+0x38]
   0x7ffff7ec2ed3:	mov    rax,QWORD PTR [rbx+0x30]
   0x7ffff7ec2ed7:	jmp    0x7ffff7ec2bdc
   0x7ffff7ec2edc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec2ee0:	endbr64
   0x7ffff7ec2ee4:	push   rbp
   0x7ffff7ec2ee5:	mov    rbp,rdi
   0x7ffff7ec2ee8:	call   0x7ffff7ec2940
   0x7ffff7ec2eed:	mov    rdx,QWORD PTR [rbp+0x38]
   0x7ffff7ec2ef1:	mov    rdi,QWORD PTR [rbp+0x30]
   0x7ffff7ec2ef5:	cmp    rdx,rdi
   0x7ffff7ec2ef8:	ja     0x7ffff7ec2f10
   0x7ffff7ec2efa:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ec2eff:	mov    rdi,rbp
   0x7ffff7ec2f02:	pop    rbp
   0x7ffff7ec2f03:	jmp    0x7ffff7dbd370 <free@plt>
   0x7ffff7ec2f08:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2f10:	mov    rcx,rdi
   0x7ffff7ec2f13:	sub    edx,edi
   0x7ffff7ec2f15:	mov    rdi,QWORD PTR [rbp+0x0]
   0x7ffff7ec2f19:	lea    rsi,[rip+0xad7f0]        # 0x7ffff7f70710
   0x7ffff7ec2f20:	xor    eax,eax
   0x7ffff7ec2f22:	call   0x7ffff7e13880
   0x7ffff7ec2f27:	mov    rdi,QWORD PTR [rbp+0x30]
   0x7ffff7ec2f2b:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ec2f30:	mov    rdi,rbp
   0x7ffff7ec2f33:	pop    rbp
   0x7ffff7ec2f34:	jmp    0x7ffff7dbd370 <free@plt>
   0x7ffff7ec2f39:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec2f40:	endbr64
   0x7ffff7ec2f44:	mov    rax,QWORD PTR [rdi+0x40]
   0x7ffff7ec2f48:	sub    rax,QWORD PTR [rdi+0x38]
   0x7ffff7ec2f4c:	cmp    rax,rsi
   0x7ffff7ec2f4f:	jb     0x7ffff7ec2f60
   0x7ffff7ec2f51:	mov    eax,0x1
   0x7ffff7ec2f56:	ret
   0x7ffff7ec2f57:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec2f60:	push   rbp
   0x7ffff7ec2f61:	mov    rbp,rsi
   0x7ffff7ec2f64:	push   rbx
   0x7ffff7ec2f65:	mov    rbx,rdi
   0x7ffff7ec2f68:	sub    rsp,0x8
   0x7ffff7ec2f6c:	call   0x7ffff7ec2940
   0x7ffff7ec2f71:	mov    rdi,QWORD PTR [rbx]
   0x7ffff7ec2f74:	mov    rcx,QWORD PTR [rbx+0x30]
   0x7ffff7ec2f78:	xor    eax,eax
   0x7ffff7ec2f7a:	mov    edx,DWORD PTR [rbx+0x38]
   0x7ffff7ec2f7d:	lea    rsi,[rip+0xad78c]        # 0x7ffff7f70710
   0x7ffff7ec2f84:	sub    edx,DWORD PTR [rbx+0x30]
   0x7ffff7ec2f87:	call   0x7ffff7e13880
   0x7ffff7ec2f8c:	mov    rdi,QWORD PTR [rbx+0x30]
   0x7ffff7ec2f90:	mov    rax,QWORD PTR [rbx+0x40]
   0x7ffff7ec2f94:	mov    QWORD PTR [rbx+0x20],0x0
   0x7ffff7ec2f9c:	sub    rax,rdi
   0x7ffff7ec2f9f:	mov    QWORD PTR [rbx+0x38],rdi
   0x7ffff7ec2fa3:	cmp    rbp,rax
   0x7ffff7ec2fa6:	jbe    0x7ffff7ec2fce
   0x7ffff7ec2fa8:	add    rbp,rax
   0x7ffff7ec2fab:	jb     0x7ffff7ec2fda
   0x7ffff7ec2fad:	mov    rsi,rbp
   0x7ffff7ec2fb0:	call   0x7ffff7dbd3b0 <realloc@plt>
   0x7ffff7ec2fb5:	movq   xmm0,rax
   0x7ffff7ec2fba:	punpcklqdq xmm0,xmm0
   0x7ffff7ec2fbe:	test   rax,rax
   0x7ffff7ec2fc1:	je     0x7ffff7ec2fda
   0x7ffff7ec2fc3:	add    rax,rbp
   0x7ffff7ec2fc6:	movups XMMWORD PTR [rbx+0x30],xmm0
   0x7ffff7ec2fca:	mov    QWORD PTR [rbx+0x40],rax
   0x7ffff7ec2fce:	mov    eax,0x1
   0x7ffff7ec2fd3:	add    rsp,0x8
   0x7ffff7ec2fd7:	pop    rbx
   0x7ffff7ec2fd8:	pop    rbp
   0x7ffff7ec2fd9:	ret
   0x7ffff7ec2fda:	mov    rax,QWORD PTR [rip+0xeae2f]        # 0x7ffff7fade10
   0x7ffff7ec2fe1:	mov    DWORD PTR fs:[rax],0xc
   0x7ffff7ec2fe8:	xor    eax,eax
   0x7ffff7ec2fea:	jmp    0x7ffff7ec2fd3
   0x7ffff7ec2fec:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec2ff0:	endbr64
   0x7ffff7ec2ff4:	push   r13
   0x7ffff7ec2ff6:	mov    r13,rdi
   0x7ffff7ec2ff9:	push   r12
   0x7ffff7ec2ffb:	push   rbp
   0x7ffff7ec2ffc:	mov    rbp,rsi
   0x7ffff7ec2fff:	push   rbx
   0x7ffff7ec3000:	sub    rsp,0xd8
   0x7ffff7ec3007:	mov    QWORD PTR [rsp+0x30],rdx
   0x7ffff7ec300c:	mov    QWORD PTR [rsp+0x38],rcx
   0x7ffff7ec3011:	mov    QWORD PTR [rsp+0x40],r8
   0x7ffff7ec3016:	mov    QWORD PTR [rsp+0x48],r9
   0x7ffff7ec301b:	test   al,al
   0x7ffff7ec301d:	je     0x7ffff7ec3056
   0x7ffff7ec301f:	movaps XMMWORD PTR [rsp+0x50],xmm0
   0x7ffff7ec3024:	movaps XMMWORD PTR [rsp+0x60],xmm1
   0x7ffff7ec3029:	movaps XMMWORD PTR [rsp+0x70],xmm2
   0x7ffff7ec302e:	movaps XMMWORD PTR [rsp+0x80],xmm3
   0x7ffff7ec3036:	movaps XMMWORD PTR [rsp+0x90],xmm4
   0x7ffff7ec303e:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   0x7ffff7ec3046:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   0x7ffff7ec304e:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   0x7ffff7ec3056:	mov    rax,QWORD PTR fs:0x28
   0x7ffff7ec305f:	mov    QWORD PTR [rsp+0x18],rax
   0x7ffff7ec3064:	xor    eax,eax
   0x7ffff7ec3066:	mov    rax,QWORD PTR [r13+0x40]
   0x7ffff7ec306a:	mov    ebx,0x96
   0x7ffff7ec306f:	lea    r12,[rip+0xad69a]        # 0x7ffff7f70710
   0x7ffff7ec3076:	mov    rdx,rax
   0x7ffff7ec3079:	sub    rdx,QWORD PTR [r13+0x38]
   0x7ffff7ec307d:	cmp    rbx,rdx
   0x7ffff7ec3080:	ja     0x7ffff7ec3122
   0x7ffff7ec3086:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec3090:	mov    rdi,QWORD PTR [r13+0x38]
   0x7ffff7ec3094:	lea    rcx,[rsp+0x20]
   0x7ffff7ec3099:	mov    rdx,rbp
   0x7ffff7ec309c:	xor    r8d,r8d
   0x7ffff7ec309f:	lea    rsi,[rsp+0x100]
   0x7ffff7ec30a7:	mov    QWORD PTR [rsp+0x10],rcx
   0x7ffff7ec30ac:	mov    rcx,rsp
   0x7ffff7ec30af:	sub    rax,rdi
   0x7ffff7ec30b2:	mov    QWORD PTR [rsp+0x8],rsi
   0x7ffff7ec30b7:	mov    rsi,rax
   0x7ffff7ec30ba:	mov    DWORD PTR [rsp],0x10
   0x7ffff7ec30c1:	mov    rbx,rax
   0x7ffff7ec30c4:	mov    DWORD PTR [rsp+0x4],0x30
   0x7ffff7ec30cc:	call   0x7ffff7e1d470
   0x7ffff7ec30d1:	movsxd rdx,eax
   0x7ffff7ec30d4:	cmp    rdx,rbx
   0x7ffff7ec30d7:	jae    0x7ffff7ec3108
   0x7ffff7ec30d9:	add    QWORD PTR [r13+0x38],rdx
   0x7ffff7ec30dd:	mov    rax,rdx
   0x7ffff7ec30e0:	mov    rdx,QWORD PTR [rsp+0x18]
   0x7ffff7ec30e5:	sub    rdx,QWORD PTR fs:0x28
   0x7ffff7ec30ee:	jne    0x7ffff7ec31ad
   0x7ffff7ec30f4:	add    rsp,0xd8
   0x7ffff7ec30fb:	pop    rbx
   0x7ffff7ec30fc:	pop    rbp
   0x7ffff7ec30fd:	pop    r12
   0x7ffff7ec30ff:	pop    r13
   0x7ffff7ec3101:	ret
   0x7ffff7ec3102:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec3108:	add    eax,0x1
   0x7ffff7ec310b:	movsxd rbx,eax
   0x7ffff7ec310e:	mov    rax,QWORD PTR [r13+0x40]
   0x7ffff7ec3112:	mov    rdx,rax
   0x7ffff7ec3115:	sub    rdx,QWORD PTR [r13+0x38]
   0x7ffff7ec3119:	cmp    rbx,rdx
   0x7ffff7ec311c:	jbe    0x7ffff7ec3090
   0x7ffff7ec3122:	mov    rdi,r13
   0x7ffff7ec3125:	call   0x7ffff7ec2940
   0x7ffff7ec312a:	mov    rdi,QWORD PTR [r13+0x0]
   0x7ffff7ec312e:	mov    rcx,QWORD PTR [r13+0x30]
   0x7ffff7ec3132:	mov    rsi,r12
   0x7ffff7ec3135:	mov    edx,DWORD PTR [r13+0x38]
   0x7ffff7ec3139:	xor    eax,eax
   0x7ffff7ec313b:	sub    edx,DWORD PTR [r13+0x30]
   0x7ffff7ec313f:	call   0x7ffff7e13880
   0x7ffff7ec3144:	mov    rax,QWORD PTR [r13+0x40]
   0x7ffff7ec3148:	mov    rdi,QWORD PTR [r13+0x30]
   0x7ffff7ec314c:	mov    QWORD PTR [r13+0x20],0x0
   0x7ffff7ec3154:	mov    rdx,rax
   0x7ffff7ec3157:	mov    QWORD PTR [r13+0x38],rdi
   0x7ffff7ec315b:	sub    rdx,rdi
   0x7ffff7ec315e:	cmp    rbx,rdx
   0x7ffff7ec3161:	jbe    0x7ffff7ec3090
   0x7ffff7ec3167:	add    rbx,rdx
   0x7ffff7ec316a:	jb     0x7ffff7ec3193
   0x7ffff7ec316c:	mov    rsi,rbx
   0x7ffff7ec316f:	call   0x7ffff7dbd3b0 <realloc@plt>
   0x7ffff7ec3174:	movq   xmm0,rax
   0x7ffff7ec3179:	punpcklqdq xmm0,xmm0
   0x7ffff7ec317d:	test   rax,rax
   0x7ffff7ec3180:	je     0x7ffff7ec3193
   0x7ffff7ec3182:	add    rax,rbx
   0x7ffff7ec3185:	movups XMMWORD PTR [r13+0x30],xmm0
   0x7ffff7ec318a:	mov    QWORD PTR [r13+0x40],rax
   0x7ffff7ec318e:	jmp    0x7ffff7ec3090
   0x7ffff7ec3193:	mov    rax,QWORD PTR [rip+0xeac76]        # 0x7ffff7fade10
   0x7ffff7ec319a:	mov    DWORD PTR fs:[rax],0xc
   0x7ffff7ec31a1:	mov    rax,0xffffffffffffffff
   0x7ffff7ec31a8:	jmp    0x7ffff7ec30e0
   0x7ffff7ec31ad:	call   0x7ffff7ecb720 <__stack_chk_fail>
   0x7ffff7ec31b2:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec31bc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec31c0:	endbr64
   0x7ffff7ec31c4:	push   r12
   0x7ffff7ec31c6:	mov    r12,rsi
   0x7ffff7ec31c9:	push   rbp
   0x7ffff7ec31ca:	mov    rbp,rdx
   0x7ffff7ec31cd:	push   rbx
   0x7ffff7ec31ce:	mov    rbx,rdi
   0x7ffff7ec31d1:	mov    rdi,QWORD PTR [rdi+0x38]
   0x7ffff7ec31d5:	lea    rax,[rdi+rdx*1]
   0x7ffff7ec31d9:	cmp    QWORD PTR [rbx+0x40],rax
   0x7ffff7ec31dd:	jae    0x7ffff7ec31f8
   0x7ffff7ec31df:	mov    rsi,rdx
   0x7ffff7ec31e2:	mov    rdi,rbx
   0x7ffff7ec31e5:	call   0x7ffff7ec2f40
   0x7ffff7ec31ea:	mov    r8d,eax
   0x7ffff7ec31ed:	xor    eax,eax
   0x7ffff7ec31ef:	test   r8d,r8d
   0x7ffff7ec31f2:	je     0x7ffff7ec320a
   0x7ffff7ec31f4:	mov    rdi,QWORD PTR [rbx+0x38]
   0x7ffff7ec31f8:	mov    rdx,rbp
   0x7ffff7ec31fb:	mov    rsi,r12
   0x7ffff7ec31fe:	call   0x7ffff7dbd620 <*ABS*+0xa9c90@plt>
   0x7ffff7ec3203:	add    QWORD PTR [rbx+0x38],rbp
   0x7ffff7ec3207:	mov    rax,rbp
   0x7ffff7ec320a:	pop    rbx
   0x7ffff7ec320b:	pop    rbp
   0x7ffff7ec320c:	pop    r12
   0x7ffff7ec320e:	ret
   0x7ffff7ec320f:	nop
   0x7ffff7ec3210:	endbr64
   0x7ffff7ec3214:	push   r12
   0x7ffff7ec3216:	mov    r12,rsi
   0x7ffff7ec3219:	push   rbp
   0x7ffff7ec321a:	mov    rbp,rdi
   0x7ffff7ec321d:	mov    rdi,rsi
   0x7ffff7ec3220:	push   rbx
   0x7ffff7ec3221:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7ec3226:	mov    rbx,rax
   0x7ffff7ec3229:	xor    eax,eax
   0x7ffff7ec322b:	test   rbx,rbx
   0x7ffff7ec322e:	jne    0x7ffff7ec3238
   0x7ffff7ec3230:	pop    rbx
   0x7ffff7ec3231:	pop    rbp
   0x7ffff7ec3232:	pop    r12
   0x7ffff7ec3234:	ret
   0x7ffff7ec3235:	nop    DWORD PTR [rax]
   0x7ffff7ec3238:	mov    rdi,QWORD PTR [rbp+0x38]
   0x7ffff7ec323c:	lea    rax,[rdi+rbx*1]
   0x7ffff7ec3240:	cmp    QWORD PTR [rbp+0x40],rax
   0x7ffff7ec3244:	jae    0x7ffff7ec3262
   0x7ffff7ec3246:	mov    rsi,rbx
   0x7ffff7ec3249:	mov    rdi,rbp
   0x7ffff7ec324c:	call   0x7ffff7ec2f40
   0x7ffff7ec3251:	mov    r8d,eax
   0x7ffff7ec3254:	mov    eax,0xffffffff
   0x7ffff7ec3259:	test   r8d,r8d
   0x7ffff7ec325c:	je     0x7ffff7ec3230
   0x7ffff7ec325e:	mov    rdi,QWORD PTR [rbp+0x38]
   0x7ffff7ec3262:	mov    rdx,rbx
   0x7ffff7ec3265:	mov    rsi,r12
   0x7ffff7ec3268:	call   0x7ffff7dbd620 <*ABS*+0xa9c90@plt>
   0x7ffff7ec326d:	add    QWORD PTR [rbp+0x38],rbx
   0x7ffff7ec3271:	xor    eax,eax
   0x7ffff7ec3273:	pop    rbx
   0x7ffff7ec3274:	pop    rbp
   0x7ffff7ec3275:	pop    r12
   0x7ffff7ec3277:	ret
   0x7ffff7ec3278:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec3280:	endbr64
   0x7ffff7ec3284:	push   rbp
   0x7ffff7ec3285:	mov    rbp,rdi
   0x7ffff7ec3288:	push   rbx
   0x7ffff7ec3289:	mov    ebx,esi
   0x7ffff7ec328b:	sub    rsp,0x8
   0x7ffff7ec328f:	mov    rax,QWORD PTR [rdi+0x38]
   0x7ffff7ec3293:	cmp    rax,QWORD PTR [rdi+0x40]
   0x7ffff7ec3297:	jae    0x7ffff7ec32b0
   0x7ffff7ec3299:	lea    rdx,[rax+0x1]
   0x7ffff7ec329d:	mov    QWORD PTR [rbp+0x38],rdx
   0x7ffff7ec32a1:	mov    BYTE PTR [rax],bl
   0x7ffff7ec32a3:	movsx  eax,bl
   0x7ffff7ec32a6:	add    rsp,0x8
   0x7ffff7ec32aa:	pop    rbx
   0x7ffff7ec32ab:	pop    rbp
   0x7ffff7ec32ac:	ret
   0x7ffff7ec32ad:	nop    DWORD PTR [rax]
   0x7ffff7ec32b0:	mov    esi,0x1
   0x7ffff7ec32b5:	call   0x7ffff7ec2f40
   0x7ffff7ec32ba:	test   eax,eax
   0x7ffff7ec32bc:	je     0x7ffff7ec32c4
   0x7ffff7ec32be:	mov    rax,QWORD PTR [rbp+0x38]
   0x7ffff7ec32c2:	jmp    0x7ffff7ec3299
   0x7ffff7ec32c4:	mov    eax,0xffffffff
   0x7ffff7ec32c9:	jmp    0x7ffff7ec32a6
   0x7ffff7ec32cb:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec32d0:	endbr64
   0x7ffff7ec32d4:	push   rbp
   0x7ffff7ec32d5:	mov    rbp,rsi
   0x7ffff7ec32d8:	push   rbx
   0x7ffff7ec32d9:	mov    rbx,rdi
   0x7ffff7ec32dc:	sub    rsp,0x8
   0x7ffff7ec32e0:	mov    rax,QWORD PTR [rdi+0x38]
   0x7ffff7ec32e4:	sub    rax,QWORD PTR [rdi+0x30]
   0x7ffff7ec32e8:	cmp    rax,QWORD PTR [rdi+0x20]
   0x7ffff7ec32ec:	ja     0x7ffff7ec3300
   0x7ffff7ec32ee:	mov    rax,QWORD PTR [rbx+0x8]
   0x7ffff7ec32f2:	mov    QWORD PTR [rbx+0x8],rbp
   0x7ffff7ec32f6:	add    rsp,0x8
   0x7ffff7ec32fa:	pop    rbx
   0x7ffff7ec32fb:	pop    rbp
   0x7ffff7ec32fc:	ret
   0x7ffff7ec32fd:	nop    DWORD PTR [rax]
   0x7ffff7ec3300:	call   0x7ffff7ec2940
   0x7ffff7ec3305:	mov    rax,QWORD PTR [rbx+0x8]
   0x7ffff7ec3309:	mov    QWORD PTR [rbx+0x8],rbp
   0x7ffff7ec330d:	add    rsp,0x8
   0x7ffff7ec3311:	pop    rbx
   0x7ffff7ec3312:	pop    rbp
   0x7ffff7ec3313:	ret
   0x7ffff7ec3314:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec331f:	nop
   0x7ffff7ec3320:	endbr64
   0x7ffff7ec3324:	push   rbp
   0x7ffff7ec3325:	mov    rbp,rsi
   0x7ffff7ec3328:	push   rbx
   0x7ffff7ec3329:	mov    rbx,rdi
   0x7ffff7ec332c:	sub    rsp,0x8
   0x7ffff7ec3330:	mov    rax,QWORD PTR [rdi+0x38]
   0x7ffff7ec3334:	sub    rax,QWORD PTR [rdi+0x30]
   0x7ffff7ec3338:	cmp    rax,QWORD PTR [rdi+0x20]
   0x7ffff7ec333c:	ja     0x7ffff7ec3350
   0x7ffff7ec333e:	mov    rax,QWORD PTR [rbx+0x10]
   0x7ffff7ec3342:	mov    QWORD PTR [rbx+0x10],rbp
   0x7ffff7ec3346:	add    rsp,0x8
   0x7ffff7ec334a:	pop    rbx
   0x7ffff7ec334b:	pop    rbp
   0x7ffff7ec334c:	ret
   0x7ffff7ec334d:	nop    DWORD PTR [rax]
   0x7ffff7ec3350:	call   0x7ffff7ec2940
   0x7ffff7ec3355:	mov    rax,QWORD PTR [rbx+0x10]
   0x7ffff7ec3359:	mov    QWORD PTR [rbx+0x10],rbp
   0x7ffff7ec335d:	add    rsp,0x8
   0x7ffff7ec3361:	pop    rbx
   0x7ffff7ec3362:	pop    rbp
   0x7ffff7ec3363:	ret
   0x7ffff7ec3364:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec336f:	nop
   0x7ffff7ec3370:	endbr64
   0x7ffff7ec3374:	push   rbp
   0x7ffff7ec3375:	mov    rbp,rsi
   0x7ffff7ec3378:	push   rbx
   0x7ffff7ec3379:	mov    rbx,rdi
   0x7ffff7ec337c:	sub    rsp,0x8
   0x7ffff7ec3380:	mov    rax,QWORD PTR [rdi+0x38]
   0x7ffff7ec3384:	sub    rax,QWORD PTR [rdi+0x30]
   0x7ffff7ec3388:	cmp    rax,QWORD PTR [rdi+0x20]
   0x7ffff7ec338c:	ja     0x7ffff7ec33a0
   0x7ffff7ec338e:	mov    rax,QWORD PTR [rbx+0x18]
   0x7ffff7ec3392:	mov    QWORD PTR [rbx+0x18],rbp
   0x7ffff7ec3396:	add    rsp,0x8
   0x7ffff7ec339a:	pop    rbx
   0x7ffff7ec339b:	pop    rbp
   0x7ffff7ec339c:	ret
   0x7ffff7ec339d:	nop    DWORD PTR [rax]
   0x7ffff7ec33a0:	call   0x7ffff7ec2940
   0x7ffff7ec33a5:	mov    rax,QWORD PTR [rbx+0x18]
   0x7ffff7ec33a9:	mov    QWORD PTR [rbx+0x18],rbp
   0x7ffff7ec33ad:	add    rsp,0x8
   0x7ffff7ec33b1:	pop    rbx
   0x7ffff7ec33b2:	pop    rbp
   0x7ffff7ec33b3:	ret
   0x7ffff7ec33b4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec33bf:	nop
   0x7ffff7ec33c0:	endbr64
   0x7ffff7ec33c4:	push   rbx
   0x7ffff7ec33c5:	mov    rax,QWORD PTR [rdi+0x38]
   0x7ffff7ec33c9:	mov    rbx,rdi
   0x7ffff7ec33cc:	sub    rax,QWORD PTR [rdi+0x30]
   0x7ffff7ec33d0:	cmp    rax,QWORD PTR [rdi+0x20]
   0x7ffff7ec33d4:	ja     0x7ffff7ec33e8
   0x7ffff7ec33d6:	mov    rax,QWORD PTR [rbx+0x28]
   0x7ffff7ec33da:	xor    edx,edx
   0x7ffff7ec33dc:	pop    rbx
   0x7ffff7ec33dd:	test   rax,rax
   0x7ffff7ec33e0:	cmovs  rax,rdx
   0x7ffff7ec33e4:	ret
   0x7ffff7ec33e5:	nop    DWORD PTR [rax]
   0x7ffff7ec33e8:	call   0x7ffff7ec2940
   0x7ffff7ec33ed:	mov    rax,QWORD PTR [rbx+0x28]
   0x7ffff7ec33f1:	xor    edx,edx
   0x7ffff7ec33f3:	pop    rbx
   0x7ffff7ec33f4:	test   rax,rax
   0x7ffff7ec33f7:	cmovs  rax,rdx
   0x7ffff7ec33fb:	ret
   0x7ffff7ec33fc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec3400:	push   r15
   0x7ffff7ec3402:	push   r14
   0x7ffff7ec3404:	mov    r14,r9
   0x7ffff7ec3407:	push   r13
   0x7ffff7ec3409:	mov    r13d,edx
   0x7ffff7ec340c:	mov    edx,0x5
   0x7ffff7ec3411:	push   r12
   0x7ffff7ec3413:	mov    r12,rdi
   0x7ffff7ec3416:	push   rbp
   0x7ffff7ec3417:	push   rbx
   0x7ffff7ec3418:	sub    rsp,0x38
   0x7ffff7ec341c:	mov    QWORD PTR [rsp+0x8],rsi
   0x7ffff7ec3421:	mov    rsi,QWORD PTR [rdi+0x18]
   0x7ffff7ec3425:	mov    rdi,QWORD PTR [rdi+0x30]
   0x7ffff7ec3429:	mov    DWORD PTR [rsp+0x4],ecx
   0x7ffff7ec342d:	mov    DWORD PTR [rsp+0x18],r8d
   0x7ffff7ec3432:	call   0x7ffff7dcf8f0 <dcgettext>
   0x7ffff7ec3437:	mov    rbx,QWORD PTR [r12+0x20]
   0x7ffff7ec343c:	mov    rbp,rax
   0x7ffff7ec343f:	test   rax,rax
   0x7ffff7ec3442:	je     0x7ffff7ec3810
   0x7ffff7ec3448:	mov    esi,0xb
   0x7ffff7ec344d:	mov    rdi,rax
   0x7ffff7ec3450:	call   0x7ffff7dbd600 <*ABS*+0xa82e0@plt>
   0x7ffff7ec3455:	mov    QWORD PTR [rsp+0x10],rax
   0x7ffff7ec345a:	test   r13d,r13d
   0x7ffff7ec345d:	jne    0x7ffff7ec3730
   0x7ffff7ec3463:	cmp    QWORD PTR [rsp+0x10],0x0
   0x7ffff7ec3469:	mov    rax,QWORD PTR [r12+0x28]
   0x7ffff7ec346e:	je     0x7ffff7ec373d
   0x7ffff7ec3474:	mov    rcx,QWORD PTR [rsp+0x10]
   0x7ffff7ec3479:	sub    rcx,rbp
   0x7ffff7ec347c:	setne  r10b
   0x7ffff7ec3480:	test   rax,rax
   0x7ffff7ec3483:	je     0x7ffff7ec38f0
   0x7ffff7ec3489:	test   rcx,rcx
   0x7ffff7ec348c:	je     0x7ffff7ec34b1
   0x7ffff7ec348e:	mov    rsi,rcx
   0x7ffff7ec3491:	mov    rdi,rbp
   0x7ffff7ec3494:	mov    BYTE PTR [rsp+0x1f],r10b
   0x7ffff7ec3499:	mov    QWORD PTR [rsp+0x10],rcx
   0x7ffff7ec349e:	call   0x7ffff7e3d630 <strndup>
   0x7ffff7ec34a3:	mov    rcx,QWORD PTR [rsp+0x10]
   0x7ffff7ec34a8:	movzx  r10d,BYTE PTR [rsp+0x1f]
   0x7ffff7ec34ae:	mov    rbp,rax
   0x7ffff7ec34b1:	mov    rsi,QWORD PTR [rsp+0x8]
   0x7ffff7ec34b6:	mov    rdi,r12
   0x7ffff7ec34b9:	mov    QWORD PTR [rsp+0x28],rcx
   0x7ffff7ec34be:	mov    BYTE PTR [rsp+0x1f],r10b
   0x7ffff7ec34c3:	call   0x7ffff7ec8b80
   0x7ffff7ec34c8:	test   rbp,rbp
   0x7ffff7ec34cb:	mov    rsi,rbp
   0x7ffff7ec34ce:	mov    edi,0x2000001
   0x7ffff7ec34d3:	movzx  r10d,BYTE PTR [rsp+0x1f]
   0x7ffff7ec34d9:	mov    QWORD PTR [rsp+0x10],rax
   0x7ffff7ec34de:	mov    rdx,rax
   0x7ffff7ec34e1:	setne  al
   0x7ffff7ec34e4:	and    eax,r10d
   0x7ffff7ec34e7:	mov    BYTE PTR [rsp+0x20],r10b
   0x7ffff7ec34ec:	mov    BYTE PTR [rsp+0x1f],al
   0x7ffff7ec34f0:	call   QWORD PTR [r12+0x28]
   0x7ffff7ec34f5:	movzx  r10d,BYTE PTR [rsp+0x20]
   0x7ffff7ec34fb:	mov    rcx,QWORD PTR [rsp+0x28]
   0x7ffff7ec3500:	test   rax,rax
   0x7ffff7ec3503:	mov    r15,rax
   0x7ffff7ec3506:	je     0x7ffff7ec3910
   0x7ffff7ec350c:	cmp    rbp,r15
   0x7ffff7ec350f:	sete   al
   0x7ffff7ec3512:	and    r10d,eax
   0x7ffff7ec3515:	mov    eax,DWORD PTR [rsp+0x4]
   0x7ffff7ec3519:	test   eax,eax
   0x7ffff7ec351b:	je     0x7ffff7ec3536
   0x7ffff7ec351d:	mov    rax,QWORD PTR [r14+0x38]
   0x7ffff7ec3521:	cmp    rax,QWORD PTR [r14+0x40]
   0x7ffff7ec3525:	jae    0x7ffff7ec3870
   0x7ffff7ec352b:	lea    rdx,[rax+0x1]
   0x7ffff7ec352f:	mov    QWORD PTR [r14+0x38],rdx
   0x7ffff7ec3533:	mov    BYTE PTR [rax],0xa
   0x7ffff7ec3536:	test   r10b,r10b
   0x7ffff7ec3539:	je     0x7ffff7ec3790
   0x7ffff7ec353f:	mov    rdi,QWORD PTR [r14+0x38]
   0x7ffff7ec3543:	lea    rax,[rdi+rcx*1]
   0x7ffff7ec3547:	cmp    QWORD PTR [r14+0x40],rax
   0x7ffff7ec354b:	jae    0x7ffff7ec382c
   0x7ffff7ec3551:	mov    rsi,rcx
   0x7ffff7ec3554:	mov    rdi,r14
   0x7ffff7ec3557:	mov    QWORD PTR [rsp+0x20],rcx
   0x7ffff7ec355c:	call   0x7ffff7ec2f40
   0x7ffff7ec3561:	mov    rcx,QWORD PTR [rsp+0x20]
   0x7ffff7ec3566:	test   eax,eax
   0x7ffff7ec3568:	jne    0x7ffff7ec3828
   0x7ffff7ec356e:	mov    rcx,QWORD PTR [r14+0x38]
   0x7ffff7ec3572:	sub    rcx,QWORD PTR [r14+0x30]
   0x7ffff7ec3576:	cmp    rcx,QWORD PTR [r14+0x20]
   0x7ffff7ec357a:	ja     0x7ffff7ec3800
   0x7ffff7ec3580:	mov    rax,QWORD PTR [r14+0x28]
   0x7ffff7ec3584:	xor    edx,edx
   0x7ffff7ec3586:	test   rax,rax
   0x7ffff7ec3589:	cmovs  rax,rdx
   0x7ffff7ec358d:	cmp    QWORD PTR [r14+0x8],rax
   0x7ffff7ec3591:	jae    0x7ffff7ec35ac
   0x7ffff7ec3593:	mov    rax,QWORD PTR [r14+0x38]
   0x7ffff7ec3597:	cmp    rax,QWORD PTR [r14+0x40]
   0x7ffff7ec359b:	jae    0x7ffff7ec3850
   0x7ffff7ec35a1:	lea    rdx,[rax+0x1]
   0x7ffff7ec35a5:	mov    QWORD PTR [r14+0x38],rdx
   0x7ffff7ec35a9:	mov    BYTE PTR [rax],0xa
   0x7ffff7ec35ac:	cmp    rbp,r15
   0x7ffff7ec35af:	je     0x7ffff7ec35b9
   0x7ffff7ec35b1:	mov    rdi,r15
   0x7ffff7ec35b4:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ec35b9:	cmp    BYTE PTR [rsp+0x1f],0x0
   0x7ffff7ec35be:	mov    r15d,0x1
   0x7ffff7ec35c4:	je     0x7ffff7ec35da
   0x7ffff7ec35c6:	cmp    QWORD PTR [r12+0x28],0x0
   0x7ffff7ec35cc:	je     0x7ffff7ec36b3
   0x7ffff7ec35d2:	mov    rdi,rbp
   0x7ffff7ec35d5:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ec35da:	test   r13d,r13d
   0x7ffff7ec35dd:	je     0x7ffff7ec36b3
   0x7ffff7ec35e3:	mov    rax,QWORD PTR [r12+0x28]
   0x7ffff7ec35e8:	test   rax,rax
   0x7ffff7ec35eb:	je     0x7ffff7ec36b3
   0x7ffff7ec35f1:	mov    rdx,QWORD PTR [rsp+0x10]
   0x7ffff7ec35f6:	xor    esi,esi
   0x7ffff7ec35f8:	mov    edi,0x2000004
   0x7ffff7ec35fd:	call   rax
   0x7ffff7ec35ff:	mov    rbp,rax
   0x7ffff7ec3602:	test   rax,rax
   0x7ffff7ec3605:	je     0x7ffff7ec36b3
   0x7ffff7ec360b:	or     r15d,DWORD PTR [rsp+0x4]
   0x7ffff7ec3610:	je     0x7ffff7ec363c
   0x7ffff7ec3612:	mov    rax,QWORD PTR [r14+0x38]
   0x7ffff7ec3616:	cmp    rax,QWORD PTR [r14+0x40]
   0x7ffff7ec361a:	jb     0x7ffff7ec3631
   0x7ffff7ec361c:	mov    esi,0x1
   0x7ffff7ec3621:	mov    rdi,r14
   0x7ffff7ec3624:	call   0x7ffff7ec2f40
   0x7ffff7ec3629:	test   eax,eax
   0x7ffff7ec362b:	je     0x7ffff7ec363c
   0x7ffff7ec362d:	mov    rax,QWORD PTR [r14+0x38]
   0x7ffff7ec3631:	lea    rdx,[rax+0x1]
   0x7ffff7ec3635:	mov    QWORD PTR [r14+0x38],rdx
   0x7ffff7ec3639:	mov    BYTE PTR [rax],0xa
   0x7ffff7ec363c:	mov    rdi,rbp
   0x7ffff7ec363f:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7ec3644:	mov    r12,rax
   0x7ffff7ec3647:	test   rax,rax
   0x7ffff7ec364a:	je     0x7ffff7ec367c
   0x7ffff7ec364c:	mov    rdi,QWORD PTR [r14+0x38]
   0x7ffff7ec3650:	lea    rax,[rdi+rax*1]
   0x7ffff7ec3654:	cmp    QWORD PTR [r14+0x40],rax
   0x7ffff7ec3658:	jae    0x7ffff7ec366d
   0x7ffff7ec365a:	mov    rsi,r12
   0x7ffff7ec365d:	mov    rdi,r14
   0x7ffff7ec3660:	call   0x7ffff7ec2f40
   0x7ffff7ec3665:	test   eax,eax
   0x7ffff7ec3667:	je     0x7ffff7ec367c
   0x7ffff7ec3669:	mov    rdi,QWORD PTR [r14+0x38]
   0x7ffff7ec366d:	mov    rdx,r12
   0x7ffff7ec3670:	mov    rsi,rbp
   0x7ffff7ec3673:	call   0x7ffff7dbd620 <*ABS*+0xa9c90@plt>
   0x7ffff7ec3678:	add    QWORD PTR [r14+0x38],r12
   0x7ffff7ec367c:	mov    rdi,rbp
   0x7ffff7ec367f:	call   0x7ffff7dbd370 <free@plt>
   0x7ffff7ec3684:	mov    rax,QWORD PTR [r14+0x38]
   0x7ffff7ec3688:	sub    rax,QWORD PTR [r14+0x30]
   0x7ffff7ec368c:	cmp    rax,QWORD PTR [r14+0x20]
   0x7ffff7ec3690:	ja     0x7ffff7ec38e0
   0x7ffff7ec3696:	mov    rax,QWORD PTR [r14+0x28]
   0x7ffff7ec369a:	xor    edx,edx
   0x7ffff7ec369c:	test   rax,rax
   0x7ffff7ec369f:	cmovs  rax,rdx
   0x7ffff7ec36a3:	cmp    QWORD PTR [r14+0x8],rax
   0x7ffff7ec36a7:	jb     0x7ffff7ec38a8
   0x7ffff7ec36ad:	mov    r15d,0x1
   0x7ffff7ec36b3:	test   rbx,rbx
   0x7ffff7ec36b6:	je     0x7ffff7ec3716
   0x7ffff7ec36b8:	mov    rdi,QWORD PTR [rbx]
   0x7ffff7ec36bb:	test   rdi,rdi
   0x7ffff7ec36be:	je     0x7ffff7ec3716
   0x7ffff7ec36c0:	mov    edx,DWORD PTR [rsp+0x18]
   0x7ffff7ec36c4:	mov    eax,r15d
   0x7ffff7ec36c7:	xor    eax,0x1
   0x7ffff7ec36ca:	xor    edx,0x1
   0x7ffff7ec36cd:	mov    ebp,edx
   0x7ffff7ec36cf:	or     eax,edx
   0x7ffff7ec36d1:	and    ebp,0x1
   0x7ffff7ec36d4:	test   al,0x1
   0x7ffff7ec36d6:	je     0x7ffff7ec3950
   0x7ffff7ec36dc:	mov    eax,DWORD PTR [rsp+0x4]
   0x7ffff7ec36e0:	add    rbx,0x20
   0x7ffff7ec36e4:	xor    ecx,ecx
   0x7ffff7ec36e6:	mov    r8d,DWORD PTR [rsp+0x18]
   0x7ffff7ec36eb:	mov    rsi,QWORD PTR [rsp+0x8]
   0x7ffff7ec36f0:	mov    r9,r14
   0x7ffff7ec36f3:	mov    edx,r13d
   0x7ffff7ec36f6:	or     eax,r15d
   0x7ffff7ec36f9:	setne  cl
   0x7ffff7ec36fc:	call   0x7ffff7ec3400
   0x7ffff7ec3701:	mov    rdi,QWORD PTR [rbx]
   0x7ffff7ec3704:	or     r15d,eax
   0x7ffff7ec3707:	test   rdi,rdi
   0x7ffff7ec370a:	je     0x7ffff7ec3716
   0x7ffff7ec370c:	test   r15d,r15d
   0x7ffff7ec370f:	je     0x7ffff7ec36dc
   0x7ffff7ec3711:	test   bpl,bpl
   0x7ffff7ec3714:	jne    0x7ffff7ec36dc
   0x7ffff7ec3716:	add    rsp,0x38
   0x7ffff7ec371a:	mov    eax,r15d
   0x7ffff7ec371d:	pop    rbx
   0x7ffff7ec371e:	pop    rbp
   0x7ffff7ec371f:	pop    r12
   0x7ffff7ec3721:	pop    r13
   0x7ffff7ec3723:	pop    r14
   0x7ffff7ec3725:	pop    r15
   0x7ffff7ec3727:	ret
   0x7ffff7ec3728:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec3730:	lea    rbp,[rax+0x1]
   0x7ffff7ec3734:	test   rax,rax
   0x7ffff7ec3737:	je     0x7ffff7ec3930
   0x7ffff7ec373d:	xor    r10d,r10d
   0x7ffff7ec3740:	xor    ecx,ecx
   0x7ffff7ec3742:	cmp    QWORD PTR [r12+0x28],0x0
   0x7ffff7ec3748:	je     0x7ffff7ec38f0
   0x7ffff7ec374e:	mov    rsi,QWORD PTR [rsp+0x8]
   0x7ffff7ec3753:	mov    rdi,r12
   0x7ffff7ec3756:	call   0x7ffff7ec8b80
   0x7ffff7ec375b:	lea    edi,[r13+0x2000001]
   0x7ffff7ec3762:	mov    rsi,rbp
   0x7ffff7ec3765:	mov    QWORD PTR [rsp+0x10],rax
   0x7ffff7ec376a:	mov    rdx,rax
   0x7ffff7ec376d:	call   QWORD PTR [r12+0x28]
   0x7ffff7ec3772:	mov    r15,rax
   0x7ffff7ec3775:	test   rax,rax
   0x7ffff7ec3778:	je     0x7ffff7ec3928
   0x7ffff7ec377e:	mov    BYTE PTR [rsp+0x1f],0x0
   0x7ffff7ec3783:	xor    ecx,ecx
   0x7ffff7ec3785:	xor    r10d,r10d
   0x7ffff7ec3788:	jmp    0x7ffff7ec350c
   0x7ffff7ec378d:	nop    DWORD PTR [rax]
   0x7ffff7ec3790:	mov    rdi,r15
   0x7ffff7ec3793:	call   0x7ffff7dbd490 <*ABS*+0xa8720@plt>
   0x7ffff7ec3798:	mov    rcx,rax
   0x7ffff7ec379b:	test   rax,rax
   0x7ffff7ec379e:	je     0x7ffff7ec356e
   0x7ffff7ec37a4:	mov    rdi,QWORD PTR [r14+0x38]
   0x7ffff7ec37a8:	lea    rax,[rdi+rax*1]
   0x7ffff7ec37ac:	cmp    QWORD PTR [r14+0x40],rax
   0x7ffff7ec37b0:	jae    0x7ffff7ec37d3
   0x7ffff7ec37b2:	mov    rsi,rcx
   0x7ffff7ec37b5:	mov    rdi,r14
   0x7ffff7ec37b8:	mov    QWORD PTR [rsp+0x20],rcx
   0x7ffff7ec37bd:	call   0x7ffff7ec2f40
   0x7ffff7ec37c2:	mov    rcx,QWORD PTR [rsp+0x20]
   0x7ffff7ec37c7:	test   eax,eax
   0x7ffff7ec37c9:	je     0x7ffff7ec356e
   0x7ffff7ec37cf:	mov    rdi,QWORD PTR [r14+0x38]
   0x7ffff7ec37d3:	mov    rdx,rcx
   0x7ffff7ec37d6:	mov    rsi,r15
   0x7ffff7ec37d9:	mov    QWORD PTR [rsp+0x20],rcx
   0x7ffff7ec37de:	call   0x7ffff7dbd620 <*ABS*+0xa9c90@plt>
   0x7ffff7ec37e3:	mov    rcx,QWORD PTR [rsp+0x20]
   0x7ffff7ec37e8:	add    rcx,QWORD PTR [r14+0x38]
   0x7ffff7ec37ec:	mov    QWORD PTR [r14+0x38],rcx
   0x7ffff7ec37f0:	sub    rcx,QWORD PTR [r14+0x30]
   0x7ffff7ec37f4:	cmp    rcx,QWORD PTR [r14+0x20]
   0x7ffff7ec37f8:	jbe    0x7ffff7ec3580
   0x7ffff7ec37fe:	xchg   ax,ax
   0x7ffff7ec3800:	mov    rdi,r14
   0x7ffff7ec3803:	call   0x7ffff7ec2940
   0x7ffff7ec3808:	jmp    0x7ffff7ec3580
   0x7ffff7ec380d:	nop    DWORD PTR [rax]
   0x7ffff7ec3810:	xor    r15d,r15d
   0x7ffff7ec3813:	cmp    QWORD PTR [r12+0x28],0x0
   0x7ffff7ec3819:	jne    0x7ffff7ec374e
   0x7ffff7ec381f:	jmp    0x7ffff7ec36b3
   0x7ffff7ec3824:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec3828:	mov    rdi,QWORD PTR [r14+0x38]
   0x7ffff7ec382c:	mov    rdx,rcx
   0x7ffff7ec382f:	mov    rsi,rbp
   0x7ffff7ec3832:	mov    QWORD PTR [rsp+0x20],rcx
   0x7ffff7ec3837:	call   0x7ffff7dbd620 <*ABS*+0xa9c90@plt>
   0x7ffff7ec383c:	mov    rcx,QWORD PTR [rsp+0x20]
   0x7ffff7ec3841:	add    rcx,QWORD PTR [r14+0x38]
   0x7ffff7ec3845:	mov    QWORD PTR [r14+0x38],rcx
   0x7ffff7ec3849:	jmp    0x7ffff7ec3572
   0x7ffff7ec384e:	xchg   ax,ax
   0x7ffff7ec3850:	mov    esi,0x1
   0x7ffff7ec3855:	mov    rdi,r14
   0x7ffff7ec3858:	call   0x7ffff7ec2f40
   0x7ffff7ec385d:	test   eax,eax
   0x7ffff7ec385f:	je     0x7ffff7ec35ac
   0x7ffff7ec3865:	mov    rax,QWORD PTR [r14+0x38]
   0x7ffff7ec3869:	jmp    0x7ffff7ec35a1
   0x7ffff7ec386e:	xchg   ax,ax
   0x7ffff7ec3870:	mov    esi,0x1
   0x7ffff7ec3875:	mov    rdi,r14
   0x7ffff7ec3878:	mov    BYTE PTR [rsp+0x28],r10b
   0x7ffff7ec387d:	mov    QWORD PTR [rsp+0x20],rcx
   0x7ffff7ec3882:	call   0x7ffff7ec2f40
   0x7ffff7ec3887:	mov    rcx,QWORD PTR [rsp+0x20]
   0x7ffff7ec388c:	movzx  r10d,BYTE PTR [rsp+0x28]
   0x7ffff7ec3892:	test   eax,eax
   0x7ffff7ec3894:	je     0x7ffff7ec3536
   0x7ffff7ec389a:	mov    rax,QWORD PTR [r14+0x38]
   0x7ffff7ec389e:	jmp    0x7ffff7ec352b
   0x7ffff7ec38a3:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec38a8:	mov    rax,QWORD PTR [r14+0x38]
   0x7ffff7ec38ac:	cmp    rax,QWORD PTR [r14+0x40]
   0x7ffff7ec38b0:	jb     0x7ffff7ec38cb
   0x7ffff7ec38b2:	mov    esi,0x1
   0x7ffff7ec38b7:	mov    rdi,r14
   0x7ffff7ec38ba:	call   0x7ffff7ec2f40
   0x7ffff7ec38bf:	test   eax,eax
   0x7ffff7ec38c1:	je     0x7ffff7ec36ad
   0x7ffff7ec38c7:	mov    rax,QWORD PTR [r14+0x38]
   0x7ffff7ec38cb:	lea    rdx,[rax+0x1]
   0x7ffff7ec38cf:	mov    QWORD PTR [r14+0x38],rdx
   0x7ffff7ec38d3:	mov    BYTE PTR [rax],0xa
   0x7ffff7ec38d6:	jmp    0x7ffff7ec36ad
   0x7ffff7ec38db:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec38e0:	mov    rdi,r14
   0x7ffff7ec38e3:	call   0x7ffff7ec2940
   0x7ffff7ec38e8:	jmp    0x7ffff7ec3696
   0x7ffff7ec38ed:	nop    DWORD PTR [rax]
   0x7ffff7ec38f0:	mov    BYTE PTR [rsp+0x1f],r10b
   0x7ffff7ec38f5:	mov    r15,rbp
   0x7ffff7ec38f8:	mov    QWORD PTR [rsp+0x10],0x0
   0x7ffff7ec3901:	jmp    0x7ffff7ec3515
   0x7ffff7ec3906:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec3910:	xor    r15d,r15d
   0x7ffff7ec3913:	cmp    BYTE PTR [rsp+0x1f],0x0
   0x7ffff7ec3918:	jne    0x7ffff7ec35c6
   0x7ffff7ec391e:	jmp    0x7ffff7ec36b3
   0x7ffff7ec3923:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec3928:	xor    r15d,r15d
   0x7ffff7ec392b:	jmp    0x7ffff7ec35da
   0x7ffff7ec3930:	xor    ebp,ebp
   0x7ffff7ec3932:	xor    r15d,r15d
   0x7ffff7ec3935:	cmp    QWORD PTR [r12+0x28],0x0
   0x7ffff7ec393b:	jne    0x7ffff7ec374e
   0x7ffff7ec3941:	jmp    0x7ffff7ec35e3
   0x7ffff7ec3946:	cs nop WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec3950:	mov    r15d,0x1
   0x7ffff7ec3956:	jmp    0x7ffff7ec3716
   0x7ffff7ec395b:	nop    DWORD PTR [rax+rax*1+0x0]
   0x7ffff7ec3960:	push   rbp
   0x7ffff7ec3961:	mov    rbp,rsi
   0x7ffff7ec3964:	push   rbx
   0x7ffff7ec3965:	mov    rbx,rdi
   0x7ffff7ec3968:	sub    rsp,0x8
   0x7ffff7ec396c:	mov    rdx,QWORD PTR [rdi+0x38]
   0x7ffff7ec3970:	mov    rax,rdx
   0x7ffff7ec3973:	sub    rax,QWORD PTR [rdi+0x30]
   0x7ffff7ec3977:	cmp    rax,QWORD PTR [rdi+0x20]
   0x7ffff7ec397b:	ja     0x7ffff7ec3a00
   0x7ffff7ec3981:	mov    rax,QWORD PTR [rbx+0x28]
   0x7ffff7ec3985:	xor    esi,esi
   0x7ffff7ec3987:	mov    rcx,QWORD PTR [rbx+0x40]
   0x7ffff7ec398b:	test   rax,rax
   0x7ffff7ec398e:	cmovs  rax,rsi
   0x7ffff7ec3992:	add    rax,rbp
   0x7ffff7ec3995:	cmp    rax,QWORD PTR [rbx+0x10]
   0x7ffff7ec3999:	jb     0x7ffff7ec39d0
   0x7ffff7ec399b:	cmp    rdx,rcx
   0x7ffff7ec399e:	jae    0x7ffff7ec39b8
   0x7ffff7ec39a0:	lea    rax,[rdx+0x1]
   0x7ffff7ec39a4:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7ec39a8:	mov    BYTE PTR [rdx],0xa
   0x7ffff7ec39ab:	add    rsp,0x8
   0x7ffff7ec39af:	pop    rbx
   0x7ffff7ec39b0:	pop    rbp
   0x7ffff7ec39b1:	ret
   0x7ffff7ec39b2:	nop    WORD PTR [rax+rax*1+0x0]
   0x7ffff7ec39b8:	mov    esi,0x1
   0x7ffff7ec39bd:	mov    rdi,rbx
   0x7ffff7ec39c0:	call   0x7ffff7ec2f40
   0x7ffff7ec39c5:	test   eax,eax
   0x7ffff7ec39c7:	je     0x7ffff7ec39ab
   0x7ffff7ec39c9:	mov    rdx,QWORD PTR [rbx+0x38]
   0x7ffff7ec39cd:	jmp    0x7ffff7ec39a0
   0x7ffff7ec39cf:	nop
   0x7ffff7ec39d0:	cmp    rdx,rcx
   0x7ffff7ec39d3:	jb     0x7ffff7ec39ea
   0x7ffff7ec39d5:	mov    esi,0x1
   0x7ffff7ec39da:	mov    rdi,rbx
   0x7ffff7ec39dd:	call   0x7ffff7ec2f40
   0x7ffff7ec39e2:	test   eax,eax
   0x7ffff7ec39e4:	je     0x7ffff7ec39ab
   0x7ffff7ec39e6:	mov    rdx,QWORD PTR [rbx+0x38]
   0x7ffff7ec39ea:	lea    rax,[rdx+0x1]
   0x7ffff7ec39ee:	mov    QWORD PTR [rbx+0x38],rax
   0x7ffff7ec39f2:	mov    BYTE PTR [rdx],0x20
   0x7ffff7ec39f5:	add    rsp,0x8
   0x7ffff7ec39f9:	pop    rbx
   0x7ffff7ec39fa:	pop    rbp
   0x7ffff7ec39fb:	ret
   0x7ffff7ec39fc:	nop    DWORD PTR [rax+0x0]
   0x7ffff7ec3a00:	call   0x7ffff7ec2940
   0x7ffff7ec3a05:	mov    rdx,QWORD PTR [rbx+0x38]
   0x7ffff7ec3a09:	jmp    0x7ffff7ec3981
   0x7ffff7ec3a0e:	xchg   ax,ax
   0x7ffff7ec3a10:	push   r15
   0x7ffff7ec3a12:	push   r14
   0x7ffff7ec3a14:	mov    r14,rdx
   0x7ffff7ec3a17:	push   r13
   0x7ffff7ec3a19:	mov    r13,r8
   0x7ffff7ec3a1c:	push   r12
   0x7ffff7ec3a1e:	mov    r12d,ecx
   0x7ffff7ec3a21:	push   rbp
   0x7ffff7ec3a22:	push   rbx
   0x7ffff7ec3a23:	mov    rbx,rdi
   0x7ffff7ec3a26:	sub    rsp,0x38
   0x7ffff7ec3a2a:	mov    rax,QWORD PTR [rdx]
   0x7ffff7ec3a2d:	mov    rbp,QWORD PTR [rdi+0x20]
   0x7ffff7ec3a31:	mov    edx,0x5
   0x7ffff7ec3a36:	mov    QWORD PTR [rsp+0x8],rsi
   0x7ffff7ec3a3b:	mov    rsi,QWORD PTR [rdi+0x10]
   0x7ffff7ec3a3f:	mov    rdi,QWORD PTR [rdi+0x30]
   0x7ffff7ec3a43:	mov    QWORD PTR [rsp+0x20],rax
   0x7ffff7ec3a48:	call   0x7ffff7dcf8f0 <dcgettext>
   0x7ffff7ec3a4d:	cmp    QWORD PTR [rbx+0x28],0x0
   0x7ffff7ec3a52:	mov    QWORD PTR [rsp+0x28],rax
   0x7ffff7ec3a57:	mov    QWORD PTR [rsp+0x10],rax
   0x7ffff7ec3a5c:	je     0x7ffff7ec3a81
   0x7ffff7ec3a5e:	mov    rsi,QWORD PTR [rsp+0x8]
   0x7ffff7ec3a63:	mov    rdi,rbx
   0x7ffff7ec3a66:	mov    r15,rax
   0x7ffff7ec3a69:	call   0x7ffff7ec8b80
   0x7ffff7ec3a6e:	mov    rsi,r15
   0x7ffff7ec3a71:	mov    edi,0x2000006
   0x7ffff7ec3a76:	mov    rdx,rax
   0x7ffff7ec3a79:	call   QWORD PTR [rbx+0x28]
   0x7ffff7ec3a7c:	mov    QWORD PTR [rsp+0x10],rax
   0x7ffff7ec3a81:	mov    rax,QWORD PTR [rsp+0x10]
   0x7ffff7ec3a86:	test   rax,rax
   0x7ffff7ec3a89:	je     0x7ffff7ec3be8
   0x7ffff7ec3a8f:	mov    esi,0xa
   0x7ffff7ec3a94:	mov    rdi,rax
   0x7ffff7ec3a97:	call   0x7ffff7dbd4d0 <*ABS*+0xab090@plt>
   0x7ffff7ec3a9c:	cmp    BYTE PTR [rax],0x0
   0x7ffff7ec3a9f:	mov    rbx,rax
   0x7ffff7ec3aa2:	jne    0x7ffff7ec3b90
   0x7ffff7ec3aa8:	mov    BYTE PTR [rsp+0x4],0x0
   0x7ffff7ec3aad:	mov    r15,QWORD PTR [rsp+0x10]
   0x7ffff7ec3ab2:	lea    rsi,[rbx+0x1]
   0x7ffff7ec3ab6:	mov    rdi,r13
   0x7ffff7ec3ab9:	sub    rsi,r15
